var ra=Object.defineProperty;var sa=(s,e,t)=>e in s?ra(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var At=(s,e,t)=>sa(s,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function t(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(o){if(o.ep)return;o.ep=!0;const a=t(o);fetch(o.href,a)}})();/**
* @vue/shared v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function makeMap(s){const e=Object.create(null);for(const t of s.split(","))e[t]=1;return t=>t in e}const EMPTY_OBJ={},EMPTY_ARR=[],NOOP=()=>{},NO=()=>!1,isOn=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&(s.charCodeAt(2)>122||s.charCodeAt(2)<97),isModelListener=s=>s.startsWith("onUpdate:"),extend=Object.assign,remove=(s,e)=>{const t=s.indexOf(e);t>-1&&s.splice(t,1)},hasOwnProperty$1=Object.prototype.hasOwnProperty,hasOwn=(s,e)=>hasOwnProperty$1.call(s,e),isArray$1=Array.isArray,isMap=s=>toTypeString(s)==="[object Map]",isSet=s=>toTypeString(s)==="[object Set]",isFunction=s=>typeof s=="function",isString=s=>typeof s=="string",isSymbol=s=>typeof s=="symbol",isObject=s=>s!==null&&typeof s=="object",isPromise=s=>(isObject(s)||isFunction(s))&&isFunction(s.then)&&isFunction(s.catch),objectToString=Object.prototype.toString,toTypeString=s=>objectToString.call(s),toRawType=s=>toTypeString(s).slice(8,-1),isPlainObject=s=>toTypeString(s)==="[object Object]",isIntegerKey=s=>isString(s)&&s!=="NaN"&&s[0]!=="-"&&""+parseInt(s,10)===s,isReservedProp=makeMap(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),cacheStringFunction=s=>{const e=Object.create(null);return t=>e[t]||(e[t]=s(t))},camelizeRE=/-(\w)/g,camelize=cacheStringFunction(s=>s.replace(camelizeRE,(e,t)=>t?t.toUpperCase():"")),hyphenateRE=/\B([A-Z])/g,hyphenate=cacheStringFunction(s=>s.replace(hyphenateRE,"-$1").toLowerCase()),capitalize=cacheStringFunction(s=>s.charAt(0).toUpperCase()+s.slice(1)),toHandlerKey=cacheStringFunction(s=>s?`on${capitalize(s)}`:""),hasChanged=(s,e)=>!Object.is(s,e),invokeArrayFns=(s,...e)=>{for(let t=0;t<s.length;t++)s[t](...e)},def=(s,e,t,n=!1)=>{Object.defineProperty(s,e,{configurable:!0,enumerable:!1,writable:n,value:t})},looseToNumber=s=>{const e=parseFloat(s);return isNaN(e)?s:e};let _globalThis;const getGlobalThis=()=>_globalThis||(_globalThis=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function normalizeStyle(s){if(isArray$1(s)){const e={};for(let t=0;t<s.length;t++){const n=s[t],o=isString(n)?parseStringStyle(n):normalizeStyle(n);if(o)for(const a in o)e[a]=o[a]}return e}else if(isString(s)||isObject(s))return s}const listDelimiterRE=/;(?![^(]*\))/g,propertyDelimiterRE=/:([^]+)/,styleCommentRE=/\/\*[^]*?\*\//g;function parseStringStyle(s){const e={};return s.replace(styleCommentRE,"").split(listDelimiterRE).forEach(t=>{if(t){const n=t.split(propertyDelimiterRE);n.length>1&&(e[n[0].trim()]=n[1].trim())}}),e}function normalizeClass(s){let e="";if(isString(s))e=s;else if(isArray$1(s))for(let t=0;t<s.length;t++){const n=normalizeClass(s[t]);n&&(e+=n+" ")}else if(isObject(s))for(const t in s)s[t]&&(e+=t+" ");return e.trim()}const specialBooleanAttrs="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",isSpecialBooleanAttr=makeMap(specialBooleanAttrs);function includeBooleanAttr(s){return!!s||s===""}const isRef$1=s=>!!(s&&s.__v_isRef===!0),toDisplayString=s=>isString(s)?s:s==null?"":isArray$1(s)||isObject(s)&&(s.toString===objectToString||!isFunction(s.toString))?isRef$1(s)?toDisplayString(s.value):JSON.stringify(s,replacer,2):String(s),replacer=(s,e)=>isRef$1(e)?replacer(s,e.value):isMap(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[n,o],a)=>(t[stringifySymbol(n,a)+" =>"]=o,t),{})}:isSet(e)?{[`Set(${e.size})`]:[...e.values()].map(t=>stringifySymbol(t))}:isSymbol(e)?stringifySymbol(e):isObject(e)&&!isArray$1(e)&&!isPlainObject(e)?String(e):e,stringifySymbol=(s,e="")=>{var t;return isSymbol(s)?`Symbol(${(t=s.description)!=null?t:e})`:s};/**
* @vue/reactivity v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let activeEffectScope;class EffectScope{constructor(e=!1){this.detached=e,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=activeEffectScope,!e&&activeEffectScope&&(this.index=(activeEffectScope.scopes||(activeEffectScope.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].pause();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].resume();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].resume()}}run(e){if(this._active){const t=activeEffectScope;try{return activeEffectScope=this,e()}finally{activeEffectScope=t}}}on(){++this._on===1&&(this.prevScope=activeEffectScope,activeEffectScope=this)}off(){this._on>0&&--this._on===0&&(activeEffectScope=this.prevScope,this.prevScope=void 0)}stop(e){if(this._active){this._active=!1;let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(this.effects.length=0,t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.cleanups.length=0,this.scopes){for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0}}}function getCurrentScope(){return activeEffectScope}let activeSub;const pausedQueueEffects=new WeakSet;class ReactiveEffect{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,activeEffectScope&&activeEffectScope.active&&activeEffectScope.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,pausedQueueEffects.has(this)&&(pausedQueueEffects.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||batch(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,cleanupEffect(this),prepareDeps(this);const e=activeSub,t=shouldTrack;activeSub=this,shouldTrack=!0;try{return this.fn()}finally{cleanupDeps(this),activeSub=e,shouldTrack=t,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)removeSub(e);this.deps=this.depsTail=void 0,cleanupEffect(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?pausedQueueEffects.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){isDirty(this)&&this.run()}get dirty(){return isDirty(this)}}let batchDepth=0,batchedSub,batchedComputed;function batch(s,e=!1){if(s.flags|=8,e){s.next=batchedComputed,batchedComputed=s;return}s.next=batchedSub,batchedSub=s}function startBatch(){batchDepth++}function endBatch(){if(--batchDepth>0)return;if(batchedComputed){let e=batchedComputed;for(batchedComputed=void 0;e;){const t=e.next;e.next=void 0,e.flags&=-9,e=t}}let s;for(;batchedSub;){let e=batchedSub;for(batchedSub=void 0;e;){const t=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(n){s||(s=n)}e=t}}if(s)throw s}function prepareDeps(s){for(let e=s.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function cleanupDeps(s){let e,t=s.depsTail,n=t;for(;n;){const o=n.prevDep;n.version===-1?(n===t&&(t=o),removeSub(n),removeDep(n)):e=n,n.dep.activeLink=n.prevActiveLink,n.prevActiveLink=void 0,n=o}s.deps=e,s.depsTail=t}function isDirty(s){for(let e=s.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(refreshComputed(e.dep.computed)||e.dep.version!==e.version))return!0;return!!s._dirty}function refreshComputed(s){if(s.flags&4&&!(s.flags&16)||(s.flags&=-17,s.globalVersion===globalVersion)||(s.globalVersion=globalVersion,!s.isSSR&&s.flags&128&&(!s.deps&&!s._dirty||!isDirty(s))))return;s.flags|=2;const e=s.dep,t=activeSub,n=shouldTrack;activeSub=s,shouldTrack=!0;try{prepareDeps(s);const o=s.fn(s._value);(e.version===0||hasChanged(o,s._value))&&(s.flags|=128,s._value=o,e.version++)}catch(o){throw e.version++,o}finally{activeSub=t,shouldTrack=n,cleanupDeps(s),s.flags&=-3}}function removeSub(s,e=!1){const{dep:t,prevSub:n,nextSub:o}=s;if(n&&(n.nextSub=o,s.prevSub=void 0),o&&(o.prevSub=n,s.nextSub=void 0),t.subs===s&&(t.subs=n,!n&&t.computed)){t.computed.flags&=-5;for(let a=t.computed.deps;a;a=a.nextDep)removeSub(a,!0)}!e&&!--t.sc&&t.map&&t.map.delete(t.key)}function removeDep(s){const{prevDep:e,nextDep:t}=s;e&&(e.nextDep=t,s.prevDep=void 0),t&&(t.prevDep=e,s.nextDep=void 0)}let shouldTrack=!0;const trackStack=[];function pauseTracking(){trackStack.push(shouldTrack),shouldTrack=!1}function resetTracking(){const s=trackStack.pop();shouldTrack=s===void 0?!0:s}function cleanupEffect(s){const{cleanup:e}=s;if(s.cleanup=void 0,e){const t=activeSub;activeSub=void 0;try{e()}finally{activeSub=t}}}let globalVersion=0;class Link{constructor(e,t){this.sub=e,this.dep=t,this.version=t.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class Dep{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(e){if(!activeSub||!shouldTrack||activeSub===this.computed)return;let t=this.activeLink;if(t===void 0||t.sub!==activeSub)t=this.activeLink=new Link(activeSub,this),activeSub.deps?(t.prevDep=activeSub.depsTail,activeSub.depsTail.nextDep=t,activeSub.depsTail=t):activeSub.deps=activeSub.depsTail=t,addSub(t);else if(t.version===-1&&(t.version=this.version,t.nextDep)){const n=t.nextDep;n.prevDep=t.prevDep,t.prevDep&&(t.prevDep.nextDep=n),t.prevDep=activeSub.depsTail,t.nextDep=void 0,activeSub.depsTail.nextDep=t,activeSub.depsTail=t,activeSub.deps===t&&(activeSub.deps=n)}return t}trigger(e){this.version++,globalVersion++,this.notify(e)}notify(e){startBatch();try{for(let t=this.subs;t;t=t.prevSub)t.sub.notify()&&t.sub.dep.notify()}finally{endBatch()}}}function addSub(s){if(s.dep.sc++,s.sub.flags&4){const e=s.dep.computed;if(e&&!s.dep.subs){e.flags|=20;for(let n=e.deps;n;n=n.nextDep)addSub(n)}const t=s.dep.subs;t!==s&&(s.prevSub=t,t&&(t.nextSub=s)),s.dep.subs=s}}const targetMap=new WeakMap,ITERATE_KEY=Symbol(""),MAP_KEY_ITERATE_KEY=Symbol(""),ARRAY_ITERATE_KEY=Symbol("");function track(s,e,t){if(shouldTrack&&activeSub){let n=targetMap.get(s);n||targetMap.set(s,n=new Map);let o=n.get(t);o||(n.set(t,o=new Dep),o.map=n,o.key=t),o.track()}}function trigger(s,e,t,n,o,a){const r=targetMap.get(s);if(!r){globalVersion++;return}const l=c=>{c&&c.trigger()};if(startBatch(),e==="clear")r.forEach(l);else{const c=isArray$1(s),u=c&&isIntegerKey(t);if(c&&t==="length"){const d=Number(n);r.forEach((f,g)=>{(g==="length"||g===ARRAY_ITERATE_KEY||!isSymbol(g)&&g>=d)&&l(f)})}else switch((t!==void 0||r.has(void 0))&&l(r.get(t)),u&&l(r.get(ARRAY_ITERATE_KEY)),e){case"add":c?u&&l(r.get("length")):(l(r.get(ITERATE_KEY)),isMap(s)&&l(r.get(MAP_KEY_ITERATE_KEY)));break;case"delete":c||(l(r.get(ITERATE_KEY)),isMap(s)&&l(r.get(MAP_KEY_ITERATE_KEY)));break;case"set":isMap(s)&&l(r.get(ITERATE_KEY));break}}endBatch()}function reactiveReadArray(s){const e=toRaw(s);return e===s?e:(track(e,"iterate",ARRAY_ITERATE_KEY),isShallow(s)?e:e.map(toReactive))}function shallowReadArray(s){return track(s=toRaw(s),"iterate",ARRAY_ITERATE_KEY),s}const arrayInstrumentations={__proto__:null,[Symbol.iterator](){return iterator(this,Symbol.iterator,toReactive)},concat(...s){return reactiveReadArray(this).concat(...s.map(e=>isArray$1(e)?reactiveReadArray(e):e))},entries(){return iterator(this,"entries",s=>(s[1]=toReactive(s[1]),s))},every(s,e){return apply(this,"every",s,e,void 0,arguments)},filter(s,e){return apply(this,"filter",s,e,t=>t.map(toReactive),arguments)},find(s,e){return apply(this,"find",s,e,toReactive,arguments)},findIndex(s,e){return apply(this,"findIndex",s,e,void 0,arguments)},findLast(s,e){return apply(this,"findLast",s,e,toReactive,arguments)},findLastIndex(s,e){return apply(this,"findLastIndex",s,e,void 0,arguments)},forEach(s,e){return apply(this,"forEach",s,e,void 0,arguments)},includes(...s){return searchProxy(this,"includes",s)},indexOf(...s){return searchProxy(this,"indexOf",s)},join(s){return reactiveReadArray(this).join(s)},lastIndexOf(...s){return searchProxy(this,"lastIndexOf",s)},map(s,e){return apply(this,"map",s,e,void 0,arguments)},pop(){return noTracking(this,"pop")},push(...s){return noTracking(this,"push",s)},reduce(s,...e){return reduce(this,"reduce",s,e)},reduceRight(s,...e){return reduce(this,"reduceRight",s,e)},shift(){return noTracking(this,"shift")},some(s,e){return apply(this,"some",s,e,void 0,arguments)},splice(...s){return noTracking(this,"splice",s)},toReversed(){return reactiveReadArray(this).toReversed()},toSorted(s){return reactiveReadArray(this).toSorted(s)},toSpliced(...s){return reactiveReadArray(this).toSpliced(...s)},unshift(...s){return noTracking(this,"unshift",s)},values(){return iterator(this,"values",toReactive)}};function iterator(s,e,t){const n=shallowReadArray(s),o=n[e]();return n!==s&&!isShallow(s)&&(o._next=o.next,o.next=()=>{const a=o._next();return a.value&&(a.value=t(a.value)),a}),o}const arrayProto=Array.prototype;function apply(s,e,t,n,o,a){const r=shallowReadArray(s),l=r!==s&&!isShallow(s),c=r[e];if(c!==arrayProto[e]){const f=c.apply(s,a);return l?toReactive(f):f}let u=t;r!==s&&(l?u=function(f,g){return t.call(this,toReactive(f),g,s)}:t.length>2&&(u=function(f,g){return t.call(this,f,g,s)}));const d=c.call(r,u,n);return l&&o?o(d):d}function reduce(s,e,t,n){const o=shallowReadArray(s);let a=t;return o!==s&&(isShallow(s)?t.length>3&&(a=function(r,l,c){return t.call(this,r,l,c,s)}):a=function(r,l,c){return t.call(this,r,toReactive(l),c,s)}),o[e](a,...n)}function searchProxy(s,e,t){const n=toRaw(s);track(n,"iterate",ARRAY_ITERATE_KEY);const o=n[e](...t);return(o===-1||o===!1)&&isProxy(t[0])?(t[0]=toRaw(t[0]),n[e](...t)):o}function noTracking(s,e,t=[]){pauseTracking(),startBatch();const n=toRaw(s)[e].apply(s,t);return endBatch(),resetTracking(),n}const isNonTrackableKeys=makeMap("__proto__,__v_isRef,__isVue"),builtInSymbols=new Set(Object.getOwnPropertyNames(Symbol).filter(s=>s!=="arguments"&&s!=="caller").map(s=>Symbol[s]).filter(isSymbol));function hasOwnProperty(s){isSymbol(s)||(s=String(s));const e=toRaw(this);return track(e,"has",s),e.hasOwnProperty(s)}class BaseReactiveHandler{constructor(e=!1,t=!1){this._isReadonly=e,this._isShallow=t}get(e,t,n){if(t==="__v_skip")return e.__v_skip;const o=this._isReadonly,a=this._isShallow;if(t==="__v_isReactive")return!o;if(t==="__v_isReadonly")return o;if(t==="__v_isShallow")return a;if(t==="__v_raw")return n===(o?a?shallowReadonlyMap:readonlyMap:a?shallowReactiveMap:reactiveMap).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(n)?e:void 0;const r=isArray$1(e);if(!o){let c;if(r&&(c=arrayInstrumentations[t]))return c;if(t==="hasOwnProperty")return hasOwnProperty}const l=Reflect.get(e,t,isRef(e)?e:n);return(isSymbol(t)?builtInSymbols.has(t):isNonTrackableKeys(t))||(o||track(e,"get",t),a)?l:isRef(l)?r&&isIntegerKey(t)?l:l.value:isObject(l)?o?readonly(l):reactive(l):l}}class MutableReactiveHandler extends BaseReactiveHandler{constructor(e=!1){super(!1,e)}set(e,t,n,o){let a=e[t];if(!this._isShallow){const c=isReadonly(a);if(!isShallow(n)&&!isReadonly(n)&&(a=toRaw(a),n=toRaw(n)),!isArray$1(e)&&isRef(a)&&!isRef(n))return c?!1:(a.value=n,!0)}const r=isArray$1(e)&&isIntegerKey(t)?Number(t)<e.length:hasOwn(e,t),l=Reflect.set(e,t,n,isRef(e)?e:o);return e===toRaw(o)&&(r?hasChanged(n,a)&&trigger(e,"set",t,n):trigger(e,"add",t,n)),l}deleteProperty(e,t){const n=hasOwn(e,t);e[t];const o=Reflect.deleteProperty(e,t);return o&&n&&trigger(e,"delete",t,void 0),o}has(e,t){const n=Reflect.has(e,t);return(!isSymbol(t)||!builtInSymbols.has(t))&&track(e,"has",t),n}ownKeys(e){return track(e,"iterate",isArray$1(e)?"length":ITERATE_KEY),Reflect.ownKeys(e)}}class ReadonlyReactiveHandler extends BaseReactiveHandler{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const mutableHandlers=new MutableReactiveHandler,readonlyHandlers=new ReadonlyReactiveHandler,shallowReactiveHandlers=new MutableReactiveHandler(!0),shallowReadonlyHandlers=new ReadonlyReactiveHandler(!0),toShallow=s=>s,getProto=s=>Reflect.getPrototypeOf(s);function createIterableMethod(s,e,t){return function(...n){const o=this.__v_raw,a=toRaw(o),r=isMap(a),l=s==="entries"||s===Symbol.iterator&&r,c=s==="keys"&&r,u=o[s](...n),d=t?toShallow:e?toReadonly:toReactive;return!e&&track(a,"iterate",c?MAP_KEY_ITERATE_KEY:ITERATE_KEY),{next(){const{value:f,done:g}=u.next();return g?{value:f,done:g}:{value:l?[d(f[0]),d(f[1])]:d(f),done:g}},[Symbol.iterator](){return this}}}}function createReadonlyMethod(s){return function(...e){return s==="delete"?!1:s==="clear"?void 0:this}}function createInstrumentations(s,e){const t={get(o){const a=this.__v_raw,r=toRaw(a),l=toRaw(o);s||(hasChanged(o,l)&&track(r,"get",o),track(r,"get",l));const{has:c}=getProto(r),u=e?toShallow:s?toReadonly:toReactive;if(c.call(r,o))return u(a.get(o));if(c.call(r,l))return u(a.get(l));a!==r&&a.get(o)},get size(){const o=this.__v_raw;return!s&&track(toRaw(o),"iterate",ITERATE_KEY),Reflect.get(o,"size",o)},has(o){const a=this.__v_raw,r=toRaw(a),l=toRaw(o);return s||(hasChanged(o,l)&&track(r,"has",o),track(r,"has",l)),o===l?a.has(o):a.has(o)||a.has(l)},forEach(o,a){const r=this,l=r.__v_raw,c=toRaw(l),u=e?toShallow:s?toReadonly:toReactive;return!s&&track(c,"iterate",ITERATE_KEY),l.forEach((d,f)=>o.call(a,u(d),u(f),r))}};return extend(t,s?{add:createReadonlyMethod("add"),set:createReadonlyMethod("set"),delete:createReadonlyMethod("delete"),clear:createReadonlyMethod("clear")}:{add(o){!e&&!isShallow(o)&&!isReadonly(o)&&(o=toRaw(o));const a=toRaw(this);return getProto(a).has.call(a,o)||(a.add(o),trigger(a,"add",o,o)),this},set(o,a){!e&&!isShallow(a)&&!isReadonly(a)&&(a=toRaw(a));const r=toRaw(this),{has:l,get:c}=getProto(r);let u=l.call(r,o);u||(o=toRaw(o),u=l.call(r,o));const d=c.call(r,o);return r.set(o,a),u?hasChanged(a,d)&&trigger(r,"set",o,a):trigger(r,"add",o,a),this},delete(o){const a=toRaw(this),{has:r,get:l}=getProto(a);let c=r.call(a,o);c||(o=toRaw(o),c=r.call(a,o)),l&&l.call(a,o);const u=a.delete(o);return c&&trigger(a,"delete",o,void 0),u},clear(){const o=toRaw(this),a=o.size!==0,r=o.clear();return a&&trigger(o,"clear",void 0,void 0),r}}),["keys","values","entries",Symbol.iterator].forEach(o=>{t[o]=createIterableMethod(o,s,e)}),t}function createInstrumentationGetter(s,e){const t=createInstrumentations(s,e);return(n,o,a)=>o==="__v_isReactive"?!s:o==="__v_isReadonly"?s:o==="__v_raw"?n:Reflect.get(hasOwn(t,o)&&o in n?t:n,o,a)}const mutableCollectionHandlers={get:createInstrumentationGetter(!1,!1)},shallowCollectionHandlers={get:createInstrumentationGetter(!1,!0)},readonlyCollectionHandlers={get:createInstrumentationGetter(!0,!1)},shallowReadonlyCollectionHandlers={get:createInstrumentationGetter(!0,!0)},reactiveMap=new WeakMap,shallowReactiveMap=new WeakMap,readonlyMap=new WeakMap,shallowReadonlyMap=new WeakMap;function targetTypeMap(s){switch(s){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function getTargetType(s){return s.__v_skip||!Object.isExtensible(s)?0:targetTypeMap(toRawType(s))}function reactive(s){return isReadonly(s)?s:createReactiveObject(s,!1,mutableHandlers,mutableCollectionHandlers,reactiveMap)}function shallowReactive(s){return createReactiveObject(s,!1,shallowReactiveHandlers,shallowCollectionHandlers,shallowReactiveMap)}function readonly(s){return createReactiveObject(s,!0,readonlyHandlers,readonlyCollectionHandlers,readonlyMap)}function shallowReadonly(s){return createReactiveObject(s,!0,shallowReadonlyHandlers,shallowReadonlyCollectionHandlers,shallowReadonlyMap)}function createReactiveObject(s,e,t,n,o){if(!isObject(s)||s.__v_raw&&!(e&&s.__v_isReactive))return s;const a=getTargetType(s);if(a===0)return s;const r=o.get(s);if(r)return r;const l=new Proxy(s,a===2?n:t);return o.set(s,l),l}function isReactive(s){return isReadonly(s)?isReactive(s.__v_raw):!!(s&&s.__v_isReactive)}function isReadonly(s){return!!(s&&s.__v_isReadonly)}function isShallow(s){return!!(s&&s.__v_isShallow)}function isProxy(s){return s?!!s.__v_raw:!1}function toRaw(s){const e=s&&s.__v_raw;return e?toRaw(e):s}function markRaw(s){return!hasOwn(s,"__v_skip")&&Object.isExtensible(s)&&def(s,"__v_skip",!0),s}const toReactive=s=>isObject(s)?reactive(s):s,toReadonly=s=>isObject(s)?readonly(s):s;function isRef(s){return s?s.__v_isRef===!0:!1}function ref(s){return createRef(s,!1)}function shallowRef(s){return createRef(s,!0)}function createRef(s,e){return isRef(s)?s:new RefImpl(s,e)}class RefImpl{constructor(e,t){this.dep=new Dep,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=t?e:toRaw(e),this._value=t?e:toReactive(e),this.__v_isShallow=t}get value(){return this.dep.track(),this._value}set value(e){const t=this._rawValue,n=this.__v_isShallow||isShallow(e)||isReadonly(e);e=n?e:toRaw(e),hasChanged(e,t)&&(this._rawValue=e,this._value=n?e:toReactive(e),this.dep.trigger())}}function unref(s){return isRef(s)?s.value:s}const shallowUnwrapHandlers={get:(s,e,t)=>e==="__v_raw"?s:unref(Reflect.get(s,e,t)),set:(s,e,t,n)=>{const o=s[e];return isRef(o)&&!isRef(t)?(o.value=t,!0):Reflect.set(s,e,t,n)}};function proxyRefs(s){return isReactive(s)?s:new Proxy(s,shallowUnwrapHandlers)}class ComputedRefImpl{constructor(e,t,n){this.fn=e,this.setter=t,this._value=void 0,this.dep=new Dep(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=globalVersion-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!t,this.isSSR=n}notify(){if(this.flags|=16,!(this.flags&8)&&activeSub!==this)return batch(this,!0),!0}get value(){const e=this.dep.track();return refreshComputed(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function computed$1(s,e,t=!1){let n,o;return isFunction(s)?n=s:(n=s.get,o=s.set),new ComputedRefImpl(n,o,t)}const INITIAL_WATCHER_VALUE={},cleanupMap=new WeakMap;let activeWatcher;function onWatcherCleanup(s,e=!1,t=activeWatcher){if(t){let n=cleanupMap.get(t);n||cleanupMap.set(t,n=[]),n.push(s)}}function watch$1(s,e,t=EMPTY_OBJ){const{immediate:n,deep:o,once:a,scheduler:r,augmentJob:l,call:c}=t,u=F=>o?F:isShallow(F)||o===!1||o===0?traverse(F,1):traverse(F);let d,f,g,_,b=!1,B=!1;if(isRef(s)?(f=()=>s.value,b=isShallow(s)):isReactive(s)?(f=()=>u(s),b=!0):isArray$1(s)?(B=!0,b=s.some(F=>isReactive(F)||isShallow(F)),f=()=>s.map(F=>{if(isRef(F))return F.value;if(isReactive(F))return u(F);if(isFunction(F))return c?c(F,2):F()})):isFunction(s)?e?f=c?()=>c(s,2):s:f=()=>{if(g){pauseTracking();try{g()}finally{resetTracking()}}const F=activeWatcher;activeWatcher=d;try{return c?c(s,3,[_]):s(_)}finally{activeWatcher=F}}:f=NOOP,e&&o){const F=f,N=o===!0?1/0:o;f=()=>traverse(F(),N)}const I=getCurrentScope(),C=()=>{d.stop(),I&&I.active&&remove(I.effects,d)};if(a&&e){const F=e;e=(...N)=>{F(...N),C()}}let R=B?new Array(s.length).fill(INITIAL_WATCHER_VALUE):INITIAL_WATCHER_VALUE;const L=F=>{if(!(!(d.flags&1)||!d.dirty&&!F))if(e){const N=d.run();if(o||b||(B?N.some((k,Q)=>hasChanged(k,R[Q])):hasChanged(N,R))){g&&g();const k=activeWatcher;activeWatcher=d;try{const Q=[N,R===INITIAL_WATCHER_VALUE?void 0:B&&R[0]===INITIAL_WATCHER_VALUE?[]:R,_];R=N,c?c(e,3,Q):e(...Q)}finally{activeWatcher=k}}}else d.run()};return l&&l(L),d=new ReactiveEffect(f),d.scheduler=r?()=>r(L,!1):L,_=F=>onWatcherCleanup(F,!1,d),g=d.onStop=()=>{const F=cleanupMap.get(d);if(F){if(c)c(F,4);else for(const N of F)N();cleanupMap.delete(d)}},e?n?L(!0):R=d.run():r?r(L.bind(null,!0),!0):d.run(),C.pause=d.pause.bind(d),C.resume=d.resume.bind(d),C.stop=C,C}function traverse(s,e=1/0,t){if(e<=0||!isObject(s)||s.__v_skip||(t=t||new Set,t.has(s)))return s;if(t.add(s),e--,isRef(s))traverse(s.value,e,t);else if(isArray$1(s))for(let n=0;n<s.length;n++)traverse(s[n],e,t);else if(isSet(s)||isMap(s))s.forEach(n=>{traverse(n,e,t)});else if(isPlainObject(s)){for(const n in s)traverse(s[n],e,t);for(const n of Object.getOwnPropertySymbols(s))Object.prototype.propertyIsEnumerable.call(s,n)&&traverse(s[n],e,t)}return s}/**
* @vue/runtime-core v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const stack=[];let isWarning=!1;function warn$1(s,...e){if(isWarning)return;isWarning=!0,pauseTracking();const t=stack.length?stack[stack.length-1].component:null,n=t&&t.appContext.config.warnHandler,o=getComponentTrace();if(n)callWithErrorHandling(n,t,11,[s+e.map(a=>{var r,l;return(l=(r=a.toString)==null?void 0:r.call(a))!=null?l:JSON.stringify(a)}).join(""),t&&t.proxy,o.map(({vnode:a})=>`at <${formatComponentName(t,a.type)}>`).join(`
`),o]);else{const a=[`[Vue warn]: ${s}`,...e];o.length&&a.push(`
`,...formatTrace(o)),console.warn(...a)}resetTracking(),isWarning=!1}function getComponentTrace(){let s=stack[stack.length-1];if(!s)return[];const e=[];for(;s;){const t=e[0];t&&t.vnode===s?t.recurseCount++:e.push({vnode:s,recurseCount:0});const n=s.component&&s.component.parent;s=n&&n.vnode}return e}function formatTrace(s){const e=[];return s.forEach((t,n)=>{e.push(...n===0?[]:[`
`],...formatTraceEntry(t))}),e}function formatTraceEntry({vnode:s,recurseCount:e}){const t=e>0?`... (${e} recursive calls)`:"",n=s.component?s.component.parent==null:!1,o=` at <${formatComponentName(s.component,s.type,n)}`,a=">"+t;return s.props?[o,...formatProps(s.props),a]:[o+a]}function formatProps(s){const e=[],t=Object.keys(s);return t.slice(0,3).forEach(n=>{e.push(...formatProp(n,s[n]))}),t.length>3&&e.push(" ..."),e}function formatProp(s,e,t){return isString(e)?(e=JSON.stringify(e),t?e:[`${s}=${e}`]):typeof e=="number"||typeof e=="boolean"||e==null?t?e:[`${s}=${e}`]:isRef(e)?(e=formatProp(s,toRaw(e.value),!0),t?e:[`${s}=Ref<`,e,">"]):isFunction(e)?[`${s}=fn${e.name?`<${e.name}>`:""}`]:(e=toRaw(e),t?e:[`${s}=`,e])}function callWithErrorHandling(s,e,t,n){try{return n?s(...n):s()}catch(o){handleError(o,e,t)}}function callWithAsyncErrorHandling(s,e,t,n){if(isFunction(s)){const o=callWithErrorHandling(s,e,t,n);return o&&isPromise(o)&&o.catch(a=>{handleError(a,e,t)}),o}if(isArray$1(s)){const o=[];for(let a=0;a<s.length;a++)o.push(callWithAsyncErrorHandling(s[a],e,t,n));return o}}function handleError(s,e,t,n=!0){const o=e?e.vnode:null,{errorHandler:a,throwUnhandledErrorInProduction:r}=e&&e.appContext.config||EMPTY_OBJ;if(e){let l=e.parent;const c=e.proxy,u=`https://vuejs.org/error-reference/#runtime-${t}`;for(;l;){const d=l.ec;if(d){for(let f=0;f<d.length;f++)if(d[f](s,c,u)===!1)return}l=l.parent}if(a){pauseTracking(),callWithErrorHandling(a,null,10,[s,c,u]),resetTracking();return}}logError(s,t,o,n,r)}function logError(s,e,t,n=!0,o=!1){if(o)throw s;console.error(s)}const queue=[];let flushIndex=-1;const pendingPostFlushCbs=[];let activePostFlushCbs=null,postFlushIndex=0;const resolvedPromise=Promise.resolve();let currentFlushPromise=null;function nextTick(s){const e=currentFlushPromise||resolvedPromise;return s?e.then(this?s.bind(this):s):e}function findInsertionIndex$1(s){let e=flushIndex+1,t=queue.length;for(;e<t;){const n=e+t>>>1,o=queue[n],a=getId(o);a<s||a===s&&o.flags&2?e=n+1:t=n}return e}function queueJob(s){if(!(s.flags&1)){const e=getId(s),t=queue[queue.length-1];!t||!(s.flags&2)&&e>=getId(t)?queue.push(s):queue.splice(findInsertionIndex$1(e),0,s),s.flags|=1,queueFlush()}}function queueFlush(){currentFlushPromise||(currentFlushPromise=resolvedPromise.then(flushJobs))}function queuePostFlushCb(s){isArray$1(s)?pendingPostFlushCbs.push(...s):activePostFlushCbs&&s.id===-1?activePostFlushCbs.splice(postFlushIndex+1,0,s):s.flags&1||(pendingPostFlushCbs.push(s),s.flags|=1),queueFlush()}function flushPreFlushCbs(s,e,t=flushIndex+1){for(;t<queue.length;t++){const n=queue[t];if(n&&n.flags&2){if(s&&n.id!==s.uid)continue;queue.splice(t,1),t--,n.flags&4&&(n.flags&=-2),n(),n.flags&4||(n.flags&=-2)}}}function flushPostFlushCbs(s){if(pendingPostFlushCbs.length){const e=[...new Set(pendingPostFlushCbs)].sort((t,n)=>getId(t)-getId(n));if(pendingPostFlushCbs.length=0,activePostFlushCbs){activePostFlushCbs.push(...e);return}for(activePostFlushCbs=e,postFlushIndex=0;postFlushIndex<activePostFlushCbs.length;postFlushIndex++){const t=activePostFlushCbs[postFlushIndex];t.flags&4&&(t.flags&=-2),t.flags&8||t(),t.flags&=-2}activePostFlushCbs=null,postFlushIndex=0}}const getId=s=>s.id==null?s.flags&2?-1:1/0:s.id;function flushJobs(s){try{for(flushIndex=0;flushIndex<queue.length;flushIndex++){const e=queue[flushIndex];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),callWithErrorHandling(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;flushIndex<queue.length;flushIndex++){const e=queue[flushIndex];e&&(e.flags&=-2)}flushIndex=-1,queue.length=0,flushPostFlushCbs(),currentFlushPromise=null,(queue.length||pendingPostFlushCbs.length)&&flushJobs()}}let currentRenderingInstance=null,currentScopeId=null;function setCurrentRenderingInstance(s){const e=currentRenderingInstance;return currentRenderingInstance=s,currentScopeId=s&&s.type.__scopeId||null,e}function withCtx(s,e=currentRenderingInstance,t){if(!e||s._n)return s;const n=(...o)=>{n._d&&setBlockTracking(-1);const a=setCurrentRenderingInstance(e);let r;try{r=s(...o)}finally{setCurrentRenderingInstance(a),n._d&&setBlockTracking(1)}return r};return n._n=!0,n._c=!0,n._d=!0,n}function invokeDirectiveHook(s,e,t,n){const o=s.dirs,a=e&&e.dirs;for(let r=0;r<o.length;r++){const l=o[r];a&&(l.oldValue=a[r].value);let c=l.dir[n];c&&(pauseTracking(),callWithAsyncErrorHandling(c,t,8,[s.el,l,s,e]),resetTracking())}}const TeleportEndKey=Symbol("_vte"),isTeleport=s=>s.__isTeleport;function setTransitionHooks(s,e){s.shapeFlag&6&&s.component?(s.transition=e,setTransitionHooks(s.component.subTree,e)):s.shapeFlag&128?(s.ssContent.transition=e.clone(s.ssContent),s.ssFallback.transition=e.clone(s.ssFallback)):s.transition=e}/*! #__NO_SIDE_EFFECTS__ */function defineComponent(s,e){return isFunction(s)?extend({name:s.name},e,{setup:s}):s}function markAsyncBoundary(s){s.ids=[s.ids[0]+s.ids[2]+++"-",0,0]}function setRef(s,e,t,n,o=!1){if(isArray$1(s)){s.forEach((b,B)=>setRef(b,e&&(isArray$1(e)?e[B]:e),t,n,o));return}if(isAsyncWrapper(n)&&!o){n.shapeFlag&512&&n.type.__asyncResolved&&n.component.subTree.component&&setRef(s,e,t,n.component.subTree);return}const a=n.shapeFlag&4?getComponentPublicInstance(n.component):n.el,r=o?null:a,{i:l,r:c}=s,u=e&&e.r,d=l.refs===EMPTY_OBJ?l.refs={}:l.refs,f=l.setupState,g=toRaw(f),_=f===EMPTY_OBJ?()=>!1:b=>hasOwn(g,b);if(u!=null&&u!==c&&(isString(u)?(d[u]=null,_(u)&&(f[u]=null)):isRef(u)&&(u.value=null)),isFunction(c))callWithErrorHandling(c,l,12,[r,d]);else{const b=isString(c),B=isRef(c);if(b||B){const I=()=>{if(s.f){const C=b?_(c)?f[c]:d[c]:c.value;o?isArray$1(C)&&remove(C,a):isArray$1(C)?C.includes(a)||C.push(a):b?(d[c]=[a],_(c)&&(f[c]=d[c])):(c.value=[a],s.k&&(d[s.k]=c.value))}else b?(d[c]=r,_(c)&&(f[c]=r)):B&&(c.value=r,s.k&&(d[s.k]=r))};r?(I.id=-1,queuePostRenderEffect(I,t)):I()}}}getGlobalThis().requestIdleCallback;getGlobalThis().cancelIdleCallback;const isAsyncWrapper=s=>!!s.type.__asyncLoader,isKeepAlive=s=>s.type.__isKeepAlive;function onActivated(s,e){registerKeepAliveHook(s,"a",e)}function onDeactivated(s,e){registerKeepAliveHook(s,"da",e)}function registerKeepAliveHook(s,e,t=currentInstance){const n=s.__wdc||(s.__wdc=()=>{let o=t;for(;o;){if(o.isDeactivated)return;o=o.parent}return s()});if(injectHook(e,n,t),t){let o=t.parent;for(;o&&o.parent;)isKeepAlive(o.parent.vnode)&&injectToKeepAliveRoot(n,e,t,o),o=o.parent}}function injectToKeepAliveRoot(s,e,t,n){const o=injectHook(e,s,n,!0);onUnmounted(()=>{remove(n[e],o)},t)}function injectHook(s,e,t=currentInstance,n=!1){if(t){const o=t[s]||(t[s]=[]),a=e.__weh||(e.__weh=(...r)=>{pauseTracking();const l=setCurrentInstance(t),c=callWithAsyncErrorHandling(e,t,s,r);return l(),resetTracking(),c});return n?o.unshift(a):o.push(a),a}}const createHook=s=>(e,t=currentInstance)=>{(!isInSSRComponentSetup||s==="sp")&&injectHook(s,(...n)=>e(...n),t)},onBeforeMount=createHook("bm"),onMounted=createHook("m"),onBeforeUpdate=createHook("bu"),onUpdated=createHook("u"),onBeforeUnmount=createHook("bum"),onUnmounted=createHook("um"),onServerPrefetch=createHook("sp"),onRenderTriggered=createHook("rtg"),onRenderTracked=createHook("rtc");function onErrorCaptured(s,e=currentInstance){injectHook("ec",s,e)}const COMPONENTS="components";function resolveComponent(s,e){return resolveAsset(COMPONENTS,s,!0,e)||s}const NULL_DYNAMIC_COMPONENT=Symbol.for("v-ndc");function resolveAsset(s,e,t=!0,n=!1){const o=currentRenderingInstance||currentInstance;if(o){const a=o.type;{const l=getComponentName(a,!1);if(l&&(l===e||l===camelize(e)||l===capitalize(camelize(e))))return a}const r=resolve(o[s]||a[s],e)||resolve(o.appContext[s],e);return!r&&n?a:r}}function resolve(s,e){return s&&(s[e]||s[camelize(e)]||s[capitalize(camelize(e))])}function renderList(s,e,t,n){let o;const a=t,r=isArray$1(s);if(r||isString(s)){const l=r&&isReactive(s);let c=!1,u=!1;l&&(c=!isShallow(s),u=isReadonly(s),s=shallowReadArray(s)),o=new Array(s.length);for(let d=0,f=s.length;d<f;d++)o[d]=e(c?u?toReadonly(toReactive(s[d])):toReactive(s[d]):s[d],d,void 0,a)}else if(typeof s=="number"){o=new Array(s);for(let l=0;l<s;l++)o[l]=e(l+1,l,void 0,a)}else if(isObject(s))if(s[Symbol.iterator])o=Array.from(s,(l,c)=>e(l,c,void 0,a));else{const l=Object.keys(s);o=new Array(l.length);for(let c=0,u=l.length;c<u;c++){const d=l[c];o[c]=e(s[d],d,c,a)}}else o=[];return o}const getPublicInstance=s=>s?isStatefulComponent(s)?getComponentPublicInstance(s):getPublicInstance(s.parent):null,publicPropertiesMap=extend(Object.create(null),{$:s=>s,$el:s=>s.vnode.el,$data:s=>s.data,$props:s=>s.props,$attrs:s=>s.attrs,$slots:s=>s.slots,$refs:s=>s.refs,$parent:s=>getPublicInstance(s.parent),$root:s=>getPublicInstance(s.root),$host:s=>s.ce,$emit:s=>s.emit,$options:s=>resolveMergedOptions(s),$forceUpdate:s=>s.f||(s.f=()=>{queueJob(s.update)}),$nextTick:s=>s.n||(s.n=nextTick.bind(s.proxy)),$watch:s=>instanceWatch.bind(s)}),hasSetupBinding=(s,e)=>s!==EMPTY_OBJ&&!s.__isScriptSetup&&hasOwn(s,e),PublicInstanceProxyHandlers={get({_:s},e){if(e==="__v_skip")return!0;const{ctx:t,setupState:n,data:o,props:a,accessCache:r,type:l,appContext:c}=s;let u;if(e[0]!=="$"){const _=r[e];if(_!==void 0)switch(_){case 1:return n[e];case 2:return o[e];case 4:return t[e];case 3:return a[e]}else{if(hasSetupBinding(n,e))return r[e]=1,n[e];if(o!==EMPTY_OBJ&&hasOwn(o,e))return r[e]=2,o[e];if((u=s.propsOptions[0])&&hasOwn(u,e))return r[e]=3,a[e];if(t!==EMPTY_OBJ&&hasOwn(t,e))return r[e]=4,t[e];shouldCacheAccess&&(r[e]=0)}}const d=publicPropertiesMap[e];let f,g;if(d)return e==="$attrs"&&track(s.attrs,"get",""),d(s);if((f=l.__cssModules)&&(f=f[e]))return f;if(t!==EMPTY_OBJ&&hasOwn(t,e))return r[e]=4,t[e];if(g=c.config.globalProperties,hasOwn(g,e))return g[e]},set({_:s},e,t){const{data:n,setupState:o,ctx:a}=s;return hasSetupBinding(o,e)?(o[e]=t,!0):n!==EMPTY_OBJ&&hasOwn(n,e)?(n[e]=t,!0):hasOwn(s.props,e)||e[0]==="$"&&e.slice(1)in s?!1:(a[e]=t,!0)},has({_:{data:s,setupState:e,accessCache:t,ctx:n,appContext:o,propsOptions:a}},r){let l;return!!t[r]||s!==EMPTY_OBJ&&hasOwn(s,r)||hasSetupBinding(e,r)||(l=a[0])&&hasOwn(l,r)||hasOwn(n,r)||hasOwn(publicPropertiesMap,r)||hasOwn(o.config.globalProperties,r)},defineProperty(s,e,t){return t.get!=null?s._.accessCache[e]=0:hasOwn(t,"value")&&this.set(s,e,t.value,null),Reflect.defineProperty(s,e,t)}};function normalizePropsOrEmits(s){return isArray$1(s)?s.reduce((e,t)=>(e[t]=null,e),{}):s}let shouldCacheAccess=!0;function applyOptions(s){const e=resolveMergedOptions(s),t=s.proxy,n=s.ctx;shouldCacheAccess=!1,e.beforeCreate&&callHook(e.beforeCreate,s,"bc");const{data:o,computed:a,methods:r,watch:l,provide:c,inject:u,created:d,beforeMount:f,mounted:g,beforeUpdate:_,updated:b,activated:B,deactivated:I,beforeDestroy:C,beforeUnmount:R,destroyed:L,unmounted:F,render:N,renderTracked:k,renderTriggered:Q,errorCaptured:z,serverPrefetch:G,expose:O,inheritAttrs:q,components:ce,directives:ne,filters:ue}=e;if(u&&resolveInjections(u,n,null),r)for(const ee in r){const J=r[ee];isFunction(J)&&(n[ee]=J.bind(t))}if(o){const ee=o.call(t,t);isObject(ee)&&(s.data=reactive(ee))}if(shouldCacheAccess=!0,a)for(const ee in a){const J=a[ee],ye=isFunction(J)?J.bind(t,t):isFunction(J.get)?J.get.bind(t,t):NOOP,Te=!isFunction(J)&&isFunction(J.set)?J.set.bind(t):NOOP,xe=computed({get:ye,set:Te});Object.defineProperty(n,ee,{enumerable:!0,configurable:!0,get:()=>xe.value,set:ve=>xe.value=ve})}if(l)for(const ee in l)createWatcher(l[ee],n,t,ee);if(c){const ee=isFunction(c)?c.call(t):c;Reflect.ownKeys(ee).forEach(J=>{provide(J,ee[J])})}d&&callHook(d,s,"c");function fe(ee,J){isArray$1(J)?J.forEach(ye=>ee(ye.bind(t))):J&&ee(J.bind(t))}if(fe(onBeforeMount,f),fe(onMounted,g),fe(onBeforeUpdate,_),fe(onUpdated,b),fe(onActivated,B),fe(onDeactivated,I),fe(onErrorCaptured,z),fe(onRenderTracked,k),fe(onRenderTriggered,Q),fe(onBeforeUnmount,R),fe(onUnmounted,F),fe(onServerPrefetch,G),isArray$1(O))if(O.length){const ee=s.exposed||(s.exposed={});O.forEach(J=>{Object.defineProperty(ee,J,{get:()=>t[J],set:ye=>t[J]=ye})})}else s.exposed||(s.exposed={});N&&s.render===NOOP&&(s.render=N),q!=null&&(s.inheritAttrs=q),ce&&(s.components=ce),ne&&(s.directives=ne),G&&markAsyncBoundary(s)}function resolveInjections(s,e,t=NOOP){isArray$1(s)&&(s=normalizeInject(s));for(const n in s){const o=s[n];let a;isObject(o)?"default"in o?a=inject(o.from||n,o.default,!0):a=inject(o.from||n):a=inject(o),isRef(a)?Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:()=>a.value,set:r=>a.value=r}):e[n]=a}}function callHook(s,e,t){callWithAsyncErrorHandling(isArray$1(s)?s.map(n=>n.bind(e.proxy)):s.bind(e.proxy),e,t)}function createWatcher(s,e,t,n){let o=n.includes(".")?createPathGetter(t,n):()=>t[n];if(isString(s)){const a=e[s];isFunction(a)&&watch(o,a)}else if(isFunction(s))watch(o,s.bind(t));else if(isObject(s))if(isArray$1(s))s.forEach(a=>createWatcher(a,e,t,n));else{const a=isFunction(s.handler)?s.handler.bind(t):e[s.handler];isFunction(a)&&watch(o,a,s)}}function resolveMergedOptions(s){const e=s.type,{mixins:t,extends:n}=e,{mixins:o,optionsCache:a,config:{optionMergeStrategies:r}}=s.appContext,l=a.get(e);let c;return l?c=l:!o.length&&!t&&!n?c=e:(c={},o.length&&o.forEach(u=>mergeOptions$1(c,u,r,!0)),mergeOptions$1(c,e,r)),isObject(e)&&a.set(e,c),c}function mergeOptions$1(s,e,t,n=!1){const{mixins:o,extends:a}=e;a&&mergeOptions$1(s,a,t,!0),o&&o.forEach(r=>mergeOptions$1(s,r,t,!0));for(const r in e)if(!(n&&r==="expose")){const l=internalOptionMergeStrats[r]||t&&t[r];s[r]=l?l(s[r],e[r]):e[r]}return s}const internalOptionMergeStrats={data:mergeDataFn,props:mergeEmitsOrPropsOptions,emits:mergeEmitsOrPropsOptions,methods:mergeObjectOptions,computed:mergeObjectOptions,beforeCreate:mergeAsArray,created:mergeAsArray,beforeMount:mergeAsArray,mounted:mergeAsArray,beforeUpdate:mergeAsArray,updated:mergeAsArray,beforeDestroy:mergeAsArray,beforeUnmount:mergeAsArray,destroyed:mergeAsArray,unmounted:mergeAsArray,activated:mergeAsArray,deactivated:mergeAsArray,errorCaptured:mergeAsArray,serverPrefetch:mergeAsArray,components:mergeObjectOptions,directives:mergeObjectOptions,watch:mergeWatchOptions,provide:mergeDataFn,inject:mergeInject};function mergeDataFn(s,e){return e?s?function(){return extend(isFunction(s)?s.call(this,this):s,isFunction(e)?e.call(this,this):e)}:e:s}function mergeInject(s,e){return mergeObjectOptions(normalizeInject(s),normalizeInject(e))}function normalizeInject(s){if(isArray$1(s)){const e={};for(let t=0;t<s.length;t++)e[s[t]]=s[t];return e}return s}function mergeAsArray(s,e){return s?[...new Set([].concat(s,e))]:e}function mergeObjectOptions(s,e){return s?extend(Object.create(null),s,e):e}function mergeEmitsOrPropsOptions(s,e){return s?isArray$1(s)&&isArray$1(e)?[...new Set([...s,...e])]:extend(Object.create(null),normalizePropsOrEmits(s),normalizePropsOrEmits(e??{})):e}function mergeWatchOptions(s,e){if(!s)return e;if(!e)return s;const t=extend(Object.create(null),s);for(const n in e)t[n]=mergeAsArray(s[n],e[n]);return t}function createAppContext(){return{app:null,config:{isNativeTag:NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let uid$1=0;function createAppAPI(s,e){return function(n,o=null){isFunction(n)||(n=extend({},n)),o!=null&&!isObject(o)&&(o=null);const a=createAppContext(),r=new WeakSet,l=[];let c=!1;const u=a.app={_uid:uid$1++,_component:n,_props:o,_container:null,_context:a,_instance:null,version,get config(){return a.config},set config(d){},use(d,...f){return r.has(d)||(d&&isFunction(d.install)?(r.add(d),d.install(u,...f)):isFunction(d)&&(r.add(d),d(u,...f))),u},mixin(d){return a.mixins.includes(d)||a.mixins.push(d),u},component(d,f){return f?(a.components[d]=f,u):a.components[d]},directive(d,f){return f?(a.directives[d]=f,u):a.directives[d]},mount(d,f,g){if(!c){const _=u._ceVNode||createVNode(n,o);return _.appContext=a,g===!0?g="svg":g===!1&&(g=void 0),s(_,d,g),c=!0,u._container=d,d.__vue_app__=u,getComponentPublicInstance(_.component)}},onUnmount(d){l.push(d)},unmount(){c&&(callWithAsyncErrorHandling(l,u._instance,16),s(null,u._container),delete u._container.__vue_app__)},provide(d,f){return a.provides[d]=f,u},runWithContext(d){const f=currentApp;currentApp=u;try{return d()}finally{currentApp=f}}};return u}}let currentApp=null;function provide(s,e){if(currentInstance){let t=currentInstance.provides;const n=currentInstance.parent&&currentInstance.parent.provides;n===t&&(t=currentInstance.provides=Object.create(n)),t[s]=e}}function inject(s,e,t=!1){const n=currentInstance||currentRenderingInstance;if(n||currentApp){let o=currentApp?currentApp._context.provides:n?n.parent==null||n.ce?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:void 0;if(o&&s in o)return o[s];if(arguments.length>1)return t&&isFunction(e)?e.call(n&&n.proxy):e}}const internalObjectProto={},createInternalObject=()=>Object.create(internalObjectProto),isInternalObject=s=>Object.getPrototypeOf(s)===internalObjectProto;function initProps(s,e,t,n=!1){const o={},a=createInternalObject();s.propsDefaults=Object.create(null),setFullProps(s,e,o,a);for(const r in s.propsOptions[0])r in o||(o[r]=void 0);t?s.props=n?o:shallowReactive(o):s.type.props?s.props=o:s.props=a,s.attrs=a}function updateProps(s,e,t,n){const{props:o,attrs:a,vnode:{patchFlag:r}}=s,l=toRaw(o),[c]=s.propsOptions;let u=!1;if((n||r>0)&&!(r&16)){if(r&8){const d=s.vnode.dynamicProps;for(let f=0;f<d.length;f++){let g=d[f];if(isEmitListener(s.emitsOptions,g))continue;const _=e[g];if(c)if(hasOwn(a,g))_!==a[g]&&(a[g]=_,u=!0);else{const b=camelize(g);o[b]=resolvePropValue(c,l,b,_,s,!1)}else _!==a[g]&&(a[g]=_,u=!0)}}}else{setFullProps(s,e,o,a)&&(u=!0);let d;for(const f in l)(!e||!hasOwn(e,f)&&((d=hyphenate(f))===f||!hasOwn(e,d)))&&(c?t&&(t[f]!==void 0||t[d]!==void 0)&&(o[f]=resolvePropValue(c,l,f,void 0,s,!0)):delete o[f]);if(a!==l)for(const f in a)(!e||!hasOwn(e,f))&&(delete a[f],u=!0)}u&&trigger(s.attrs,"set","")}function setFullProps(s,e,t,n){const[o,a]=s.propsOptions;let r=!1,l;if(e)for(let c in e){if(isReservedProp(c))continue;const u=e[c];let d;o&&hasOwn(o,d=camelize(c))?!a||!a.includes(d)?t[d]=u:(l||(l={}))[d]=u:isEmitListener(s.emitsOptions,c)||(!(c in n)||u!==n[c])&&(n[c]=u,r=!0)}if(a){const c=toRaw(t),u=l||EMPTY_OBJ;for(let d=0;d<a.length;d++){const f=a[d];t[f]=resolvePropValue(o,c,f,u[f],s,!hasOwn(u,f))}}return r}function resolvePropValue(s,e,t,n,o,a){const r=s[t];if(r!=null){const l=hasOwn(r,"default");if(l&&n===void 0){const c=r.default;if(r.type!==Function&&!r.skipFactory&&isFunction(c)){const{propsDefaults:u}=o;if(t in u)n=u[t];else{const d=setCurrentInstance(o);n=u[t]=c.call(null,e),d()}}else n=c;o.ce&&o.ce._setProp(t,n)}r[0]&&(a&&!l?n=!1:r[1]&&(n===""||n===hyphenate(t))&&(n=!0))}return n}const mixinPropsCache=new WeakMap;function normalizePropsOptions(s,e,t=!1){const n=t?mixinPropsCache:e.propsCache,o=n.get(s);if(o)return o;const a=s.props,r={},l=[];let c=!1;if(!isFunction(s)){const d=f=>{c=!0;const[g,_]=normalizePropsOptions(f,e,!0);extend(r,g),_&&l.push(..._)};!t&&e.mixins.length&&e.mixins.forEach(d),s.extends&&d(s.extends),s.mixins&&s.mixins.forEach(d)}if(!a&&!c)return isObject(s)&&n.set(s,EMPTY_ARR),EMPTY_ARR;if(isArray$1(a))for(let d=0;d<a.length;d++){const f=camelize(a[d]);validatePropName(f)&&(r[f]=EMPTY_OBJ)}else if(a)for(const d in a){const f=camelize(d);if(validatePropName(f)){const g=a[d],_=r[f]=isArray$1(g)||isFunction(g)?{type:g}:extend({},g),b=_.type;let B=!1,I=!0;if(isArray$1(b))for(let C=0;C<b.length;++C){const R=b[C],L=isFunction(R)&&R.name;if(L==="Boolean"){B=!0;break}else L==="String"&&(I=!1)}else B=isFunction(b)&&b.name==="Boolean";_[0]=B,_[1]=I,(B||hasOwn(_,"default"))&&l.push(f)}}const u=[r,l];return isObject(s)&&n.set(s,u),u}function validatePropName(s){return s[0]!=="$"&&!isReservedProp(s)}const isInternalKey=s=>s[0]==="_"||s==="$stable",normalizeSlotValue=s=>isArray$1(s)?s.map(normalizeVNode):[normalizeVNode(s)],normalizeSlot$1=(s,e,t)=>{if(e._n)return e;const n=withCtx((...o)=>normalizeSlotValue(e(...o)),t);return n._c=!1,n},normalizeObjectSlots=(s,e,t)=>{const n=s._ctx;for(const o in s){if(isInternalKey(o))continue;const a=s[o];if(isFunction(a))e[o]=normalizeSlot$1(o,a,n);else if(a!=null){const r=normalizeSlotValue(a);e[o]=()=>r}}},normalizeVNodeSlots=(s,e)=>{const t=normalizeSlotValue(e);s.slots.default=()=>t},assignSlots=(s,e,t)=>{for(const n in e)(t||!isInternalKey(n))&&(s[n]=e[n])},initSlots=(s,e,t)=>{const n=s.slots=createInternalObject();if(s.vnode.shapeFlag&32){const o=e.__;o&&def(n,"__",o,!0);const a=e._;a?(assignSlots(n,e,t),t&&def(n,"_",a,!0)):normalizeObjectSlots(e,n)}else e&&normalizeVNodeSlots(s,e)},updateSlots=(s,e,t)=>{const{vnode:n,slots:o}=s;let a=!0,r=EMPTY_OBJ;if(n.shapeFlag&32){const l=e._;l?t&&l===1?a=!1:assignSlots(o,e,t):(a=!e.$stable,normalizeObjectSlots(e,o)),r=e}else e&&(normalizeVNodeSlots(s,e),r={default:1});if(a)for(const l in o)!isInternalKey(l)&&r[l]==null&&delete o[l]},queuePostRenderEffect=queueEffectWithSuspense;function createRenderer(s){return baseCreateRenderer(s)}function baseCreateRenderer(s,e){const t=getGlobalThis();t.__VUE__=!0;const{insert:n,remove:o,patchProp:a,createElement:r,createText:l,createComment:c,setText:u,setElementText:d,parentNode:f,nextSibling:g,setScopeId:_=NOOP,insertStaticContent:b}=s,B=(ie,oe,$,Se=null,Be=null,we=null,Fe=void 0,$e=null,ze=!!oe.dynamicChildren)=>{if(ie===oe)return;ie&&!isSameVNodeType(ie,oe)&&(Se=de(ie),ve(ie,Be,we,!0),ie=null),oe.patchFlag===-2&&(ze=!1,oe.dynamicChildren=null);const{type:qe,ref:ut,shapeFlag:te}=oe;switch(qe){case Text:I(ie,oe,$,Se);break;case Comment:C(ie,oe,$,Se);break;case Static:ie==null&&R(oe,$,Se,Fe);break;case Fragment:ce(ie,oe,$,Se,Be,we,Fe,$e,ze);break;default:te&1?N(ie,oe,$,Se,Be,we,Fe,$e,ze):te&6?ne(ie,oe,$,Se,Be,we,Fe,$e,ze):(te&64||te&128)&&qe.process(ie,oe,$,Se,Be,we,Fe,$e,ze,Pe)}ut!=null&&Be?setRef(ut,ie&&ie.ref,we,oe||ie,!oe):ut==null&&ie&&ie.ref!=null&&setRef(ie.ref,null,we,ie,!0)},I=(ie,oe,$,Se)=>{if(ie==null)n(oe.el=l(oe.children),$,Se);else{const Be=oe.el=ie.el;oe.children!==ie.children&&u(Be,oe.children)}},C=(ie,oe,$,Se)=>{ie==null?n(oe.el=c(oe.children||""),$,Se):oe.el=ie.el},R=(ie,oe,$,Se)=>{[ie.el,ie.anchor]=b(ie.children,oe,$,Se,ie.el,ie.anchor)},L=({el:ie,anchor:oe},$,Se)=>{let Be;for(;ie&&ie!==oe;)Be=g(ie),n(ie,$,Se),ie=Be;n(oe,$,Se)},F=({el:ie,anchor:oe})=>{let $;for(;ie&&ie!==oe;)$=g(ie),o(ie),ie=$;o(oe)},N=(ie,oe,$,Se,Be,we,Fe,$e,ze)=>{oe.type==="svg"?Fe="svg":oe.type==="math"&&(Fe="mathml"),ie==null?k(oe,$,Se,Be,we,Fe,$e,ze):G(ie,oe,Be,we,Fe,$e,ze)},k=(ie,oe,$,Se,Be,we,Fe,$e)=>{let ze,qe;const{props:ut,shapeFlag:te,transition:H,dirs:Ie}=ie;if(ze=ie.el=r(ie.type,we,ut&&ut.is,ut),te&8?d(ze,ie.children):te&16&&z(ie.children,ze,null,Se,Be,resolveChildrenNamespace(ie,we),Fe,$e),Ie&&invokeDirectiveHook(ie,null,Se,"created"),Q(ze,ie,ie.scopeId,Fe,Se),ut){for(const We in ut)We!=="value"&&!isReservedProp(We)&&a(ze,We,null,ut[We],we,Se);"value"in ut&&a(ze,"value",null,ut.value,we),(qe=ut.onVnodeBeforeMount)&&invokeVNodeHook(qe,Se,ie)}Ie&&invokeDirectiveHook(ie,null,Se,"beforeMount");const Ge=needTransition(Be,H);Ge&&H.beforeEnter(ze),n(ze,oe,$),((qe=ut&&ut.onVnodeMounted)||Ge||Ie)&&queuePostRenderEffect(()=>{qe&&invokeVNodeHook(qe,Se,ie),Ge&&H.enter(ze),Ie&&invokeDirectiveHook(ie,null,Se,"mounted")},Be)},Q=(ie,oe,$,Se,Be)=>{if($&&_(ie,$),Se)for(let we=0;we<Se.length;we++)_(ie,Se[we]);if(Be){let we=Be.subTree;if(oe===we||isSuspense(we.type)&&(we.ssContent===oe||we.ssFallback===oe)){const Fe=Be.vnode;Q(ie,Fe,Fe.scopeId,Fe.slotScopeIds,Be.parent)}}},z=(ie,oe,$,Se,Be,we,Fe,$e,ze=0)=>{for(let qe=ze;qe<ie.length;qe++){const ut=ie[qe]=$e?cloneIfMounted(ie[qe]):normalizeVNode(ie[qe]);B(null,ut,oe,$,Se,Be,we,Fe,$e)}},G=(ie,oe,$,Se,Be,we,Fe)=>{const $e=oe.el=ie.el;let{patchFlag:ze,dynamicChildren:qe,dirs:ut}=oe;ze|=ie.patchFlag&16;const te=ie.props||EMPTY_OBJ,H=oe.props||EMPTY_OBJ;let Ie;if($&&toggleRecurse($,!1),(Ie=H.onVnodeBeforeUpdate)&&invokeVNodeHook(Ie,$,oe,ie),ut&&invokeDirectiveHook(oe,ie,$,"beforeUpdate"),$&&toggleRecurse($,!0),(te.innerHTML&&H.innerHTML==null||te.textContent&&H.textContent==null)&&d($e,""),qe?O(ie.dynamicChildren,qe,$e,$,Se,resolveChildrenNamespace(oe,Be),we):Fe||J(ie,oe,$e,null,$,Se,resolveChildrenNamespace(oe,Be),we,!1),ze>0){if(ze&16)q($e,te,H,$,Be);else if(ze&2&&te.class!==H.class&&a($e,"class",null,H.class,Be),ze&4&&a($e,"style",te.style,H.style,Be),ze&8){const Ge=oe.dynamicProps;for(let We=0;We<Ge.length;We++){const Ve=Ge[We],dt=te[Ve],it=H[Ve];(it!==dt||Ve==="value")&&a($e,Ve,dt,it,Be,$)}}ze&1&&ie.children!==oe.children&&d($e,oe.children)}else!Fe&&qe==null&&q($e,te,H,$,Be);((Ie=H.onVnodeUpdated)||ut)&&queuePostRenderEffect(()=>{Ie&&invokeVNodeHook(Ie,$,oe,ie),ut&&invokeDirectiveHook(oe,ie,$,"updated")},Se)},O=(ie,oe,$,Se,Be,we,Fe)=>{for(let $e=0;$e<oe.length;$e++){const ze=ie[$e],qe=oe[$e],ut=ze.el&&(ze.type===Fragment||!isSameVNodeType(ze,qe)||ze.shapeFlag&198)?f(ze.el):$;B(ze,qe,ut,null,Se,Be,we,Fe,!0)}},q=(ie,oe,$,Se,Be)=>{if(oe!==$){if(oe!==EMPTY_OBJ)for(const we in oe)!isReservedProp(we)&&!(we in $)&&a(ie,we,oe[we],null,Be,Se);for(const we in $){if(isReservedProp(we))continue;const Fe=$[we],$e=oe[we];Fe!==$e&&we!=="value"&&a(ie,we,$e,Fe,Be,Se)}"value"in $&&a(ie,"value",oe.value,$.value,Be)}},ce=(ie,oe,$,Se,Be,we,Fe,$e,ze)=>{const qe=oe.el=ie?ie.el:l(""),ut=oe.anchor=ie?ie.anchor:l("");let{patchFlag:te,dynamicChildren:H,slotScopeIds:Ie}=oe;Ie&&($e=$e?$e.concat(Ie):Ie),ie==null?(n(qe,$,Se),n(ut,$,Se),z(oe.children||[],$,ut,Be,we,Fe,$e,ze)):te>0&&te&64&&H&&ie.dynamicChildren?(O(ie.dynamicChildren,H,$,Be,we,Fe,$e),(oe.key!=null||Be&&oe===Be.subTree)&&traverseStaticChildren(ie,oe,!0)):J(ie,oe,$,ut,Be,we,Fe,$e,ze)},ne=(ie,oe,$,Se,Be,we,Fe,$e,ze)=>{oe.slotScopeIds=$e,ie==null?oe.shapeFlag&512?Be.ctx.activate(oe,$,Se,Fe,ze):ue(oe,$,Se,Be,we,Fe,ze):pe(ie,oe,ze)},ue=(ie,oe,$,Se,Be,we,Fe)=>{const $e=ie.component=createComponentInstance(ie,Se,Be);if(isKeepAlive(ie)&&($e.ctx.renderer=Pe),setupComponent($e,!1,Fe),$e.asyncDep){if(Be&&Be.registerDep($e,fe,Fe),!ie.el){const ze=$e.subTree=createVNode(Comment);C(null,ze,oe,$)}}else fe($e,ie,oe,$,Be,we,Fe)},pe=(ie,oe,$)=>{const Se=oe.component=ie.component;if(shouldUpdateComponent(ie,oe,$))if(Se.asyncDep&&!Se.asyncResolved){ee(Se,oe,$);return}else Se.next=oe,Se.update();else oe.el=ie.el,Se.vnode=oe},fe=(ie,oe,$,Se,Be,we,Fe)=>{const $e=()=>{if(ie.isMounted){let{next:te,bu:H,u:Ie,parent:Ge,vnode:We}=ie;{const se=locateNonHydratedAsyncRoot(ie);if(se){te&&(te.el=We.el,ee(ie,te,Fe)),se.asyncDep.then(()=>{ie.isUnmounted||$e()});return}}let Ve=te,dt;toggleRecurse(ie,!1),te?(te.el=We.el,ee(ie,te,Fe)):te=We,H&&invokeArrayFns(H),(dt=te.props&&te.props.onVnodeBeforeUpdate)&&invokeVNodeHook(dt,Ge,te,We),toggleRecurse(ie,!0);const it=renderComponentRoot(ie),ft=ie.subTree;ie.subTree=it,B(ft,it,f(ft.el),de(ft),ie,Be,we),te.el=it.el,Ve===null&&updateHOCHostEl(ie,it.el),Ie&&queuePostRenderEffect(Ie,Be),(dt=te.props&&te.props.onVnodeUpdated)&&queuePostRenderEffect(()=>invokeVNodeHook(dt,Ge,te,We),Be)}else{let te;const{el:H,props:Ie}=oe,{bm:Ge,m:We,parent:Ve,root:dt,type:it}=ie,ft=isAsyncWrapper(oe);toggleRecurse(ie,!1),Ge&&invokeArrayFns(Ge),!ft&&(te=Ie&&Ie.onVnodeBeforeMount)&&invokeVNodeHook(te,Ve,oe),toggleRecurse(ie,!0);{dt.ce&&dt.ce._def.shadowRoot!==!1&&dt.ce._injectChildStyle(it);const se=ie.subTree=renderComponentRoot(ie);B(null,se,$,Se,ie,Be,we),oe.el=se.el}if(We&&queuePostRenderEffect(We,Be),!ft&&(te=Ie&&Ie.onVnodeMounted)){const se=oe;queuePostRenderEffect(()=>invokeVNodeHook(te,Ve,se),Be)}(oe.shapeFlag&256||Ve&&isAsyncWrapper(Ve.vnode)&&Ve.vnode.shapeFlag&256)&&ie.a&&queuePostRenderEffect(ie.a,Be),ie.isMounted=!0,oe=$=Se=null}};ie.scope.on();const ze=ie.effect=new ReactiveEffect($e);ie.scope.off();const qe=ie.update=ze.run.bind(ze),ut=ie.job=ze.runIfDirty.bind(ze);ut.i=ie,ut.id=ie.uid,ze.scheduler=()=>queueJob(ut),toggleRecurse(ie,!0),qe()},ee=(ie,oe,$)=>{oe.component=ie;const Se=ie.vnode.props;ie.vnode=oe,ie.next=null,updateProps(ie,oe.props,Se,$),updateSlots(ie,oe.children,$),pauseTracking(),flushPreFlushCbs(ie),resetTracking()},J=(ie,oe,$,Se,Be,we,Fe,$e,ze=!1)=>{const qe=ie&&ie.children,ut=ie?ie.shapeFlag:0,te=oe.children,{patchFlag:H,shapeFlag:Ie}=oe;if(H>0){if(H&128){Te(qe,te,$,Se,Be,we,Fe,$e,ze);return}else if(H&256){ye(qe,te,$,Se,Be,we,Fe,$e,ze);return}}Ie&8?(ut&16&&De(qe,Be,we),te!==qe&&d($,te)):ut&16?Ie&16?Te(qe,te,$,Se,Be,we,Fe,$e,ze):De(qe,Be,we,!0):(ut&8&&d($,""),Ie&16&&z(te,$,Se,Be,we,Fe,$e,ze))},ye=(ie,oe,$,Se,Be,we,Fe,$e,ze)=>{ie=ie||EMPTY_ARR,oe=oe||EMPTY_ARR;const qe=ie.length,ut=oe.length,te=Math.min(qe,ut);let H;for(H=0;H<te;H++){const Ie=oe[H]=ze?cloneIfMounted(oe[H]):normalizeVNode(oe[H]);B(ie[H],Ie,$,null,Be,we,Fe,$e,ze)}qe>ut?De(ie,Be,we,!0,!1,te):z(oe,$,Se,Be,we,Fe,$e,ze,te)},Te=(ie,oe,$,Se,Be,we,Fe,$e,ze)=>{let qe=0;const ut=oe.length;let te=ie.length-1,H=ut-1;for(;qe<=te&&qe<=H;){const Ie=ie[qe],Ge=oe[qe]=ze?cloneIfMounted(oe[qe]):normalizeVNode(oe[qe]);if(isSameVNodeType(Ie,Ge))B(Ie,Ge,$,null,Be,we,Fe,$e,ze);else break;qe++}for(;qe<=te&&qe<=H;){const Ie=ie[te],Ge=oe[H]=ze?cloneIfMounted(oe[H]):normalizeVNode(oe[H]);if(isSameVNodeType(Ie,Ge))B(Ie,Ge,$,null,Be,we,Fe,$e,ze);else break;te--,H--}if(qe>te){if(qe<=H){const Ie=H+1,Ge=Ie<ut?oe[Ie].el:Se;for(;qe<=H;)B(null,oe[qe]=ze?cloneIfMounted(oe[qe]):normalizeVNode(oe[qe]),$,Ge,Be,we,Fe,$e,ze),qe++}}else if(qe>H)for(;qe<=te;)ve(ie[qe],Be,we,!0),qe++;else{const Ie=qe,Ge=qe,We=new Map;for(qe=Ge;qe<=H;qe++){const Je=oe[qe]=ze?cloneIfMounted(oe[qe]):normalizeVNode(oe[qe]);Je.key!=null&&We.set(Je.key,qe)}let Ve,dt=0;const it=H-Ge+1;let ft=!1,se=0;const Ee=new Array(it);for(qe=0;qe<it;qe++)Ee[qe]=0;for(qe=Ie;qe<=te;qe++){const Je=ie[qe];if(dt>=it){ve(Je,Be,we,!0);continue}let at;if(Je.key!=null)at=We.get(Je.key);else for(Ve=Ge;Ve<=H;Ve++)if(Ee[Ve-Ge]===0&&isSameVNodeType(Je,oe[Ve])){at=Ve;break}at===void 0?ve(Je,Be,we,!0):(Ee[at-Ge]=qe+1,at>=se?se=at:ft=!0,B(Je,oe[at],$,null,Be,we,Fe,$e,ze),dt++)}const Ye=ft?getSequence(Ee):EMPTY_ARR;for(Ve=Ye.length-1,qe=it-1;qe>=0;qe--){const Je=Ge+qe,at=oe[Je],ot=Je+1<ut?oe[Je+1].el:Se;Ee[qe]===0?B(null,at,$,ot,Be,we,Fe,$e,ze):ft&&(Ve<0||qe!==Ye[Ve]?xe(at,$,ot,2):Ve--)}}},xe=(ie,oe,$,Se,Be=null)=>{const{el:we,type:Fe,transition:$e,children:ze,shapeFlag:qe}=ie;if(qe&6){xe(ie.component.subTree,oe,$,Se);return}if(qe&128){ie.suspense.move(oe,$,Se);return}if(qe&64){Fe.move(ie,oe,$,Pe);return}if(Fe===Fragment){n(we,oe,$);for(let te=0;te<ze.length;te++)xe(ze[te],oe,$,Se);n(ie.anchor,oe,$);return}if(Fe===Static){L(ie,oe,$);return}if(Se!==2&&qe&1&&$e)if(Se===0)$e.beforeEnter(we),n(we,oe,$),queuePostRenderEffect(()=>$e.enter(we),Be);else{const{leave:te,delayLeave:H,afterLeave:Ie}=$e,Ge=()=>{ie.ctx.isUnmounted?o(we):n(we,oe,$)},We=()=>{te(we,()=>{Ge(),Ie&&Ie()})};H?H(we,Ge,We):We()}else n(we,oe,$)},ve=(ie,oe,$,Se=!1,Be=!1)=>{const{type:we,props:Fe,ref:$e,children:ze,dynamicChildren:qe,shapeFlag:ut,patchFlag:te,dirs:H,cacheIndex:Ie}=ie;if(te===-2&&(Be=!1),$e!=null&&(pauseTracking(),setRef($e,null,$,ie,!0),resetTracking()),Ie!=null&&(oe.renderCache[Ie]=void 0),ut&256){oe.ctx.deactivate(ie);return}const Ge=ut&1&&H,We=!isAsyncWrapper(ie);let Ve;if(We&&(Ve=Fe&&Fe.onVnodeBeforeUnmount)&&invokeVNodeHook(Ve,oe,ie),ut&6)_e(ie.component,$,Se);else{if(ut&128){ie.suspense.unmount($,Se);return}Ge&&invokeDirectiveHook(ie,null,oe,"beforeUnmount"),ut&64?ie.type.remove(ie,oe,$,Pe,Se):qe&&!qe.hasOnce&&(we!==Fragment||te>0&&te&64)?De(qe,oe,$,!1,!0):(we===Fragment&&te&384||!Be&&ut&16)&&De(ze,oe,$),Se&&he(ie)}(We&&(Ve=Fe&&Fe.onVnodeUnmounted)||Ge)&&queuePostRenderEffect(()=>{Ve&&invokeVNodeHook(Ve,oe,ie),Ge&&invokeDirectiveHook(ie,null,oe,"unmounted")},$)},he=ie=>{const{type:oe,el:$,anchor:Se,transition:Be}=ie;if(oe===Fragment){le($,Se);return}if(oe===Static){F(ie);return}const we=()=>{o($),Be&&!Be.persisted&&Be.afterLeave&&Be.afterLeave()};if(ie.shapeFlag&1&&Be&&!Be.persisted){const{leave:Fe,delayLeave:$e}=Be,ze=()=>Fe($,we);$e?$e(ie.el,we,ze):ze()}else we()},le=(ie,oe)=>{let $;for(;ie!==oe;)$=g(ie),o(ie),ie=$;o(oe)},_e=(ie,oe,$)=>{const{bum:Se,scope:Be,job:we,subTree:Fe,um:$e,m:ze,a:qe,parent:ut,slots:{__:te}}=ie;invalidateMount(ze),invalidateMount(qe),Se&&invokeArrayFns(Se),ut&&isArray$1(te)&&te.forEach(H=>{ut.renderCache[H]=void 0}),Be.stop(),we&&(we.flags|=8,ve(Fe,ie,oe,$)),$e&&queuePostRenderEffect($e,oe),queuePostRenderEffect(()=>{ie.isUnmounted=!0},oe),oe&&oe.pendingBranch&&!oe.isUnmounted&&ie.asyncDep&&!ie.asyncResolved&&ie.suspenseId===oe.pendingId&&(oe.deps--,oe.deps===0&&oe.resolve())},De=(ie,oe,$,Se=!1,Be=!1,we=0)=>{for(let Fe=we;Fe<ie.length;Fe++)ve(ie[Fe],oe,$,Se,Be)},de=ie=>{if(ie.shapeFlag&6)return de(ie.component.subTree);if(ie.shapeFlag&128)return ie.suspense.next();const oe=g(ie.anchor||ie.el),$=oe&&oe[TeleportEndKey];return $?g($):oe};let Me=!1;const Ne=(ie,oe,$)=>{ie==null?oe._vnode&&ve(oe._vnode,null,null,!0):B(oe._vnode||null,ie,oe,null,null,null,$),oe._vnode=ie,Me||(Me=!0,flushPreFlushCbs(),flushPostFlushCbs(),Me=!1)},Pe={p:B,um:ve,m:xe,r:he,mt:ue,mc:z,pc:J,pbc:O,n:de,o:s};return{render:Ne,hydrate:void 0,createApp:createAppAPI(Ne)}}function resolveChildrenNamespace({type:s,props:e},t){return t==="svg"&&s==="foreignObject"||t==="mathml"&&s==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function toggleRecurse({effect:s,job:e},t){t?(s.flags|=32,e.flags|=4):(s.flags&=-33,e.flags&=-5)}function needTransition(s,e){return(!s||s&&!s.pendingBranch)&&e&&!e.persisted}function traverseStaticChildren(s,e,t=!1){const n=s.children,o=e.children;if(isArray$1(n)&&isArray$1(o))for(let a=0;a<n.length;a++){const r=n[a];let l=o[a];l.shapeFlag&1&&!l.dynamicChildren&&((l.patchFlag<=0||l.patchFlag===32)&&(l=o[a]=cloneIfMounted(o[a]),l.el=r.el),!t&&l.patchFlag!==-2&&traverseStaticChildren(r,l)),l.type===Text&&(l.el=r.el),l.type===Comment&&!l.el&&(l.el=r.el)}}function getSequence(s){const e=s.slice(),t=[0];let n,o,a,r,l;const c=s.length;for(n=0;n<c;n++){const u=s[n];if(u!==0){if(o=t[t.length-1],s[o]<u){e[n]=o,t.push(n);continue}for(a=0,r=t.length-1;a<r;)l=a+r>>1,s[t[l]]<u?a=l+1:r=l;u<s[t[a]]&&(a>0&&(e[n]=t[a-1]),t[a]=n)}}for(a=t.length,r=t[a-1];a-- >0;)t[a]=r,r=e[r];return t}function locateNonHydratedAsyncRoot(s){const e=s.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:locateNonHydratedAsyncRoot(e)}function invalidateMount(s){if(s)for(let e=0;e<s.length;e++)s[e].flags|=8}const ssrContextKey=Symbol.for("v-scx"),useSSRContext=()=>inject(ssrContextKey);function watch(s,e,t){return doWatch(s,e,t)}function doWatch(s,e,t=EMPTY_OBJ){const{immediate:n,deep:o,flush:a,once:r}=t,l=extend({},t),c=e&&n||!e&&a!=="post";let u;if(isInSSRComponentSetup){if(a==="sync"){const _=useSSRContext();u=_.__watcherHandles||(_.__watcherHandles=[])}else if(!c){const _=()=>{};return _.stop=NOOP,_.resume=NOOP,_.pause=NOOP,_}}const d=currentInstance;l.call=(_,b,B)=>callWithAsyncErrorHandling(_,d,b,B);let f=!1;a==="post"?l.scheduler=_=>{queuePostRenderEffect(_,d&&d.suspense)}:a!=="sync"&&(f=!0,l.scheduler=(_,b)=>{b?_():queueJob(_)}),l.augmentJob=_=>{e&&(_.flags|=4),f&&(_.flags|=2,d&&(_.id=d.uid,_.i=d))};const g=watch$1(s,e,l);return isInSSRComponentSetup&&(u?u.push(g):c&&g()),g}function instanceWatch(s,e,t){const n=this.proxy,o=isString(s)?s.includes(".")?createPathGetter(n,s):()=>n[s]:s.bind(n,n);let a;isFunction(e)?a=e:(a=e.handler,t=e);const r=setCurrentInstance(this),l=doWatch(o,a.bind(n),t);return r(),l}function createPathGetter(s,e){const t=e.split(".");return()=>{let n=s;for(let o=0;o<t.length&&n;o++)n=n[t[o]];return n}}const getModelModifiers=(s,e)=>e==="modelValue"||e==="model-value"?s.modelModifiers:s[`${e}Modifiers`]||s[`${camelize(e)}Modifiers`]||s[`${hyphenate(e)}Modifiers`];function emit(s,e,...t){if(s.isUnmounted)return;const n=s.vnode.props||EMPTY_OBJ;let o=t;const a=e.startsWith("update:"),r=a&&getModelModifiers(n,e.slice(7));r&&(r.trim&&(o=t.map(d=>isString(d)?d.trim():d)),r.number&&(o=t.map(looseToNumber)));let l,c=n[l=toHandlerKey(e)]||n[l=toHandlerKey(camelize(e))];!c&&a&&(c=n[l=toHandlerKey(hyphenate(e))]),c&&callWithAsyncErrorHandling(c,s,6,o);const u=n[l+"Once"];if(u){if(!s.emitted)s.emitted={};else if(s.emitted[l])return;s.emitted[l]=!0,callWithAsyncErrorHandling(u,s,6,o)}}function normalizeEmitsOptions(s,e,t=!1){const n=e.emitsCache,o=n.get(s);if(o!==void 0)return o;const a=s.emits;let r={},l=!1;if(!isFunction(s)){const c=u=>{const d=normalizeEmitsOptions(u,e,!0);d&&(l=!0,extend(r,d))};!t&&e.mixins.length&&e.mixins.forEach(c),s.extends&&c(s.extends),s.mixins&&s.mixins.forEach(c)}return!a&&!l?(isObject(s)&&n.set(s,null),null):(isArray$1(a)?a.forEach(c=>r[c]=null):extend(r,a),isObject(s)&&n.set(s,r),r)}function isEmitListener(s,e){return!s||!isOn(e)?!1:(e=e.slice(2).replace(/Once$/,""),hasOwn(s,e[0].toLowerCase()+e.slice(1))||hasOwn(s,hyphenate(e))||hasOwn(s,e))}function markAttrsAccessed(){}function renderComponentRoot(s){const{type:e,vnode:t,proxy:n,withProxy:o,propsOptions:[a],slots:r,attrs:l,emit:c,render:u,renderCache:d,props:f,data:g,setupState:_,ctx:b,inheritAttrs:B}=s,I=setCurrentRenderingInstance(s);let C,R;try{if(t.shapeFlag&4){const F=o||n,N=F;C=normalizeVNode(u.call(N,F,d,f,_,g,b)),R=l}else{const F=e;C=normalizeVNode(F.length>1?F(f,{attrs:l,slots:r,emit:c}):F(f,null)),R=e.props?l:getFunctionalFallthrough(l)}}catch(F){blockStack.length=0,handleError(F,s,1),C=createVNode(Comment)}let L=C;if(R&&B!==!1){const F=Object.keys(R),{shapeFlag:N}=L;F.length&&N&7&&(a&&F.some(isModelListener)&&(R=filterModelListeners(R,a)),L=cloneVNode(L,R,!1,!0))}return t.dirs&&(L=cloneVNode(L,null,!1,!0),L.dirs=L.dirs?L.dirs.concat(t.dirs):t.dirs),t.transition&&setTransitionHooks(L,t.transition),C=L,setCurrentRenderingInstance(I),C}const getFunctionalFallthrough=s=>{let e;for(const t in s)(t==="class"||t==="style"||isOn(t))&&((e||(e={}))[t]=s[t]);return e},filterModelListeners=(s,e)=>{const t={};for(const n in s)(!isModelListener(n)||!(n.slice(9)in e))&&(t[n]=s[n]);return t};function shouldUpdateComponent(s,e,t){const{props:n,children:o,component:a}=s,{props:r,children:l,patchFlag:c}=e,u=a.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&c>=0){if(c&1024)return!0;if(c&16)return n?hasPropsChanged(n,r,u):!!r;if(c&8){const d=e.dynamicProps;for(let f=0;f<d.length;f++){const g=d[f];if(r[g]!==n[g]&&!isEmitListener(u,g))return!0}}}else return(o||l)&&(!l||!l.$stable)?!0:n===r?!1:n?r?hasPropsChanged(n,r,u):!0:!!r;return!1}function hasPropsChanged(s,e,t){const n=Object.keys(e);if(n.length!==Object.keys(s).length)return!0;for(let o=0;o<n.length;o++){const a=n[o];if(e[a]!==s[a]&&!isEmitListener(t,a))return!0}return!1}function updateHOCHostEl({vnode:s,parent:e},t){for(;e;){const n=e.subTree;if(n.suspense&&n.suspense.activeBranch===s&&(n.el=s.el),n===s)(s=e.vnode).el=t,e=e.parent;else break}}const isSuspense=s=>s.__isSuspense;function queueEffectWithSuspense(s,e){e&&e.pendingBranch?isArray$1(s)?e.effects.push(...s):e.effects.push(s):queuePostFlushCb(s)}const Fragment=Symbol.for("v-fgt"),Text=Symbol.for("v-txt"),Comment=Symbol.for("v-cmt"),Static=Symbol.for("v-stc"),blockStack=[];let currentBlock=null;function openBlock(s=!1){blockStack.push(currentBlock=s?null:[])}function closeBlock(){blockStack.pop(),currentBlock=blockStack[blockStack.length-1]||null}let isBlockTreeEnabled=1;function setBlockTracking(s,e=!1){isBlockTreeEnabled+=s,s<0&&currentBlock&&e&&(currentBlock.hasOnce=!0)}function setupBlock(s){return s.dynamicChildren=isBlockTreeEnabled>0?currentBlock||EMPTY_ARR:null,closeBlock(),isBlockTreeEnabled>0&&currentBlock&&currentBlock.push(s),s}function createElementBlock(s,e,t,n,o,a){return setupBlock(createBaseVNode(s,e,t,n,o,a,!0))}function createBlock(s,e,t,n,o){return setupBlock(createVNode(s,e,t,n,o,!0))}function isVNode(s){return s?s.__v_isVNode===!0:!1}function isSameVNodeType(s,e){return s.type===e.type&&s.key===e.key}const normalizeKey=({key:s})=>s??null,normalizeRef=({ref:s,ref_key:e,ref_for:t})=>(typeof s=="number"&&(s=""+s),s!=null?isString(s)||isRef(s)||isFunction(s)?{i:currentRenderingInstance,r:s,k:e,f:!!t}:s:null);function createBaseVNode(s,e=null,t=null,n=0,o=null,a=s===Fragment?0:1,r=!1,l=!1){const c={__v_isVNode:!0,__v_skip:!0,type:s,props:e,key:e&&normalizeKey(e),ref:e&&normalizeRef(e),scopeId:currentScopeId,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:a,patchFlag:n,dynamicProps:o,dynamicChildren:null,appContext:null,ctx:currentRenderingInstance};return l?(normalizeChildren(c,t),a&128&&s.normalize(c)):t&&(c.shapeFlag|=isString(t)?8:16),isBlockTreeEnabled>0&&!r&&currentBlock&&(c.patchFlag>0||a&6)&&c.patchFlag!==32&&currentBlock.push(c),c}const createVNode=_createVNode;function _createVNode(s,e=null,t=null,n=0,o=null,a=!1){if((!s||s===NULL_DYNAMIC_COMPONENT)&&(s=Comment),isVNode(s)){const l=cloneVNode(s,e,!0);return t&&normalizeChildren(l,t),isBlockTreeEnabled>0&&!a&&currentBlock&&(l.shapeFlag&6?currentBlock[currentBlock.indexOf(s)]=l:currentBlock.push(l)),l.patchFlag=-2,l}if(isClassComponent(s)&&(s=s.__vccOpts),e){e=guardReactiveProps(e);let{class:l,style:c}=e;l&&!isString(l)&&(e.class=normalizeClass(l)),isObject(c)&&(isProxy(c)&&!isArray$1(c)&&(c=extend({},c)),e.style=normalizeStyle(c))}const r=isString(s)?1:isSuspense(s)?128:isTeleport(s)?64:isObject(s)?4:isFunction(s)?2:0;return createBaseVNode(s,e,t,n,o,r,a,!0)}function guardReactiveProps(s){return s?isProxy(s)||isInternalObject(s)?extend({},s):s:null}function cloneVNode(s,e,t=!1,n=!1){const{props:o,ref:a,patchFlag:r,children:l,transition:c}=s,u=e?mergeProps(o||{},e):o,d={__v_isVNode:!0,__v_skip:!0,type:s.type,props:u,key:u&&normalizeKey(u),ref:e&&e.ref?t&&a?isArray$1(a)?a.concat(normalizeRef(e)):[a,normalizeRef(e)]:normalizeRef(e):a,scopeId:s.scopeId,slotScopeIds:s.slotScopeIds,children:l,target:s.target,targetStart:s.targetStart,targetAnchor:s.targetAnchor,staticCount:s.staticCount,shapeFlag:s.shapeFlag,patchFlag:e&&s.type!==Fragment?r===-1?16:r|16:r,dynamicProps:s.dynamicProps,dynamicChildren:s.dynamicChildren,appContext:s.appContext,dirs:s.dirs,transition:c,component:s.component,suspense:s.suspense,ssContent:s.ssContent&&cloneVNode(s.ssContent),ssFallback:s.ssFallback&&cloneVNode(s.ssFallback),el:s.el,anchor:s.anchor,ctx:s.ctx,ce:s.ce};return c&&n&&setTransitionHooks(d,c.clone(d)),d}function createTextVNode(s=" ",e=0){return createVNode(Text,null,s,e)}function createStaticVNode(s,e){const t=createVNode(Static,null,s);return t.staticCount=e,t}function createCommentVNode(s="",e=!1){return e?(openBlock(),createBlock(Comment,null,s)):createVNode(Comment,null,s)}function normalizeVNode(s){return s==null||typeof s=="boolean"?createVNode(Comment):isArray$1(s)?createVNode(Fragment,null,s.slice()):isVNode(s)?cloneIfMounted(s):createVNode(Text,null,String(s))}function cloneIfMounted(s){return s.el===null&&s.patchFlag!==-1||s.memo?s:cloneVNode(s)}function normalizeChildren(s,e){let t=0;const{shapeFlag:n}=s;if(e==null)e=null;else if(isArray$1(e))t=16;else if(typeof e=="object")if(n&65){const o=e.default;o&&(o._c&&(o._d=!1),normalizeChildren(s,o()),o._c&&(o._d=!0));return}else{t=32;const o=e._;!o&&!isInternalObject(e)?e._ctx=currentRenderingInstance:o===3&&currentRenderingInstance&&(currentRenderingInstance.slots._===1?e._=1:(e._=2,s.patchFlag|=1024))}else isFunction(e)?(e={default:e,_ctx:currentRenderingInstance},t=32):(e=String(e),n&64?(t=16,e=[createTextVNode(e)]):t=8);s.children=e,s.shapeFlag|=t}function mergeProps(...s){const e={};for(let t=0;t<s.length;t++){const n=s[t];for(const o in n)if(o==="class")e.class!==n.class&&(e.class=normalizeClass([e.class,n.class]));else if(o==="style")e.style=normalizeStyle([e.style,n.style]);else if(isOn(o)){const a=e[o],r=n[o];r&&a!==r&&!(isArray$1(a)&&a.includes(r))&&(e[o]=a?[].concat(a,r):r)}else o!==""&&(e[o]=n[o])}return e}function invokeVNodeHook(s,e,t,n=null){callWithAsyncErrorHandling(s,e,7,[t,n])}const emptyAppContext=createAppContext();let uid=0;function createComponentInstance(s,e,t){const n=s.type,o=(e?e.appContext:s.appContext)||emptyAppContext,a={uid:uid++,vnode:s,type:n,parent:e,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(o.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:normalizePropsOptions(n,o),emitsOptions:normalizeEmitsOptions(n,o),emit:null,emitted:null,propsDefaults:EMPTY_OBJ,inheritAttrs:n.inheritAttrs,ctx:EMPTY_OBJ,data:EMPTY_OBJ,props:EMPTY_OBJ,attrs:EMPTY_OBJ,slots:EMPTY_OBJ,refs:EMPTY_OBJ,setupState:EMPTY_OBJ,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return a.ctx={_:a},a.root=e?e.root:a,a.emit=emit.bind(null,a),s.ce&&s.ce(a),a}let currentInstance=null,internalSetCurrentInstance,setInSSRSetupState;{const s=getGlobalThis(),e=(t,n)=>{let o;return(o=s[t])||(o=s[t]=[]),o.push(n),a=>{o.length>1?o.forEach(r=>r(a)):o[0](a)}};internalSetCurrentInstance=e("__VUE_INSTANCE_SETTERS__",t=>currentInstance=t),setInSSRSetupState=e("__VUE_SSR_SETTERS__",t=>isInSSRComponentSetup=t)}const setCurrentInstance=s=>{const e=currentInstance;return internalSetCurrentInstance(s),s.scope.on(),()=>{s.scope.off(),internalSetCurrentInstance(e)}},unsetCurrentInstance=()=>{currentInstance&&currentInstance.scope.off(),internalSetCurrentInstance(null)};function isStatefulComponent(s){return s.vnode.shapeFlag&4}let isInSSRComponentSetup=!1;function setupComponent(s,e=!1,t=!1){e&&setInSSRSetupState(e);const{props:n,children:o}=s.vnode,a=isStatefulComponent(s);initProps(s,n,a,e),initSlots(s,o,t||e);const r=a?setupStatefulComponent(s,e):void 0;return e&&setInSSRSetupState(!1),r}function setupStatefulComponent(s,e){const t=s.type;s.accessCache=Object.create(null),s.proxy=new Proxy(s.ctx,PublicInstanceProxyHandlers);const{setup:n}=t;if(n){pauseTracking();const o=s.setupContext=n.length>1?createSetupContext(s):null,a=setCurrentInstance(s),r=callWithErrorHandling(n,s,0,[s.props,o]),l=isPromise(r);if(resetTracking(),a(),(l||s.sp)&&!isAsyncWrapper(s)&&markAsyncBoundary(s),l){if(r.then(unsetCurrentInstance,unsetCurrentInstance),e)return r.then(c=>{handleSetupResult(s,c)}).catch(c=>{handleError(c,s,0)});s.asyncDep=r}else handleSetupResult(s,r)}else finishComponentSetup(s)}function handleSetupResult(s,e,t){isFunction(e)?s.type.__ssrInlineRender?s.ssrRender=e:s.render=e:isObject(e)&&(s.setupState=proxyRefs(e)),finishComponentSetup(s)}function finishComponentSetup(s,e,t){const n=s.type;s.render||(s.render=n.render||NOOP);{const o=setCurrentInstance(s);pauseTracking();try{applyOptions(s)}finally{resetTracking(),o()}}}const attrsProxyHandlers={get(s,e){return track(s,"get",""),s[e]}};function createSetupContext(s){const e=t=>{s.exposed=t||{}};return{attrs:new Proxy(s.attrs,attrsProxyHandlers),slots:s.slots,emit:s.emit,expose:e}}function getComponentPublicInstance(s){return s.exposed?s.exposeProxy||(s.exposeProxy=new Proxy(proxyRefs(markRaw(s.exposed)),{get(e,t){if(t in e)return e[t];if(t in publicPropertiesMap)return publicPropertiesMap[t](s)},has(e,t){return t in e||t in publicPropertiesMap}})):s.proxy}const classifyRE=/(?:^|[-_])(\w)/g,classify=s=>s.replace(classifyRE,e=>e.toUpperCase()).replace(/[-_]/g,"");function getComponentName(s,e=!0){return isFunction(s)?s.displayName||s.name:s.name||e&&s.__name}function formatComponentName(s,e,t=!1){let n=getComponentName(e);if(!n&&e.__file){const o=e.__file.match(/([^/\\]+)\.\w+$/);o&&(n=o[1])}if(!n&&s&&s.parent){const o=a=>{for(const r in a)if(a[r]===e)return r};n=o(s.components||s.parent.type.components)||o(s.appContext.components)}return n?classify(n):t?"App":"Anonymous"}function isClassComponent(s){return isFunction(s)&&"__vccOpts"in s}const computed=(s,e)=>computed$1(s,e,isInSSRComponentSetup);function h(s,e,t){const n=arguments.length;return n===2?isObject(e)&&!isArray$1(e)?isVNode(e)?createVNode(s,null,[e]):createVNode(s,e):createVNode(s,null,e):(n>3?t=Array.prototype.slice.call(arguments,2):n===3&&isVNode(t)&&(t=[t]),createVNode(s,e,t))}const version="3.5.17";/**
* @vue/runtime-dom v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let policy;const tt=typeof window<"u"&&window.trustedTypes;if(tt)try{policy=tt.createPolicy("vue",{createHTML:s=>s})}catch{}const unsafeToTrustedHTML=policy?s=>policy.createHTML(s):s=>s,svgNS="http://www.w3.org/2000/svg",mathmlNS="http://www.w3.org/1998/Math/MathML",doc=typeof document<"u"?document:null,templateContainer=doc&&doc.createElement("template"),nodeOps={insert:(s,e,t)=>{e.insertBefore(s,t||null)},remove:s=>{const e=s.parentNode;e&&e.removeChild(s)},createElement:(s,e,t,n)=>{const o=e==="svg"?doc.createElementNS(svgNS,s):e==="mathml"?doc.createElementNS(mathmlNS,s):t?doc.createElement(s,{is:t}):doc.createElement(s);return s==="select"&&n&&n.multiple!=null&&o.setAttribute("multiple",n.multiple),o},createText:s=>doc.createTextNode(s),createComment:s=>doc.createComment(s),setText:(s,e)=>{s.nodeValue=e},setElementText:(s,e)=>{s.textContent=e},parentNode:s=>s.parentNode,nextSibling:s=>s.nextSibling,querySelector:s=>doc.querySelector(s),setScopeId(s,e){s.setAttribute(e,"")},insertStaticContent(s,e,t,n,o,a){const r=t?t.previousSibling:e.lastChild;if(o&&(o===a||o.nextSibling))for(;e.insertBefore(o.cloneNode(!0),t),!(o===a||!(o=o.nextSibling)););else{templateContainer.innerHTML=unsafeToTrustedHTML(n==="svg"?`<svg>${s}</svg>`:n==="mathml"?`<math>${s}</math>`:s);const l=templateContainer.content;if(n==="svg"||n==="mathml"){const c=l.firstChild;for(;c.firstChild;)l.appendChild(c.firstChild);l.removeChild(c)}e.insertBefore(l,t)}return[r?r.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},vtcKey=Symbol("_vtc");function patchClass(s,e,t){const n=s[vtcKey];n&&(e=(e?[e,...n]:[...n]).join(" ")),e==null?s.removeAttribute("class"):t?s.setAttribute("class",e):s.className=e}const vShowOriginalDisplay=Symbol("_vod"),vShowHidden=Symbol("_vsh"),CSS_VAR_TEXT=Symbol(""),displayRE=/(^|;)\s*display\s*:/;function patchStyle(s,e,t){const n=s.style,o=isString(t);let a=!1;if(t&&!o){if(e)if(isString(e))for(const r of e.split(";")){const l=r.slice(0,r.indexOf(":")).trim();t[l]==null&&setStyle(n,l,"")}else for(const r in e)t[r]==null&&setStyle(n,r,"");for(const r in t)r==="display"&&(a=!0),setStyle(n,r,t[r])}else if(o){if(e!==t){const r=n[CSS_VAR_TEXT];r&&(t+=";"+r),n.cssText=t,a=displayRE.test(t)}}else e&&s.removeAttribute("style");vShowOriginalDisplay in s&&(s[vShowOriginalDisplay]=a?n.display:"",s[vShowHidden]&&(n.display="none"))}const importantRE=/\s*!important$/;function setStyle(s,e,t){if(isArray$1(t))t.forEach(n=>setStyle(s,e,n));else if(t==null&&(t=""),e.startsWith("--"))s.setProperty(e,t);else{const n=autoPrefix(s,e);importantRE.test(t)?s.setProperty(hyphenate(n),t.replace(importantRE,""),"important"):s[n]=t}}const prefixes=["Webkit","Moz","ms"],prefixCache={};function autoPrefix(s,e){const t=prefixCache[e];if(t)return t;let n=camelize(e);if(n!=="filter"&&n in s)return prefixCache[e]=n;n=capitalize(n);for(let o=0;o<prefixes.length;o++){const a=prefixes[o]+n;if(a in s)return prefixCache[e]=a}return e}const xlinkNS="http://www.w3.org/1999/xlink";function patchAttr(s,e,t,n,o,a=isSpecialBooleanAttr(e)){n&&e.startsWith("xlink:")?t==null?s.removeAttributeNS(xlinkNS,e.slice(6,e.length)):s.setAttributeNS(xlinkNS,e,t):t==null||a&&!includeBooleanAttr(t)?s.removeAttribute(e):s.setAttribute(e,a?"":isSymbol(t)?String(t):t)}function patchDOMProp(s,e,t,n,o){if(e==="innerHTML"||e==="textContent"){t!=null&&(s[e]=e==="innerHTML"?unsafeToTrustedHTML(t):t);return}const a=s.tagName;if(e==="value"&&a!=="PROGRESS"&&!a.includes("-")){const l=a==="OPTION"?s.getAttribute("value")||"":s.value,c=t==null?s.type==="checkbox"?"on":"":String(t);(l!==c||!("_value"in s))&&(s.value=c),t==null&&s.removeAttribute(e),s._value=t;return}let r=!1;if(t===""||t==null){const l=typeof s[e];l==="boolean"?t=includeBooleanAttr(t):t==null&&l==="string"?(t="",r=!0):l==="number"&&(t=0,r=!0)}try{s[e]=t}catch{}r&&s.removeAttribute(o||e)}function addEventListener(s,e,t,n){s.addEventListener(e,t,n)}function removeEventListener(s,e,t,n){s.removeEventListener(e,t,n)}const veiKey=Symbol("_vei");function patchEvent(s,e,t,n,o=null){const a=s[veiKey]||(s[veiKey]={}),r=a[e];if(n&&r)r.value=n;else{const[l,c]=parseName(e);if(n){const u=a[e]=createInvoker(n,o);addEventListener(s,l,u,c)}else r&&(removeEventListener(s,l,r,c),a[e]=void 0)}}const optionsModifierRE=/(?:Once|Passive|Capture)$/;function parseName(s){let e;if(optionsModifierRE.test(s)){e={};let n;for(;n=s.match(optionsModifierRE);)s=s.slice(0,s.length-n[0].length),e[n[0].toLowerCase()]=!0}return[s[2]===":"?s.slice(3):hyphenate(s.slice(2)),e]}let cachedNow=0;const p=Promise.resolve(),getNow=()=>cachedNow||(p.then(()=>cachedNow=0),cachedNow=Date.now());function createInvoker(s,e){const t=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=t.attached)return;callWithAsyncErrorHandling(patchStopImmediatePropagation(n,t.value),e,5,[n])};return t.value=s,t.attached=getNow(),t}function patchStopImmediatePropagation(s,e){if(isArray$1(e)){const t=s.stopImmediatePropagation;return s.stopImmediatePropagation=()=>{t.call(s),s._stopped=!0},e.map(n=>o=>!o._stopped&&n&&n(o))}else return e}const isNativeOn=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&s.charCodeAt(2)>96&&s.charCodeAt(2)<123,patchProp=(s,e,t,n,o,a)=>{const r=o==="svg";e==="class"?patchClass(s,n,r):e==="style"?patchStyle(s,t,n):isOn(e)?isModelListener(e)||patchEvent(s,e,t,n,a):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):shouldSetAsProp(s,e,n,r))?(patchDOMProp(s,e,n),!s.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&patchAttr(s,e,n,r,a,e!=="value")):s._isVueCE&&(/[A-Z]/.test(e)||!isString(n))?patchDOMProp(s,camelize(e),n,a,e):(e==="true-value"?s._trueValue=n:e==="false-value"&&(s._falseValue=n),patchAttr(s,e,n,r))};function shouldSetAsProp(s,e,t,n){if(n)return!!(e==="innerHTML"||e==="textContent"||e in s&&isNativeOn(e)&&isFunction(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="autocorrect"||e==="form"||e==="list"&&s.tagName==="INPUT"||e==="type"&&s.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const o=s.tagName;if(o==="IMG"||o==="VIDEO"||o==="CANVAS"||o==="SOURCE")return!1}return isNativeOn(e)&&isString(t)?!1:e in s}const rendererOptions=extend({patchProp},nodeOps);let renderer$1;function ensureRenderer(){return renderer$1||(renderer$1=createRenderer(rendererOptions))}const createApp=(...s)=>{const e=ensureRenderer().createApp(...s),{mount:t}=e;return e.mount=n=>{const o=normalizeContainer(n);if(!o)return;const a=e._component;!isFunction(a)&&!a.render&&!a.template&&(a.template=o.innerHTML),o.nodeType===1&&(o.textContent="");const r=t(o,!1,resolveRootNamespace(o));return o instanceof Element&&(o.removeAttribute("v-cloak"),o.setAttribute("data-v-app","")),r},e};function resolveRootNamespace(s){if(s instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&s instanceof MathMLElement)return"mathml"}function normalizeContainer(s){return isString(s)?document.querySelector(s):s}const _export_sfc=(s,e)=>{const t=s.__vccOpts||s;for(const[n,o]of e)t[n]=o;return t},_hoisted_1$5={id:"app"},_sfc_main$5={__name:"App",setup(s){return(e,t)=>{const n=resolveComponent("router-view");return openBlock(),createElementBlock("div",_hoisted_1$5,[createVNode(n)])}}},App=_export_sfc(_sfc_main$5,[["__scopeId","data-v-7a165aa5"]]);/*!
  * vue-router v4.5.1
  * (c) 2025 Eduardo San Martin Morote
  * @license MIT
  */const isBrowser=typeof document<"u";function isRouteComponent(s){return typeof s=="object"||"displayName"in s||"props"in s||"__vccOpts"in s}function isESModule(s){return s.__esModule||s[Symbol.toStringTag]==="Module"||s.default&&isRouteComponent(s.default)}const assign=Object.assign;function applyToParams(s,e){const t={};for(const n in e){const o=e[n];t[n]=isArray(o)?o.map(s):s(o)}return t}const noop=()=>{},isArray=Array.isArray,HASH_RE=/#/g,AMPERSAND_RE=/&/g,SLASH_RE=/\//g,EQUAL_RE=/=/g,IM_RE=/\?/g,PLUS_RE=/\+/g,ENC_BRACKET_OPEN_RE=/%5B/g,ENC_BRACKET_CLOSE_RE=/%5D/g,ENC_CARET_RE=/%5E/g,ENC_BACKTICK_RE=/%60/g,ENC_CURLY_OPEN_RE=/%7B/g,ENC_PIPE_RE=/%7C/g,ENC_CURLY_CLOSE_RE=/%7D/g,ENC_SPACE_RE=/%20/g;function commonEncode(s){return encodeURI(""+s).replace(ENC_PIPE_RE,"|").replace(ENC_BRACKET_OPEN_RE,"[").replace(ENC_BRACKET_CLOSE_RE,"]")}function encodeHash(s){return commonEncode(s).replace(ENC_CURLY_OPEN_RE,"{").replace(ENC_CURLY_CLOSE_RE,"}").replace(ENC_CARET_RE,"^")}function encodeQueryValue(s){return commonEncode(s).replace(PLUS_RE,"%2B").replace(ENC_SPACE_RE,"+").replace(HASH_RE,"%23").replace(AMPERSAND_RE,"%26").replace(ENC_BACKTICK_RE,"`").replace(ENC_CURLY_OPEN_RE,"{").replace(ENC_CURLY_CLOSE_RE,"}").replace(ENC_CARET_RE,"^")}function encodeQueryKey(s){return encodeQueryValue(s).replace(EQUAL_RE,"%3D")}function encodePath(s){return commonEncode(s).replace(HASH_RE,"%23").replace(IM_RE,"%3F")}function encodeParam(s){return s==null?"":encodePath(s).replace(SLASH_RE,"%2F")}function decode(s){try{return decodeURIComponent(""+s)}catch{}return""+s}const TRAILING_SLASH_RE=/\/$/,removeTrailingSlash=s=>s.replace(TRAILING_SLASH_RE,"");function parseURL(s,e,t="/"){let n,o={},a="",r="";const l=e.indexOf("#");let c=e.indexOf("?");return l<c&&l>=0&&(c=-1),c>-1&&(n=e.slice(0,c),a=e.slice(c+1,l>-1?l:e.length),o=s(a)),l>-1&&(n=n||e.slice(0,l),r=e.slice(l,e.length)),n=resolveRelativePath(n??e,t),{fullPath:n+(a&&"?")+a+r,path:n,query:o,hash:decode(r)}}function stringifyURL(s,e){const t=e.query?s(e.query):"";return e.path+(t&&"?")+t+(e.hash||"")}function stripBase(s,e){return!e||!s.toLowerCase().startsWith(e.toLowerCase())?s:s.slice(e.length)||"/"}function isSameRouteLocation(s,e,t){const n=e.matched.length-1,o=t.matched.length-1;return n>-1&&n===o&&isSameRouteRecord(e.matched[n],t.matched[o])&&isSameRouteLocationParams(e.params,t.params)&&s(e.query)===s(t.query)&&e.hash===t.hash}function isSameRouteRecord(s,e){return(s.aliasOf||s)===(e.aliasOf||e)}function isSameRouteLocationParams(s,e){if(Object.keys(s).length!==Object.keys(e).length)return!1;for(const t in s)if(!isSameRouteLocationParamsValue(s[t],e[t]))return!1;return!0}function isSameRouteLocationParamsValue(s,e){return isArray(s)?isEquivalentArray(s,e):isArray(e)?isEquivalentArray(e,s):s===e}function isEquivalentArray(s,e){return isArray(e)?s.length===e.length&&s.every((t,n)=>t===e[n]):s.length===1&&s[0]===e}function resolveRelativePath(s,e){if(s.startsWith("/"))return s;if(!s)return e;const t=e.split("/"),n=s.split("/"),o=n[n.length-1];(o===".."||o===".")&&n.push("");let a=t.length-1,r,l;for(r=0;r<n.length;r++)if(l=n[r],l!==".")if(l==="..")a>1&&a--;else break;return t.slice(0,a).join("/")+"/"+n.slice(r).join("/")}const START_LOCATION_NORMALIZED={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var NavigationType;(function(s){s.pop="pop",s.push="push"})(NavigationType||(NavigationType={}));var NavigationDirection;(function(s){s.back="back",s.forward="forward",s.unknown=""})(NavigationDirection||(NavigationDirection={}));function normalizeBase(s){if(!s)if(isBrowser){const e=document.querySelector("base");s=e&&e.getAttribute("href")||"/",s=s.replace(/^\w+:\/\/[^\/]+/,"")}else s="/";return s[0]!=="/"&&s[0]!=="#"&&(s="/"+s),removeTrailingSlash(s)}const BEFORE_HASH_RE=/^[^#]+#/;function createHref(s,e){return s.replace(BEFORE_HASH_RE,"#")+e}function getElementPosition(s,e){const t=document.documentElement.getBoundingClientRect(),n=s.getBoundingClientRect();return{behavior:e.behavior,left:n.left-t.left-(e.left||0),top:n.top-t.top-(e.top||0)}}const computeScrollPosition=()=>({left:window.scrollX,top:window.scrollY});function scrollToPosition(s){let e;if("el"in s){const t=s.el,n=typeof t=="string"&&t.startsWith("#"),o=typeof t=="string"?n?document.getElementById(t.slice(1)):document.querySelector(t):t;if(!o)return;e=getElementPosition(o,s)}else e=s;"scrollBehavior"in document.documentElement.style?window.scrollTo(e):window.scrollTo(e.left!=null?e.left:window.scrollX,e.top!=null?e.top:window.scrollY)}function getScrollKey(s,e){return(history.state?history.state.position-e:-1)+s}const scrollPositions=new Map;function saveScrollPosition(s,e){scrollPositions.set(s,e)}function getSavedScrollPosition(s){const e=scrollPositions.get(s);return scrollPositions.delete(s),e}let createBaseLocation=()=>location.protocol+"//"+location.host;function createCurrentLocation(s,e){const{pathname:t,search:n,hash:o}=e,a=s.indexOf("#");if(a>-1){let l=o.includes(s.slice(a))?s.slice(a).length:1,c=o.slice(l);return c[0]!=="/"&&(c="/"+c),stripBase(c,"")}return stripBase(t,s)+n+o}function useHistoryListeners(s,e,t,n){let o=[],a=[],r=null;const l=({state:g})=>{const _=createCurrentLocation(s,location),b=t.value,B=e.value;let I=0;if(g){if(t.value=_,e.value=g,r&&r===b){r=null;return}I=B?g.position-B.position:0}else n(_);o.forEach(C=>{C(t.value,b,{delta:I,type:NavigationType.pop,direction:I?I>0?NavigationDirection.forward:NavigationDirection.back:NavigationDirection.unknown})})};function c(){r=t.value}function u(g){o.push(g);const _=()=>{const b=o.indexOf(g);b>-1&&o.splice(b,1)};return a.push(_),_}function d(){const{history:g}=window;g.state&&g.replaceState(assign({},g.state,{scroll:computeScrollPosition()}),"")}function f(){for(const g of a)g();a=[],window.removeEventListener("popstate",l),window.removeEventListener("beforeunload",d)}return window.addEventListener("popstate",l),window.addEventListener("beforeunload",d,{passive:!0}),{pauseListeners:c,listen:u,destroy:f}}function buildState(s,e,t,n=!1,o=!1){return{back:s,current:e,forward:t,replaced:n,position:window.history.length,scroll:o?computeScrollPosition():null}}function useHistoryStateNavigation(s){const{history:e,location:t}=window,n={value:createCurrentLocation(s,t)},o={value:e.state};o.value||a(n.value,{back:null,current:n.value,forward:null,position:e.length-1,replaced:!0,scroll:null},!0);function a(c,u,d){const f=s.indexOf("#"),g=f>-1?(t.host&&document.querySelector("base")?s:s.slice(f))+c:createBaseLocation()+s+c;try{e[d?"replaceState":"pushState"](u,"",g),o.value=u}catch(_){console.error(_),t[d?"replace":"assign"](g)}}function r(c,u){const d=assign({},e.state,buildState(o.value.back,c,o.value.forward,!0),u,{position:o.value.position});a(c,d,!0),n.value=c}function l(c,u){const d=assign({},o.value,e.state,{forward:c,scroll:computeScrollPosition()});a(d.current,d,!0);const f=assign({},buildState(n.value,c,null),{position:d.position+1},u);a(c,f,!1),n.value=c}return{location:n,state:o,push:l,replace:r}}function createWebHistory(s){s=normalizeBase(s);const e=useHistoryStateNavigation(s),t=useHistoryListeners(s,e.state,e.location,e.replace);function n(a,r=!0){r||t.pauseListeners(),history.go(a)}const o=assign({location:"",base:s,go:n,createHref:createHref.bind(null,s)},e,t);return Object.defineProperty(o,"location",{enumerable:!0,get:()=>e.location.value}),Object.defineProperty(o,"state",{enumerable:!0,get:()=>e.state.value}),o}function createWebHashHistory(s){return s=location.host?s||location.pathname+location.search:"",s.includes("#")||(s+="#"),createWebHistory(s)}function isRouteLocation(s){return typeof s=="string"||s&&typeof s=="object"}function isRouteName(s){return typeof s=="string"||typeof s=="symbol"}const NavigationFailureSymbol=Symbol("");var NavigationFailureType;(function(s){s[s.aborted=4]="aborted",s[s.cancelled=8]="cancelled",s[s.duplicated=16]="duplicated"})(NavigationFailureType||(NavigationFailureType={}));function createRouterError(s,e){return assign(new Error,{type:s,[NavigationFailureSymbol]:!0},e)}function isNavigationFailure(s,e){return s instanceof Error&&NavigationFailureSymbol in s&&(e==null||!!(s.type&e))}const BASE_PARAM_PATTERN="[^/]+?",BASE_PATH_PARSER_OPTIONS={sensitive:!1,strict:!1,start:!0,end:!0},REGEX_CHARS_RE=/[.+*?^${}()[\]/\\]/g;function tokensToParser(s,e){const t=assign({},BASE_PATH_PARSER_OPTIONS,e),n=[];let o=t.start?"^":"";const a=[];for(const u of s){const d=u.length?[]:[90];t.strict&&!u.length&&(o+="/");for(let f=0;f<u.length;f++){const g=u[f];let _=40+(t.sensitive?.25:0);if(g.type===0)f||(o+="/"),o+=g.value.replace(REGEX_CHARS_RE,"\\$&"),_+=40;else if(g.type===1){const{value:b,repeatable:B,optional:I,regexp:C}=g;a.push({name:b,repeatable:B,optional:I});const R=C||BASE_PARAM_PATTERN;if(R!==BASE_PARAM_PATTERN){_+=10;try{new RegExp(`(${R})`)}catch(F){throw new Error(`Invalid custom RegExp for param "${b}" (${R}): `+F.message)}}let L=B?`((?:${R})(?:/(?:${R}))*)`:`(${R})`;f||(L=I&&u.length<2?`(?:/${L})`:"/"+L),I&&(L+="?"),o+=L,_+=20,I&&(_+=-8),B&&(_+=-20),R===".*"&&(_+=-50)}d.push(_)}n.push(d)}if(t.strict&&t.end){const u=n.length-1;n[u][n[u].length-1]+=.7000000000000001}t.strict||(o+="/?"),t.end?o+="$":t.strict&&!o.endsWith("/")&&(o+="(?:/|$)");const r=new RegExp(o,t.sensitive?"":"i");function l(u){const d=u.match(r),f={};if(!d)return null;for(let g=1;g<d.length;g++){const _=d[g]||"",b=a[g-1];f[b.name]=_&&b.repeatable?_.split("/"):_}return f}function c(u){let d="",f=!1;for(const g of s){(!f||!d.endsWith("/"))&&(d+="/"),f=!1;for(const _ of g)if(_.type===0)d+=_.value;else if(_.type===1){const{value:b,repeatable:B,optional:I}=_,C=b in u?u[b]:"";if(isArray(C)&&!B)throw new Error(`Provided param "${b}" is an array but it is not repeatable (* or + modifiers)`);const R=isArray(C)?C.join("/"):C;if(!R)if(I)g.length<2&&(d.endsWith("/")?d=d.slice(0,-1):f=!0);else throw new Error(`Missing required param "${b}"`);d+=R}}return d||"/"}return{re:r,score:n,keys:a,parse:l,stringify:c}}function compareScoreArray(s,e){let t=0;for(;t<s.length&&t<e.length;){const n=e[t]-s[t];if(n)return n;t++}return s.length<e.length?s.length===1&&s[0]===80?-1:1:s.length>e.length?e.length===1&&e[0]===80?1:-1:0}function comparePathParserScore(s,e){let t=0;const n=s.score,o=e.score;for(;t<n.length&&t<o.length;){const a=compareScoreArray(n[t],o[t]);if(a)return a;t++}if(Math.abs(o.length-n.length)===1){if(isLastScoreNegative(n))return 1;if(isLastScoreNegative(o))return-1}return o.length-n.length}function isLastScoreNegative(s){const e=s[s.length-1];return s.length>0&&e[e.length-1]<0}const ROOT_TOKEN={type:0,value:""},VALID_PARAM_RE=/[a-zA-Z0-9_]/;function tokenizePath(s){if(!s)return[[]];if(s==="/")return[[ROOT_TOKEN]];if(!s.startsWith("/"))throw new Error(`Invalid path "${s}"`);function e(_){throw new Error(`ERR (${t})/"${u}": ${_}`)}let t=0,n=t;const o=[];let a;function r(){a&&o.push(a),a=[]}let l=0,c,u="",d="";function f(){u&&(t===0?a.push({type:0,value:u}):t===1||t===2||t===3?(a.length>1&&(c==="*"||c==="+")&&e(`A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`),a.push({type:1,value:u,regexp:d,repeatable:c==="*"||c==="+",optional:c==="*"||c==="?"})):e("Invalid state to consume buffer"),u="")}function g(){u+=c}for(;l<s.length;){if(c=s[l++],c==="\\"&&t!==2){n=t,t=4;continue}switch(t){case 0:c==="/"?(u&&f(),r()):c===":"?(f(),t=1):g();break;case 4:g(),t=n;break;case 1:c==="("?t=2:VALID_PARAM_RE.test(c)?g():(f(),t=0,c!=="*"&&c!=="?"&&c!=="+"&&l--);break;case 2:c===")"?d[d.length-1]=="\\"?d=d.slice(0,-1)+c:t=3:d+=c;break;case 3:f(),t=0,c!=="*"&&c!=="?"&&c!=="+"&&l--,d="";break;default:e("Unknown state");break}}return t===2&&e(`Unfinished custom RegExp for param "${u}"`),f(),r(),o}function createRouteRecordMatcher(s,e,t){const n=tokensToParser(tokenizePath(s.path),t),o=assign(n,{record:s,parent:e,children:[],alias:[]});return e&&!o.record.aliasOf==!e.record.aliasOf&&e.children.push(o),o}function createRouterMatcher(s,e){const t=[],n=new Map;e=mergeOptions({strict:!1,end:!0,sensitive:!1},e);function o(f){return n.get(f)}function a(f,g,_){const b=!_,B=normalizeRouteRecord(f);B.aliasOf=_&&_.record;const I=mergeOptions(e,f),C=[B];if("alias"in f){const F=typeof f.alias=="string"?[f.alias]:f.alias;for(const N of F)C.push(normalizeRouteRecord(assign({},B,{components:_?_.record.components:B.components,path:N,aliasOf:_?_.record:B})))}let R,L;for(const F of C){const{path:N}=F;if(g&&N[0]!=="/"){const k=g.record.path,Q=k[k.length-1]==="/"?"":"/";F.path=g.record.path+(N&&Q+N)}if(R=createRouteRecordMatcher(F,g,I),_?_.alias.push(R):(L=L||R,L!==R&&L.alias.push(R),b&&f.name&&!isAliasRecord(R)&&r(f.name)),isMatchable(R)&&c(R),B.children){const k=B.children;for(let Q=0;Q<k.length;Q++)a(k[Q],R,_&&_.children[Q])}_=_||R}return L?()=>{r(L)}:noop}function r(f){if(isRouteName(f)){const g=n.get(f);g&&(n.delete(f),t.splice(t.indexOf(g),1),g.children.forEach(r),g.alias.forEach(r))}else{const g=t.indexOf(f);g>-1&&(t.splice(g,1),f.record.name&&n.delete(f.record.name),f.children.forEach(r),f.alias.forEach(r))}}function l(){return t}function c(f){const g=findInsertionIndex(f,t);t.splice(g,0,f),f.record.name&&!isAliasRecord(f)&&n.set(f.record.name,f)}function u(f,g){let _,b={},B,I;if("name"in f&&f.name){if(_=n.get(f.name),!_)throw createRouterError(1,{location:f});I=_.record.name,b=assign(paramsFromLocation(g.params,_.keys.filter(L=>!L.optional).concat(_.parent?_.parent.keys.filter(L=>L.optional):[]).map(L=>L.name)),f.params&&paramsFromLocation(f.params,_.keys.map(L=>L.name))),B=_.stringify(b)}else if(f.path!=null)B=f.path,_=t.find(L=>L.re.test(B)),_&&(b=_.parse(B),I=_.record.name);else{if(_=g.name?n.get(g.name):t.find(L=>L.re.test(g.path)),!_)throw createRouterError(1,{location:f,currentLocation:g});I=_.record.name,b=assign({},g.params,f.params),B=_.stringify(b)}const C=[];let R=_;for(;R;)C.unshift(R.record),R=R.parent;return{name:I,path:B,params:b,matched:C,meta:mergeMetaFields(C)}}s.forEach(f=>a(f));function d(){t.length=0,n.clear()}return{addRoute:a,resolve:u,removeRoute:r,clearRoutes:d,getRoutes:l,getRecordMatcher:o}}function paramsFromLocation(s,e){const t={};for(const n of e)n in s&&(t[n]=s[n]);return t}function normalizeRouteRecord(s){const e={path:s.path,redirect:s.redirect,name:s.name,meta:s.meta||{},aliasOf:s.aliasOf,beforeEnter:s.beforeEnter,props:normalizeRecordProps(s),children:s.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in s?s.components||null:s.component&&{default:s.component}};return Object.defineProperty(e,"mods",{value:{}}),e}function normalizeRecordProps(s){const e={},t=s.props||!1;if("component"in s)e.default=t;else for(const n in s.components)e[n]=typeof t=="object"?t[n]:t;return e}function isAliasRecord(s){for(;s;){if(s.record.aliasOf)return!0;s=s.parent}return!1}function mergeMetaFields(s){return s.reduce((e,t)=>assign(e,t.meta),{})}function mergeOptions(s,e){const t={};for(const n in s)t[n]=n in e?e[n]:s[n];return t}function findInsertionIndex(s,e){let t=0,n=e.length;for(;t!==n;){const a=t+n>>1;comparePathParserScore(s,e[a])<0?n=a:t=a+1}const o=getInsertionAncestor(s);return o&&(n=e.lastIndexOf(o,n-1)),n}function getInsertionAncestor(s){let e=s;for(;e=e.parent;)if(isMatchable(e)&&comparePathParserScore(s,e)===0)return e}function isMatchable({record:s}){return!!(s.name||s.components&&Object.keys(s.components).length||s.redirect)}function parseQuery(s){const e={};if(s===""||s==="?")return e;const n=(s[0]==="?"?s.slice(1):s).split("&");for(let o=0;o<n.length;++o){const a=n[o].replace(PLUS_RE," "),r=a.indexOf("="),l=decode(r<0?a:a.slice(0,r)),c=r<0?null:decode(a.slice(r+1));if(l in e){let u=e[l];isArray(u)||(u=e[l]=[u]),u.push(c)}else e[l]=c}return e}function stringifyQuery(s){let e="";for(let t in s){const n=s[t];if(t=encodeQueryKey(t),n==null){n!==void 0&&(e+=(e.length?"&":"")+t);continue}(isArray(n)?n.map(a=>a&&encodeQueryValue(a)):[n&&encodeQueryValue(n)]).forEach(a=>{a!==void 0&&(e+=(e.length?"&":"")+t,a!=null&&(e+="="+a))})}return e}function normalizeQuery(s){const e={};for(const t in s){const n=s[t];n!==void 0&&(e[t]=isArray(n)?n.map(o=>o==null?null:""+o):n==null?n:""+n)}return e}const matchedRouteKey=Symbol(""),viewDepthKey=Symbol(""),routerKey=Symbol(""),routeLocationKey=Symbol(""),routerViewLocationKey=Symbol("");function useCallbacks(){let s=[];function e(n){return s.push(n),()=>{const o=s.indexOf(n);o>-1&&s.splice(o,1)}}function t(){s=[]}return{add:e,list:()=>s.slice(),reset:t}}function guardToPromiseFn(s,e,t,n,o,a=r=>r()){const r=n&&(n.enterCallbacks[o]=n.enterCallbacks[o]||[]);return()=>new Promise((l,c)=>{const u=g=>{g===!1?c(createRouterError(4,{from:t,to:e})):g instanceof Error?c(g):isRouteLocation(g)?c(createRouterError(2,{from:e,to:g})):(r&&n.enterCallbacks[o]===r&&typeof g=="function"&&r.push(g),l())},d=a(()=>s.call(n&&n.instances[o],e,t,u));let f=Promise.resolve(d);s.length<3&&(f=f.then(u)),f.catch(g=>c(g))})}function extractComponentsGuards(s,e,t,n,o=a=>a()){const a=[];for(const r of s)for(const l in r.components){let c=r.components[l];if(!(e!=="beforeRouteEnter"&&!r.instances[l]))if(isRouteComponent(c)){const d=(c.__vccOpts||c)[e];d&&a.push(guardToPromiseFn(d,t,n,r,l,o))}else{let u=c();a.push(()=>u.then(d=>{if(!d)throw new Error(`Couldn't resolve component "${l}" at "${r.path}"`);const f=isESModule(d)?d.default:d;r.mods[l]=d,r.components[l]=f;const _=(f.__vccOpts||f)[e];return _&&guardToPromiseFn(_,t,n,r,l,o)()}))}}return a}function useLink(s){const e=inject(routerKey),t=inject(routeLocationKey),n=computed(()=>{const c=unref(s.to);return e.resolve(c)}),o=computed(()=>{const{matched:c}=n.value,{length:u}=c,d=c[u-1],f=t.matched;if(!d||!f.length)return-1;const g=f.findIndex(isSameRouteRecord.bind(null,d));if(g>-1)return g;const _=getOriginalPath(c[u-2]);return u>1&&getOriginalPath(d)===_&&f[f.length-1].path!==_?f.findIndex(isSameRouteRecord.bind(null,c[u-2])):g}),a=computed(()=>o.value>-1&&includesParams(t.params,n.value.params)),r=computed(()=>o.value>-1&&o.value===t.matched.length-1&&isSameRouteLocationParams(t.params,n.value.params));function l(c={}){if(guardEvent(c)){const u=e[unref(s.replace)?"replace":"push"](unref(s.to)).catch(noop);return s.viewTransition&&typeof document<"u"&&"startViewTransition"in document&&document.startViewTransition(()=>u),u}return Promise.resolve()}return{route:n,href:computed(()=>n.value.href),isActive:a,isExactActive:r,navigate:l}}function preferSingleVNode(s){return s.length===1?s[0]:s}const RouterLinkImpl=defineComponent({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"},viewTransition:Boolean},useLink,setup(s,{slots:e}){const t=reactive(useLink(s)),{options:n}=inject(routerKey),o=computed(()=>({[getLinkClass(s.activeClass,n.linkActiveClass,"router-link-active")]:t.isActive,[getLinkClass(s.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:t.isExactActive}));return()=>{const a=e.default&&preferSingleVNode(e.default(t));return s.custom?a:h("a",{"aria-current":t.isExactActive?s.ariaCurrentValue:null,href:t.href,onClick:t.navigate,class:o.value},a)}}}),RouterLink=RouterLinkImpl;function guardEvent(s){if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget&&s.currentTarget.getAttribute){const e=s.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return s.preventDefault&&s.preventDefault(),!0}}function includesParams(s,e){for(const t in e){const n=e[t],o=s[t];if(typeof n=="string"){if(n!==o)return!1}else if(!isArray(o)||o.length!==n.length||n.some((a,r)=>a!==o[r]))return!1}return!0}function getOriginalPath(s){return s?s.aliasOf?s.aliasOf.path:s.path:""}const getLinkClass=(s,e,t)=>s??e??t,RouterViewImpl=defineComponent({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(s,{attrs:e,slots:t}){const n=inject(routerViewLocationKey),o=computed(()=>s.route||n.value),a=inject(viewDepthKey,0),r=computed(()=>{let u=unref(a);const{matched:d}=o.value;let f;for(;(f=d[u])&&!f.components;)u++;return u}),l=computed(()=>o.value.matched[r.value]);provide(viewDepthKey,computed(()=>r.value+1)),provide(matchedRouteKey,l),provide(routerViewLocationKey,o);const c=ref();return watch(()=>[c.value,l.value,s.name],([u,d,f],[g,_,b])=>{d&&(d.instances[f]=u,_&&_!==d&&u&&u===g&&(d.leaveGuards.size||(d.leaveGuards=_.leaveGuards),d.updateGuards.size||(d.updateGuards=_.updateGuards))),u&&d&&(!_||!isSameRouteRecord(d,_)||!g)&&(d.enterCallbacks[f]||[]).forEach(B=>B(u))},{flush:"post"}),()=>{const u=o.value,d=s.name,f=l.value,g=f&&f.components[d];if(!g)return normalizeSlot(t.default,{Component:g,route:u});const _=f.props[d],b=_?_===!0?u.params:typeof _=="function"?_(u):_:null,I=h(g,assign({},b,e,{onVnodeUnmounted:C=>{C.component.isUnmounted&&(f.instances[d]=null)},ref:c}));return normalizeSlot(t.default,{Component:I,route:u})||I}}});function normalizeSlot(s,e){if(!s)return null;const t=s(e);return t.length===1?t[0]:t}const RouterView=RouterViewImpl;function createRouter(s){const e=createRouterMatcher(s.routes,s),t=s.parseQuery||parseQuery,n=s.stringifyQuery||stringifyQuery,o=s.history,a=useCallbacks(),r=useCallbacks(),l=useCallbacks(),c=shallowRef(START_LOCATION_NORMALIZED);let u=START_LOCATION_NORMALIZED;isBrowser&&s.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const d=applyToParams.bind(null,de=>""+de),f=applyToParams.bind(null,encodeParam),g=applyToParams.bind(null,decode);function _(de,Me){let Ne,Pe;return isRouteName(de)?(Ne=e.getRecordMatcher(de),Pe=Me):Pe=de,e.addRoute(Pe,Ne)}function b(de){const Me=e.getRecordMatcher(de);Me&&e.removeRoute(Me)}function B(){return e.getRoutes().map(de=>de.record)}function I(de){return!!e.getRecordMatcher(de)}function C(de,Me){if(Me=assign({},Me||c.value),typeof de=="string"){const $=parseURL(t,de,Me.path),Se=e.resolve({path:$.path},Me),Be=o.createHref($.fullPath);return assign($,Se,{params:g(Se.params),hash:decode($.hash),redirectedFrom:void 0,href:Be})}let Ne;if(de.path!=null)Ne=assign({},de,{path:parseURL(t,de.path,Me.path).path});else{const $=assign({},de.params);for(const Se in $)$[Se]==null&&delete $[Se];Ne=assign({},de,{params:f($)}),Me.params=f(Me.params)}const Pe=e.resolve(Ne,Me),nt=de.hash||"";Pe.params=d(g(Pe.params));const ie=stringifyURL(n,assign({},de,{hash:encodeHash(nt),path:Pe.path})),oe=o.createHref(ie);return assign({fullPath:ie,hash:nt,query:n===stringifyQuery?normalizeQuery(de.query):de.query||{}},Pe,{redirectedFrom:void 0,href:oe})}function R(de){return typeof de=="string"?parseURL(t,de,c.value.path):assign({},de)}function L(de,Me){if(u!==de)return createRouterError(8,{from:Me,to:de})}function F(de){return Q(de)}function N(de){return F(assign(R(de),{replace:!0}))}function k(de){const Me=de.matched[de.matched.length-1];if(Me&&Me.redirect){const{redirect:Ne}=Me;let Pe=typeof Ne=="function"?Ne(de):Ne;return typeof Pe=="string"&&(Pe=Pe.includes("?")||Pe.includes("#")?Pe=R(Pe):{path:Pe},Pe.params={}),assign({query:de.query,hash:de.hash,params:Pe.path!=null?{}:de.params},Pe)}}function Q(de,Me){const Ne=u=C(de),Pe=c.value,nt=de.state,ie=de.force,oe=de.replace===!0,$=k(Ne);if($)return Q(assign(R($),{state:typeof $=="object"?assign({},nt,$.state):nt,force:ie,replace:oe}),Me||Ne);const Se=Ne;Se.redirectedFrom=Me;let Be;return!ie&&isSameRouteLocation(n,Pe,Ne)&&(Be=createRouterError(16,{to:Se,from:Pe}),xe(Pe,Pe,!0,!1)),(Be?Promise.resolve(Be):O(Se,Pe)).catch(we=>isNavigationFailure(we)?isNavigationFailure(we,2)?we:Te(we):J(we,Se,Pe)).then(we=>{if(we){if(isNavigationFailure(we,2))return Q(assign({replace:oe},R(we.to),{state:typeof we.to=="object"?assign({},nt,we.to.state):nt,force:ie}),Me||Se)}else we=ce(Se,Pe,!0,oe,nt);return q(Se,Pe,we),we})}function z(de,Me){const Ne=L(de,Me);return Ne?Promise.reject(Ne):Promise.resolve()}function G(de){const Me=le.values().next().value;return Me&&typeof Me.runWithContext=="function"?Me.runWithContext(de):de()}function O(de,Me){let Ne;const[Pe,nt,ie]=extractChangingRecords(de,Me);Ne=extractComponentsGuards(Pe.reverse(),"beforeRouteLeave",de,Me);for(const $ of Pe)$.leaveGuards.forEach(Se=>{Ne.push(guardToPromiseFn(Se,de,Me))});const oe=z.bind(null,de,Me);return Ne.push(oe),De(Ne).then(()=>{Ne=[];for(const $ of a.list())Ne.push(guardToPromiseFn($,de,Me));return Ne.push(oe),De(Ne)}).then(()=>{Ne=extractComponentsGuards(nt,"beforeRouteUpdate",de,Me);for(const $ of nt)$.updateGuards.forEach(Se=>{Ne.push(guardToPromiseFn(Se,de,Me))});return Ne.push(oe),De(Ne)}).then(()=>{Ne=[];for(const $ of ie)if($.beforeEnter)if(isArray($.beforeEnter))for(const Se of $.beforeEnter)Ne.push(guardToPromiseFn(Se,de,Me));else Ne.push(guardToPromiseFn($.beforeEnter,de,Me));return Ne.push(oe),De(Ne)}).then(()=>(de.matched.forEach($=>$.enterCallbacks={}),Ne=extractComponentsGuards(ie,"beforeRouteEnter",de,Me,G),Ne.push(oe),De(Ne))).then(()=>{Ne=[];for(const $ of r.list())Ne.push(guardToPromiseFn($,de,Me));return Ne.push(oe),De(Ne)}).catch($=>isNavigationFailure($,8)?$:Promise.reject($))}function q(de,Me,Ne){l.list().forEach(Pe=>G(()=>Pe(de,Me,Ne)))}function ce(de,Me,Ne,Pe,nt){const ie=L(de,Me);if(ie)return ie;const oe=Me===START_LOCATION_NORMALIZED,$=isBrowser?history.state:{};Ne&&(Pe||oe?o.replace(de.fullPath,assign({scroll:oe&&$&&$.scroll},nt)):o.push(de.fullPath,nt)),c.value=de,xe(de,Me,Ne,oe),Te()}let ne;function ue(){ne||(ne=o.listen((de,Me,Ne)=>{if(!_e.listening)return;const Pe=C(de),nt=k(Pe);if(nt){Q(assign(nt,{replace:!0,force:!0}),Pe).catch(noop);return}u=Pe;const ie=c.value;isBrowser&&saveScrollPosition(getScrollKey(ie.fullPath,Ne.delta),computeScrollPosition()),O(Pe,ie).catch(oe=>isNavigationFailure(oe,12)?oe:isNavigationFailure(oe,2)?(Q(assign(R(oe.to),{force:!0}),Pe).then($=>{isNavigationFailure($,20)&&!Ne.delta&&Ne.type===NavigationType.pop&&o.go(-1,!1)}).catch(noop),Promise.reject()):(Ne.delta&&o.go(-Ne.delta,!1),J(oe,Pe,ie))).then(oe=>{oe=oe||ce(Pe,ie,!1),oe&&(Ne.delta&&!isNavigationFailure(oe,8)?o.go(-Ne.delta,!1):Ne.type===NavigationType.pop&&isNavigationFailure(oe,20)&&o.go(-1,!1)),q(Pe,ie,oe)}).catch(noop)}))}let pe=useCallbacks(),fe=useCallbacks(),ee;function J(de,Me,Ne){Te(de);const Pe=fe.list();return Pe.length?Pe.forEach(nt=>nt(de,Me,Ne)):console.error(de),Promise.reject(de)}function ye(){return ee&&c.value!==START_LOCATION_NORMALIZED?Promise.resolve():new Promise((de,Me)=>{pe.add([de,Me])})}function Te(de){return ee||(ee=!de,ue(),pe.list().forEach(([Me,Ne])=>de?Ne(de):Me()),pe.reset()),de}function xe(de,Me,Ne,Pe){const{scrollBehavior:nt}=s;if(!isBrowser||!nt)return Promise.resolve();const ie=!Ne&&getSavedScrollPosition(getScrollKey(de.fullPath,0))||(Pe||!Ne)&&history.state&&history.state.scroll||null;return nextTick().then(()=>nt(de,Me,ie)).then(oe=>oe&&scrollToPosition(oe)).catch(oe=>J(oe,de,Me))}const ve=de=>o.go(de);let he;const le=new Set,_e={currentRoute:c,listening:!0,addRoute:_,removeRoute:b,clearRoutes:e.clearRoutes,hasRoute:I,getRoutes:B,resolve:C,options:s,push:F,replace:N,go:ve,back:()=>ve(-1),forward:()=>ve(1),beforeEach:a.add,beforeResolve:r.add,afterEach:l.add,onError:fe.add,isReady:ye,install(de){const Me=this;de.component("RouterLink",RouterLink),de.component("RouterView",RouterView),de.config.globalProperties.$router=Me,Object.defineProperty(de.config.globalProperties,"$route",{enumerable:!0,get:()=>unref(c)}),isBrowser&&!he&&c.value===START_LOCATION_NORMALIZED&&(he=!0,F(o.location).catch(nt=>{}));const Ne={};for(const nt in START_LOCATION_NORMALIZED)Object.defineProperty(Ne,nt,{get:()=>c.value[nt],enumerable:!0});de.provide(routerKey,Me),de.provide(routeLocationKey,shallowReactive(Ne)),de.provide(routerViewLocationKey,c);const Pe=de.unmount;le.add(de),de.unmount=function(){le.delete(de),le.size<1&&(u=START_LOCATION_NORMALIZED,ne&&ne(),ne=null,c.value=START_LOCATION_NORMALIZED,he=!1,ee=!1),Pe()}}};function De(de){return de.reduce((Me,Ne)=>Me.then(()=>G(Ne)),Promise.resolve())}return _e}function extractChangingRecords(s,e){const t=[],n=[],o=[],a=Math.max(e.matched.length,s.matched.length);for(let r=0;r<a;r++){const l=e.matched[r];l&&(s.matched.find(u=>isSameRouteRecord(u,l))?n.push(l):t.push(l));const c=s.matched[r];c&&(e.matched.find(u=>isSameRouteRecord(u,c))||o.push(c))}return[t,n,o]}function useRouter(){return inject(routerKey)}function useRoute(s){return inject(routeLocationKey)}const ModelList$1={bar:{name:"酒吧场景",des:"一个精美的酒吧场景模型，展示了室内环境的细节"},garden:{name:"花园场景",des:"美丽的花园场景，包含各种植物和景观元素"},hero:{name:"英雄角色",des:"英雄角色模型，高质量的人物建模"},tokyo:{name:"日本场景",des:"日本场景，包含日本的风土人情"},tokyo1:{name:"日本场景ksplat",des:"日本场景，包含日本的风土人情"}},_hoisted_1$4={class:"model-list"},_hoisted_2$4={class:"models-grid"},_hoisted_3$3=["onClick"],_hoisted_4$2={class:"model-preview"},_hoisted_5$1={class:"model-info"},_sfc_main$4={__name:"ModelList",setup(s){const e=useRouter(),t=ref(Object.keys(ModelList$1)),n=ref(!1);onMounted(()=>{console.log(1111133,useRoute().query),useRoute().query.isPay==="true"&&(n.value=!0,setTimeout(()=>{n.value=!1},3e3))});const o=c=>ModelList$1[c].name||c,a=c=>ModelList$1[c].des||`${c} 3D模型`,r=c=>{e.push(`/model?modelName=${c}`)},l=()=>{console.log("goToPay"),window.wx.miniProgram.postMessage({data:{action:"pay",orderId:"12345"}}),wx.miniProgram.redirectTo({url:"/pages/authorize/index"})};return(c,u)=>(openBlock(),createElementBlock("div",_hoisted_1$4,[u[2]||(u[2]=createBaseVNode("header",{class:"header"},[createBaseVNode("h1",null,"3D模型列表"),createBaseVNode("p",null,"选择一个模型查看详情")],-1)),createBaseVNode("button",{class:"pay-button",onClick:l},"去支付"),createBaseVNode("div",_hoisted_2$4,[(openBlock(!0),createElementBlock(Fragment,null,renderList(t.value,d=>(openBlock(),createElementBlock("div",{key:d,class:"model-card",onClick:f=>r(d)},[createBaseVNode("div",_hoisted_4$2,[u[0]||(u[0]=createBaseVNode("div",{class:"model-icon"},"🎯",-1)),createBaseVNode("h3",null,toDisplayString(o(d)),1)]),createBaseVNode("div",_hoisted_5$1,[createBaseVNode("p",null,toDisplayString(a(d)),1),u[1]||(u[1]=createBaseVNode("button",{class:"view-button"},"查看详情",-1))])],8,_hoisted_3$3))),128))])]))}},ModelList=_export_sfc(_sfc_main$4,[["__scopeId","data-v-8a4709d2"]]);let SceneController$1=class{constructor(e,t){this.configUrl=e,this.container=t}render(){}clear(){console.log("清理内存"),location.reload(),this.tick=null,this.scene=null,this.camera=null}};class MetaViewer{constructor(e,t,n,o){console.log("场景初始化"),this.scene=new SceneController$1(e,t,n,o==null?void 0:o.isFullscreen,o==null?void 0:o.closePanelCb)}exitFullScreen(){this.scene.exitFullScreen()}async render(){await this.scene.render()}dispose(){this.scene.clear()}}const _hoisted_1$3={class:"model-detail"},_hoisted_2$3={class:"detail-header"},_hoisted_3$2={key:0},_hoisted_4$1=["onClick"],_sfc_main$3={__name:"ModelDetail",setup(s){const e=ref(null),t=useRouter(),n=useRoute(),o=ref(null),a=ref(n.query.modelName),r=ref(n.query.modelUrl);let l=null,c=null;const u=ref([]),d=b=>{var B;return((B=ModelList$1[b])==null?void 0:B.name)||"模型"},f=()=>{t.push("/")};onMounted(async()=>{var B;let b="";r.value&&r.value!==""?b=decodeURIComponent(r.value):a.value&&a.value!==""&&(b=`/models/${a.value}/model.meta.json`),l=new MetaViewer(b,e.value),c=(B=l.scene)==null?void 0:B.modelController,await l.render(),u.value=c==null?void 0:c.getUrls().map(I=>({url:I.url,show:I.show})),console.log(u.value)}),onUnmounted(()=>{l==null||l.dispose()});const g=async b=>{await c.add(b),u.value=c==null?void 0:c.getUrls().map(B=>({url:B.url,show:B.show}))},_=async b=>{await c.remove(b),u.value=c==null?void 0:c.getUrls().map(B=>({url:B.url,show:B.show}))};return(b,B)=>(openBlock(),createElementBlock("div",_hoisted_1$3,[createBaseVNode("header",_hoisted_2$3,[createBaseVNode("button",{class:"back-button",onClick:f}," ← 返回列表 "),createBaseVNode("h1",null,toDisplayString(d(a.value||r.value)),1),u.value.length?(openBlock(),createElementBlock("div",_hoisted_3$2,[(openBlock(!0),createElementBlock(Fragment,null,renderList(u.value,(I,C)=>(openBlock(),createElementBlock("button",{key:C,class:normalizeClass(["model-item",{current:I.show}]),onClick:R=>I.show?_(C):g(C)},toDisplayString(C+1),11,_hoisted_4$1))),128))])):createCommentVNode("",!0)]),createBaseVNode("div",{class:"model-viewer",ref_key:"sceneContainer",ref:o,id:"metaverse"},[B[0]||(B[0]=createBaseVNode("div",{id:"joystick-container"},[createBaseVNode("div",{id:"joystick"})],-1)),B[1]||(B[1]=createBaseVNode("div",{id:"jump-button"},"跳跃",-1)),B[2]||(B[2]=createBaseVNode("div",{id:"run-button"},"跑步",-1)),createBaseVNode("canvas",{id:"scene",ref_key:"webgl",ref:e},null,512)],512)]))}},ModelDetail=_export_sfc(_sfc_main$3,[["__scopeId","data-v-3208e28e"]]);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const REVISION="178",MOUSE={ROTATE:0,DOLLY:1,PAN:2},TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,ConstantColorFactor=211,OneMinusConstantColorFactor=212,ConstantAlphaFactor=213,OneMinusConstantAlphaFactor=214,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,CineonToneMapping=3,ACESFilmicToneMapping=4,CustomToneMapping=5,AgXToneMapping=6,NeutralToneMapping=7,AttachedBindMode="attached",DetachedBindMode="detached",UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,CubeUVReflectionMapping=306,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipmapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipmapLinearFilter=1008,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedInt248Type=1020,UnsignedInt5999Type=35902,AlphaFormat=1021,RGBFormat=1022,RGBAFormat=1023,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RedIntegerFormat=1029,RGFormat=1030,RGIntegerFormat=1031,RGBAIntegerFormat=1033,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGB_ETC2_Format=37492,RGBA_ETC2_EAC_Format=37496,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,RGBA_BPTC_Format=36492,RGB_BPTC_SIGNED_Format=36494,RGB_BPTC_UNSIGNED_Format=36495,RED_RGTC1_Format=36283,SIGNED_RED_RGTC1_Format=36284,RED_GREEN_RGTC2_Format=36285,SIGNED_RED_GREEN_RGTC2_Format=36286,LoopOnce=2200,LoopRepeat=2201,LoopPingPong=2202,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,NormalAnimationBlendMode=2500,AdditiveAnimationBlendMode=2501,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,NoColorSpace="",SRGBColorSpace="srgb",LinearSRGBColorSpace="srgb-linear",LinearTransfer="linear",SRGBTransfer="srgb",KeepStencilOp=7680,AlwaysStencilFunc=519,NeverCompare=512,LessCompare=513,EqualCompare=514,LessEqualCompare=515,GreaterCompare=516,NotEqualCompare=517,GreaterEqualCompare=518,AlwaysCompare=519,StaticDrawUsage=35044,DynamicDrawUsage=35048,GLSL3="300 es",WebGLCoordinateSystem=2e3,WebGPUCoordinateSystem=2001;class EventDispatcher{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const o=n[e];if(o!==void 0){const a=o.indexOf(t);a!==-1&&o.splice(a,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const o=n.slice(0);for(let a=0,r=o.length;a<r;a++)o[a].call(this,e);e.target=null}}}const _lut=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let _seed=1234567;const DEG2RAD=Math.PI/180,RAD2DEG=180/Math.PI;function generateUUID(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(_lut[s&255]+_lut[s>>8&255]+_lut[s>>16&255]+_lut[s>>24&255]+"-"+_lut[e&255]+_lut[e>>8&255]+"-"+_lut[e>>16&15|64]+_lut[e>>24&255]+"-"+_lut[t&63|128]+_lut[t>>8&255]+"-"+_lut[t>>16&255]+_lut[t>>24&255]+_lut[n&255]+_lut[n>>8&255]+_lut[n>>16&255]+_lut[n>>24&255]).toLowerCase()}function clamp$1(s,e,t){return Math.max(e,Math.min(t,s))}function euclideanModulo(s,e){return(s%e+e)%e}function mapLinear(s,e,t,n,o){return n+(s-e)*(o-n)/(t-e)}function inverseLerp(s,e,t){return s!==e?(t-s)/(e-s):0}function lerp$1(s,e,t){return(1-t)*s+t*e}function damp(s,e,t,n){return lerp$1(s,e,1-Math.exp(-t*n))}function pingpong(s,e=1){return e-Math.abs(euclideanModulo(s,e*2)-e)}function smoothstep(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function smootherstep(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function randInt(s,e){return s+Math.floor(Math.random()*(e-s+1))}function randFloat(s,e){return s+Math.random()*(e-s)}function randFloatSpread(s){return s*(.5-Math.random())}function seededRandom(s){s!==void 0&&(_seed=s);let e=_seed+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function degToRad(s){return s*DEG2RAD}function radToDeg(s){return s*RAD2DEG}function isPowerOfTwo(s){return(s&s-1)===0&&s!==0}function ceilPowerOfTwo(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function floorPowerOfTwo(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function setQuaternionFromProperEuler(s,e,t,n,o){const a=Math.cos,r=Math.sin,l=a(t/2),c=r(t/2),u=a((e+n)/2),d=r((e+n)/2),f=a((e-n)/2),g=r((e-n)/2),_=a((n-e)/2),b=r((n-e)/2);switch(o){case"XYX":s.set(l*d,c*f,c*g,l*u);break;case"YZY":s.set(c*g,l*d,c*f,l*u);break;case"ZXZ":s.set(c*f,c*g,l*d,l*u);break;case"XZX":s.set(l*d,c*b,c*_,l*u);break;case"YXY":s.set(c*_,l*d,c*b,l*u);break;case"ZYZ":s.set(c*b,c*_,l*d,l*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+o)}}function denormalize(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function normalize$1(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const MathUtils={DEG2RAD,RAD2DEG,generateUUID,clamp:clamp$1,euclideanModulo,mapLinear,inverseLerp,lerp:lerp$1,damp,pingpong,smoothstep,smootherstep,randInt,randFloat,randFloatSpread,seededRandom,degToRad,radToDeg,isPowerOfTwo,ceilPowerOfTwo,floorPowerOfTwo,setQuaternionFromProperEuler,normalize:normalize$1,denormalize};class Vector2{constructor(e=0,t=0){Vector2.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,o=e.elements;return this.x=o[0]*t+o[3]*n+o[6],this.y=o[1]*t+o[4]*n+o[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=clamp$1(this.x,e.x,t.x),this.y=clamp$1(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=clamp$1(this.x,e,t),this.y=clamp$1(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(clamp$1(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(clamp$1(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),o=Math.sin(t),a=this.x-e.x,r=this.y-e.y;return this.x=a*n-r*o+e.x,this.y=a*o+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Quaternion{constructor(e=0,t=0,n=0,o=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=o}static slerpFlat(e,t,n,o,a,r,l){let c=n[o+0],u=n[o+1],d=n[o+2],f=n[o+3];const g=a[r+0],_=a[r+1],b=a[r+2],B=a[r+3];if(l===0){e[t+0]=c,e[t+1]=u,e[t+2]=d,e[t+3]=f;return}if(l===1){e[t+0]=g,e[t+1]=_,e[t+2]=b,e[t+3]=B;return}if(f!==B||c!==g||u!==_||d!==b){let I=1-l;const C=c*g+u*_+d*b+f*B,R=C>=0?1:-1,L=1-C*C;if(L>Number.EPSILON){const N=Math.sqrt(L),k=Math.atan2(N,C*R);I=Math.sin(I*k)/N,l=Math.sin(l*k)/N}const F=l*R;if(c=c*I+g*F,u=u*I+_*F,d=d*I+b*F,f=f*I+B*F,I===1-l){const N=1/Math.sqrt(c*c+u*u+d*d+f*f);c*=N,u*=N,d*=N,f*=N}}e[t]=c,e[t+1]=u,e[t+2]=d,e[t+3]=f}static multiplyQuaternionsFlat(e,t,n,o,a,r){const l=n[o],c=n[o+1],u=n[o+2],d=n[o+3],f=a[r],g=a[r+1],_=a[r+2],b=a[r+3];return e[t]=l*b+d*f+c*_-u*g,e[t+1]=c*b+d*g+u*f-l*_,e[t+2]=u*b+d*_+l*g-c*f,e[t+3]=d*b-l*f-c*g-u*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,o){return this._x=e,this._y=t,this._z=n,this._w=o,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,o=e._y,a=e._z,r=e._order,l=Math.cos,c=Math.sin,u=l(n/2),d=l(o/2),f=l(a/2),g=c(n/2),_=c(o/2),b=c(a/2);switch(r){case"XYZ":this._x=g*d*f+u*_*b,this._y=u*_*f-g*d*b,this._z=u*d*b+g*_*f,this._w=u*d*f-g*_*b;break;case"YXZ":this._x=g*d*f+u*_*b,this._y=u*_*f-g*d*b,this._z=u*d*b-g*_*f,this._w=u*d*f+g*_*b;break;case"ZXY":this._x=g*d*f-u*_*b,this._y=u*_*f+g*d*b,this._z=u*d*b+g*_*f,this._w=u*d*f-g*_*b;break;case"ZYX":this._x=g*d*f-u*_*b,this._y=u*_*f+g*d*b,this._z=u*d*b-g*_*f,this._w=u*d*f+g*_*b;break;case"YZX":this._x=g*d*f+u*_*b,this._y=u*_*f+g*d*b,this._z=u*d*b-g*_*f,this._w=u*d*f-g*_*b;break;case"XZY":this._x=g*d*f-u*_*b,this._y=u*_*f-g*d*b,this._z=u*d*b+g*_*f,this._w=u*d*f+g*_*b;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,o=Math.sin(n);return this._x=e.x*o,this._y=e.y*o,this._z=e.z*o,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],o=t[4],a=t[8],r=t[1],l=t[5],c=t[9],u=t[2],d=t[6],f=t[10],g=n+l+f;if(g>0){const _=.5/Math.sqrt(g+1);this._w=.25/_,this._x=(d-c)*_,this._y=(a-u)*_,this._z=(r-o)*_}else if(n>l&&n>f){const _=2*Math.sqrt(1+n-l-f);this._w=(d-c)/_,this._x=.25*_,this._y=(o+r)/_,this._z=(a+u)/_}else if(l>f){const _=2*Math.sqrt(1+l-n-f);this._w=(a-u)/_,this._x=(o+r)/_,this._y=.25*_,this._z=(c+d)/_}else{const _=2*Math.sqrt(1+f-n-l);this._w=(r-o)/_,this._x=(a+u)/_,this._y=(c+d)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(clamp$1(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const o=Math.min(1,t/n);return this.slerp(e,o),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,o=e._y,a=e._z,r=e._w,l=t._x,c=t._y,u=t._z,d=t._w;return this._x=n*d+r*l+o*u-a*c,this._y=o*d+r*c+a*l-n*u,this._z=a*d+r*u+n*c-o*l,this._w=r*d-n*l-o*c-a*u,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,o=this._y,a=this._z,r=this._w;let l=r*e._w+n*e._x+o*e._y+a*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=r,this._x=n,this._y=o,this._z=a,this;const c=1-l*l;if(c<=Number.EPSILON){const _=1-t;return this._w=_*r+t*this._w,this._x=_*n+t*this._x,this._y=_*o+t*this._y,this._z=_*a+t*this._z,this.normalize(),this}const u=Math.sqrt(c),d=Math.atan2(u,l),f=Math.sin((1-t)*d)/u,g=Math.sin(t*d)/u;return this._w=r*f+this._w*g,this._x=n*f+this._x*g,this._y=o*f+this._y*g,this._z=a*f+this._z*g,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),o=Math.sqrt(1-n),a=Math.sqrt(n);return this.set(o*Math.sin(e),o*Math.cos(e),a*Math.sin(t),a*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Vector3{constructor(e=0,t=0,n=0){Vector3.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(_quaternion$4.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(_quaternion$4.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,o=this.z,a=e.elements;return this.x=a[0]*t+a[3]*n+a[6]*o,this.y=a[1]*t+a[4]*n+a[7]*o,this.z=a[2]*t+a[5]*n+a[8]*o,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,o=this.z,a=e.elements,r=1/(a[3]*t+a[7]*n+a[11]*o+a[15]);return this.x=(a[0]*t+a[4]*n+a[8]*o+a[12])*r,this.y=(a[1]*t+a[5]*n+a[9]*o+a[13])*r,this.z=(a[2]*t+a[6]*n+a[10]*o+a[14])*r,this}applyQuaternion(e){const t=this.x,n=this.y,o=this.z,a=e.x,r=e.y,l=e.z,c=e.w,u=2*(r*o-l*n),d=2*(l*t-a*o),f=2*(a*n-r*t);return this.x=t+c*u+r*f-l*d,this.y=n+c*d+l*u-a*f,this.z=o+c*f+a*d-r*u,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,o=this.z,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*o,this.y=a[1]*t+a[5]*n+a[9]*o,this.z=a[2]*t+a[6]*n+a[10]*o,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=clamp$1(this.x,e.x,t.x),this.y=clamp$1(this.y,e.y,t.y),this.z=clamp$1(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=clamp$1(this.x,e,t),this.y=clamp$1(this.y,e,t),this.z=clamp$1(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(clamp$1(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,o=e.y,a=e.z,r=t.x,l=t.y,c=t.z;return this.x=o*c-a*l,this.y=a*r-n*c,this.z=n*l-o*r,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return _vector$c.copy(this).projectOnVector(e),this.sub(_vector$c)}reflect(e){return this.sub(_vector$c.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(clamp$1(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,o=this.z-e.z;return t*t+n*n+o*o}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const o=Math.sin(t)*e;return this.x=o*Math.sin(n),this.y=Math.cos(t)*e,this.z=o*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),o=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=o,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const _vector$c=new Vector3,_quaternion$4=new Quaternion;class Matrix3{constructor(e,t,n,o,a,r,l,c,u){Matrix3.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,o,a,r,l,c,u)}set(e,t,n,o,a,r,l,c,u){const d=this.elements;return d[0]=e,d[1]=o,d[2]=l,d[3]=t,d[4]=a,d[5]=c,d[6]=n,d[7]=r,d[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,o=t.elements,a=this.elements,r=n[0],l=n[3],c=n[6],u=n[1],d=n[4],f=n[7],g=n[2],_=n[5],b=n[8],B=o[0],I=o[3],C=o[6],R=o[1],L=o[4],F=o[7],N=o[2],k=o[5],Q=o[8];return a[0]=r*B+l*R+c*N,a[3]=r*I+l*L+c*k,a[6]=r*C+l*F+c*Q,a[1]=u*B+d*R+f*N,a[4]=u*I+d*L+f*k,a[7]=u*C+d*F+f*Q,a[2]=g*B+_*R+b*N,a[5]=g*I+_*L+b*k,a[8]=g*C+_*F+b*Q,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],o=e[2],a=e[3],r=e[4],l=e[5],c=e[6],u=e[7],d=e[8];return t*r*d-t*l*u-n*a*d+n*l*c+o*a*u-o*r*c}invert(){const e=this.elements,t=e[0],n=e[1],o=e[2],a=e[3],r=e[4],l=e[5],c=e[6],u=e[7],d=e[8],f=d*r-l*u,g=l*c-d*a,_=u*a-r*c,b=t*f+n*g+o*_;if(b===0)return this.set(0,0,0,0,0,0,0,0,0);const B=1/b;return e[0]=f*B,e[1]=(o*u-d*n)*B,e[2]=(l*n-o*r)*B,e[3]=g*B,e[4]=(d*t-o*c)*B,e[5]=(o*a-l*t)*B,e[6]=_*B,e[7]=(n*c-u*t)*B,e[8]=(r*t-n*a)*B,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,o,a,r,l){const c=Math.cos(a),u=Math.sin(a);return this.set(n*c,n*u,-n*(c*r+u*l)+r+e,-o*u,o*c,-o*(-u*r+c*l)+l+t,0,0,1),this}scale(e,t){return this.premultiply(_m3.makeScale(e,t)),this}rotate(e){return this.premultiply(_m3.makeRotation(-e)),this}translate(e,t){return this.premultiply(_m3.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let o=0;o<9;o++)if(t[o]!==n[o])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const _m3=new Matrix3;function arrayNeedsUint32(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}function createElementNS(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function createCanvasElement(){const s=createElementNS("canvas");return s.style.display="block",s}const _cache={};function warnOnce(s){s in _cache||(_cache[s]=!0,console.warn(s))}function probeAsync(s,e,t){return new Promise(function(n,o){function a(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:o();break;case s.TIMEOUT_EXPIRED:setTimeout(a,t);break;default:n()}}setTimeout(a,t)})}function toNormalizedProjectionMatrix(s){const e=s.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function toReversedProjectionMatrix(s){const e=s.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const LINEAR_REC709_TO_XYZ=new Matrix3().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),XYZ_TO_LINEAR_REC709=new Matrix3().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function createColorManagement(){const s={enabled:!0,workingColorSpace:LinearSRGBColorSpace,spaces:{},convert:function(o,a,r){return this.enabled===!1||a===r||!a||!r||(this.spaces[a].transfer===SRGBTransfer&&(o.r=SRGBToLinear(o.r),o.g=SRGBToLinear(o.g),o.b=SRGBToLinear(o.b)),this.spaces[a].primaries!==this.spaces[r].primaries&&(o.applyMatrix3(this.spaces[a].toXYZ),o.applyMatrix3(this.spaces[r].fromXYZ)),this.spaces[r].transfer===SRGBTransfer&&(o.r=LinearToSRGB(o.r),o.g=LinearToSRGB(o.g),o.b=LinearToSRGB(o.b))),o},workingToColorSpace:function(o,a){return this.convert(o,this.workingColorSpace,a)},colorSpaceToWorking:function(o,a){return this.convert(o,a,this.workingColorSpace)},getPrimaries:function(o){return this.spaces[o].primaries},getTransfer:function(o){return o===NoColorSpace?LinearTransfer:this.spaces[o].transfer},getLuminanceCoefficients:function(o,a=this.workingColorSpace){return o.fromArray(this.spaces[a].luminanceCoefficients)},define:function(o){Object.assign(this.spaces,o)},_getMatrix:function(o,a,r){return o.copy(this.spaces[a].toXYZ).multiply(this.spaces[r].fromXYZ)},_getDrawingBufferColorSpace:function(o){return this.spaces[o].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(o=this.workingColorSpace){return this.spaces[o].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(o,a){return warnOnce("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(o,a)},toWorkingColorSpace:function(o,a){return warnOnce("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(o,a)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[LinearSRGBColorSpace]:{primaries:e,whitePoint:n,transfer:LinearTransfer,toXYZ:LINEAR_REC709_TO_XYZ,fromXYZ:XYZ_TO_LINEAR_REC709,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:SRGBColorSpace},outputColorSpaceConfig:{drawingBufferColorSpace:SRGBColorSpace}},[SRGBColorSpace]:{primaries:e,whitePoint:n,transfer:SRGBTransfer,toXYZ:LINEAR_REC709_TO_XYZ,fromXYZ:XYZ_TO_LINEAR_REC709,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:SRGBColorSpace}}}),s}const ColorManagement=createColorManagement();function SRGBToLinear(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function LinearToSRGB(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let _canvas;class ImageUtils{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{_canvas===void 0&&(_canvas=createElementNS("canvas")),_canvas.width=e.width,_canvas.height=e.height;const o=_canvas.getContext("2d");e instanceof ImageData?o.putImageData(e,0,0):o.drawImage(e,0,0,e.width,e.height),n=_canvas}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=createElementNS("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const o=n.getImageData(0,0,e.width,e.height),a=o.data;for(let r=0;r<a.length;r++)a[r]=SRGBToLinear(a[r]/255)*255;return n.putImageData(o,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(SRGBToLinear(t[n]/255)*255):t[n]=SRGBToLinear(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let _sourceId=0;class Source{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:_sourceId++}),this.uuid=generateUUID(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},o=this.data;if(o!==null){let a;if(Array.isArray(o)){a=[];for(let r=0,l=o.length;r<l;r++)o[r].isDataTexture?a.push(serializeImage(o[r].image)):a.push(serializeImage(o[r]))}else a=serializeImage(o);n.url=a}return t||(e.images[this.uuid]=n),n}}function serializeImage(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?ImageUtils.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let _textureId=0;const _tempVec3=new Vector3;class Texture extends EventDispatcher{constructor(e=Texture.DEFAULT_IMAGE,t=Texture.DEFAULT_MAPPING,n=ClampToEdgeWrapping,o=ClampToEdgeWrapping,a=LinearFilter,r=LinearMipmapLinearFilter,l=RGBAFormat,c=UnsignedByteType,u=Texture.DEFAULT_ANISOTROPY,d=NoColorSpace){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:_textureId++}),this.uuid=generateUUID(),this.name="",this.source=new Source(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=o,this.magFilter=a,this.minFilter=r,this.anisotropy=u,this.format=l,this.internalFormat=null,this.type=c,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=d,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(_tempVec3).x}get height(){return this.source.getSize(_tempVec3).y}get depth(){return this.source.getSize(_tempVec3).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const o=this[t];if(o===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}o&&n&&o.isVector2&&n.isVector2||o&&n&&o.isVector3&&n.isVector3||o&&n&&o.isMatrix3&&n.isMatrix3?o.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==UVMapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case MirroredRepeatWrapping:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case MirroredRepeatWrapping:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Texture.DEFAULT_IMAGE=null;Texture.DEFAULT_MAPPING=UVMapping;Texture.DEFAULT_ANISOTROPY=1;class Vector4{constructor(e=0,t=0,n=0,o=1){Vector4.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=o}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,o){return this.x=e,this.y=t,this.z=n,this.w=o,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,o=this.z,a=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*o+r[12]*a,this.y=r[1]*t+r[5]*n+r[9]*o+r[13]*a,this.z=r[2]*t+r[6]*n+r[10]*o+r[14]*a,this.w=r[3]*t+r[7]*n+r[11]*o+r[15]*a,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,o,a;const c=e.elements,u=c[0],d=c[4],f=c[8],g=c[1],_=c[5],b=c[9],B=c[2],I=c[6],C=c[10];if(Math.abs(d-g)<.01&&Math.abs(f-B)<.01&&Math.abs(b-I)<.01){if(Math.abs(d+g)<.1&&Math.abs(f+B)<.1&&Math.abs(b+I)<.1&&Math.abs(u+_+C-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const L=(u+1)/2,F=(_+1)/2,N=(C+1)/2,k=(d+g)/4,Q=(f+B)/4,z=(b+I)/4;return L>F&&L>N?L<.01?(n=0,o=.707106781,a=.707106781):(n=Math.sqrt(L),o=k/n,a=Q/n):F>N?F<.01?(n=.707106781,o=0,a=.707106781):(o=Math.sqrt(F),n=k/o,a=z/o):N<.01?(n=.707106781,o=.707106781,a=0):(a=Math.sqrt(N),n=Q/a,o=z/a),this.set(n,o,a,t),this}let R=Math.sqrt((I-b)*(I-b)+(f-B)*(f-B)+(g-d)*(g-d));return Math.abs(R)<.001&&(R=1),this.x=(I-b)/R,this.y=(f-B)/R,this.z=(g-d)/R,this.w=Math.acos((u+_+C-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=clamp$1(this.x,e.x,t.x),this.y=clamp$1(this.y,e.y,t.y),this.z=clamp$1(this.z,e.z,t.z),this.w=clamp$1(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=clamp$1(this.x,e,t),this.y=clamp$1(this.y,e,t),this.z=clamp$1(this.z,e,t),this.w=clamp$1(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(clamp$1(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class RenderTarget extends EventDispatcher{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:LinearFilter,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Vector4(0,0,e,t);const o={width:e,height:t,depth:n.depth},a=new Texture(o);this.textures=[];const r=n.count;for(let l=0;l<r;l++)this.textures[l]=a.clone(),this.textures[l].isRenderTargetTexture=!0,this.textures[l].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:LinearFilter,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let o=0,a=this.textures.length;o<a;o++)this.textures[o].image.width=e,this.textures[o].image.height=t,this.textures[o].image.depth=n,this.textures[o].isArrayTexture=this.textures[o].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const o=Object.assign({},e.textures[t].image);this.textures[t].source=new Source(o)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class WebGLRenderTarget extends RenderTarget{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class DataArrayTexture extends Texture{constructor(e=null,t=1,n=1,o=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:o},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class WebGLArrayRenderTarget extends WebGLRenderTarget{constructor(e=1,t=1,n=1,o={}){super(e,t,o),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new DataArrayTexture(null,e,t,n),this._setTextureOptions(o),this.texture.isRenderTargetTexture=!0}}class Data3DTexture extends Texture{constructor(e=null,t=1,n=1,o=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:o},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Box3{constructor(e=new Vector3(1/0,1/0,1/0),t=new Vector3(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(_vector$b.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(_vector$b.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=_vector$b.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const a=n.getAttribute("position");if(t===!0&&a!==void 0&&e.isInstancedMesh!==!0)for(let r=0,l=a.count;r<l;r++)e.isMesh===!0?e.getVertexPosition(r,_vector$b):_vector$b.fromBufferAttribute(a,r),_vector$b.applyMatrix4(e.matrixWorld),this.expandByPoint(_vector$b);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),_box$4.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),_box$4.copy(n.boundingBox)),_box$4.applyMatrix4(e.matrixWorld),this.union(_box$4)}const o=e.children;for(let a=0,r=o.length;a<r;a++)this.expandByObject(o[a],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,_vector$b),_vector$b.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(_center),_extents.subVectors(this.max,_center),_v0$2.subVectors(e.a,_center),_v1$7.subVectors(e.b,_center),_v2$4.subVectors(e.c,_center),_f0.subVectors(_v1$7,_v0$2),_f1.subVectors(_v2$4,_v1$7),_f2.subVectors(_v0$2,_v2$4);let t=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];return!satForAxes(t,_v0$2,_v1$7,_v2$4,_extents)||(t=[1,0,0,0,1,0,0,0,1],!satForAxes(t,_v0$2,_v1$7,_v2$4,_extents))?!1:(_triangleNormal.crossVectors(_f0,_f1),t=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z],satForAxes(t,_v0$2,_v1$7,_v2$4,_extents))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,_vector$b).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(_vector$b).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_points),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$b=new Vector3,_box$4=new Box3,_v0$2=new Vector3,_v1$7=new Vector3,_v2$4=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3;function satForAxes(s,e,t,n,o){for(let a=0,r=s.length-3;a<=r;a+=3){_testAxis.fromArray(s,a);const l=o.x*Math.abs(_testAxis.x)+o.y*Math.abs(_testAxis.y)+o.z*Math.abs(_testAxis.z),c=e.dot(_testAxis),u=t.dot(_testAxis),d=n.dot(_testAxis);if(Math.max(-Math.max(c,u,d),Math.min(c,u,d))>l)return!1}return!0}const _box$3=new Box3,_v1$6=new Vector3,_v2$3=new Vector3;class Sphere{constructor(e=new Vector3,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):_box$3.setFromPoints(e).getCenter(n);let o=0;for(let a=0,r=e.length;a<r;a++)o=Math.max(o,n.distanceToSquared(e[a]));return this.radius=Math.sqrt(o),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;_v1$6.subVectors(e,this.center);const t=_v1$6.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),o=(n-this.radius)*.5;this.center.addScaledVector(_v1$6,o/n),this.radius+=o}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(_v2$3.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(_v1$6.copy(e.center).add(_v2$3)),this.expandByPoint(_v1$6.copy(e.center).sub(_v2$3))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const _vector$a=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal$1=new Vector3;let Ray$1=class{constructor(e=new Vector3,t=new Vector3(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,_vector$a)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=_vector$a.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(_vector$a.copy(this.origin).addScaledVector(this.direction,t),_vector$a.distanceToSquared(e))}distanceSqToSegment(e,t,n,o){_segCenter.copy(e).add(t).multiplyScalar(.5),_segDir.copy(t).sub(e).normalize(),_diff.copy(this.origin).sub(_segCenter);const a=e.distanceTo(t)*.5,r=-this.direction.dot(_segDir),l=_diff.dot(this.direction),c=-_diff.dot(_segDir),u=_diff.lengthSq(),d=Math.abs(1-r*r);let f,g,_,b;if(d>0)if(f=r*c-l,g=r*l-c,b=a*d,f>=0)if(g>=-b)if(g<=b){const B=1/d;f*=B,g*=B,_=f*(f+r*g+2*l)+g*(r*f+g+2*c)+u}else g=a,f=Math.max(0,-(r*g+l)),_=-f*f+g*(g+2*c)+u;else g=-a,f=Math.max(0,-(r*g+l)),_=-f*f+g*(g+2*c)+u;else g<=-b?(f=Math.max(0,-(-r*a+l)),g=f>0?-a:Math.min(Math.max(-a,-c),a),_=-f*f+g*(g+2*c)+u):g<=b?(f=0,g=Math.min(Math.max(-a,-c),a),_=g*(g+2*c)+u):(f=Math.max(0,-(r*a+l)),g=f>0?a:Math.min(Math.max(-a,-c),a),_=-f*f+g*(g+2*c)+u);else g=r>0?-a:a,f=Math.max(0,-(r*g+l)),_=-f*f+g*(g+2*c)+u;return n&&n.copy(this.origin).addScaledVector(this.direction,f),o&&o.copy(_segCenter).addScaledVector(_segDir,g),_}intersectSphere(e,t){_vector$a.subVectors(e.center,this.origin);const n=_vector$a.dot(this.direction),o=_vector$a.dot(_vector$a)-n*n,a=e.radius*e.radius;if(o>a)return null;const r=Math.sqrt(a-o),l=n-r,c=n+r;return c<0?null:l<0?this.at(c,t):this.at(l,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,o,a,r,l,c;const u=1/this.direction.x,d=1/this.direction.y,f=1/this.direction.z,g=this.origin;return u>=0?(n=(e.min.x-g.x)*u,o=(e.max.x-g.x)*u):(n=(e.max.x-g.x)*u,o=(e.min.x-g.x)*u),d>=0?(a=(e.min.y-g.y)*d,r=(e.max.y-g.y)*d):(a=(e.max.y-g.y)*d,r=(e.min.y-g.y)*d),n>r||a>o||((a>n||isNaN(n))&&(n=a),(r<o||isNaN(o))&&(o=r),f>=0?(l=(e.min.z-g.z)*f,c=(e.max.z-g.z)*f):(l=(e.max.z-g.z)*f,c=(e.min.z-g.z)*f),n>c||l>o)||((l>n||n!==n)&&(n=l),(c<o||o!==o)&&(o=c),o<0)?null:this.at(n>=0?n:o,t)}intersectsBox(e){return this.intersectBox(e,_vector$a)!==null}intersectTriangle(e,t,n,o,a){_edge1.subVectors(t,e),_edge2.subVectors(n,e),_normal$1.crossVectors(_edge1,_edge2);let r=this.direction.dot(_normal$1),l;if(r>0){if(o)return null;l=1}else if(r<0)l=-1,r=-r;else return null;_diff.subVectors(this.origin,e);const c=l*this.direction.dot(_edge2.crossVectors(_diff,_edge2));if(c<0)return null;const u=l*this.direction.dot(_edge1.cross(_diff));if(u<0||c+u>r)return null;const d=-l*_diff.dot(_normal$1);return d<0?null:this.at(d/r,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}};class Matrix4{constructor(e,t,n,o,a,r,l,c,u,d,f,g,_,b,B,I){Matrix4.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,o,a,r,l,c,u,d,f,g,_,b,B,I)}set(e,t,n,o,a,r,l,c,u,d,f,g,_,b,B,I){const C=this.elements;return C[0]=e,C[4]=t,C[8]=n,C[12]=o,C[1]=a,C[5]=r,C[9]=l,C[13]=c,C[2]=u,C[6]=d,C[10]=f,C[14]=g,C[3]=_,C[7]=b,C[11]=B,C[15]=I,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Matrix4().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,o=1/_v1$5.setFromMatrixColumn(e,0).length(),a=1/_v1$5.setFromMatrixColumn(e,1).length(),r=1/_v1$5.setFromMatrixColumn(e,2).length();return t[0]=n[0]*o,t[1]=n[1]*o,t[2]=n[2]*o,t[3]=0,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,o=e.y,a=e.z,r=Math.cos(n),l=Math.sin(n),c=Math.cos(o),u=Math.sin(o),d=Math.cos(a),f=Math.sin(a);if(e.order==="XYZ"){const g=r*d,_=r*f,b=l*d,B=l*f;t[0]=c*d,t[4]=-c*f,t[8]=u,t[1]=_+b*u,t[5]=g-B*u,t[9]=-l*c,t[2]=B-g*u,t[6]=b+_*u,t[10]=r*c}else if(e.order==="YXZ"){const g=c*d,_=c*f,b=u*d,B=u*f;t[0]=g+B*l,t[4]=b*l-_,t[8]=r*u,t[1]=r*f,t[5]=r*d,t[9]=-l,t[2]=_*l-b,t[6]=B+g*l,t[10]=r*c}else if(e.order==="ZXY"){const g=c*d,_=c*f,b=u*d,B=u*f;t[0]=g-B*l,t[4]=-r*f,t[8]=b+_*l,t[1]=_+b*l,t[5]=r*d,t[9]=B-g*l,t[2]=-r*u,t[6]=l,t[10]=r*c}else if(e.order==="ZYX"){const g=r*d,_=r*f,b=l*d,B=l*f;t[0]=c*d,t[4]=b*u-_,t[8]=g*u+B,t[1]=c*f,t[5]=B*u+g,t[9]=_*u-b,t[2]=-u,t[6]=l*c,t[10]=r*c}else if(e.order==="YZX"){const g=r*c,_=r*u,b=l*c,B=l*u;t[0]=c*d,t[4]=B-g*f,t[8]=b*f+_,t[1]=f,t[5]=r*d,t[9]=-l*d,t[2]=-u*d,t[6]=_*f+b,t[10]=g-B*f}else if(e.order==="XZY"){const g=r*c,_=r*u,b=l*c,B=l*u;t[0]=c*d,t[4]=-f,t[8]=u*d,t[1]=g*f+B,t[5]=r*d,t[9]=_*f-b,t[2]=b*f-_,t[6]=l*d,t[10]=B*f+g}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(_zero,e,_one)}lookAt(e,t,n){const o=this.elements;return _z.subVectors(e,t),_z.lengthSq()===0&&(_z.z=1),_z.normalize(),_x.crossVectors(n,_z),_x.lengthSq()===0&&(Math.abs(n.z)===1?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(n,_z)),_x.normalize(),_y.crossVectors(_z,_x),o[0]=_x.x,o[4]=_y.x,o[8]=_z.x,o[1]=_x.y,o[5]=_y.y,o[9]=_z.y,o[2]=_x.z,o[6]=_y.z,o[10]=_z.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,o=t.elements,a=this.elements,r=n[0],l=n[4],c=n[8],u=n[12],d=n[1],f=n[5],g=n[9],_=n[13],b=n[2],B=n[6],I=n[10],C=n[14],R=n[3],L=n[7],F=n[11],N=n[15],k=o[0],Q=o[4],z=o[8],G=o[12],O=o[1],q=o[5],ce=o[9],ne=o[13],ue=o[2],pe=o[6],fe=o[10],ee=o[14],J=o[3],ye=o[7],Te=o[11],xe=o[15];return a[0]=r*k+l*O+c*ue+u*J,a[4]=r*Q+l*q+c*pe+u*ye,a[8]=r*z+l*ce+c*fe+u*Te,a[12]=r*G+l*ne+c*ee+u*xe,a[1]=d*k+f*O+g*ue+_*J,a[5]=d*Q+f*q+g*pe+_*ye,a[9]=d*z+f*ce+g*fe+_*Te,a[13]=d*G+f*ne+g*ee+_*xe,a[2]=b*k+B*O+I*ue+C*J,a[6]=b*Q+B*q+I*pe+C*ye,a[10]=b*z+B*ce+I*fe+C*Te,a[14]=b*G+B*ne+I*ee+C*xe,a[3]=R*k+L*O+F*ue+N*J,a[7]=R*Q+L*q+F*pe+N*ye,a[11]=R*z+L*ce+F*fe+N*Te,a[15]=R*G+L*ne+F*ee+N*xe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],o=e[8],a=e[12],r=e[1],l=e[5],c=e[9],u=e[13],d=e[2],f=e[6],g=e[10],_=e[14],b=e[3],B=e[7],I=e[11],C=e[15];return b*(+a*c*f-o*u*f-a*l*g+n*u*g+o*l*_-n*c*_)+B*(+t*c*_-t*u*g+a*r*g-o*r*_+o*u*d-a*c*d)+I*(+t*u*f-t*l*_-a*r*f+n*r*_+a*l*d-n*u*d)+C*(-o*l*d-t*c*f+t*l*g+o*r*f-n*r*g+n*c*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const o=this.elements;return e.isVector3?(o[12]=e.x,o[13]=e.y,o[14]=e.z):(o[12]=e,o[13]=t,o[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],o=e[2],a=e[3],r=e[4],l=e[5],c=e[6],u=e[7],d=e[8],f=e[9],g=e[10],_=e[11],b=e[12],B=e[13],I=e[14],C=e[15],R=f*I*u-B*g*u+B*c*_-l*I*_-f*c*C+l*g*C,L=b*g*u-d*I*u-b*c*_+r*I*_+d*c*C-r*g*C,F=d*B*u-b*f*u+b*l*_-r*B*_-d*l*C+r*f*C,N=b*f*c-d*B*c-b*l*g+r*B*g+d*l*I-r*f*I,k=t*R+n*L+o*F+a*N;if(k===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const Q=1/k;return e[0]=R*Q,e[1]=(B*g*a-f*I*a-B*o*_+n*I*_+f*o*C-n*g*C)*Q,e[2]=(l*I*a-B*c*a+B*o*u-n*I*u-l*o*C+n*c*C)*Q,e[3]=(f*c*a-l*g*a-f*o*u+n*g*u+l*o*_-n*c*_)*Q,e[4]=L*Q,e[5]=(d*I*a-b*g*a+b*o*_-t*I*_-d*o*C+t*g*C)*Q,e[6]=(b*c*a-r*I*a-b*o*u+t*I*u+r*o*C-t*c*C)*Q,e[7]=(r*g*a-d*c*a+d*o*u-t*g*u-r*o*_+t*c*_)*Q,e[8]=F*Q,e[9]=(b*f*a-d*B*a-b*n*_+t*B*_+d*n*C-t*f*C)*Q,e[10]=(r*B*a-b*l*a+b*n*u-t*B*u-r*n*C+t*l*C)*Q,e[11]=(d*l*a-r*f*a-d*n*u+t*f*u+r*n*_-t*l*_)*Q,e[12]=N*Q,e[13]=(d*B*o-b*f*o+b*n*g-t*B*g-d*n*I+t*f*I)*Q,e[14]=(b*l*o-r*B*o-b*n*c+t*B*c+r*n*I-t*l*I)*Q,e[15]=(r*f*o-d*l*o+d*n*c-t*f*c-r*n*g+t*l*g)*Q,this}scale(e){const t=this.elements,n=e.x,o=e.y,a=e.z;return t[0]*=n,t[4]*=o,t[8]*=a,t[1]*=n,t[5]*=o,t[9]*=a,t[2]*=n,t[6]*=o,t[10]*=a,t[3]*=n,t[7]*=o,t[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],o=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,o))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),o=Math.sin(t),a=1-n,r=e.x,l=e.y,c=e.z,u=a*r,d=a*l;return this.set(u*r+n,u*l-o*c,u*c+o*l,0,u*l+o*c,d*l+n,d*c-o*r,0,u*c-o*l,d*c+o*r,a*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,o,a,r){return this.set(1,n,a,0,e,1,r,0,t,o,1,0,0,0,0,1),this}compose(e,t,n){const o=this.elements,a=t._x,r=t._y,l=t._z,c=t._w,u=a+a,d=r+r,f=l+l,g=a*u,_=a*d,b=a*f,B=r*d,I=r*f,C=l*f,R=c*u,L=c*d,F=c*f,N=n.x,k=n.y,Q=n.z;return o[0]=(1-(B+C))*N,o[1]=(_+F)*N,o[2]=(b-L)*N,o[3]=0,o[4]=(_-F)*k,o[5]=(1-(g+C))*k,o[6]=(I+R)*k,o[7]=0,o[8]=(b+L)*Q,o[9]=(I-R)*Q,o[10]=(1-(g+B))*Q,o[11]=0,o[12]=e.x,o[13]=e.y,o[14]=e.z,o[15]=1,this}decompose(e,t,n){const o=this.elements;let a=_v1$5.set(o[0],o[1],o[2]).length();const r=_v1$5.set(o[4],o[5],o[6]).length(),l=_v1$5.set(o[8],o[9],o[10]).length();this.determinant()<0&&(a=-a),e.x=o[12],e.y=o[13],e.z=o[14],_m1$2.copy(this);const u=1/a,d=1/r,f=1/l;return _m1$2.elements[0]*=u,_m1$2.elements[1]*=u,_m1$2.elements[2]*=u,_m1$2.elements[4]*=d,_m1$2.elements[5]*=d,_m1$2.elements[6]*=d,_m1$2.elements[8]*=f,_m1$2.elements[9]*=f,_m1$2.elements[10]*=f,t.setFromRotationMatrix(_m1$2),n.x=a,n.y=r,n.z=l,this}makePerspective(e,t,n,o,a,r,l=WebGLCoordinateSystem){const c=this.elements,u=2*a/(t-e),d=2*a/(n-o),f=(t+e)/(t-e),g=(n+o)/(n-o);let _,b;if(l===WebGLCoordinateSystem)_=-(r+a)/(r-a),b=-2*r*a/(r-a);else if(l===WebGPUCoordinateSystem)_=-r/(r-a),b=-r*a/(r-a);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+l);return c[0]=u,c[4]=0,c[8]=f,c[12]=0,c[1]=0,c[5]=d,c[9]=g,c[13]=0,c[2]=0,c[6]=0,c[10]=_,c[14]=b,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,o,a,r,l=WebGLCoordinateSystem){const c=this.elements,u=1/(t-e),d=1/(n-o),f=1/(r-a),g=(t+e)*u,_=(n+o)*d;let b,B;if(l===WebGLCoordinateSystem)b=(r+a)*f,B=-2*f;else if(l===WebGPUCoordinateSystem)b=a*f,B=-1*f;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+l);return c[0]=2*u,c[4]=0,c[8]=0,c[12]=-g,c[1]=0,c[5]=2*d,c[9]=0,c[13]=-_,c[2]=0,c[6]=0,c[10]=B,c[14]=-b,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let o=0;o<16;o++)if(t[o]!==n[o])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const _v1$5=new Vector3,_m1$2=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3,_matrix$2=new Matrix4,_quaternion$3=new Quaternion;class Euler{constructor(e=0,t=0,n=0,o=Euler.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=o}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,o=this._order){return this._x=e,this._y=t,this._z=n,this._order=o,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const o=e.elements,a=o[0],r=o[4],l=o[8],c=o[1],u=o[5],d=o[9],f=o[2],g=o[6],_=o[10];switch(t){case"XYZ":this._y=Math.asin(clamp$1(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-d,_),this._z=Math.atan2(-r,a)):(this._x=Math.atan2(g,u),this._z=0);break;case"YXZ":this._x=Math.asin(-clamp$1(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(l,_),this._z=Math.atan2(c,u)):(this._y=Math.atan2(-f,a),this._z=0);break;case"ZXY":this._x=Math.asin(clamp$1(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-f,_),this._z=Math.atan2(-r,u)):(this._y=0,this._z=Math.atan2(c,a));break;case"ZYX":this._y=Math.asin(-clamp$1(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(g,_),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-r,u));break;case"YZX":this._z=Math.asin(clamp$1(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,u),this._y=Math.atan2(-f,a)):(this._x=0,this._y=Math.atan2(l,_));break;case"XZY":this._z=Math.asin(-clamp$1(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(g,u),this._y=Math.atan2(l,a)):(this._x=Math.atan2(-d,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return _matrix$2.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_matrix$2,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return _quaternion$3.setFromEuler(this),this.setFromQuaternion(_quaternion$3,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Euler.DEFAULT_ORDER="XYZ";class Layers{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let _object3DId=0;const _v1$4=new Vector3,_q1=new Quaternion,_m1$1$1=new Matrix4,_target=new Vector3,_position$3=new Vector3,_scale$2=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"},_childaddedEvent={type:"childadded",child:null},_childremovedEvent={type:"childremoved",child:null};class Object3D extends EventDispatcher{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:_object3DId++}),this.uuid=generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DEFAULT_UP.clone();const e=new Vector3,t=new Euler,n=new Quaternion,o=new Vector3(1,1,1);function a(){n.setFromEuler(t,!1)}function r(){t.setFromQuaternion(n,void 0,!1)}t._onChange(a),n._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:o},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.multiply(_q1),this}rotateOnWorldAxis(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.premultiply(_q1),this}rotateX(e){return this.rotateOnAxis(_xAxis,e)}rotateY(e){return this.rotateOnAxis(_yAxis,e)}rotateZ(e){return this.rotateOnAxis(_zAxis,e)}translateOnAxis(e,t){return _v1$4.copy(e).applyQuaternion(this.quaternion),this.position.add(_v1$4.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(_xAxis,e)}translateY(e){return this.translateOnAxis(_yAxis,e)}translateZ(e){return this.translateOnAxis(_zAxis,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(_m1$1$1.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?_target.copy(e):_target.set(e,t,n);const o=this.parent;this.updateWorldMatrix(!0,!1),_position$3.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_m1$1$1.lookAt(_position$3,_target,this.up):_m1$1$1.lookAt(_target,_position$3,this.up),this.quaternion.setFromRotationMatrix(_m1$1$1),o&&(_m1$1$1.extractRotation(o.matrixWorld),_q1.setFromRotationMatrix(_m1$1$1),this.quaternion.premultiply(_q1.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(_addedEvent),_childaddedEvent.child=e,this.dispatchEvent(_childaddedEvent),_childaddedEvent.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_removedEvent),_childremovedEvent.child=e,this.dispatchEvent(_childremovedEvent),_childremovedEvent.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),_m1$1$1.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),_m1$1$1.multiply(e.parent.matrixWorld)),e.applyMatrix4(_m1$1$1),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(_addedEvent),_childaddedEvent.child=e,this.dispatchEvent(_childaddedEvent),_childaddedEvent.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,o=this.children.length;n<o;n++){const r=this.children[n].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const o=this.children;for(let a=0,r=o.length;a<r;a++)o[a].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position$3,e,_scale$2),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position$3,_quaternion$2,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,o=t.length;n<o;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,o=t.length;n<o;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,o=t.length;n<o;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const o=this.children;for(let a=0,r=o.length;a<r;a++)o[a].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const o={};o.uuid=this.uuid,o.type=this.type,this.name!==""&&(o.name=this.name),this.castShadow===!0&&(o.castShadow=!0),this.receiveShadow===!0&&(o.receiveShadow=!0),this.visible===!1&&(o.visible=!1),this.frustumCulled===!1&&(o.frustumCulled=!1),this.renderOrder!==0&&(o.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(o.userData=this.userData),o.layers=this.layers.mask,o.matrix=this.matrix.toArray(),o.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(o.matrixAutoUpdate=!1),this.isInstancedMesh&&(o.type="InstancedMesh",o.count=this.count,o.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(o.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(o.type="BatchedMesh",o.perObjectFrustumCulled=this.perObjectFrustumCulled,o.sortObjects=this.sortObjects,o.drawRanges=this._drawRanges,o.reservedRanges=this._reservedRanges,o.geometryInfo=this._geometryInfo.map(l=>({...l,boundingBox:l.boundingBox?l.boundingBox.toJSON():void 0,boundingSphere:l.boundingSphere?l.boundingSphere.toJSON():void 0})),o.instanceInfo=this._instanceInfo.map(l=>({...l})),o.availableInstanceIds=this._availableInstanceIds.slice(),o.availableGeometryIds=this._availableGeometryIds.slice(),o.nextIndexStart=this._nextIndexStart,o.nextVertexStart=this._nextVertexStart,o.geometryCount=this._geometryCount,o.maxInstanceCount=this._maxInstanceCount,o.maxVertexCount=this._maxVertexCount,o.maxIndexCount=this._maxIndexCount,o.geometryInitialized=this._geometryInitialized,o.matricesTexture=this._matricesTexture.toJSON(e),o.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(o.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(o.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(o.boundingBox=this.boundingBox.toJSON()));function a(l,c){return l[c.uuid]===void 0&&(l[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?o.background=this.background.toJSON():this.background.isTexture&&(o.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(o.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){o.geometry=a(e.geometries,this.geometry);const l=this.geometry.parameters;if(l!==void 0&&l.shapes!==void 0){const c=l.shapes;if(Array.isArray(c))for(let u=0,d=c.length;u<d;u++){const f=c[u];a(e.shapes,f)}else a(e.shapes,c)}}if(this.isSkinnedMesh&&(o.bindMode=this.bindMode,o.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(e.skeletons,this.skeleton),o.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const l=[];for(let c=0,u=this.material.length;c<u;c++)l.push(a(e.materials,this.material[c]));o.material=l}else o.material=a(e.materials,this.material);if(this.children.length>0){o.children=[];for(let l=0;l<this.children.length;l++)o.children.push(this.children[l].toJSON(e).object)}if(this.animations.length>0){o.animations=[];for(let l=0;l<this.animations.length;l++){const c=this.animations[l];o.animations.push(a(e.animations,c))}}if(t){const l=r(e.geometries),c=r(e.materials),u=r(e.textures),d=r(e.images),f=r(e.shapes),g=r(e.skeletons),_=r(e.animations),b=r(e.nodes);l.length>0&&(n.geometries=l),c.length>0&&(n.materials=c),u.length>0&&(n.textures=u),d.length>0&&(n.images=d),f.length>0&&(n.shapes=f),g.length>0&&(n.skeletons=g),_.length>0&&(n.animations=_),b.length>0&&(n.nodes=b)}return n.object=o,n;function r(l){const c=[];for(const u in l){const d=l[u];delete d.metadata,c.push(d)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const o=e.children[n];this.add(o.clone())}return this}}Object3D.DEFAULT_UP=new Vector3(0,1,0);Object3D.DEFAULT_MATRIX_AUTO_UPDATE=!0;Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const _v0$1=new Vector3,_v1$3=new Vector3,_v2$2=new Vector3,_v3$2=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3,_v40=new Vector4,_v41=new Vector4,_v42=new Vector4;class Triangle{constructor(e=new Vector3,t=new Vector3,n=new Vector3){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,o){o.subVectors(n,t),_v0$1.subVectors(e,t),o.cross(_v0$1);const a=o.lengthSq();return a>0?o.multiplyScalar(1/Math.sqrt(a)):o.set(0,0,0)}static getBarycoord(e,t,n,o,a){_v0$1.subVectors(o,t),_v1$3.subVectors(n,t),_v2$2.subVectors(e,t);const r=_v0$1.dot(_v0$1),l=_v0$1.dot(_v1$3),c=_v0$1.dot(_v2$2),u=_v1$3.dot(_v1$3),d=_v1$3.dot(_v2$2),f=r*u-l*l;if(f===0)return a.set(0,0,0),null;const g=1/f,_=(u*c-l*d)*g,b=(r*d-l*c)*g;return a.set(1-_-b,b,_)}static containsPoint(e,t,n,o){return this.getBarycoord(e,t,n,o,_v3$2)===null?!1:_v3$2.x>=0&&_v3$2.y>=0&&_v3$2.x+_v3$2.y<=1}static getInterpolation(e,t,n,o,a,r,l,c){return this.getBarycoord(e,t,n,o,_v3$2)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(a,_v3$2.x),c.addScaledVector(r,_v3$2.y),c.addScaledVector(l,_v3$2.z),c)}static getInterpolatedAttribute(e,t,n,o,a,r){return _v40.setScalar(0),_v41.setScalar(0),_v42.setScalar(0),_v40.fromBufferAttribute(e,t),_v41.fromBufferAttribute(e,n),_v42.fromBufferAttribute(e,o),r.setScalar(0),r.addScaledVector(_v40,a.x),r.addScaledVector(_v41,a.y),r.addScaledVector(_v42,a.z),r}static isFrontFacing(e,t,n,o){return _v0$1.subVectors(n,t),_v1$3.subVectors(e,t),_v0$1.cross(_v1$3).dot(o)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,o){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[o]),this}setFromAttributeAndIndices(e,t,n,o){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,o),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return _v0$1.subVectors(this.c,this.b),_v1$3.subVectors(this.a,this.b),_v0$1.cross(_v1$3).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Triangle.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Triangle.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,o,a){return Triangle.getInterpolation(e,this.a,this.b,this.c,t,n,o,a)}containsPoint(e){return Triangle.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Triangle.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,o=this.b,a=this.c;let r,l;_vab.subVectors(o,n),_vac.subVectors(a,n),_vap.subVectors(e,n);const c=_vab.dot(_vap),u=_vac.dot(_vap);if(c<=0&&u<=0)return t.copy(n);_vbp.subVectors(e,o);const d=_vab.dot(_vbp),f=_vac.dot(_vbp);if(d>=0&&f<=d)return t.copy(o);const g=c*f-d*u;if(g<=0&&c>=0&&d<=0)return r=c/(c-d),t.copy(n).addScaledVector(_vab,r);_vcp.subVectors(e,a);const _=_vab.dot(_vcp),b=_vac.dot(_vcp);if(b>=0&&_<=b)return t.copy(a);const B=_*u-c*b;if(B<=0&&u>=0&&b<=0)return l=u/(u-b),t.copy(n).addScaledVector(_vac,l);const I=d*b-_*f;if(I<=0&&f-d>=0&&_-b>=0)return _vbc.subVectors(a,o),l=(f-d)/(f-d+(_-b)),t.copy(o).addScaledVector(_vbc,l);const C=1/(I+B+g);return r=B*C,l=g*C,t.copy(n).addScaledVector(_vab,r).addScaledVector(_vac,l)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};function hue2rgb(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Color{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const o=e;o&&o.isColor?this.copy(o):typeof o=="number"?this.setHex(o):typeof o=="string"&&this.setStyle(o)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=SRGBColorSpace){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ColorManagement.colorSpaceToWorking(this,t),this}setRGB(e,t,n,o=ColorManagement.workingColorSpace){return this.r=e,this.g=t,this.b=n,ColorManagement.colorSpaceToWorking(this,o),this}setHSL(e,t,n,o=ColorManagement.workingColorSpace){if(e=euclideanModulo(e,1),t=clamp$1(t,0,1),n=clamp$1(n,0,1),t===0)this.r=this.g=this.b=n;else{const a=n<=.5?n*(1+t):n+t-n*t,r=2*n-a;this.r=hue2rgb(r,a,e+1/3),this.g=hue2rgb(r,a,e),this.b=hue2rgb(r,a,e-1/3)}return ColorManagement.colorSpaceToWorking(this,o),this}setStyle(e,t=SRGBColorSpace){function n(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let o;if(o=/^(\w+)\(([^\)]*)\)/.exec(e)){let a;const r=o[1],l=o[2];switch(r){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return n(a[4]),this.setRGB(Math.min(255,parseInt(a[1],10))/255,Math.min(255,parseInt(a[2],10))/255,Math.min(255,parseInt(a[3],10))/255,t);if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return n(a[4]),this.setRGB(Math.min(100,parseInt(a[1],10))/100,Math.min(100,parseInt(a[2],10))/100,Math.min(100,parseInt(a[3],10))/100,t);break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return n(a[4]),this.setHSL(parseFloat(a[1])/360,parseFloat(a[2])/100,parseFloat(a[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(o=/^\#([A-Fa-f\d]+)$/.exec(e)){const a=o[1],r=a.length;if(r===3)return this.setRGB(parseInt(a.charAt(0),16)/15,parseInt(a.charAt(1),16)/15,parseInt(a.charAt(2),16)/15,t);if(r===6)return this.setHex(parseInt(a,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=SRGBColorSpace){const n=_colorKeywords[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=SRGBToLinear(e.r),this.g=SRGBToLinear(e.g),this.b=SRGBToLinear(e.b),this}copyLinearToSRGB(e){return this.r=LinearToSRGB(e.r),this.g=LinearToSRGB(e.g),this.b=LinearToSRGB(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=SRGBColorSpace){return ColorManagement.workingToColorSpace(_color.copy(this),e),Math.round(clamp$1(_color.r*255,0,255))*65536+Math.round(clamp$1(_color.g*255,0,255))*256+Math.round(clamp$1(_color.b*255,0,255))}getHexString(e=SRGBColorSpace){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ColorManagement.workingColorSpace){ColorManagement.workingToColorSpace(_color.copy(this),t);const n=_color.r,o=_color.g,a=_color.b,r=Math.max(n,o,a),l=Math.min(n,o,a);let c,u;const d=(l+r)/2;if(l===r)c=0,u=0;else{const f=r-l;switch(u=d<=.5?f/(r+l):f/(2-r-l),r){case n:c=(o-a)/f+(o<a?6:0);break;case o:c=(a-n)/f+2;break;case a:c=(n-o)/f+4;break}c/=6}return e.h=c,e.s=u,e.l=d,e}getRGB(e,t=ColorManagement.workingColorSpace){return ColorManagement.workingToColorSpace(_color.copy(this),t),e.r=_color.r,e.g=_color.g,e.b=_color.b,e}getStyle(e=SRGBColorSpace){ColorManagement.workingToColorSpace(_color.copy(this),e);const t=_color.r,n=_color.g,o=_color.b;return e!==SRGBColorSpace?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${o.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(o*255)})`}offsetHSL(e,t,n){return this.getHSL(_hslA),this.setHSL(_hslA.h+e,_hslA.s+t,_hslA.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(_hslA),e.getHSL(_hslB);const n=lerp$1(_hslA.h,_hslB.h,t),o=lerp$1(_hslA.s,_hslB.s,t),a=lerp$1(_hslA.l,_hslB.l,t);return this.setHSL(n,o,a),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,o=this.b,a=e.elements;return this.r=a[0]*t+a[3]*n+a[6]*o,this.g=a[1]*t+a[4]*n+a[7]*o,this.b=a[2]*t+a[5]*n+a[8]*o,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const _color=new Color;Color.NAMES=_colorKeywords;let _materialId=0;class Material extends EventDispatcher{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:_materialId++}),this.uuid=generateUUID(),this.name="",this.type="Material",this.blending=NormalBlending,this.side=FrontSide,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=SrcAlphaFactor,this.blendDst=OneMinusSrcAlphaFactor,this.blendEquation=AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Color(0,0,0),this.blendAlpha=0,this.depthFunc=LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=AlwaysStencilFunc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=KeepStencilOp,this.stencilZFail=KeepStencilOp,this.stencilZPass=KeepStencilOp,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const o=this[t];if(o===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}o&&o.isColor?o.set(n):o&&o.isVector3&&n&&n.isVector3?o.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==NormalBlending&&(n.blending=this.blending),this.side!==FrontSide&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==SrcAlphaFactor&&(n.blendSrc=this.blendSrc),this.blendDst!==OneMinusSrcAlphaFactor&&(n.blendDst=this.blendDst),this.blendEquation!==AddEquation&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==LessEqualDepth&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==AlwaysStencilFunc&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==KeepStencilOp&&(n.stencilFail=this.stencilFail),this.stencilZFail!==KeepStencilOp&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==KeepStencilOp&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function o(a){const r=[];for(const l in a){const c=a[l];delete c.metadata,r.push(c)}return r}if(t){const a=o(e.textures),r=o(e.images);a.length>0&&(n.textures=a),r.length>0&&(n.images=r)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const o=t.length;n=new Array(o);for(let a=0;a!==o;++a)n[a]=t[a].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class MeshBasicMaterial extends Material{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Euler,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const _tables=_generateTables();function _generateTables(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),o=new Uint32Array(512);for(let c=0;c<256;++c){const u=c-127;u<-27?(n[c]=0,n[c|256]=32768,o[c]=24,o[c|256]=24):u<-14?(n[c]=1024>>-u-14,n[c|256]=1024>>-u-14|32768,o[c]=-u-1,o[c|256]=-u-1):u<=15?(n[c]=u+15<<10,n[c|256]=u+15<<10|32768,o[c]=13,o[c|256]=13):u<128?(n[c]=31744,n[c|256]=64512,o[c]=24,o[c|256]=24):(n[c]=31744,n[c|256]=64512,o[c]=13,o[c|256]=13)}const a=new Uint32Array(2048),r=new Uint32Array(64),l=new Uint32Array(64);for(let c=1;c<1024;++c){let u=c<<13,d=0;for(;(u&8388608)===0;)u<<=1,d-=8388608;u&=-8388609,d+=947912704,a[c]=u|d}for(let c=1024;c<2048;++c)a[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)r[c]=c<<23;r[31]=1199570944,r[32]=2147483648;for(let c=33;c<63;++c)r[c]=2147483648+(c-32<<23);r[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(l[c]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:o,mantissaTable:a,exponentTable:r,offsetTable:l}}function toHalfFloat$1(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=clamp$1(s,-65504,65504),_tables.floatView[0]=s;const e=_tables.uint32View[0],t=e>>23&511;return _tables.baseTable[t]+((e&8388607)>>_tables.shiftTable[t])}function fromHalfFloat$2(s){const e=s>>10;return _tables.uint32View[0]=_tables.mantissaTable[_tables.offsetTable[e]+(s&1023)]+_tables.exponentTable[e],_tables.floatView[0]}class DataUtils{static toHalfFloat(e){return toHalfFloat$1(e)}static fromHalfFloat(e){return fromHalfFloat$2(e)}}const _vector$9=new Vector3,_vector2$1=new Vector2;let _id$2=0;class BufferAttribute{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:_id$2++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=StaticDrawUsage,this.updateRanges=[],this.gpuType=FloatType,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let o=0,a=this.itemSize;o<a;o++)this.array[e+o]=t.array[n+o];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)_vector2$1.fromBufferAttribute(this,t),_vector2$1.applyMatrix3(e),this.setXY(t,_vector2$1.x,_vector2$1.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)_vector$9.fromBufferAttribute(this,t),_vector$9.applyMatrix3(e),this.setXYZ(t,_vector$9.x,_vector$9.y,_vector$9.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)_vector$9.fromBufferAttribute(this,t),_vector$9.applyMatrix4(e),this.setXYZ(t,_vector$9.x,_vector$9.y,_vector$9.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)_vector$9.fromBufferAttribute(this,t),_vector$9.applyNormalMatrix(e),this.setXYZ(t,_vector$9.x,_vector$9.y,_vector$9.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)_vector$9.fromBufferAttribute(this,t),_vector$9.transformDirection(e),this.setXYZ(t,_vector$9.x,_vector$9.y,_vector$9.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=denormalize(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=normalize$1(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=denormalize(t,this.array)),t}setX(e,t){return this.normalized&&(t=normalize$1(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=denormalize(t,this.array)),t}setY(e,t){return this.normalized&&(t=normalize$1(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=denormalize(t,this.array)),t}setZ(e,t){return this.normalized&&(t=normalize$1(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=denormalize(t,this.array)),t}setW(e,t){return this.normalized&&(t=normalize$1(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=normalize$1(t,this.array),n=normalize$1(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,o){return e*=this.itemSize,this.normalized&&(t=normalize$1(t,this.array),n=normalize$1(n,this.array),o=normalize$1(o,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=o,this}setXYZW(e,t,n,o,a){return e*=this.itemSize,this.normalized&&(t=normalize$1(t,this.array),n=normalize$1(n,this.array),o=normalize$1(o,this.array),a=normalize$1(a,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=o,this.array[e+3]=a,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==StaticDrawUsage&&(e.usage=this.usage),e}}class Uint16BufferAttribute extends BufferAttribute{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Uint32BufferAttribute extends BufferAttribute{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Float32BufferAttribute extends BufferAttribute{constructor(e,t,n){super(new Float32Array(e),t,n)}}let _id$1=0;const _m1$3=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$2=new Box3,_boxMorphTargets=new Box3,_vector$8=new Vector3;class BufferGeometry extends EventDispatcher{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:_id$1++}),this.uuid=generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(arrayNeedsUint32(e)?Uint32BufferAttribute:Uint16BufferAttribute)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const a=new Matrix3().getNormalMatrix(e);n.applyNormalMatrix(a),n.needsUpdate=!0}const o=this.attributes.tangent;return o!==void 0&&(o.transformDirection(e),o.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return _m1$3.makeRotationFromQuaternion(e),this.applyMatrix4(_m1$3),this}rotateX(e){return _m1$3.makeRotationX(e),this.applyMatrix4(_m1$3),this}rotateY(e){return _m1$3.makeRotationY(e),this.applyMatrix4(_m1$3),this}rotateZ(e){return _m1$3.makeRotationZ(e),this.applyMatrix4(_m1$3),this}translate(e,t,n){return _m1$3.makeTranslation(e,t,n),this.applyMatrix4(_m1$3),this}scale(e,t,n){return _m1$3.makeScale(e,t,n),this.applyMatrix4(_m1$3),this}lookAt(e){return _obj.lookAt(e),_obj.updateMatrix(),this.applyMatrix4(_obj.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset).negate(),this.translate(_offset.x,_offset.y,_offset.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let o=0,a=e.length;o<a;o++){const r=e[o];n.push(r.x,r.y,r.z||0)}this.setAttribute("position",new Float32BufferAttribute(n,3))}else{const n=Math.min(e.length,t.count);for(let o=0;o<n;o++){const a=e[o];t.setXYZ(o,a.x,a.y,a.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Box3);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new Vector3(-1/0,-1/0,-1/0),new Vector3(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,o=t.length;n<o;n++){const a=t[n];_box$2.setFromBufferAttribute(a),this.morphTargetsRelative?(_vector$8.addVectors(this.boundingBox.min,_box$2.min),this.boundingBox.expandByPoint(_vector$8),_vector$8.addVectors(this.boundingBox.max,_box$2.max),this.boundingBox.expandByPoint(_vector$8)):(this.boundingBox.expandByPoint(_box$2.min),this.boundingBox.expandByPoint(_box$2.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Sphere);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new Vector3,1/0);return}if(e){const n=this.boundingSphere.center;if(_box$2.setFromBufferAttribute(e),t)for(let a=0,r=t.length;a<r;a++){const l=t[a];_boxMorphTargets.setFromBufferAttribute(l),this.morphTargetsRelative?(_vector$8.addVectors(_box$2.min,_boxMorphTargets.min),_box$2.expandByPoint(_vector$8),_vector$8.addVectors(_box$2.max,_boxMorphTargets.max),_box$2.expandByPoint(_vector$8)):(_box$2.expandByPoint(_boxMorphTargets.min),_box$2.expandByPoint(_boxMorphTargets.max))}_box$2.getCenter(n);let o=0;for(let a=0,r=e.count;a<r;a++)_vector$8.fromBufferAttribute(e,a),o=Math.max(o,n.distanceToSquared(_vector$8));if(t)for(let a=0,r=t.length;a<r;a++){const l=t[a],c=this.morphTargetsRelative;for(let u=0,d=l.count;u<d;u++)_vector$8.fromBufferAttribute(l,u),c&&(_offset.fromBufferAttribute(e,u),_vector$8.add(_offset)),o=Math.max(o,n.distanceToSquared(_vector$8))}this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,o=t.normal,a=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new BufferAttribute(new Float32Array(4*n.count),4));const r=this.getAttribute("tangent"),l=[],c=[];for(let z=0;z<n.count;z++)l[z]=new Vector3,c[z]=new Vector3;const u=new Vector3,d=new Vector3,f=new Vector3,g=new Vector2,_=new Vector2,b=new Vector2,B=new Vector3,I=new Vector3;function C(z,G,O){u.fromBufferAttribute(n,z),d.fromBufferAttribute(n,G),f.fromBufferAttribute(n,O),g.fromBufferAttribute(a,z),_.fromBufferAttribute(a,G),b.fromBufferAttribute(a,O),d.sub(u),f.sub(u),_.sub(g),b.sub(g);const q=1/(_.x*b.y-b.x*_.y);isFinite(q)&&(B.copy(d).multiplyScalar(b.y).addScaledVector(f,-_.y).multiplyScalar(q),I.copy(f).multiplyScalar(_.x).addScaledVector(d,-b.x).multiplyScalar(q),l[z].add(B),l[G].add(B),l[O].add(B),c[z].add(I),c[G].add(I),c[O].add(I))}let R=this.groups;R.length===0&&(R=[{start:0,count:e.count}]);for(let z=0,G=R.length;z<G;++z){const O=R[z],q=O.start,ce=O.count;for(let ne=q,ue=q+ce;ne<ue;ne+=3)C(e.getX(ne+0),e.getX(ne+1),e.getX(ne+2))}const L=new Vector3,F=new Vector3,N=new Vector3,k=new Vector3;function Q(z){N.fromBufferAttribute(o,z),k.copy(N);const G=l[z];L.copy(G),L.sub(N.multiplyScalar(N.dot(G))).normalize(),F.crossVectors(k,G);const q=F.dot(c[z])<0?-1:1;r.setXYZW(z,L.x,L.y,L.z,q)}for(let z=0,G=R.length;z<G;++z){const O=R[z],q=O.start,ce=O.count;for(let ne=q,ue=q+ce;ne<ue;ne+=3)Q(e.getX(ne+0)),Q(e.getX(ne+1)),Q(e.getX(ne+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new BufferAttribute(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let g=0,_=n.count;g<_;g++)n.setXYZ(g,0,0,0);const o=new Vector3,a=new Vector3,r=new Vector3,l=new Vector3,c=new Vector3,u=new Vector3,d=new Vector3,f=new Vector3;if(e)for(let g=0,_=e.count;g<_;g+=3){const b=e.getX(g+0),B=e.getX(g+1),I=e.getX(g+2);o.fromBufferAttribute(t,b),a.fromBufferAttribute(t,B),r.fromBufferAttribute(t,I),d.subVectors(r,a),f.subVectors(o,a),d.cross(f),l.fromBufferAttribute(n,b),c.fromBufferAttribute(n,B),u.fromBufferAttribute(n,I),l.add(d),c.add(d),u.add(d),n.setXYZ(b,l.x,l.y,l.z),n.setXYZ(B,c.x,c.y,c.z),n.setXYZ(I,u.x,u.y,u.z)}else for(let g=0,_=t.count;g<_;g+=3)o.fromBufferAttribute(t,g+0),a.fromBufferAttribute(t,g+1),r.fromBufferAttribute(t,g+2),d.subVectors(r,a),f.subVectors(o,a),d.cross(f),n.setXYZ(g+0,d.x,d.y,d.z),n.setXYZ(g+1,d.x,d.y,d.z),n.setXYZ(g+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)_vector$8.fromBufferAttribute(e,t),_vector$8.normalize(),e.setXYZ(t,_vector$8.x,_vector$8.y,_vector$8.z)}toNonIndexed(){function e(l,c){const u=l.array,d=l.itemSize,f=l.normalized,g=new u.constructor(c.length*d);let _=0,b=0;for(let B=0,I=c.length;B<I;B++){l.isInterleavedBufferAttribute?_=c[B]*l.data.stride+l.offset:_=c[B]*d;for(let C=0;C<d;C++)g[b++]=u[_++]}return new BufferAttribute(g,d,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new BufferGeometry,n=this.index.array,o=this.attributes;for(const l in o){const c=o[l],u=e(c,n);t.setAttribute(l,u)}const a=this.morphAttributes;for(const l in a){const c=[],u=a[l];for(let d=0,f=u.length;d<f;d++){const g=u[d],_=e(g,n);c.push(_)}t.morphAttributes[l]=c}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let l=0,c=r.length;l<c;l++){const u=r[l];t.addGroup(u.start,u.count,u.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const u in c)c[u]!==void 0&&(e[u]=c[u]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const u=n[c];e.data.attributes[c]=u.toJSON(e.data)}const o={};let a=!1;for(const c in this.morphAttributes){const u=this.morphAttributes[c],d=[];for(let f=0,g=u.length;f<g;f++){const _=u[f];d.push(_.toJSON(e.data))}d.length>0&&(o[c]=d,a=!0)}a&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const l=this.boundingSphere;return l!==null&&(e.data.boundingSphere=l.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const o=e.attributes;for(const u in o){const d=o[u];this.setAttribute(u,d.clone(t))}const a=e.morphAttributes;for(const u in a){const d=[],f=a[u];for(let g=0,_=f.length;g<_;g++)d.push(f[g].clone(t));this.morphAttributes[u]=d}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let u=0,d=r.length;u<d;u++){const f=r[u];this.addGroup(f.start,f.count,f.materialIndex)}const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const _inverseMatrix$3=new Matrix4,_ray$3=new Ray$1,_sphere$6=new Sphere,_sphereHitAt=new Vector3,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_tempA=new Vector3,_morphA=new Vector3,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3;class Mesh extends Object3D{constructor(e=new BufferGeometry,t=new MeshBasicMaterial){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const o=t[n[0]];if(o!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,r=o.length;a<r;a++){const l=o[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=a}}}}getVertexPosition(e,t){const n=this.geometry,o=n.attributes.position,a=n.morphAttributes.position,r=n.morphTargetsRelative;t.fromBufferAttribute(o,e);const l=this.morphTargetInfluences;if(a&&l){_morphA.set(0,0,0);for(let c=0,u=a.length;c<u;c++){const d=l[c],f=a[c];d!==0&&(_tempA.fromBufferAttribute(f,e),r?_morphA.addScaledVector(_tempA,d):_morphA.addScaledVector(_tempA.sub(t),d))}t.add(_morphA)}return t}raycast(e,t){const n=this.geometry,o=this.material,a=this.matrixWorld;o!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),_sphere$6.copy(n.boundingSphere),_sphere$6.applyMatrix4(a),_ray$3.copy(e.ray).recast(e.near),!(_sphere$6.containsPoint(_ray$3.origin)===!1&&(_ray$3.intersectSphere(_sphere$6,_sphereHitAt)===null||_ray$3.origin.distanceToSquared(_sphereHitAt)>(e.far-e.near)**2))&&(_inverseMatrix$3.copy(a).invert(),_ray$3.copy(e.ray).applyMatrix4(_inverseMatrix$3),!(n.boundingBox!==null&&_ray$3.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,_ray$3)))}_computeIntersections(e,t,n){let o;const a=this.geometry,r=this.material,l=a.index,c=a.attributes.position,u=a.attributes.uv,d=a.attributes.uv1,f=a.attributes.normal,g=a.groups,_=a.drawRange;if(l!==null)if(Array.isArray(r))for(let b=0,B=g.length;b<B;b++){const I=g[b],C=r[I.materialIndex],R=Math.max(I.start,_.start),L=Math.min(l.count,Math.min(I.start+I.count,_.start+_.count));for(let F=R,N=L;F<N;F+=3){const k=l.getX(F),Q=l.getX(F+1),z=l.getX(F+2);o=checkGeometryIntersection(this,C,e,n,u,d,f,k,Q,z),o&&(o.faceIndex=Math.floor(F/3),o.face.materialIndex=I.materialIndex,t.push(o))}}else{const b=Math.max(0,_.start),B=Math.min(l.count,_.start+_.count);for(let I=b,C=B;I<C;I+=3){const R=l.getX(I),L=l.getX(I+1),F=l.getX(I+2);o=checkGeometryIntersection(this,r,e,n,u,d,f,R,L,F),o&&(o.faceIndex=Math.floor(I/3),t.push(o))}}else if(c!==void 0)if(Array.isArray(r))for(let b=0,B=g.length;b<B;b++){const I=g[b],C=r[I.materialIndex],R=Math.max(I.start,_.start),L=Math.min(c.count,Math.min(I.start+I.count,_.start+_.count));for(let F=R,N=L;F<N;F+=3){const k=F,Q=F+1,z=F+2;o=checkGeometryIntersection(this,C,e,n,u,d,f,k,Q,z),o&&(o.faceIndex=Math.floor(F/3),o.face.materialIndex=I.materialIndex,t.push(o))}}else{const b=Math.max(0,_.start),B=Math.min(c.count,_.start+_.count);for(let I=b,C=B;I<C;I+=3){const R=I,L=I+1,F=I+2;o=checkGeometryIntersection(this,r,e,n,u,d,f,R,L,F),o&&(o.faceIndex=Math.floor(I/3),t.push(o))}}}}function checkIntersection$1(s,e,t,n,o,a,r,l){let c;if(e.side===BackSide?c=n.intersectTriangle(r,a,o,!0,l):c=n.intersectTriangle(o,a,r,e.side===FrontSide,l),c===null)return null;_intersectionPointWorld.copy(l),_intersectionPointWorld.applyMatrix4(s.matrixWorld);const u=t.ray.origin.distanceTo(_intersectionPointWorld);return u<t.near||u>t.far?null:{distance:u,point:_intersectionPointWorld.clone(),object:s}}function checkGeometryIntersection(s,e,t,n,o,a,r,l,c,u){s.getVertexPosition(l,_vA$1),s.getVertexPosition(c,_vB$1),s.getVertexPosition(u,_vC$1);const d=checkIntersection$1(s,e,t,n,_vA$1,_vB$1,_vC$1,_intersectionPoint);if(d){const f=new Vector3;Triangle.getBarycoord(_intersectionPoint,_vA$1,_vB$1,_vC$1,f),o&&(d.uv=Triangle.getInterpolatedAttribute(o,l,c,u,f,new Vector2)),a&&(d.uv1=Triangle.getInterpolatedAttribute(a,l,c,u,f,new Vector2)),r&&(d.normal=Triangle.getInterpolatedAttribute(r,l,c,u,f,new Vector3),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const g={a:l,b:c,c:u,normal:new Vector3,materialIndex:0};Triangle.getNormal(_vA$1,_vB$1,_vC$1,g.normal),d.face=g,d.barycoord=f}return d}class BoxGeometry extends BufferGeometry{constructor(e=1,t=1,n=1,o=1,a=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:o,heightSegments:a,depthSegments:r};const l=this;o=Math.floor(o),a=Math.floor(a),r=Math.floor(r);const c=[],u=[],d=[],f=[];let g=0,_=0;b("z","y","x",-1,-1,n,t,e,r,a,0),b("z","y","x",1,-1,n,t,-e,r,a,1),b("x","z","y",1,1,e,n,t,o,r,2),b("x","z","y",1,-1,e,n,-t,o,r,3),b("x","y","z",1,-1,e,t,n,o,a,4),b("x","y","z",-1,-1,e,t,-n,o,a,5),this.setIndex(c),this.setAttribute("position",new Float32BufferAttribute(u,3)),this.setAttribute("normal",new Float32BufferAttribute(d,3)),this.setAttribute("uv",new Float32BufferAttribute(f,2));function b(B,I,C,R,L,F,N,k,Q,z,G){const O=F/Q,q=N/z,ce=F/2,ne=N/2,ue=k/2,pe=Q+1,fe=z+1;let ee=0,J=0;const ye=new Vector3;for(let Te=0;Te<fe;Te++){const xe=Te*q-ne;for(let ve=0;ve<pe;ve++){const he=ve*O-ce;ye[B]=he*R,ye[I]=xe*L,ye[C]=ue,u.push(ye.x,ye.y,ye.z),ye[B]=0,ye[I]=0,ye[C]=k>0?1:-1,d.push(ye.x,ye.y,ye.z),f.push(ve/Q),f.push(1-Te/z),ee+=1}}for(let Te=0;Te<z;Te++)for(let xe=0;xe<Q;xe++){const ve=g+xe+pe*Te,he=g+xe+pe*(Te+1),le=g+(xe+1)+pe*(Te+1),_e=g+(xe+1)+pe*Te;c.push(ve,he,_e),c.push(he,le,_e),J+=6}l.addGroup(_,J,G),_+=J,g+=ee}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new BoxGeometry(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function cloneUniforms(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const o=s[t][n];o&&(o.isColor||o.isMatrix3||o.isMatrix4||o.isVector2||o.isVector3||o.isVector4||o.isTexture||o.isQuaternion)?o.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=o.clone():Array.isArray(o)?e[t][n]=o.slice():e[t][n]=o}}return e}function mergeUniforms(s){const e={};for(let t=0;t<s.length;t++){const n=cloneUniforms(s[t]);for(const o in n)e[o]=n[o]}return e}function cloneUniformsGroups(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function getUnlitUniformColorSpace(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:ColorManagement.workingColorSpace}const UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,default_fragment=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ShaderMaterial extends Material{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=default_vertex,this.fragmentShader=default_fragment,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=cloneUniforms(e.uniforms),this.uniformsGroups=cloneUniformsGroups(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const o in this.uniforms){const r=this.uniforms[o].value;r&&r.isTexture?t.uniforms[o]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[o]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[o]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[o]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[o]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[o]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[o]={type:"m4",value:r.toArray()}:t.uniforms[o]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const o in this.extensions)this.extensions[o]===!0&&(n[o]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Camera extends Object3D{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4,this.coordinateSystem=WebGLCoordinateSystem}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const _v3$1=new Vector3,_minTarget=new Vector2,_maxTarget=new Vector2;class PerspectiveCamera extends Camera{constructor(e=50,t=1,n=.1,o=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=o,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return RAD2DEG*2*Math.atan(Math.tan(DEG2RAD*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){_v3$1.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(_v3$1.x,_v3$1.y).multiplyScalar(-e/_v3$1.z),_v3$1.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(_v3$1.x,_v3$1.y).multiplyScalar(-e/_v3$1.z)}getViewSize(e,t){return this.getViewBounds(e,_minTarget,_maxTarget),t.subVectors(_maxTarget,_minTarget)}setViewOffset(e,t,n,o,a,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=o,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(DEG2RAD*.5*this.fov)/this.zoom,n=2*t,o=this.aspect*n,a=-.5*o;const r=this.view;if(this.view!==null&&this.view.enabled){const c=r.fullWidth,u=r.fullHeight;a+=r.offsetX*o/c,t-=r.offsetY*n/u,o*=r.width/c,n*=r.height/u}const l=this.filmOffset;l!==0&&(a+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+o,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const fov=-90,aspect=1;class CubeCamera extends Object3D{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const o=new PerspectiveCamera(fov,aspect,e,t);o.layers=this.layers,this.add(o);const a=new PerspectiveCamera(fov,aspect,e,t);a.layers=this.layers,this.add(a);const r=new PerspectiveCamera(fov,aspect,e,t);r.layers=this.layers,this.add(r);const l=new PerspectiveCamera(fov,aspect,e,t);l.layers=this.layers,this.add(l);const c=new PerspectiveCamera(fov,aspect,e,t);c.layers=this.layers,this.add(c);const u=new PerspectiveCamera(fov,aspect,e,t);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,o,a,r,l,c]=t;for(const u of t)this.remove(u);if(e===WebGLCoordinateSystem)n.up.set(0,1,0),n.lookAt(1,0,0),o.up.set(0,1,0),o.lookAt(-1,0,0),a.up.set(0,0,-1),a.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),l.up.set(0,1,0),l.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===WebGPUCoordinateSystem)n.up.set(0,-1,0),n.lookAt(-1,0,0),o.up.set(0,-1,0),o.lookAt(1,0,0),a.up.set(0,0,1),a.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),l.up.set(0,-1,0),l.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const u of t)this.add(u),u.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:o}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[a,r,l,c,u,d]=this.children,f=e.getRenderTarget(),g=e.getActiveCubeFace(),_=e.getActiveMipmapLevel(),b=e.xr.enabled;e.xr.enabled=!1;const B=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,o),e.render(t,a),e.setRenderTarget(n,1,o),e.render(t,r),e.setRenderTarget(n,2,o),e.render(t,l),e.setRenderTarget(n,3,o),e.render(t,c),e.setRenderTarget(n,4,o),e.render(t,u),n.texture.generateMipmaps=B,e.setRenderTarget(n,5,o),e.render(t,d),e.setRenderTarget(f,g,_),e.xr.enabled=b,n.texture.needsPMREMUpdate=!0}}class CubeTexture extends Texture{constructor(e=[],t=CubeReflectionMapping,n,o,a,r,l,c,u,d){super(e,t,n,o,a,r,l,c,u,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class WebGLCubeRenderTarget extends WebGLRenderTarget{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},o=[n,n,n,n,n,n];this.texture=new CubeTexture(o),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},o=new BoxGeometry(5,5,5),a=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:BackSide,blending:NoBlending});a.uniforms.tEquirect.value=t;const r=new Mesh(o,a),l=t.minFilter;return t.minFilter===LinearMipmapLinearFilter&&(t.minFilter=LinearFilter),new CubeCamera(1,10,this).update(e,r),t.minFilter=l,r.geometry.dispose(),r.material.dispose(),this}clear(e,t=!0,n=!0,o=!0){const a=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,o);e.setRenderTarget(a)}}class Group extends Object3D{constructor(){super(),this.isGroup=!0,this.type="Group"}}const _moveEvent={type:"move"};class WebXRController{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Group,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Vector3,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Vector3),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Vector3,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Vector3),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let o=null,a=null,r=null;const l=this._targetRay,c=this._grip,u=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(u&&e.hand){r=!0;for(const B of e.hand.values()){const I=t.getJointPose(B,n),C=this._getHandJoint(u,B);I!==null&&(C.matrix.fromArray(I.transform.matrix),C.matrix.decompose(C.position,C.rotation,C.scale),C.matrixWorldNeedsUpdate=!0,C.jointRadius=I.radius),C.visible=I!==null}const d=u.joints["index-finger-tip"],f=u.joints["thumb-tip"],g=d.position.distanceTo(f.position),_=.02,b=.005;u.inputState.pinching&&g>_+b?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&g<=_-b&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(a=t.getPose(e.gripSpace,n),a!==null&&(c.matrix.fromArray(a.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,a.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(a.linearVelocity)):c.hasLinearVelocity=!1,a.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(a.angularVelocity)):c.hasAngularVelocity=!1));l!==null&&(o=t.getPose(e.targetRaySpace,n),o===null&&a!==null&&(o=a),o!==null&&(l.matrix.fromArray(o.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,o.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(o.linearVelocity)):l.hasLinearVelocity=!1,o.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(o.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(_moveEvent)))}return l!==null&&(l.visible=o!==null),c!==null&&(c.visible=a!==null),u!==null&&(u.visible=r!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Group;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Scene extends Object3D{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Euler,this.environmentIntensity=1,this.environmentRotation=new Euler,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class InterleavedBuffer{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=StaticDrawUsage,this.updateRanges=[],this.version=0,this.uuid=generateUUID()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let o=0,a=this.stride;o<a;o++)this.array[e+o]=t.array[n+o];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const _vector$7=new Vector3;class InterleavedBufferAttribute{constructor(e,t,n,o=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=o}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)_vector$7.fromBufferAttribute(this,t),_vector$7.applyMatrix4(e),this.setXYZ(t,_vector$7.x,_vector$7.y,_vector$7.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)_vector$7.fromBufferAttribute(this,t),_vector$7.applyNormalMatrix(e),this.setXYZ(t,_vector$7.x,_vector$7.y,_vector$7.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)_vector$7.fromBufferAttribute(this,t),_vector$7.transformDirection(e),this.setXYZ(t,_vector$7.x,_vector$7.y,_vector$7.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=denormalize(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=normalize$1(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=normalize$1(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=normalize$1(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=normalize$1(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=normalize$1(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=denormalize(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=denormalize(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=denormalize(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=denormalize(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=normalize$1(t,this.array),n=normalize$1(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,o){return e=e*this.data.stride+this.offset,this.normalized&&(t=normalize$1(t,this.array),n=normalize$1(n,this.array),o=normalize$1(o,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=o,this}setXYZW(e,t,n,o,a){return e=e*this.data.stride+this.offset,this.normalized&&(t=normalize$1(t,this.array),n=normalize$1(n,this.array),o=normalize$1(o,this.array),a=normalize$1(a,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=o,this.data.array[e+3]=a,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const o=n*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)t.push(this.data.array[o+a])}return new BufferAttribute(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new InterleavedBufferAttribute(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const o=n*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)t.push(this.data.array[o+a])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const _basePosition=new Vector3,_skinIndex=new Vector4,_skinWeight=new Vector4,_vector3=new Vector3,_matrix4=new Matrix4,_vertex=new Vector3,_sphere$5=new Sphere,_inverseMatrix$2=new Matrix4,_ray$2=new Ray$1;class SkinnedMesh extends Mesh{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=AttachedBindMode,this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Box3),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,_vertex),this.boundingBox.expandByPoint(_vertex)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Sphere),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,_vertex),this.boundingSphere.expandByPoint(_vertex)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,o=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),_sphere$5.copy(this.boundingSphere),_sphere$5.applyMatrix4(o),e.ray.intersectsSphere(_sphere$5)!==!1&&(_inverseMatrix$2.copy(o).invert(),_ray$2.copy(e.ray).applyMatrix4(_inverseMatrix$2),!(this.boundingBox!==null&&_ray$2.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,_ray$2)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Vector4,t=this.geometry.attributes.skinWeight;for(let n=0,o=t.count;n<o;n++){e.fromBufferAttribute(t,n);const a=1/e.manhattanLength();a!==1/0?e.multiplyScalar(a):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===AttachedBindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===DetachedBindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,o=this.geometry;_skinIndex.fromBufferAttribute(o.attributes.skinIndex,e),_skinWeight.fromBufferAttribute(o.attributes.skinWeight,e),_basePosition.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let a=0;a<4;a++){const r=_skinWeight.getComponent(a);if(r!==0){const l=_skinIndex.getComponent(a);_matrix4.multiplyMatrices(n.bones[l].matrixWorld,n.boneInverses[l]),t.addScaledVector(_vector3.copy(_basePosition).applyMatrix4(_matrix4),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Bone extends Object3D{constructor(){super(),this.isBone=!0,this.type="Bone"}}class DataTexture extends Texture{constructor(e=null,t=1,n=1,o,a,r,l,c,u=NearestFilter,d=NearestFilter,f,g){super(null,r,l,c,u,d,o,a,f,g),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const _offsetMatrix=new Matrix4,_identityMatrix$1=new Matrix4;class Skeleton{constructor(e=[],t=[]){this.uuid=generateUUID(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,o=this.bones.length;n<o;n++)this.boneInverses.push(new Matrix4)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Matrix4;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,o=this.boneTexture;for(let a=0,r=e.length;a<r;a++){const l=e[a]?e[a].matrixWorld:_identityMatrix$1;_offsetMatrix.multiplyMatrices(l,t[a]),_offsetMatrix.toArray(n,a*16)}o!==null&&(o.needsUpdate=!0)}clone(){return new Skeleton(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new DataTexture(t,e,e,RGBAFormat,FloatType);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const o=this.bones[t];if(o.name===e)return o}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,o=e.bones.length;n<o;n++){const a=e.bones[n];let r=t[a];r===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",a),r=new Bone),this.bones.push(r),this.boneInverses.push(new Matrix4().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let o=0,a=t.length;o<a;o++){const r=t[o];e.bones.push(r.uuid);const l=n[o];e.boneInverses.push(l.toArray())}return e}}class InstancedBufferAttribute extends BufferAttribute{constructor(e,t,n,o=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=o}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_box3=new Box3,_identity=new Matrix4,_mesh$1=new Mesh,_sphere$4=new Sphere;class InstancedMesh extends Mesh{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new InstancedBufferAttribute(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let o=0;o<n;o++)this.setMatrixAt(o,_identity)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Box3),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,_instanceLocalMatrix),_box3.copy(e.boundingBox).applyMatrix4(_instanceLocalMatrix),this.boundingBox.union(_box3)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Sphere),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,_instanceLocalMatrix),_sphere$4.copy(e.boundingSphere).applyMatrix4(_instanceLocalMatrix),this.boundingSphere.union(_sphere$4)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,o=this.morphTexture.source.data.data,a=n.length+1,r=e*a+1;for(let l=0;l<n.length;l++)n[l]=o[r+l]}raycast(e,t){const n=this.matrixWorld,o=this.count;if(_mesh$1.geometry=this.geometry,_mesh$1.material=this.material,_mesh$1.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),_sphere$4.copy(this.boundingSphere),_sphere$4.applyMatrix4(n),e.ray.intersectsSphere(_sphere$4)!==!1))for(let a=0;a<o;a++){this.getMatrixAt(a,_instanceLocalMatrix),_instanceWorldMatrix.multiplyMatrices(n,_instanceLocalMatrix),_mesh$1.matrixWorld=_instanceWorldMatrix,_mesh$1.raycast(e,_instanceIntersects);for(let r=0,l=_instanceIntersects.length;r<l;r++){const c=_instanceIntersects[r];c.instanceId=a,c.object=this,t.push(c)}_instanceIntersects.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new InstancedBufferAttribute(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,o=n.length+1;this.morphTexture===null&&(this.morphTexture=new DataTexture(new Float32Array(o*this.count),o,this.count,RedFormat,FloatType));const a=this.morphTexture.source.data.data;let r=0;for(let u=0;u<n.length;u++)r+=n[u];const l=this.geometry.morphTargetsRelative?1:1-r,c=o*e;a[c]=l,a.set(n,c+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const _vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;class Plane{constructor(e=new Vector3(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,o){return this.normal.set(e,t,n),this.constant=o,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const o=_vector1.subVectors(n,t).cross(_vector2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(o,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(_vector1),o=this.normal.dot(n);if(o===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const a=-(e.start.dot(this.normal)+this.constant)/o;return a<0||a>1?null:t.copy(e.start).addScaledVector(n,a)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||_normalMatrix.getNormalMatrix(e),o=this.coplanarPoint(_vector1).applyMatrix4(e),a=this.normal.applyMatrix3(n).normalize();return this.constant=-o.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const _sphere$3=new Sphere,_defaultSpriteCenter=new Vector2(.5,.5),_vector$6=new Vector3;class Frustum{constructor(e=new Plane,t=new Plane,n=new Plane,o=new Plane,a=new Plane,r=new Plane){this.planes=[e,t,n,o,a,r]}set(e,t,n,o,a,r){const l=this.planes;return l[0].copy(e),l[1].copy(t),l[2].copy(n),l[3].copy(o),l[4].copy(a),l[5].copy(r),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=WebGLCoordinateSystem){const n=this.planes,o=e.elements,a=o[0],r=o[1],l=o[2],c=o[3],u=o[4],d=o[5],f=o[6],g=o[7],_=o[8],b=o[9],B=o[10],I=o[11],C=o[12],R=o[13],L=o[14],F=o[15];if(n[0].setComponents(c-a,g-u,I-_,F-C).normalize(),n[1].setComponents(c+a,g+u,I+_,F+C).normalize(),n[2].setComponents(c+r,g+d,I+b,F+R).normalize(),n[3].setComponents(c-r,g-d,I-b,F-R).normalize(),n[4].setComponents(c-l,g-f,I-B,F-L).normalize(),t===WebGLCoordinateSystem)n[5].setComponents(c+l,g+f,I+B,F+L).normalize();else if(t===WebGPUCoordinateSystem)n[5].setComponents(l,f,B,L).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),_sphere$3.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),_sphere$3.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(_sphere$3)}intersectsSprite(e){_sphere$3.center.set(0,0,0);const t=_defaultSpriteCenter.distanceTo(e.center);return _sphere$3.radius=.7071067811865476+t,_sphere$3.applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$3)}intersectsSphere(e){const t=this.planes,n=e.center,o=-e.radius;for(let a=0;a<6;a++)if(t[a].distanceToPoint(n)<o)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const o=t[n];if(_vector$6.x=o.normal.x>0?e.max.x:e.min.x,_vector$6.y=o.normal.y>0?e.max.y:e.min.y,_vector$6.z=o.normal.z>0?e.max.z:e.min.z,o.distanceToPoint(_vector$6)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class LineBasicMaterial extends Material{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Color(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const _vStart=new Vector3,_vEnd=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1$1=new Ray$1,_sphere$1=new Sphere,_intersectPointOnRay=new Vector3,_intersectPointOnSegment=new Vector3;class Line extends Object3D{constructor(e=new BufferGeometry,t=new LineBasicMaterial){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let o=1,a=t.count;o<a;o++)_vStart.fromBufferAttribute(t,o-1),_vEnd.fromBufferAttribute(t,o),n[o]=n[o-1],n[o]+=_vStart.distanceTo(_vEnd);e.setAttribute("lineDistance",new Float32BufferAttribute(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,o=this.matrixWorld,a=e.params.Line.threshold,r=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),_sphere$1.copy(n.boundingSphere),_sphere$1.applyMatrix4(o),_sphere$1.radius+=a,e.ray.intersectsSphere(_sphere$1)===!1)return;_inverseMatrix$1.copy(o).invert(),_ray$1$1.copy(e.ray).applyMatrix4(_inverseMatrix$1);const l=a/((this.scale.x+this.scale.y+this.scale.z)/3),c=l*l,u=this.isLineSegments?2:1,d=n.index,g=n.attributes.position;if(d!==null){const _=Math.max(0,r.start),b=Math.min(d.count,r.start+r.count);for(let B=_,I=b-1;B<I;B+=u){const C=d.getX(B),R=d.getX(B+1),L=checkIntersection(this,e,_ray$1$1,c,C,R,B);L&&t.push(L)}if(this.isLineLoop){const B=d.getX(b-1),I=d.getX(_),C=checkIntersection(this,e,_ray$1$1,c,B,I,b-1);C&&t.push(C)}}else{const _=Math.max(0,r.start),b=Math.min(g.count,r.start+r.count);for(let B=_,I=b-1;B<I;B+=u){const C=checkIntersection(this,e,_ray$1$1,c,B,B+1,B);C&&t.push(C)}if(this.isLineLoop){const B=checkIntersection(this,e,_ray$1$1,c,b-1,_,b-1);B&&t.push(B)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const o=t[n[0]];if(o!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,r=o.length;a<r;a++){const l=o[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=a}}}}}function checkIntersection(s,e,t,n,o,a,r){const l=s.geometry.attributes.position;if(_vStart.fromBufferAttribute(l,o),_vEnd.fromBufferAttribute(l,a),t.distanceSqToSegment(_vStart,_vEnd,_intersectPointOnRay,_intersectPointOnSegment)>n)return;_intersectPointOnRay.applyMatrix4(s.matrixWorld);const u=e.ray.origin.distanceTo(_intersectPointOnRay);if(!(u<e.near||u>e.far))return{distance:u,point:_intersectPointOnSegment.clone().applyMatrix4(s.matrixWorld),index:r,face:null,faceIndex:null,barycoord:null,object:s}}const _start=new Vector3,_end=new Vector3;class LineSegments extends Line{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let o=0,a=t.count;o<a;o+=2)_start.fromBufferAttribute(t,o),_end.fromBufferAttribute(t,o+1),n[o]=o===0?0:n[o-1],n[o+1]=n[o]+_start.distanceTo(_end);e.setAttribute("lineDistance",new Float32BufferAttribute(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class LineLoop extends Line{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class PointsMaterial extends Material{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const _inverseMatrix=new Matrix4,_ray$4=new Ray$1,_sphere$2=new Sphere,_position$2=new Vector3;class Points extends Object3D{constructor(e=new BufferGeometry,t=new PointsMaterial){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,o=this.matrixWorld,a=e.params.Points.threshold,r=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),_sphere$2.copy(n.boundingSphere),_sphere$2.applyMatrix4(o),_sphere$2.radius+=a,e.ray.intersectsSphere(_sphere$2)===!1)return;_inverseMatrix.copy(o).invert(),_ray$4.copy(e.ray).applyMatrix4(_inverseMatrix);const l=a/((this.scale.x+this.scale.y+this.scale.z)/3),c=l*l,u=n.index,f=n.attributes.position;if(u!==null){const g=Math.max(0,r.start),_=Math.min(u.count,r.start+r.count);for(let b=g,B=_;b<B;b++){const I=u.getX(b);_position$2.fromBufferAttribute(f,I),testPoint(_position$2,I,c,o,e,t,this)}}else{const g=Math.max(0,r.start),_=Math.min(f.count,r.start+r.count);for(let b=g,B=_;b<B;b++)_position$2.fromBufferAttribute(f,b),testPoint(_position$2,b,c,o,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const o=t[n[0]];if(o!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,r=o.length;a<r;a++){const l=o[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=a}}}}}function testPoint(s,e,t,n,o,a,r){const l=_ray$4.distanceSqToPoint(s);if(l<t){const c=new Vector3;_ray$4.closestPointToPoint(s,c),c.applyMatrix4(n);const u=o.ray.origin.distanceTo(c);if(u<o.near||u>o.far)return;a.push({distance:u,distanceToRay:Math.sqrt(l),point:c,index:e,face:null,faceIndex:null,barycoord:null,object:r})}}class DepthTexture extends Texture{constructor(e,t,n=UnsignedIntType,o,a,r,l=NearestFilter,c=NearestFilter,u,d=DepthFormat,f=1){if(d!==DepthFormat&&d!==DepthStencilFormat)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const g={width:e,height:t,depth:f};super(g,o,a,r,l,c,d,n,u),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Source(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class CylinderGeometry extends BufferGeometry{constructor(e=1,t=1,n=1,o=32,a=1,r=!1,l=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:o,heightSegments:a,openEnded:r,thetaStart:l,thetaLength:c};const u=this;o=Math.floor(o),a=Math.floor(a);const d=[],f=[],g=[],_=[];let b=0;const B=[],I=n/2;let C=0;R(),r===!1&&(e>0&&L(!0),t>0&&L(!1)),this.setIndex(d),this.setAttribute("position",new Float32BufferAttribute(f,3)),this.setAttribute("normal",new Float32BufferAttribute(g,3)),this.setAttribute("uv",new Float32BufferAttribute(_,2));function R(){const F=new Vector3,N=new Vector3;let k=0;const Q=(t-e)/n;for(let z=0;z<=a;z++){const G=[],O=z/a,q=O*(t-e)+e;for(let ce=0;ce<=o;ce++){const ne=ce/o,ue=ne*c+l,pe=Math.sin(ue),fe=Math.cos(ue);N.x=q*pe,N.y=-O*n+I,N.z=q*fe,f.push(N.x,N.y,N.z),F.set(pe,Q,fe).normalize(),g.push(F.x,F.y,F.z),_.push(ne,1-O),G.push(b++)}B.push(G)}for(let z=0;z<o;z++)for(let G=0;G<a;G++){const O=B[G][z],q=B[G+1][z],ce=B[G+1][z+1],ne=B[G][z+1];(e>0||G!==0)&&(d.push(O,q,ne),k+=3),(t>0||G!==a-1)&&(d.push(q,ce,ne),k+=3)}u.addGroup(C,k,0),C+=k}function L(F){const N=b,k=new Vector2,Q=new Vector3;let z=0;const G=F===!0?e:t,O=F===!0?1:-1;for(let ce=1;ce<=o;ce++)f.push(0,I*O,0),g.push(0,O,0),_.push(.5,.5),b++;const q=b;for(let ce=0;ce<=o;ce++){const ue=ce/o*c+l,pe=Math.cos(ue),fe=Math.sin(ue);Q.x=G*fe,Q.y=I*O,Q.z=G*pe,f.push(Q.x,Q.y,Q.z),g.push(0,O,0),k.x=pe*.5+.5,k.y=fe*.5*O+.5,_.push(k.x,k.y),b++}for(let ce=0;ce<o;ce++){const ne=N+ce,ue=q+ce;F===!0?d.push(ue,ue+1,ne):d.push(ue+1,ue,ne),z+=3}u.addGroup(C,z,F===!0?1:2),C+=z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new CylinderGeometry(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ConeGeometry extends CylinderGeometry{constructor(e=1,t=1,n=32,o=1,a=!1,r=0,l=Math.PI*2){super(0,e,t,n,o,a,r,l),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:o,openEnded:a,thetaStart:r,thetaLength:l}}static fromJSON(e){return new ConeGeometry(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class PlaneGeometry extends BufferGeometry{constructor(e=1,t=1,n=1,o=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:o};const a=e/2,r=t/2,l=Math.floor(n),c=Math.floor(o),u=l+1,d=c+1,f=e/l,g=t/c,_=[],b=[],B=[],I=[];for(let C=0;C<d;C++){const R=C*g-r;for(let L=0;L<u;L++){const F=L*f-a;b.push(F,-R,0),B.push(0,0,1),I.push(L/l),I.push(1-C/c)}}for(let C=0;C<c;C++)for(let R=0;R<l;R++){const L=R+u*C,F=R+u*(C+1),N=R+1+u*(C+1),k=R+1+u*C;_.push(L,F,k),_.push(F,N,k)}this.setIndex(_),this.setAttribute("position",new Float32BufferAttribute(b,3)),this.setAttribute("normal",new Float32BufferAttribute(B,3)),this.setAttribute("uv",new Float32BufferAttribute(I,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new PlaneGeometry(e.width,e.height,e.widthSegments,e.heightSegments)}}class SphereGeometry extends BufferGeometry{constructor(e=1,t=32,n=16,o=0,a=Math.PI*2,r=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:o,phiLength:a,thetaStart:r,thetaLength:l},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(r+l,Math.PI);let u=0;const d=[],f=new Vector3,g=new Vector3,_=[],b=[],B=[],I=[];for(let C=0;C<=n;C++){const R=[],L=C/n;let F=0;C===0&&r===0?F=.5/t:C===n&&c===Math.PI&&(F=-.5/t);for(let N=0;N<=t;N++){const k=N/t;f.x=-e*Math.cos(o+k*a)*Math.sin(r+L*l),f.y=e*Math.cos(r+L*l),f.z=e*Math.sin(o+k*a)*Math.sin(r+L*l),b.push(f.x,f.y,f.z),g.copy(f).normalize(),B.push(g.x,g.y,g.z),I.push(k+F,1-L),R.push(u++)}d.push(R)}for(let C=0;C<n;C++)for(let R=0;R<t;R++){const L=d[C][R+1],F=d[C][R],N=d[C+1][R],k=d[C+1][R+1];(C!==0||r>0)&&_.push(L,F,k),(C!==n-1||c<Math.PI)&&_.push(F,N,k)}this.setIndex(_),this.setAttribute("position",new Float32BufferAttribute(b,3)),this.setAttribute("normal",new Float32BufferAttribute(B,3)),this.setAttribute("uv",new Float32BufferAttribute(I,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new SphereGeometry(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class RawShaderMaterial extends ShaderMaterial{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class MeshStandardMaterial extends Material{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Euler,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class MeshPhysicalMaterial extends MeshStandardMaterial{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Vector2(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return clamp$1(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Color(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Color(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Color(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class MeshLambertMaterial extends Material{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Euler,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class MeshDepthMaterial extends Material{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=BasicDepthPacking,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class MeshDistanceMaterial extends Material{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function convertArray(s,e){return!s||s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function isTypedArray(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function getKeyframeOrder(s){function e(o,a){return s[o]-s[a]}const t=s.length,n=new Array(t);for(let o=0;o!==t;++o)n[o]=o;return n.sort(e),n}function sortedArray(s,e,t){const n=s.length,o=new s.constructor(n);for(let a=0,r=0;r!==n;++a){const l=t[a]*e;for(let c=0;c!==e;++c)o[r++]=s[l+c]}return o}function flattenJSON(s,e,t,n){let o=1,a=s[0];for(;a!==void 0&&a[n]===void 0;)a=s[o++];if(a===void 0)return;let r=a[n];if(r!==void 0)if(Array.isArray(r))do r=a[n],r!==void 0&&(e.push(a.time),t.push(...r)),a=s[o++];while(a!==void 0);else if(r.toArray!==void 0)do r=a[n],r!==void 0&&(e.push(a.time),r.toArray(t,t.length)),a=s[o++];while(a!==void 0);else do r=a[n],r!==void 0&&(e.push(a.time),t.push(r)),a=s[o++];while(a!==void 0)}class Interpolant{constructor(e,t,n,o){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=o!==void 0?o:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,o=t[n],a=t[n-1];e:{t:{let r;n:{i:if(!(e<o)){for(let l=n+2;;){if(o===void 0){if(e<a)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===l)break;if(a=o,o=t[++n],e<o)break t}r=t.length;break n}if(!(e>=a)){const l=t[1];e<l&&(n=2,a=l);for(let c=n-2;;){if(a===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===c)break;if(o=a,a=t[--n-1],e>=a)break t}r=n,n=0;break n}break e}for(;n<r;){const l=n+r>>>1;e<t[l]?r=l:n=l+1}if(o=t[n],a=t[n-1],a===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(o===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,a,o)}return this.interpolate_(n,a,e,o)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,o=this.valueSize,a=e*o;for(let r=0;r!==o;++r)t[r]=n[a+r];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class CubicInterpolant extends Interpolant{constructor(e,t,n,o){super(e,t,n,o),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding}}intervalChanged_(e,t,n){const o=this.parameterPositions;let a=e-2,r=e+1,l=o[a],c=o[r];if(l===void 0)switch(this.getSettings_().endingStart){case ZeroSlopeEnding:a=e,l=2*t-n;break;case WrapAroundEnding:a=o.length-2,l=t+o[a]-o[a+1];break;default:a=e,l=n}if(c===void 0)switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:r=e,c=2*n-t;break;case WrapAroundEnding:r=1,c=n+o[1]-o[0];break;default:r=e-1,c=t}const u=(n-t)*.5,d=this.valueSize;this._weightPrev=u/(t-l),this._weightNext=u/(c-n),this._offsetPrev=a*d,this._offsetNext=r*d}interpolate_(e,t,n,o){const a=this.resultBuffer,r=this.sampleValues,l=this.valueSize,c=e*l,u=c-l,d=this._offsetPrev,f=this._offsetNext,g=this._weightPrev,_=this._weightNext,b=(n-t)/(o-t),B=b*b,I=B*b,C=-g*I+2*g*B-g*b,R=(1+g)*I+(-1.5-2*g)*B+(-.5+g)*b+1,L=(-1-_)*I+(1.5+_)*B+.5*b,F=_*I-_*B;for(let N=0;N!==l;++N)a[N]=C*r[d+N]+R*r[u+N]+L*r[c+N]+F*r[f+N];return a}}class LinearInterpolant extends Interpolant{constructor(e,t,n,o){super(e,t,n,o)}interpolate_(e,t,n,o){const a=this.resultBuffer,r=this.sampleValues,l=this.valueSize,c=e*l,u=c-l,d=(n-t)/(o-t),f=1-d;for(let g=0;g!==l;++g)a[g]=r[u+g]*f+r[c+g]*d;return a}}class DiscreteInterpolant extends Interpolant{constructor(e,t,n,o){super(e,t,n,o)}interpolate_(e){return this.copySampleValue_(e-1)}}class KeyframeTrack{constructor(e,t,n,o){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=convertArray(t,this.TimeBufferType),this.values=convertArray(n,this.ValueBufferType),this.setInterpolation(o||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:convertArray(e.times,Array),values:convertArray(e.values,Array)};const o=e.getInterpolation();o!==e.DefaultInterpolation&&(n.interpolation=o)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new LinearInterpolant(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new CubicInterpolant(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,o=t.length;n!==o;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,o=t.length;n!==o;++n)t[n]*=e}return this}trim(e,t){const n=this.times,o=n.length;let a=0,r=o-1;for(;a!==o&&n[a]<e;)++a;for(;r!==-1&&n[r]>t;)--r;if(++r,a!==0||r!==o){a>=r&&(r=Math.max(r,1),a=r-1);const l=this.getValueSize();this.times=n.slice(a,r),this.values=this.values.slice(a*l,r*l)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,o=this.values,a=n.length;a===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let r=null;for(let l=0;l!==a;l++){const c=n[l];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,l,c),e=!1;break}if(r!==null&&r>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,l,c,r),e=!1;break}r=c}if(o!==void 0&&isTypedArray(o))for(let l=0,c=o.length;l!==c;++l){const u=o[l];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,u),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),o=this.getInterpolation()===InterpolateSmooth,a=e.length-1;let r=1;for(let l=1;l<a;++l){let c=!1;const u=e[l],d=e[l+1];if(u!==d&&(l!==1||u!==e[0]))if(o)c=!0;else{const f=l*n,g=f-n,_=f+n;for(let b=0;b!==n;++b){const B=t[f+b];if(B!==t[g+b]||B!==t[_+b]){c=!0;break}}}if(c){if(l!==r){e[r]=e[l];const f=l*n,g=r*n;for(let _=0;_!==n;++_)t[g+_]=t[f+_]}++r}}if(a>0){e[r]=e[a];for(let l=a*n,c=r*n,u=0;u!==n;++u)t[c+u]=t[l+u];++r}return r!==e.length?(this.times=e.slice(0,r),this.values=t.slice(0,r*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,o=new n(this.name,e,t);return o.createInterpolant=this.createInterpolant,o}}KeyframeTrack.prototype.ValueTypeName="";KeyframeTrack.prototype.TimeBufferType=Float32Array;KeyframeTrack.prototype.ValueBufferType=Float32Array;KeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;class BooleanKeyframeTrack extends KeyframeTrack{constructor(e,t,n){super(e,t,n)}}BooleanKeyframeTrack.prototype.ValueTypeName="bool";BooleanKeyframeTrack.prototype.ValueBufferType=Array;BooleanKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class ColorKeyframeTrack extends KeyframeTrack{constructor(e,t,n,o){super(e,t,n,o)}}ColorKeyframeTrack.prototype.ValueTypeName="color";class NumberKeyframeTrack extends KeyframeTrack{constructor(e,t,n,o){super(e,t,n,o)}}NumberKeyframeTrack.prototype.ValueTypeName="number";class QuaternionLinearInterpolant extends Interpolant{constructor(e,t,n,o){super(e,t,n,o)}interpolate_(e,t,n,o){const a=this.resultBuffer,r=this.sampleValues,l=this.valueSize,c=(n-t)/(o-t);let u=e*l;for(let d=u+l;u!==d;u+=4)Quaternion.slerpFlat(a,0,r,u-l,r,u,c);return a}}class QuaternionKeyframeTrack extends KeyframeTrack{constructor(e,t,n,o){super(e,t,n,o)}InterpolantFactoryMethodLinear(e){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)}}QuaternionKeyframeTrack.prototype.ValueTypeName="quaternion";QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class StringKeyframeTrack extends KeyframeTrack{constructor(e,t,n){super(e,t,n)}}StringKeyframeTrack.prototype.ValueTypeName="string";StringKeyframeTrack.prototype.ValueBufferType=Array;StringKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete;StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0;StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;class VectorKeyframeTrack extends KeyframeTrack{constructor(e,t,n,o){super(e,t,n,o)}}VectorKeyframeTrack.prototype.ValueTypeName="vector";class AnimationClip{constructor(e="",t=-1,n=[],o=NormalAnimationBlendMode){this.name=e,this.tracks=n,this.duration=t,this.blendMode=o,this.uuid=generateUUID(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,o=1/(e.fps||1);for(let r=0,l=n.length;r!==l;++r)t.push(parseKeyframeTrack(n[r]).scale(o));const a=new this(e.name,e.duration,t,e.blendMode);return a.uuid=e.uuid,a}static toJSON(e){const t=[],n=e.tracks,o={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let a=0,r=n.length;a!==r;++a)t.push(KeyframeTrack.toJSON(n[a]));return o}static CreateFromMorphTargetSequence(e,t,n,o){const a=t.length,r=[];for(let l=0;l<a;l++){let c=[],u=[];c.push((l+a-1)%a,l,(l+1)%a),u.push(0,1,0);const d=getKeyframeOrder(c);c=sortedArray(c,1,d),u=sortedArray(u,1,d),!o&&c[0]===0&&(c.push(a),u.push(u[0])),r.push(new NumberKeyframeTrack(".morphTargetInfluences["+t[l].name+"]",c,u).scale(1/n))}return new this(e,-1,r)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const o=e;n=o.geometry&&o.geometry.animations||o.animations}for(let o=0;o<n.length;o++)if(n[o].name===t)return n[o];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const o={},a=/^([\w-]*?)([\d]+)$/;for(let l=0,c=e.length;l<c;l++){const u=e[l],d=u.name.match(a);if(d&&d.length>1){const f=d[1];let g=o[f];g||(o[f]=g=[]),g.push(u)}}const r=[];for(const l in o)r.push(this.CreateFromMorphTargetSequence(l,o[l],t,n));return r}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(f,g,_,b,B){if(_.length!==0){const I=[],C=[];flattenJSON(_,I,C,b),I.length!==0&&B.push(new f(g,I,C))}},o=[],a=e.name||"default",r=e.fps||30,l=e.blendMode;let c=e.length||-1;const u=e.hierarchy||[];for(let f=0;f<u.length;f++){const g=u[f].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const _={};let b;for(b=0;b<g.length;b++)if(g[b].morphTargets)for(let B=0;B<g[b].morphTargets.length;B++)_[g[b].morphTargets[B]]=-1;for(const B in _){const I=[],C=[];for(let R=0;R!==g[b].morphTargets.length;++R){const L=g[b];I.push(L.time),C.push(L.morphTarget===B?1:0)}o.push(new NumberKeyframeTrack(".morphTargetInfluence["+B+"]",I,C))}c=_.length*r}else{const _=".bones["+t[f].name+"]";n(VectorKeyframeTrack,_+".position",g,"pos",o),n(QuaternionKeyframeTrack,_+".quaternion",g,"rot",o),n(VectorKeyframeTrack,_+".scale",g,"scl",o)}}return o.length===0?null:new this(a,c,o,l)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,o=e.length;n!==o;++n){const a=this.tracks[n];t=Math.max(t,a.times[a.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function getTrackTypeForValueTypeName(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function parseKeyframeTrack(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=getTrackTypeForValueTypeName(s.type);if(s.times===void 0){const t=[],n=[];flattenJSON(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Cache={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class LoadingManager{constructor(e,t,n){const o=this;let a=!1,r=0,l=0,c;const u=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){l++,a===!1&&o.onStart!==void 0&&o.onStart(d,r,l),a=!0},this.itemEnd=function(d){r++,o.onProgress!==void 0&&o.onProgress(d,r,l),r===l&&(a=!1,o.onLoad!==void 0&&o.onLoad())},this.itemError=function(d){o.onError!==void 0&&o.onError(d)},this.resolveURL=function(d){return c?c(d):d},this.setURLModifier=function(d){return c=d,this},this.addHandler=function(d,f){return u.push(d,f),this},this.removeHandler=function(d){const f=u.indexOf(d);return f!==-1&&u.splice(f,2),this},this.getHandler=function(d){for(let f=0,g=u.length;f<g;f+=2){const _=u[f],b=u[f+1];if(_.global&&(_.lastIndex=0),_.test(d))return b}return null}}}const DefaultLoadingManager=new LoadingManager;class Loader{constructor(e){this.manager=e!==void 0?e:DefaultLoadingManager,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(o,a){n.load(e,o,t,a)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Loader.DEFAULT_MATERIAL_NAME="__DEFAULT";const loading={};class HttpError extends Error{constructor(e,t){super(e),this.response=t}}class FileLoader extends Loader{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,o){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=Cache.get(`file:${e}`);if(a!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(a),this.manager.itemEnd(e)},0),a;if(loading[e]!==void 0){loading[e].push({onLoad:t,onProgress:n,onError:o});return}loading[e]=[],loading[e].push({onLoad:t,onProgress:n,onError:o});const r=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),l=this.mimeType,c=this.responseType;fetch(r).then(u=>{if(u.status===200||u.status===0){if(u.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||u.body===void 0||u.body.getReader===void 0)return u;const d=loading[e],f=u.body.getReader(),g=u.headers.get("X-File-Size")||u.headers.get("Content-Length"),_=g?parseInt(g):0,b=_!==0;let B=0;const I=new ReadableStream({start(C){R();function R(){f.read().then(({done:L,value:F})=>{if(L)C.close();else{B+=F.byteLength;const N=new ProgressEvent("progress",{lengthComputable:b,loaded:B,total:_});for(let k=0,Q=d.length;k<Q;k++){const z=d[k];z.onProgress&&z.onProgress(N)}C.enqueue(F),R()}},L=>{C.error(L)})}}});return new Response(I)}else throw new HttpError(`fetch for "${u.url}" responded with ${u.status}: ${u.statusText}`,u)}).then(u=>{switch(c){case"arraybuffer":return u.arrayBuffer();case"blob":return u.blob();case"document":return u.text().then(d=>new DOMParser().parseFromString(d,l));case"json":return u.json();default:if(l==="")return u.text();{const f=/charset="?([^;"\s]*)"?/i.exec(l),g=f&&f[1]?f[1].toLowerCase():void 0,_=new TextDecoder(g);return u.arrayBuffer().then(b=>_.decode(b))}}}).then(u=>{Cache.add(`file:${e}`,u);const d=loading[e];delete loading[e];for(let f=0,g=d.length;f<g;f++){const _=d[f];_.onLoad&&_.onLoad(u)}}).catch(u=>{const d=loading[e];if(d===void 0)throw this.manager.itemError(e),u;delete loading[e];for(let f=0,g=d.length;f<g;f++){const _=d[f];_.onError&&_.onError(u)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}const _loading=new WeakMap;class ImageLoader extends Loader{constructor(e){super(e)}load(e,t,n,o){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,r=Cache.get(`image:${e}`);if(r!==void 0){if(r.complete===!0)a.manager.itemStart(e),setTimeout(function(){t&&t(r),a.manager.itemEnd(e)},0);else{let f=_loading.get(r);f===void 0&&(f=[],_loading.set(r,f)),f.push({onLoad:t,onError:o})}return r}const l=createElementNS("img");function c(){d(),t&&t(this);const f=_loading.get(this)||[];for(let g=0;g<f.length;g++){const _=f[g];_.onLoad&&_.onLoad(this)}_loading.delete(this),a.manager.itemEnd(e)}function u(f){d(),o&&o(f),Cache.remove(`image:${e}`);const g=_loading.get(this)||[];for(let _=0;_<g.length;_++){const b=g[_];b.onError&&b.onError(f)}_loading.delete(this),a.manager.itemError(e),a.manager.itemEnd(e)}function d(){l.removeEventListener("load",c,!1),l.removeEventListener("error",u,!1)}return l.addEventListener("load",c,!1),l.addEventListener("error",u,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(l.crossOrigin=this.crossOrigin),Cache.add(`image:${e}`,l),a.manager.itemStart(e),l.src=e,l}}class TextureLoader extends Loader{constructor(e){super(e)}load(e,t,n,o){const a=new Texture,r=new ImageLoader(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,function(l){a.image=l,a.needsUpdate=!0,t!==void 0&&t(a)},n,o),a}}class Light extends Object3D{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Color(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}const _projScreenMatrix$1=new Matrix4,_lightPositionWorld$1=new Vector3,_lookTarget$1=new Vector3;class LightShadow{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Vector2(512,512),this.mapType=UnsignedByteType,this.map=null,this.mapPass=null,this.matrix=new Matrix4,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Frustum,this._frameExtents=new Vector2(1,1),this._viewportCount=1,this._viewports=[new Vector4(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;_lightPositionWorld$1.setFromMatrixPosition(e.matrixWorld),t.position.copy(_lightPositionWorld$1),_lookTarget$1.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(_lookTarget$1),t.updateMatrixWorld(),_projScreenMatrix$1.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_projScreenMatrix$1),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(_projScreenMatrix$1)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class SpotLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,n=RAD2DEG*2*e.angle*this.focus,o=this.mapSize.width/this.mapSize.height*this.aspect,a=e.distance||t.far;(n!==t.fov||o!==t.aspect||a!==t.far)&&(t.fov=n,t.aspect=o,t.far=a,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class SpotLight extends Light{constructor(e,t,n=0,o=Math.PI/3,a=0,r=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Object3D.DEFAULT_UP),this.updateMatrix(),this.target=new Object3D,this.distance=n,this.angle=o,this.penumbra=a,this.decay=r,this.map=null,this.shadow=new SpotLightShadow}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const _projScreenMatrix=new Matrix4,_lightPositionWorld=new Vector3,_lookTarget=new Vector3;class PointLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Vector2(4,2),this._viewportCount=6,this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)],this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,o=this.matrix,a=e.distance||n.far;a!==n.far&&(n.far=a,n.updateProjectionMatrix()),_lightPositionWorld.setFromMatrixPosition(e.matrixWorld),n.position.copy(_lightPositionWorld),_lookTarget.copy(n.position),_lookTarget.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(_lookTarget),n.updateMatrixWorld(),o.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z),_projScreenMatrix.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_projScreenMatrix)}}class PointLight extends Light{constructor(e,t,n=0,o=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=o,this.shadow=new PointLightShadow}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class OrthographicCamera extends Camera{constructor(e=-1,t=1,n=1,o=-1,a=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=o,this.near=a,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,o,a,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=o,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,o=(this.top+this.bottom)/2;let a=n-e,r=n+e,l=o+t,c=o-t;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=u*this.view.offsetX,r=a+u*this.view.width,l-=d*this.view.offsetY,c=l-d*this.view.height}this.projectionMatrix.makeOrthographic(a,r,l,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class DirectionalLightShadow extends LightShadow{constructor(){super(new OrthographicCamera(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class DirectionalLight extends Light{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Object3D.DEFAULT_UP),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class AmbientLight extends Light{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class LoaderUtils{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class InstancedBufferGeometry extends BufferGeometry{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}const _errorMap=new WeakMap;class ImageBitmapLoader extends Loader{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,o){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,r=Cache.get(`image-bitmap:${e}`);if(r!==void 0){if(a.manager.itemStart(e),r.then){r.then(u=>{if(_errorMap.has(r)===!0)o&&o(_errorMap.get(r)),a.manager.itemError(e),a.manager.itemEnd(e);else return t&&t(u),a.manager.itemEnd(e),u});return}return setTimeout(function(){t&&t(r),a.manager.itemEnd(e)},0),r}const l={};l.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",l.headers=this.requestHeader;const c=fetch(e,l).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(a.options,{colorSpaceConversion:"none"}))}).then(function(u){return Cache.add(`image-bitmap:${e}`,u),t&&t(u),a.manager.itemEnd(e),u}).catch(function(u){o&&o(u),_errorMap.set(c,u),Cache.remove(`image-bitmap:${e}`),a.manager.itemError(e),a.manager.itemEnd(e)});Cache.add(`image-bitmap:${e}`,c),a.manager.itemStart(e)}}class ArrayCamera extends PerspectiveCamera{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Clock{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}class PropertyMixer{constructor(e,t,n){this.binding=e,this.valueSize=n;let o,a,r;switch(t){case"quaternion":o=this._slerp,a=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":o=this._select,a=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:o=this._lerp,a=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=o,this._mixBufferRegionAdditive=a,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,o=this.valueSize,a=e*o+o;let r=this.cumulativeWeight;if(r===0){for(let l=0;l!==o;++l)n[a+l]=n[l];r=t}else{r+=t;const l=t/r;this._mixBufferRegion(n,a,0,l,o)}this.cumulativeWeight=r}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,o=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,o,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,o=e*t+t,a=this.cumulativeWeight,r=this.cumulativeWeightAdditive,l=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,a<1){const c=t*this._origIndex;this._mixBufferRegion(n,o,c,1-a,t)}r>0&&this._mixBufferRegionAdditive(n,o,this._addIndex*t,1,t);for(let c=t,u=t+t;c!==u;++c)if(n[c]!==n[c+t]){l.setValue(n,o);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,o=n*this._origIndex;e.getValue(t,o);for(let a=n,r=o;a!==r;++a)t[a]=t[o+a%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,o,a){if(o>=.5)for(let r=0;r!==a;++r)e[t+r]=e[n+r]}_slerp(e,t,n,o){Quaternion.slerpFlat(e,t,e,t,e,n,o)}_slerpAdditive(e,t,n,o,a){const r=this._workIndex*a;Quaternion.multiplyQuaternionsFlat(e,r,e,t,e,n),Quaternion.slerpFlat(e,t,e,t,e,r,o)}_lerp(e,t,n,o,a){const r=1-o;for(let l=0;l!==a;++l){const c=t+l;e[c]=e[c]*r+e[n+l]*o}}_lerpAdditive(e,t,n,o,a){for(let r=0;r!==a;++r){const l=t+r;e[l]=e[l]+e[n+r]*o}}}const _RESERVED_CHARS_RE="\\[\\]\\.:\\/",_reservedRe=new RegExp("["+_RESERVED_CHARS_RE+"]","g"),_wordChar="[^"+_RESERVED_CHARS_RE+"]",_wordCharOrDot="[^"+_RESERVED_CHARS_RE.replace("\\.","")+"]",_directoryRe=/((?:WC+[\/:])*)/.source.replace("WC",_wordChar),_nodeRe=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot),_objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_wordChar),_propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_wordChar),_trackRe=new RegExp("^"+_directoryRe+_nodeRe+_objectRe+_propertyRe+"$"),_supportedObjectNames=["material","materials","bones","map"];class Composite{constructor(e,t,n){const o=n||PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,o)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,o=this._bindings[n];o!==void 0&&o.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let o=this._targetGroup.nCachedObjects_,a=n.length;o!==a;++o)n[o].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class PropertyBinding{constructor(e,t,n){this.path=t,this.parsedPath=n||PropertyBinding.parseTrackName(t),this.node=PropertyBinding.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new PropertyBinding.Composite(e,t,n):new PropertyBinding(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(_reservedRe,"")}static parseTrackName(e){const t=_trackRe.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},o=n.nodeName&&n.nodeName.lastIndexOf(".");if(o!==void 0&&o!==-1){const a=n.nodeName.substring(o+1);_supportedObjectNames.indexOf(a)!==-1&&(n.nodeName=n.nodeName.substring(0,o),n.objectName=a)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(a){for(let r=0;r<a.length;r++){const l=a[r];if(l.name===t||l.uuid===t)return l;const c=n(l.children);if(c)return c}return null},o=n(e.children);if(o)return o}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let o=0,a=n.length;o!==a;++o)e[t++]=n[o]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let o=0,a=n.length;o!==a;++o)n[o]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let o=0,a=n.length;o!==a;++o)n[o]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let o=0,a=n.length;o!==a;++o)n[o]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,o=t.propertyName;let a=t.propertyIndex;if(e||(e=PropertyBinding.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let u=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===u){u=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(u!==void 0){if(e[u]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[u]}}const r=e[o];if(r===void 0){const u=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+u+"."+o+" but it wasn't found.",e);return}let l=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?l=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(l=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(a!==void 0){if(o==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[a]!==void 0&&(a=e.morphTargetDictionary[a])}c=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=a}else r.fromArray!==void 0&&r.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(c=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=o;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}PropertyBinding.Composite=Composite;PropertyBinding.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};PropertyBinding.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};PropertyBinding.prototype.GetterByBindingType=[PropertyBinding.prototype._getValue_direct,PropertyBinding.prototype._getValue_array,PropertyBinding.prototype._getValue_arrayElement,PropertyBinding.prototype._getValue_toArray];PropertyBinding.prototype.SetterByBindingTypeAndVersioning=[[PropertyBinding.prototype._setValue_direct,PropertyBinding.prototype._setValue_direct_setNeedsUpdate,PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_array,PropertyBinding.prototype._setValue_array_setNeedsUpdate,PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_arrayElement,PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_fromArray,PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class AnimationAction{constructor(e,t,n=null,o=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=o;const a=t.tracks,r=a.length,l=new Array(r),c={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(let u=0;u!==r;++u){const d=a[u].createInterpolant(null);l[u]=d,d.settings=c}this._interpolantSettings=c,this._interpolants=l,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n=!1){if(e.fadeOut(t),this.fadeIn(t),n===!0){const o=this._clip.duration,a=e._clip.duration,r=a/o,l=o/a;e.warp(1,r,t),this.warp(l,1,t)}return this}crossFadeTo(e,t,n=!1){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const o=this._mixer,a=o.time,r=this.timeScale;let l=this._timeScaleInterpolant;l===null&&(l=o._lendControlInterpolant(),this._timeScaleInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=a,c[1]=a+n,u[0]=e/r,u[1]=t/r,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,o){if(!this.enabled){this._updateWeight(e);return}const a=this._startTime;if(a!==null){const c=(e-a)*n;c<0||n===0?t=0:(this._startTime=null,t=n*c)}t*=this._updateTimeScale(e);const r=this._updateTime(t),l=this._updateWeight(e);if(l>0){const c=this._interpolants,u=this._propertyBindings;switch(this.blendMode){case AdditiveAnimationBlendMode:for(let d=0,f=c.length;d!==f;++d)c[d].evaluate(r),u[d].accumulateAdditive(l);break;case NormalAnimationBlendMode:default:for(let d=0,f=c.length;d!==f;++d)c[d].evaluate(r),u[d].accumulate(o,l)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const o=n.evaluate(e)[0];t*=o,e>n.parameterPositions[1]&&(this.stopFading(),o===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const o=n.evaluate(e)[0];t*=o,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let o=this.time+e,a=this._loopCount;const r=n===LoopPingPong;if(e===0)return a===-1?o:r&&(a&1)===1?t-o:o;if(n===LoopOnce){a===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(o>=t)o=t;else if(o<0)o=0;else{this.time=o;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=o,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(a===-1&&(e>=0?(a=0,this._setEndings(!0,this.repetitions===0,r)):this._setEndings(this.repetitions===0,!0,r)),o>=t||o<0){const l=Math.floor(o/t);o-=t*l,a+=Math.abs(l);const c=this.repetitions-a;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,o=e>0?t:0,this.time=o,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const u=e<0;this._setEndings(u,!u,r)}else this._setEndings(!1,!1,r);this._loopCount=a,this.time=o,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:l})}}else this.time=o;if(r&&(a&1)===1)return t-o}return o}_setEndings(e,t,n){const o=this._interpolantSettings;n?(o.endingStart=ZeroSlopeEnding,o.endingEnd=ZeroSlopeEnding):(e?o.endingStart=this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding:o.endingStart=WrapAroundEnding,t?o.endingEnd=this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding:o.endingEnd=WrapAroundEnding)}_scheduleFading(e,t,n){const o=this._mixer,a=o.time;let r=this._weightInterpolant;r===null&&(r=o._lendControlInterpolant(),this._weightInterpolant=r);const l=r.parameterPositions,c=r.sampleValues;return l[0]=a,c[0]=t,l[1]=a+e,c[1]=n,this}}const _controlInterpolantsResultBuffer=new Float32Array(1);class AnimationMixer extends EventDispatcher{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,o=e._clip.tracks,a=o.length,r=e._propertyBindings,l=e._interpolants,c=n.uuid,u=this._bindingsByRootAndName;let d=u[c];d===void 0&&(d={},u[c]=d);for(let f=0;f!==a;++f){const g=o[f],_=g.name;let b=d[_];if(b!==void 0)++b.referenceCount,r[f]=b;else{if(b=r[f],b!==void 0){b._cacheIndex===null&&(++b.referenceCount,this._addInactiveBinding(b,c,_));continue}const B=t&&t._propertyBindings[f].binding.parsedPath;b=new PropertyMixer(PropertyBinding.create(n,_,B),g.ValueTypeName,g.getValueSize()),++b.referenceCount,this._addInactiveBinding(b,c,_),r[f]=b}l[f].resultBuffer=b.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,o=e._clip.uuid,a=this._actionsByClip[o];this._bindAction(e,a&&a.knownActions[0]),this._addInactiveAction(e,o,n)}const t=e._propertyBindings;for(let n=0,o=t.length;n!==o;++n){const a=t[n];a.useCount++===0&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,o=t.length;n!==o;++n){const a=t[n];--a.useCount===0&&(a.restoreOriginalState(),this._takeBackBinding(a))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const o=this._actions,a=this._actionsByClip;let r=a[t];if(r===void 0)r={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,a[t]=r;else{const l=r.knownActions;e._byClipCacheIndex=l.length,l.push(e)}e._cacheIndex=o.length,o.push(e),r.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],o=e._cacheIndex;n._cacheIndex=o,t[o]=n,t.pop(),e._cacheIndex=null;const a=e._clip.uuid,r=this._actionsByClip,l=r[a],c=l.knownActions,u=c[c.length-1],d=e._byClipCacheIndex;u._byClipCacheIndex=d,c[d]=u,c.pop(),e._byClipCacheIndex=null;const f=l.actionByRoot,g=(e._localRoot||this._root).uuid;delete f[g],c.length===0&&delete r[a],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,o=t.length;n!==o;++n){const a=t[n];--a.referenceCount===0&&this._removeInactiveBinding(a)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,o=this._nActiveActions++,a=t[o];e._cacheIndex=o,t[o]=e,a._cacheIndex=n,t[n]=a}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,o=--this._nActiveActions,a=t[o];e._cacheIndex=o,t[o]=e,a._cacheIndex=n,t[n]=a}_addInactiveBinding(e,t,n){const o=this._bindingsByRootAndName,a=this._bindings;let r=o[t];r===void 0&&(r={},o[t]=r),r[n]=e,e._cacheIndex=a.length,a.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,o=n.rootNode.uuid,a=n.path,r=this._bindingsByRootAndName,l=r[o],c=t[t.length-1],u=e._cacheIndex;c._cacheIndex=u,t[u]=c,t.pop(),delete l[a],Object.keys(l).length===0&&delete r[o]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,o=this._nActiveBindings++,a=t[o];e._cacheIndex=o,t[o]=e,a._cacheIndex=n,t[n]=a}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,o=--this._nActiveBindings,a=t[o];e._cacheIndex=o,t[o]=e,a._cacheIndex=n,t[n]=a}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,_controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,o=--this._nActiveControlInterpolants,a=t[o];e.__cacheIndex=o,t[o]=e,a.__cacheIndex=n,t[n]=a}clipAction(e,t,n){const o=t||this._root,a=o.uuid;let r=typeof e=="string"?AnimationClip.findByName(o,e):e;const l=r!==null?r.uuid:e,c=this._actionsByClip[l];let u=null;if(n===void 0&&(r!==null?n=r.blendMode:n=NormalAnimationBlendMode),c!==void 0){const f=c.actionByRoot[a];if(f!==void 0&&f.blendMode===n)return f;u=c.knownActions[0],r===null&&(r=u._clip)}if(r===null)return null;const d=new AnimationAction(this,r,t,n);return this._bindAction(d,u),this._addInactiveAction(d,l,a),d}existingAction(e,t){const n=t||this._root,o=n.uuid,a=typeof e=="string"?AnimationClip.findByName(n,e):e,r=a?a.uuid:e,l=this._actionsByClip[r];return l!==void 0&&l.actionByRoot[o]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,o=this.time+=e,a=Math.sign(e),r=this._accuIndex^=1;for(let u=0;u!==n;++u)t[u]._update(o,e,a,r);const l=this._bindings,c=this._nActiveBindings;for(let u=0;u!==c;++u)l[u].apply(r);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,o=this._actionsByClip,a=o[n];if(a!==void 0){const r=a.knownActions;for(let l=0,c=r.length;l!==c;++l){const u=r[l];this._deactivateAction(u);const d=u._cacheIndex,f=t[t.length-1];u._cacheIndex=null,u._byClipCacheIndex=null,f._cacheIndex=d,t[d]=f,t.pop(),this._removeInactiveBindingsForAction(u)}delete o[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const r in n){const l=n[r].actionByRoot,c=l[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const o=this._bindingsByRootAndName,a=o[t];if(a!==void 0)for(const r in a){const l=a[r];l.restoreOriginalState(),this._removeInactiveBinding(l)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Spherical{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=clamp$1(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(clamp$1(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Matrix2{constructor(e,t,n,o){Matrix2.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,o)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,o){const a=this.elements;return a[0]=e,a[2]=t,a[1]=n,a[3]=o,this}}const _startP=new Vector3,_startEnd=new Vector3;class Line3{constructor(e=new Vector3,t=new Vector3){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){_startP.subVectors(e,this.start),_startEnd.subVectors(this.end,this.start);const n=_startEnd.dot(_startEnd);let a=_startEnd.dot(_startP)/n;return t&&(a=clamp$1(a,0,1)),a}closestPointToPoint(e,t,n){const o=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(o).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class AxesHelper extends LineSegments{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],o=new BufferGeometry;o.setAttribute("position",new Float32BufferAttribute(t,3)),o.setAttribute("color",new Float32BufferAttribute(n,3));const a=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});super(o,a),this.type="AxesHelper"}setColors(e,t,n){const o=new Color,a=this.geometry.attributes.color.array;return o.set(e),o.toArray(a,0),o.toArray(a,3),o.set(t),o.toArray(a,6),o.toArray(a,9),o.set(n),o.toArray(a,12),o.toArray(a,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Controls extends EventDispatcher{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function getByteLength(s,e,t,n){const o=getTextureTypeByteLength(n);switch(t){case AlphaFormat:return s*e;case RedFormat:return s*e/o.components*o.byteLength;case RedIntegerFormat:return s*e/o.components*o.byteLength;case RGFormat:return s*e*2/o.components*o.byteLength;case RGIntegerFormat:return s*e*2/o.components*o.byteLength;case RGBFormat:return s*e*3/o.components*o.byteLength;case RGBAFormat:return s*e*4/o.components*o.byteLength;case RGBAIntegerFormat:return s*e*4/o.components*o.byteLength;case RGB_S3TC_DXT1_Format:case RGBA_S3TC_DXT1_Format:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case RGBA_S3TC_DXT3_Format:case RGBA_S3TC_DXT5_Format:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case RGB_PVRTC_2BPPV1_Format:case RGBA_PVRTC_2BPPV1_Format:return Math.max(s,16)*Math.max(e,8)/4;case RGB_PVRTC_4BPPV1_Format:case RGBA_PVRTC_4BPPV1_Format:return Math.max(s,8)*Math.max(e,8)/2;case RGB_ETC1_Format:case RGB_ETC2_Format:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case RGBA_ETC2_EAC_Format:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case RGBA_ASTC_4x4_Format:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case RGBA_ASTC_5x4_Format:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case RGBA_ASTC_5x5_Format:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case RGBA_ASTC_6x5_Format:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case RGBA_ASTC_6x6_Format:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case RGBA_ASTC_8x5_Format:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case RGBA_ASTC_8x6_Format:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case RGBA_ASTC_8x8_Format:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case RGBA_ASTC_10x5_Format:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case RGBA_ASTC_10x6_Format:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case RGBA_ASTC_10x8_Format:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case RGBA_ASTC_10x10_Format:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case RGBA_ASTC_12x10_Format:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case RGBA_ASTC_12x12_Format:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case RGBA_BPTC_Format:case RGB_BPTC_SIGNED_Format:case RGB_BPTC_UNSIGNED_Format:return Math.ceil(s/4)*Math.ceil(e/4)*16;case RED_RGTC1_Format:case SIGNED_RED_RGTC1_Format:return Math.ceil(s/4)*Math.ceil(e/4)*8;case RED_GREEN_RGTC2_Format:case SIGNED_RED_GREEN_RGTC2_Format:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function getTextureTypeByteLength(s){switch(s){case UnsignedByteType:case ByteType:return{byteLength:1,components:1};case UnsignedShortType:case ShortType:case HalfFloatType:return{byteLength:2,components:1};case UnsignedShort4444Type:case UnsignedShort5551Type:return{byteLength:2,components:4};case UnsignedIntType:case IntType:case FloatType:return{byteLength:4,components:1};case UnsignedInt5999Type:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:REVISION}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=REVISION);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function WebGLAnimation(){let s=null,e=!1,t=null,n=null;function o(a,r){t(a,r),n=s.requestAnimationFrame(o)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(o),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(a){t=a},setContext:function(a){s=a}}}function WebGLAttributes(s){const e=new WeakMap;function t(l,c){const u=l.array,d=l.usage,f=u.byteLength,g=s.createBuffer();s.bindBuffer(c,g),s.bufferData(c,u,d),l.onUploadCallback();let _;if(u instanceof Float32Array)_=s.FLOAT;else if(typeof Float16Array<"u"&&u instanceof Float16Array)_=s.HALF_FLOAT;else if(u instanceof Uint16Array)l.isFloat16BufferAttribute?_=s.HALF_FLOAT:_=s.UNSIGNED_SHORT;else if(u instanceof Int16Array)_=s.SHORT;else if(u instanceof Uint32Array)_=s.UNSIGNED_INT;else if(u instanceof Int32Array)_=s.INT;else if(u instanceof Int8Array)_=s.BYTE;else if(u instanceof Uint8Array)_=s.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)_=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:g,type:_,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version,size:f}}function n(l,c,u){const d=c.array,f=c.updateRanges;if(s.bindBuffer(u,l),f.length===0)s.bufferSubData(u,0,d);else{f.sort((_,b)=>_.start-b.start);let g=0;for(let _=1;_<f.length;_++){const b=f[g],B=f[_];B.start<=b.start+b.count+1?b.count=Math.max(b.count,B.start+B.count-b.start):(++g,f[g]=B)}f.length=g+1;for(let _=0,b=f.length;_<b;_++){const B=f[_];s.bufferSubData(u,B.start*d.BYTES_PER_ELEMENT,d,B.start,B.count)}c.clearUpdateRanges()}c.onUploadCallback()}function o(l){return l.isInterleavedBufferAttribute&&(l=l.data),e.get(l)}function a(l){l.isInterleavedBufferAttribute&&(l=l.data);const c=e.get(l);c&&(s.deleteBuffer(c.buffer),e.delete(l))}function r(l,c){if(l.isInterleavedBufferAttribute&&(l=l.data),l.isGLBufferAttribute){const d=e.get(l);(!d||d.version<l.version)&&e.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}const u=e.get(l);if(u===void 0)e.set(l,t(l,c));else if(u.version<l.version){if(u.size!==l.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(u.buffer,l,c),u.version=l.version}}return{get:o,remove:a,update:r}}var alphahash_fragment=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,alphahash_pars_fragment=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,alphamap_fragment=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,alphamap_pars_fragment=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,alphatest_fragment=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,alphatest_pars_fragment=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,aomap_fragment=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,aomap_pars_fragment=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,batching_pars_vertex=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,batching_vertex=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,begin_vertex=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,beginnormal_vertex=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,bsdfs=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,iridescence_fragment=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,bumpmap_pars_fragment=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,clipping_planes_fragment=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,clipping_planes_pars_fragment=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,clipping_planes_pars_vertex=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,clipping_planes_vertex=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,color_fragment=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,color_pars_fragment=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,color_pars_vertex=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,color_vertex=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,common=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,cube_uv_reflection_fragment=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,defaultnormal_vertex=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,displacementmap_pars_vertex=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,displacementmap_vertex=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,emissivemap_fragment=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,emissivemap_pars_fragment=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,colorspace_fragment="gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,envmap_fragment=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,envmap_common_pars_fragment=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,envmap_pars_fragment=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,envmap_pars_vertex=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,envmap_vertex=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,fog_vertex=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,fog_pars_vertex=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,fog_fragment=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,fog_pars_fragment=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,gradientmap_pars_fragment=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,lightmap_pars_fragment=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,lights_lambert_fragment=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,lights_lambert_pars_fragment=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,lights_pars_begin=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,envmap_physical_pars_fragment=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,lights_toon_fragment=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,lights_toon_pars_fragment=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,lights_phong_fragment=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,lights_phong_pars_fragment=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,lights_physical_fragment=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,lights_physical_pars_fragment=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,lights_fragment_begin=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,lights_fragment_maps=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,lights_fragment_end=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,logdepthbuf_fragment=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,logdepthbuf_pars_fragment=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,logdepthbuf_pars_vertex=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,logdepthbuf_vertex=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,map_fragment=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,map_pars_fragment=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,map_particle_fragment=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,map_particle_pars_fragment=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,metalnessmap_fragment=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,metalnessmap_pars_fragment=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,morphinstance_vertex=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,morphcolor_vertex=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,morphnormal_vertex=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,morphtarget_pars_vertex=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,morphtarget_vertex=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,normal_fragment_begin=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,normal_fragment_maps=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,normal_pars_fragment=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,normal_pars_vertex=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,normal_vertex=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,normalmap_pars_fragment=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,clearcoat_normal_fragment_begin=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,clearcoat_normal_fragment_maps=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,clearcoat_pars_fragment=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,iridescence_pars_fragment=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,opaque_fragment=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,packing=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,premultiplied_alpha_fragment=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,project_vertex=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dithering_fragment=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,dithering_pars_fragment=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,roughnessmap_fragment=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,roughnessmap_pars_fragment=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,shadowmap_pars_fragment=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,shadowmap_pars_vertex=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,shadowmap_vertex=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,shadowmask_pars_fragment=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,skinbase_vertex=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,skinning_pars_vertex=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,skinning_vertex=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,skinnormal_vertex=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,specularmap_fragment=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,specularmap_pars_fragment=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,tonemapping_fragment=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,tonemapping_pars_fragment=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,transmission_fragment=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,transmission_pars_fragment=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,uv_pars_fragment=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uv_pars_vertex=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uv_vertex=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,worldpos_vertex=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const vertex$h=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,fragment$h=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vertex$g=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,fragment$g=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vertex$f=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,fragment$f=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vertex$e=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,fragment$e=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,vertex$d=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,fragment$d=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,vertex$c=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,fragment$c=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vertex$b=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,fragment$b=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,vertex$a=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,fragment$a=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$9=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fragment$9=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$8=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,fragment$8=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$7=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,fragment$7=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,vertex$6=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fragment$6=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$5=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,fragment$5=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$4=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fragment$4=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vertex$3=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,fragment$3=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,vertex$2=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fragment$2=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,vertex$1=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,fragment$1=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ShaderChunk={alphahash_fragment,alphahash_pars_fragment,alphamap_fragment,alphamap_pars_fragment,alphatest_fragment,alphatest_pars_fragment,aomap_fragment,aomap_pars_fragment,batching_pars_vertex,batching_vertex,begin_vertex,beginnormal_vertex,bsdfs,iridescence_fragment,bumpmap_pars_fragment,clipping_planes_fragment,clipping_planes_pars_fragment,clipping_planes_pars_vertex,clipping_planes_vertex,color_fragment,color_pars_fragment,color_pars_vertex,color_vertex,common,cube_uv_reflection_fragment,defaultnormal_vertex,displacementmap_pars_vertex,displacementmap_vertex,emissivemap_fragment,emissivemap_pars_fragment,colorspace_fragment,colorspace_pars_fragment,envmap_fragment,envmap_common_pars_fragment,envmap_pars_fragment,envmap_pars_vertex,envmap_physical_pars_fragment,envmap_vertex,fog_vertex,fog_pars_vertex,fog_fragment,fog_pars_fragment,gradientmap_pars_fragment,lightmap_pars_fragment,lights_lambert_fragment,lights_lambert_pars_fragment,lights_pars_begin,lights_toon_fragment,lights_toon_pars_fragment,lights_phong_fragment,lights_phong_pars_fragment,lights_physical_fragment,lights_physical_pars_fragment,lights_fragment_begin,lights_fragment_maps,lights_fragment_end,logdepthbuf_fragment,logdepthbuf_pars_fragment,logdepthbuf_pars_vertex,logdepthbuf_vertex,map_fragment,map_pars_fragment,map_particle_fragment,map_particle_pars_fragment,metalnessmap_fragment,metalnessmap_pars_fragment,morphinstance_vertex,morphcolor_vertex,morphnormal_vertex,morphtarget_pars_vertex,morphtarget_vertex,normal_fragment_begin,normal_fragment_maps,normal_pars_fragment,normal_pars_vertex,normal_vertex,normalmap_pars_fragment,clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps,clearcoat_pars_fragment,iridescence_pars_fragment,opaque_fragment,packing,premultiplied_alpha_fragment,project_vertex,dithering_fragment,dithering_pars_fragment,roughnessmap_fragment,roughnessmap_pars_fragment,shadowmap_pars_fragment,shadowmap_pars_vertex,shadowmap_vertex,shadowmask_pars_fragment,skinbase_vertex,skinning_pars_vertex,skinning_vertex,skinnormal_vertex,specularmap_fragment,specularmap_pars_fragment,tonemapping_fragment,tonemapping_pars_fragment,transmission_fragment,transmission_pars_fragment,uv_pars_fragment,uv_pars_vertex,uv_vertex,worldpos_vertex,background_vert:vertex$h,background_frag:fragment$h,backgroundCube_vert:vertex$g,backgroundCube_frag:fragment$g,cube_vert:vertex$f,cube_frag:fragment$f,depth_vert:vertex$e,depth_frag:fragment$e,distanceRGBA_vert:vertex$d,distanceRGBA_frag:fragment$d,equirect_vert:vertex$c,equirect_frag:fragment$c,linedashed_vert:vertex$b,linedashed_frag:fragment$b,meshbasic_vert:vertex$a,meshbasic_frag:fragment$a,meshlambert_vert:vertex$9,meshlambert_frag:fragment$9,meshmatcap_vert:vertex$8,meshmatcap_frag:fragment$8,meshnormal_vert:vertex$7,meshnormal_frag:fragment$7,meshphong_vert:vertex$6,meshphong_frag:fragment$6,meshphysical_vert:vertex$5,meshphysical_frag:fragment$5,meshtoon_vert:vertex$4,meshtoon_frag:fragment$4,points_vert:vertex$3,points_frag:fragment$3,shadow_vert:vertex$2,shadow_frag:fragment$2,sprite_vert:vertex$1,sprite_frag:fragment$1},UniformsLib={common:{diffuse:{value:new Color(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Matrix3},alphaMap:{value:null},alphaMapTransform:{value:new Matrix3},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Matrix3}},envmap:{envMap:{value:null},envMapRotation:{value:new Matrix3},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Matrix3}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Matrix3}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Matrix3},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Matrix3},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Matrix3},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Matrix3}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Matrix3}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Matrix3}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Matrix3},alphaTest:{value:0},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(16777215)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Matrix3},alphaMap:{value:null},alphaMapTransform:{value:new Matrix3},alphaTest:{value:0}}},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.meshnormal_vert,fragmentShader:ShaderChunk.meshnormal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Matrix3}},vertexShader:ShaderChunk.backgroundCube_vert,fragmentShader:ShaderChunk.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Matrix3},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Matrix3},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Matrix3},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Matrix3},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Matrix3},sheen:{value:0},sheenColor:{value:new Color(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Matrix3},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Matrix3},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Matrix3},transmissionSamplerSize:{value:new Vector2},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Matrix3},attenuationDistance:{value:0},attenuationColor:{value:new Color(0)},specularColor:{value:new Color(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Matrix3},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Matrix3},anisotropyVector:{value:new Vector2},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Matrix3}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};const _rgb={r:0,b:0,g:0},_e1$1=new Euler,_m1$1=new Matrix4;function WebGLBackground(s,e,t,n,o,a,r){const l=new Color(0);let c=a===!0?0:1,u,d,f=null,g=0,_=null;function b(L){let F=L.isScene===!0?L.background:null;return F&&F.isTexture&&(F=(L.backgroundBlurriness>0?t:e).get(F)),F}function B(L){let F=!1;const N=b(L);N===null?C(l,c):N&&N.isColor&&(C(N,1),F=!0);const k=s.xr.getEnvironmentBlendMode();k==="additive"?n.buffers.color.setClear(0,0,0,1,r):k==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,r),(s.autoClear||F)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function I(L,F){const N=b(F);N&&(N.isCubeTexture||N.mapping===CubeUVReflectionMapping)?(d===void 0&&(d=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.backgroundCube.uniforms),vertexShader:ShaderLib.backgroundCube.vertexShader,fragmentShader:ShaderLib.backgroundCube.fragmentShader,side:BackSide,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(k,Q,z){this.matrixWorld.copyPosition(z.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),o.update(d)),_e1$1.copy(F.backgroundRotation),_e1$1.x*=-1,_e1$1.y*=-1,_e1$1.z*=-1,N.isCubeTexture&&N.isRenderTargetTexture===!1&&(_e1$1.y*=-1,_e1$1.z*=-1),d.material.uniforms.envMap.value=N,d.material.uniforms.flipEnvMap.value=N.isCubeTexture&&N.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=F.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=F.backgroundIntensity,d.material.uniforms.backgroundRotation.value.setFromMatrix4(_m1$1.makeRotationFromEuler(_e1$1)),d.material.toneMapped=ColorManagement.getTransfer(N.colorSpace)!==SRGBTransfer,(f!==N||g!==N.version||_!==s.toneMapping)&&(d.material.needsUpdate=!0,f=N,g=N.version,_=s.toneMapping),d.layers.enableAll(),L.unshift(d,d.geometry,d.material,0,0,null)):N&&N.isTexture&&(u===void 0&&(u=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),o.update(u)),u.material.uniforms.t2D.value=N,u.material.uniforms.backgroundIntensity.value=F.backgroundIntensity,u.material.toneMapped=ColorManagement.getTransfer(N.colorSpace)!==SRGBTransfer,N.matrixAutoUpdate===!0&&N.updateMatrix(),u.material.uniforms.uvTransform.value.copy(N.matrix),(f!==N||g!==N.version||_!==s.toneMapping)&&(u.material.needsUpdate=!0,f=N,g=N.version,_=s.toneMapping),u.layers.enableAll(),L.unshift(u,u.geometry,u.material,0,0,null))}function C(L,F){L.getRGB(_rgb,getUnlitUniformColorSpace(s)),n.buffers.color.setClear(_rgb.r,_rgb.g,_rgb.b,F,r)}function R(){d!==void 0&&(d.geometry.dispose(),d.material.dispose(),d=void 0),u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0)}return{getClearColor:function(){return l},setClearColor:function(L,F=1){l.set(L),c=F,C(l,c)},getClearAlpha:function(){return c},setClearAlpha:function(L){c=L,C(l,c)},render:B,addToRenderList:I,dispose:R}}function WebGLBindingStates(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},o=g(null);let a=o,r=!1;function l(O,q,ce,ne,ue){let pe=!1;const fe=f(ne,ce,q);a!==fe&&(a=fe,u(a.object)),pe=_(O,ne,ce,ue),pe&&b(O,ne,ce,ue),ue!==null&&e.update(ue,s.ELEMENT_ARRAY_BUFFER),(pe||r)&&(r=!1,F(O,q,ce,ne),ue!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(ue).buffer))}function c(){return s.createVertexArray()}function u(O){return s.bindVertexArray(O)}function d(O){return s.deleteVertexArray(O)}function f(O,q,ce){const ne=ce.wireframe===!0;let ue=n[O.id];ue===void 0&&(ue={},n[O.id]=ue);let pe=ue[q.id];pe===void 0&&(pe={},ue[q.id]=pe);let fe=pe[ne];return fe===void 0&&(fe=g(c()),pe[ne]=fe),fe}function g(O){const q=[],ce=[],ne=[];for(let ue=0;ue<t;ue++)q[ue]=0,ce[ue]=0,ne[ue]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:q,enabledAttributes:ce,attributeDivisors:ne,object:O,attributes:{},index:null}}function _(O,q,ce,ne){const ue=a.attributes,pe=q.attributes;let fe=0;const ee=ce.getAttributes();for(const J in ee)if(ee[J].location>=0){const Te=ue[J];let xe=pe[J];if(xe===void 0&&(J==="instanceMatrix"&&O.instanceMatrix&&(xe=O.instanceMatrix),J==="instanceColor"&&O.instanceColor&&(xe=O.instanceColor)),Te===void 0||Te.attribute!==xe||xe&&Te.data!==xe.data)return!0;fe++}return a.attributesNum!==fe||a.index!==ne}function b(O,q,ce,ne){const ue={},pe=q.attributes;let fe=0;const ee=ce.getAttributes();for(const J in ee)if(ee[J].location>=0){let Te=pe[J];Te===void 0&&(J==="instanceMatrix"&&O.instanceMatrix&&(Te=O.instanceMatrix),J==="instanceColor"&&O.instanceColor&&(Te=O.instanceColor));const xe={};xe.attribute=Te,Te&&Te.data&&(xe.data=Te.data),ue[J]=xe,fe++}a.attributes=ue,a.attributesNum=fe,a.index=ne}function B(){const O=a.newAttributes;for(let q=0,ce=O.length;q<ce;q++)O[q]=0}function I(O){C(O,0)}function C(O,q){const ce=a.newAttributes,ne=a.enabledAttributes,ue=a.attributeDivisors;ce[O]=1,ne[O]===0&&(s.enableVertexAttribArray(O),ne[O]=1),ue[O]!==q&&(s.vertexAttribDivisor(O,q),ue[O]=q)}function R(){const O=a.newAttributes,q=a.enabledAttributes;for(let ce=0,ne=q.length;ce<ne;ce++)q[ce]!==O[ce]&&(s.disableVertexAttribArray(ce),q[ce]=0)}function L(O,q,ce,ne,ue,pe,fe){fe===!0?s.vertexAttribIPointer(O,q,ce,ue,pe):s.vertexAttribPointer(O,q,ce,ne,ue,pe)}function F(O,q,ce,ne){B();const ue=ne.attributes,pe=ce.getAttributes(),fe=q.defaultAttributeValues;for(const ee in pe){const J=pe[ee];if(J.location>=0){let ye=ue[ee];if(ye===void 0&&(ee==="instanceMatrix"&&O.instanceMatrix&&(ye=O.instanceMatrix),ee==="instanceColor"&&O.instanceColor&&(ye=O.instanceColor)),ye!==void 0){const Te=ye.normalized,xe=ye.itemSize,ve=e.get(ye);if(ve===void 0)continue;const he=ve.buffer,le=ve.type,_e=ve.bytesPerElement,De=le===s.INT||le===s.UNSIGNED_INT||ye.gpuType===IntType;if(ye.isInterleavedBufferAttribute){const de=ye.data,Me=de.stride,Ne=ye.offset;if(de.isInstancedInterleavedBuffer){for(let Pe=0;Pe<J.locationSize;Pe++)C(J.location+Pe,de.meshPerAttribute);O.isInstancedMesh!==!0&&ne._maxInstanceCount===void 0&&(ne._maxInstanceCount=de.meshPerAttribute*de.count)}else for(let Pe=0;Pe<J.locationSize;Pe++)I(J.location+Pe);s.bindBuffer(s.ARRAY_BUFFER,he);for(let Pe=0;Pe<J.locationSize;Pe++)L(J.location+Pe,xe/J.locationSize,le,Te,Me*_e,(Ne+xe/J.locationSize*Pe)*_e,De)}else{if(ye.isInstancedBufferAttribute){for(let de=0;de<J.locationSize;de++)C(J.location+de,ye.meshPerAttribute);O.isInstancedMesh!==!0&&ne._maxInstanceCount===void 0&&(ne._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let de=0;de<J.locationSize;de++)I(J.location+de);s.bindBuffer(s.ARRAY_BUFFER,he);for(let de=0;de<J.locationSize;de++)L(J.location+de,xe/J.locationSize,le,Te,xe*_e,xe/J.locationSize*de*_e,De)}}else if(fe!==void 0){const Te=fe[ee];if(Te!==void 0)switch(Te.length){case 2:s.vertexAttrib2fv(J.location,Te);break;case 3:s.vertexAttrib3fv(J.location,Te);break;case 4:s.vertexAttrib4fv(J.location,Te);break;default:s.vertexAttrib1fv(J.location,Te)}}}}R()}function N(){z();for(const O in n){const q=n[O];for(const ce in q){const ne=q[ce];for(const ue in ne)d(ne[ue].object),delete ne[ue];delete q[ce]}delete n[O]}}function k(O){if(n[O.id]===void 0)return;const q=n[O.id];for(const ce in q){const ne=q[ce];for(const ue in ne)d(ne[ue].object),delete ne[ue];delete q[ce]}delete n[O.id]}function Q(O){for(const q in n){const ce=n[q];if(ce[O.id]===void 0)continue;const ne=ce[O.id];for(const ue in ne)d(ne[ue].object),delete ne[ue];delete ce[O.id]}}function z(){G(),r=!0,a!==o&&(a=o,u(a.object))}function G(){o.geometry=null,o.program=null,o.wireframe=!1}return{setup:l,reset:z,resetDefaultState:G,dispose:N,releaseStatesOfGeometry:k,releaseStatesOfProgram:Q,initAttributes:B,enableAttribute:I,disableUnusedAttributes:R}}function WebGLBufferRenderer(s,e,t){let n;function o(u){n=u}function a(u,d){s.drawArrays(n,u,d),t.update(d,n,1)}function r(u,d,f){f!==0&&(s.drawArraysInstanced(n,u,d,f),t.update(d,n,f))}function l(u,d,f){if(f===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,u,0,d,0,f);let _=0;for(let b=0;b<f;b++)_+=d[b];t.update(_,n,1)}function c(u,d,f,g){if(f===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let b=0;b<u.length;b++)r(u[b],d[b],g[b]);else{_.multiDrawArraysInstancedWEBGL(n,u,0,d,0,g,0,f);let b=0;for(let B=0;B<f;B++)b+=d[B]*g[B];t.update(b,n,1)}}this.setMode=o,this.render=a,this.renderInstances=r,this.renderMultiDraw=l,this.renderMultiDrawInstances=c}function WebGLCapabilities$1(s,e,t,n){let o;function a(){if(o!==void 0)return o;if(e.has("EXT_texture_filter_anisotropic")===!0){const Q=e.get("EXT_texture_filter_anisotropic");o=s.getParameter(Q.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else o=0;return o}function r(Q){return!(Q!==RGBAFormat&&n.convert(Q)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function l(Q){const z=Q===HalfFloatType&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(Q!==UnsignedByteType&&n.convert(Q)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&Q!==FloatType&&!z)}function c(Q){if(Q==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";Q="mediump"}return Q==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let u=t.precision!==void 0?t.precision:"highp";const d=c(u);d!==u&&(console.warn("THREE.WebGLRenderer:",u,"not supported, using",d,"instead."),u=d);const f=t.logarithmicDepthBuffer===!0,g=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),_=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),b=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),B=s.getParameter(s.MAX_TEXTURE_SIZE),I=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),C=s.getParameter(s.MAX_VERTEX_ATTRIBS),R=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),L=s.getParameter(s.MAX_VARYING_VECTORS),F=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),N=b>0,k=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:a,getMaxPrecision:c,textureFormatReadable:r,textureTypeReadable:l,precision:u,logarithmicDepthBuffer:f,reverseDepthBuffer:g,maxTextures:_,maxVertexTextures:b,maxTextureSize:B,maxCubemapSize:I,maxAttributes:C,maxVertexUniforms:R,maxVaryings:L,maxFragmentUniforms:F,vertexTextures:N,maxSamples:k}}function WebGLClipping(s){const e=this;let t=null,n=0,o=!1,a=!1;const r=new Plane,l=new Matrix3,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(f,g){const _=f.length!==0||g||n!==0||o;return o=g,n=f.length,_},this.beginShadows=function(){a=!0,d(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(f,g){t=d(f,g,0)},this.setState=function(f,g,_){const b=f.clippingPlanes,B=f.clipIntersection,I=f.clipShadows,C=s.get(f);if(!o||b===null||b.length===0||a&&!I)a?d(null):u();else{const R=a?0:n,L=R*4;let F=C.clippingState||null;c.value=F,F=d(b,g,L,_);for(let N=0;N!==L;++N)F[N]=t[N];C.clippingState=F,this.numIntersection=B?this.numPlanes:0,this.numPlanes+=R}};function u(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(f,g,_,b){const B=f!==null?f.length:0;let I=null;if(B!==0){if(I=c.value,b!==!0||I===null){const C=_+B*4,R=g.matrixWorldInverse;l.getNormalMatrix(R),(I===null||I.length<C)&&(I=new Float32Array(C));for(let L=0,F=_;L!==B;++L,F+=4)r.copy(f[L]).applyMatrix4(R,l),r.normal.toArray(I,F),I[F+3]=r.constant}c.value=I,c.needsUpdate=!0}return e.numPlanes=B,e.numIntersection=0,I}}function WebGLCubeMaps(s){let e=new WeakMap;function t(r,l){return l===EquirectangularReflectionMapping?r.mapping=CubeReflectionMapping:l===EquirectangularRefractionMapping&&(r.mapping=CubeRefractionMapping),r}function n(r){if(r&&r.isTexture){const l=r.mapping;if(l===EquirectangularReflectionMapping||l===EquirectangularRefractionMapping)if(e.has(r)){const c=e.get(r).texture;return t(c,r.mapping)}else{const c=r.image;if(c&&c.height>0){const u=new WebGLCubeRenderTarget(c.height);return u.fromEquirectangularTexture(s,r),e.set(r,u),r.addEventListener("dispose",o),t(u.texture,r.mapping)}else return null}}return r}function o(r){const l=r.target;l.removeEventListener("dispose",o);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap}return{get:n,dispose:a}}const LOD_MIN=4,EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],MAX_SAMPLES=20,_flatCamera=new OrthographicCamera,_clearColor=new Color;let _oldTarget=null,_oldActiveCubeFace=0,_oldActiveMipmapLevel=0,_oldXrEnabled=!1;const PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(-PHI,INV_PHI,0),new Vector3(PHI,INV_PHI,0),new Vector3(-INV_PHI,0,PHI),new Vector3(INV_PHI,0,PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(0,PHI,INV_PHI),new Vector3(-1,1,-1),new Vector3(1,1,-1),new Vector3(-1,1,1),new Vector3(1,1,1)],_origin=new Vector3;class PMREMGenerator{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,o=100,a={}){const{size:r=256,position:l=_origin}=a;_oldTarget=this._renderer.getRenderTarget(),_oldActiveCubeFace=this._renderer.getActiveCubeFace(),_oldActiveMipmapLevel=this._renderer.getActiveMipmapLevel(),_oldXrEnabled=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(r);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,n,o,c,l),t>0&&this._blur(c,0,0,t),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=_getCubemapMaterial(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=_getEquirectMaterial(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(_oldTarget,_oldActiveCubeFace,_oldActiveMipmapLevel),this._renderer.xr.enabled=_oldXrEnabled,e.scissorTest=!1,_setViewport(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===CubeReflectionMapping||e.mapping===CubeRefractionMapping?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),_oldTarget=this._renderer.getRenderTarget(),_oldActiveCubeFace=this._renderer.getActiveCubeFace(),_oldActiveMipmapLevel=this._renderer.getActiveMipmapLevel(),_oldXrEnabled=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:LinearFilter,minFilter:LinearFilter,generateMipmaps:!1,type:HalfFloatType,format:RGBAFormat,colorSpace:LinearSRGBColorSpace,depthBuffer:!1},o=_createRenderTarget(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=_createRenderTarget(e,t,n);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=_createPlanes(a)),this._blurMaterial=_getBlurShader(a,e,t)}return o}_compileMaterial(e){const t=new Mesh(this._lodPlanes[0],e);this._renderer.compile(t,_flatCamera)}_sceneToCubeUV(e,t,n,o,a){const c=new PerspectiveCamera(90,1,t,n),u=[1,-1,1,1,1,1],d=[1,1,1,-1,-1,-1],f=this._renderer,g=f.autoClear,_=f.toneMapping;f.getClearColor(_clearColor),f.toneMapping=NoToneMapping,f.autoClear=!1;const b=new MeshBasicMaterial({name:"PMREM.Background",side:BackSide,depthWrite:!1,depthTest:!1}),B=new Mesh(new BoxGeometry,b);let I=!1;const C=e.background;C?C.isColor&&(b.color.copy(C),e.background=null,I=!0):(b.color.copy(_clearColor),I=!0);for(let R=0;R<6;R++){const L=R%3;L===0?(c.up.set(0,u[R],0),c.position.set(a.x,a.y,a.z),c.lookAt(a.x+d[R],a.y,a.z)):L===1?(c.up.set(0,0,u[R]),c.position.set(a.x,a.y,a.z),c.lookAt(a.x,a.y+d[R],a.z)):(c.up.set(0,u[R],0),c.position.set(a.x,a.y,a.z),c.lookAt(a.x,a.y,a.z+d[R]));const F=this._cubeSize;_setViewport(o,L*F,R>2?F:0,F,F),f.setRenderTarget(o),I&&f.render(B,c),f.render(e,c)}B.geometry.dispose(),B.material.dispose(),f.toneMapping=_,f.autoClear=g,e.background=C}_textureToCubeUV(e,t){const n=this._renderer,o=e.mapping===CubeReflectionMapping||e.mapping===CubeRefractionMapping;o?(this._cubemapMaterial===null&&(this._cubemapMaterial=_getCubemapMaterial()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=_getEquirectMaterial());const a=o?this._cubemapMaterial:this._equirectMaterial,r=new Mesh(this._lodPlanes[0],a),l=a.uniforms;l.envMap.value=e;const c=this._cubeSize;_setViewport(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(r,_flatCamera)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const o=this._lodPlanes.length;for(let a=1;a<o;a++){const r=Math.sqrt(this._sigmas[a]*this._sigmas[a]-this._sigmas[a-1]*this._sigmas[a-1]),l=_axisDirections[(o-a-1)%_axisDirections.length];this._blur(e,a-1,a,r,l)}t.autoClear=n}_blur(e,t,n,o,a){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,o,"latitudinal",a),this._halfBlur(r,e,n,n,o,"longitudinal",a)}_halfBlur(e,t,n,o,a,r,l){const c=this._renderer,u=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,f=new Mesh(this._lodPlanes[o],u),g=u.uniforms,_=this._sizeLods[n]-1,b=isFinite(a)?Math.PI/(2*_):2*Math.PI/(2*MAX_SAMPLES-1),B=a/b,I=isFinite(a)?1+Math.floor(d*B):MAX_SAMPLES;I>MAX_SAMPLES&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${I} samples when the maximum is set to ${MAX_SAMPLES}`);const C=[];let R=0;for(let Q=0;Q<MAX_SAMPLES;++Q){const z=Q/B,G=Math.exp(-z*z/2);C.push(G),Q===0?R+=G:Q<I&&(R+=2*G)}for(let Q=0;Q<C.length;Q++)C[Q]=C[Q]/R;g.envMap.value=e.texture,g.samples.value=I,g.weights.value=C,g.latitudinal.value=r==="latitudinal",l&&(g.poleAxis.value=l);const{_lodMax:L}=this;g.dTheta.value=b,g.mipInt.value=L-n;const F=this._sizeLods[o],N=3*F*(o>L-LOD_MIN?o-L+LOD_MIN:0),k=4*(this._cubeSize-F);_setViewport(t,N,k,3*F,2*F),c.setRenderTarget(t),c.render(f,_flatCamera)}}function _createPlanes(s){const e=[],t=[],n=[];let o=s;const a=s-LOD_MIN+1+EXTRA_LOD_SIGMA.length;for(let r=0;r<a;r++){const l=Math.pow(2,o);t.push(l);let c=1/l;r>s-LOD_MIN?c=EXTRA_LOD_SIGMA[r-s+LOD_MIN-1]:r===0&&(c=0),n.push(c);const u=1/(l-2),d=-u,f=1+u,g=[d,d,f,d,f,f,d,d,f,f,d,f],_=6,b=6,B=3,I=2,C=1,R=new Float32Array(B*b*_),L=new Float32Array(I*b*_),F=new Float32Array(C*b*_);for(let k=0;k<_;k++){const Q=k%3*2/3-1,z=k>2?0:-1,G=[Q,z,0,Q+2/3,z,0,Q+2/3,z+1,0,Q,z,0,Q+2/3,z+1,0,Q,z+1,0];R.set(G,B*b*k),L.set(g,I*b*k);const O=[k,k,k,k,k,k];F.set(O,C*b*k)}const N=new BufferGeometry;N.setAttribute("position",new BufferAttribute(R,B)),N.setAttribute("uv",new BufferAttribute(L,I)),N.setAttribute("faceIndex",new BufferAttribute(F,C)),e.push(N),o>LOD_MIN&&o--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function _createRenderTarget(s,e,t){const n=new WebGLRenderTarget(s,e,t);return n.texture.mapping=CubeUVReflectionMapping,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function _setViewport(s,e,t,n,o){s.viewport.set(e,t,n,o),s.scissor.set(e,t,n,o)}function _getBlurShader(s,e,t){const n=new Float32Array(MAX_SAMPLES),o=new Vector3(0,1,0);return new ShaderMaterial({name:"SphericalGaussianBlur",defines:{n:MAX_SAMPLES,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:o}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getEquirectMaterial(){return new ShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCubemapMaterial(){return new ShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:_getCommonVertexShader(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function WebGLCubeUVMaps(s){let e=new WeakMap,t=null;function n(l){if(l&&l.isTexture){const c=l.mapping,u=c===EquirectangularReflectionMapping||c===EquirectangularRefractionMapping,d=c===CubeReflectionMapping||c===CubeRefractionMapping;if(u||d){let f=e.get(l);const g=f!==void 0?f.texture.pmremVersion:0;if(l.isRenderTargetTexture&&l.pmremVersion!==g)return t===null&&(t=new PMREMGenerator(s)),f=u?t.fromEquirectangular(l,f):t.fromCubemap(l,f),f.texture.pmremVersion=l.pmremVersion,e.set(l,f),f.texture;if(f!==void 0)return f.texture;{const _=l.image;return u&&_&&_.height>0||d&&_&&o(_)?(t===null&&(t=new PMREMGenerator(s)),f=u?t.fromEquirectangular(l):t.fromCubemap(l),f.texture.pmremVersion=l.pmremVersion,e.set(l,f),l.addEventListener("dispose",a),f.texture):null}}}return l}function o(l){let c=0;const u=6;for(let d=0;d<u;d++)l[d]!==void 0&&c++;return c===u}function a(l){const c=l.target;c.removeEventListener("dispose",a);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function r(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:r}}function WebGLExtensions$1(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let o;switch(n){case"WEBGL_depth_texture":o=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":o=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":o=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":o=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:o=s.getExtension(n)}return e[n]=o,o}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const o=t(n);return o===null&&warnOnce("THREE.WebGLRenderer: "+n+" extension not supported."),o}}}function WebGLGeometries(s,e,t,n){const o={},a=new WeakMap;function r(f){const g=f.target;g.index!==null&&e.remove(g.index);for(const b in g.attributes)e.remove(g.attributes[b]);g.removeEventListener("dispose",r),delete o[g.id];const _=a.get(g);_&&(e.remove(_),a.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,t.memory.geometries--}function l(f,g){return o[g.id]===!0||(g.addEventListener("dispose",r),o[g.id]=!0,t.memory.geometries++),g}function c(f){const g=f.attributes;for(const _ in g)e.update(g[_],s.ARRAY_BUFFER)}function u(f){const g=[],_=f.index,b=f.attributes.position;let B=0;if(_!==null){const R=_.array;B=_.version;for(let L=0,F=R.length;L<F;L+=3){const N=R[L+0],k=R[L+1],Q=R[L+2];g.push(N,k,k,Q,Q,N)}}else if(b!==void 0){const R=b.array;B=b.version;for(let L=0,F=R.length/3-1;L<F;L+=3){const N=L+0,k=L+1,Q=L+2;g.push(N,k,k,Q,Q,N)}}else return;const I=new(arrayNeedsUint32(g)?Uint32BufferAttribute:Uint16BufferAttribute)(g,1);I.version=B;const C=a.get(f);C&&e.remove(C),a.set(f,I)}function d(f){const g=a.get(f);if(g){const _=f.index;_!==null&&g.version<_.version&&u(f)}else u(f);return a.get(f)}return{get:l,update:c,getWireframeAttribute:d}}function WebGLIndexedBufferRenderer(s,e,t){let n;function o(g){n=g}let a,r;function l(g){a=g.type,r=g.bytesPerElement}function c(g,_){s.drawElements(n,_,a,g*r),t.update(_,n,1)}function u(g,_,b){b!==0&&(s.drawElementsInstanced(n,_,a,g*r,b),t.update(_,n,b))}function d(g,_,b){if(b===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,_,0,a,g,0,b);let I=0;for(let C=0;C<b;C++)I+=_[C];t.update(I,n,1)}function f(g,_,b,B){if(b===0)return;const I=e.get("WEBGL_multi_draw");if(I===null)for(let C=0;C<g.length;C++)u(g[C]/r,_[C],B[C]);else{I.multiDrawElementsInstancedWEBGL(n,_,0,a,g,0,B,0,b);let C=0;for(let R=0;R<b;R++)C+=_[R]*B[R];t.update(C,n,1)}}this.setMode=o,this.setIndex=l,this.render=c,this.renderInstances=u,this.renderMultiDraw=d,this.renderMultiDrawInstances=f}function WebGLInfo(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(a,r,l){switch(t.calls++,r){case s.TRIANGLES:t.triangles+=l*(a/3);break;case s.LINES:t.lines+=l*(a/2);break;case s.LINE_STRIP:t.lines+=l*(a-1);break;case s.LINE_LOOP:t.lines+=l*a;break;case s.POINTS:t.points+=l*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);break}}function o(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:o,update:n}}function WebGLMorphtargets(s,e,t){const n=new WeakMap,o=new Vector4;function a(r,l,c){const u=r.morphTargetInfluences,d=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,f=d!==void 0?d.length:0;let g=n.get(l);if(g===void 0||g.count!==f){let G=function(){Q.dispose(),n.delete(l),l.removeEventListener("dispose",G)};g!==void 0&&g.texture.dispose();const _=l.morphAttributes.position!==void 0,b=l.morphAttributes.normal!==void 0,B=l.morphAttributes.color!==void 0,I=l.morphAttributes.position||[],C=l.morphAttributes.normal||[],R=l.morphAttributes.color||[];let L=0;_===!0&&(L=1),b===!0&&(L=2),B===!0&&(L=3);let F=l.attributes.position.count*L,N=1;F>e.maxTextureSize&&(N=Math.ceil(F/e.maxTextureSize),F=e.maxTextureSize);const k=new Float32Array(F*N*4*f),Q=new DataArrayTexture(k,F,N,f);Q.type=FloatType,Q.needsUpdate=!0;const z=L*4;for(let O=0;O<f;O++){const q=I[O],ce=C[O],ne=R[O],ue=F*N*4*O;for(let pe=0;pe<q.count;pe++){const fe=pe*z;_===!0&&(o.fromBufferAttribute(q,pe),k[ue+fe+0]=o.x,k[ue+fe+1]=o.y,k[ue+fe+2]=o.z,k[ue+fe+3]=0),b===!0&&(o.fromBufferAttribute(ce,pe),k[ue+fe+4]=o.x,k[ue+fe+5]=o.y,k[ue+fe+6]=o.z,k[ue+fe+7]=0),B===!0&&(o.fromBufferAttribute(ne,pe),k[ue+fe+8]=o.x,k[ue+fe+9]=o.y,k[ue+fe+10]=o.z,k[ue+fe+11]=ne.itemSize===4?o.w:1)}}g={count:f,texture:Q,size:new Vector2(F,N)},n.set(l,g),l.addEventListener("dispose",G)}if(r.isInstancedMesh===!0&&r.morphTexture!==null)c.getUniforms().setValue(s,"morphTexture",r.morphTexture,t);else{let _=0;for(let B=0;B<u.length;B++)_+=u[B];const b=l.morphTargetsRelative?1:1-_;c.getUniforms().setValue(s,"morphTargetBaseInfluence",b),c.getUniforms().setValue(s,"morphTargetInfluences",u)}c.getUniforms().setValue(s,"morphTargetsTexture",g.texture,t),c.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:a}}function WebGLObjects(s,e,t,n){let o=new WeakMap;function a(c){const u=n.render.frame,d=c.geometry,f=e.get(c,d);if(o.get(f)!==u&&(e.update(f),o.set(f,u)),c.isInstancedMesh&&(c.hasEventListener("dispose",l)===!1&&c.addEventListener("dispose",l),o.get(c)!==u&&(t.update(c.instanceMatrix,s.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,s.ARRAY_BUFFER),o.set(c,u))),c.isSkinnedMesh){const g=c.skeleton;o.get(g)!==u&&(g.update(),o.set(g,u))}return f}function r(){o=new WeakMap}function l(c){const u=c.target;u.removeEventListener("dispose",l),t.remove(u.instanceMatrix),u.instanceColor!==null&&t.remove(u.instanceColor)}return{update:a,dispose:r}}const emptyTexture=new Texture,emptyShadowTexture=new DepthTexture(1,1),emptyArrayTexture=new DataArrayTexture,empty3dTexture=new Data3DTexture,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);function flatten(s,e,t){const n=s[0];if(n<=0||n>0)return s;const o=e*t;let a=arrayCacheF32[o];if(a===void 0&&(a=new Float32Array(o),arrayCacheF32[o]=a),e!==0){n.toArray(a,0);for(let r=1,l=0;r!==e;++r)l+=t,s[r].toArray(a,l)}return a}function arraysEqual(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function copyArray(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function allocTexUnits(s,e){let t=arrayCacheI32[e];t===void 0&&(t=new Int32Array(e),arrayCacheI32[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function setValueV1f(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function setValueV2f(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(arraysEqual(t,e))return;s.uniform2fv(this.addr,e),copyArray(t,e)}}function setValueV3f(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(arraysEqual(t,e))return;s.uniform3fv(this.addr,e),copyArray(t,e)}}function setValueV4f(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(arraysEqual(t,e))return;s.uniform4fv(this.addr,e),copyArray(t,e)}}function setValueM2(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(arraysEqual(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),copyArray(t,e)}else{if(arraysEqual(t,n))return;mat2array.set(n),s.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(t,n)}}function setValueM3(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(arraysEqual(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),copyArray(t,e)}else{if(arraysEqual(t,n))return;mat3array.set(n),s.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(t,n)}}function setValueM4(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(arraysEqual(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),copyArray(t,e)}else{if(arraysEqual(t,n))return;mat4array.set(n),s.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(t,n)}}function setValueV1i(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function setValueV2i(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(arraysEqual(t,e))return;s.uniform2iv(this.addr,e),copyArray(t,e)}}function setValueV3i(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(arraysEqual(t,e))return;s.uniform3iv(this.addr,e),copyArray(t,e)}}function setValueV4i(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(arraysEqual(t,e))return;s.uniform4iv(this.addr,e),copyArray(t,e)}}function setValueV1ui(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function setValueV2ui(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(arraysEqual(t,e))return;s.uniform2uiv(this.addr,e),copyArray(t,e)}}function setValueV3ui(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(arraysEqual(t,e))return;s.uniform3uiv(this.addr,e),copyArray(t,e)}}function setValueV4ui(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(arraysEqual(t,e))return;s.uniform4uiv(this.addr,e),copyArray(t,e)}}function setValueT1(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o);let a;this.type===s.SAMPLER_2D_SHADOW?(emptyShadowTexture.compareFunction=LessEqualCompare,a=emptyShadowTexture):a=emptyTexture,t.setTexture2D(e||a,o)}function setValueT3D1(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTexture3D(e||empty3dTexture,o)}function setValueT6(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTextureCube(e||emptyCubeTexture,o)}function setValueT2DArray1(s,e,t){const n=this.cache,o=t.allocateTextureUnit();n[0]!==o&&(s.uniform1i(this.addr,o),n[0]=o),t.setTexture2DArray(e||emptyArrayTexture,o)}function getSingularSetter(s){switch(s){case 5126:return setValueV1f;case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 36294:return setValueV2ui;case 36295:return setValueV3ui;case 36296:return setValueV4ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}function setValueV1fArray(s,e){s.uniform1fv(this.addr,e)}function setValueV2fArray(s,e){const t=flatten(e,this.size,2);s.uniform2fv(this.addr,t)}function setValueV3fArray(s,e){const t=flatten(e,this.size,3);s.uniform3fv(this.addr,t)}function setValueV4fArray(s,e){const t=flatten(e,this.size,4);s.uniform4fv(this.addr,t)}function setValueM2Array(s,e){const t=flatten(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function setValueM3Array(s,e){const t=flatten(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function setValueM4Array(s,e){const t=flatten(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function setValueV1iArray(s,e){s.uniform1iv(this.addr,e)}function setValueV2iArray(s,e){s.uniform2iv(this.addr,e)}function setValueV3iArray(s,e){s.uniform3iv(this.addr,e)}function setValueV4iArray(s,e){s.uniform4iv(this.addr,e)}function setValueV1uiArray(s,e){s.uniform1uiv(this.addr,e)}function setValueV2uiArray(s,e){s.uniform2uiv(this.addr,e)}function setValueV3uiArray(s,e){s.uniform3uiv(this.addr,e)}function setValueV4uiArray(s,e){s.uniform4uiv(this.addr,e)}function setValueT1Array(s,e,t){const n=this.cache,o=e.length,a=allocTexUnits(t,o);arraysEqual(n,a)||(s.uniform1iv(this.addr,a),copyArray(n,a));for(let r=0;r!==o;++r)t.setTexture2D(e[r]||emptyTexture,a[r])}function setValueT3DArray(s,e,t){const n=this.cache,o=e.length,a=allocTexUnits(t,o);arraysEqual(n,a)||(s.uniform1iv(this.addr,a),copyArray(n,a));for(let r=0;r!==o;++r)t.setTexture3D(e[r]||empty3dTexture,a[r])}function setValueT6Array(s,e,t){const n=this.cache,o=e.length,a=allocTexUnits(t,o);arraysEqual(n,a)||(s.uniform1iv(this.addr,a),copyArray(n,a));for(let r=0;r!==o;++r)t.setTextureCube(e[r]||emptyCubeTexture,a[r])}function setValueT2DArrayArray(s,e,t){const n=this.cache,o=e.length,a=allocTexUnits(t,o);arraysEqual(n,a)||(s.uniform1iv(this.addr,a),copyArray(n,a));for(let r=0;r!==o;++r)t.setTexture2DArray(e[r]||emptyArrayTexture,a[r])}function getPureArraySetter(s){switch(s){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 5125:return setValueV1uiArray;case 36294:return setValueV2uiArray;case 36295:return setValueV3uiArray;case 36296:return setValueV4uiArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35679:case 36299:case 36307:return setValueT3DArray;case 35680:case 36300:case 36308:case 36293:return setValueT6Array;case 36289:case 36303:case 36311:case 36292:return setValueT2DArrayArray}}class SingleUniform{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=getSingularSetter(t.type)}}class PureArrayUniform{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=getPureArraySetter(t.type)}}class StructuredUniform{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const o=this.seq;for(let a=0,r=o.length;a!==r;++a){const l=o[a];l.setValue(e,t[l.id],n)}}}const RePathPart=/(\w+)(\])?(\[|\.)?/g;function addUniform(s,e){s.seq.push(e),s.map[e.id]=e}function parseUniform(s,e,t){const n=s.name,o=n.length;for(RePathPart.lastIndex=0;;){const a=RePathPart.exec(n),r=RePathPart.lastIndex;let l=a[1];const c=a[2]==="]",u=a[3];if(c&&(l=l|0),u===void 0||u==="["&&r+2===o){addUniform(t,u===void 0?new SingleUniform(l,s,e):new PureArrayUniform(l,s,e));break}else{let f=t.map[l];f===void 0&&(f=new StructuredUniform(l),addUniform(t,f)),t=f}}}class WebGLUniforms{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let o=0;o<n;++o){const a=e.getActiveUniform(t,o),r=e.getUniformLocation(t,a.name);parseUniform(a,r,this)}}setValue(e,t,n,o){const a=this.map[t];a!==void 0&&a.setValue(e,n,o)}setOptional(e,t,n){const o=t[n];o!==void 0&&this.setValue(e,n,o)}static upload(e,t,n,o){for(let a=0,r=t.length;a!==r;++a){const l=t[a],c=n[l.id];c.needsUpdate!==!1&&l.setValue(e,c.value,o)}}static seqWithValue(e,t){const n=[];for(let o=0,a=e.length;o!==a;++o){const r=e[o];r.id in t&&n.push(r)}return n}}function WebGLShader(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const COMPLETION_STATUS_KHR=37297;let programIdCount=0;function handleSource(s,e){const t=s.split(`
`),n=[],o=Math.max(e-6,0),a=Math.min(e+6,t.length);for(let r=o;r<a;r++){const l=r+1;n.push(`${l===e?">":" "} ${l}: ${t[r]}`)}return n.join(`
`)}const _m0=new Matrix3;function getEncodingComponents(s){ColorManagement._getMatrix(_m0,ColorManagement.workingColorSpace,s);const e=`mat3( ${_m0.elements.map(t=>t.toFixed(4))} )`;switch(ColorManagement.getTransfer(s)){case LinearTransfer:return[e,"LinearTransferOETF"];case SRGBTransfer:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function getShaderErrors(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),o=s.getShaderInfoLog(e).trim();if(n&&o==="")return"";const a=/ERROR: 0:(\d+)/.exec(o);if(a){const r=parseInt(a[1]);return t.toUpperCase()+`

`+o+`

`+handleSource(s.getShaderSource(e),r)}else return o}function getTexelEncodingFunction(s,e){const t=getEncodingComponents(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function getToneMappingFunction(s,e){let t;switch(e){case LinearToneMapping:t="Linear";break;case ReinhardToneMapping:t="Reinhard";break;case CineonToneMapping:t="Cineon";break;case ACESFilmicToneMapping:t="ACESFilmic";break;case AgXToneMapping:t="AgX";break;case NeutralToneMapping:t="Neutral";break;case CustomToneMapping:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const _v0=new Vector3;function getLuminanceFunction(){ColorManagement.getLuminanceCoefficients(_v0);const s=_v0.x.toFixed(4),e=_v0.y.toFixed(4),t=_v0.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function generateVertexExtensions(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(filterEmptyLine).join(`
`)}function generateDefines(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function fetchAttributeLocations(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let o=0;o<n;o++){const a=s.getActiveAttrib(e,o),r=a.name;let l=1;a.type===s.FLOAT_MAT2&&(l=2),a.type===s.FLOAT_MAT3&&(l=3),a.type===s.FLOAT_MAT4&&(l=4),t[r]={type:a.type,location:s.getAttribLocation(e,r),locationSize:l}}return t}function filterEmptyLine(s){return s!==""}function replaceLightNums(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function replaceClippingPlaneNums(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(s){return s.replace(includePattern,includeReplacer)}const shaderChunkMap=new Map;function includeReplacer(s,e){let t=ShaderChunk[e];if(t===void 0){const n=shaderChunkMap.get(e);if(n!==void 0)t=ShaderChunk[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return resolveIncludes(t)}const unrollLoopPattern=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function unrollLoops(s){return s.replace(unrollLoopPattern,loopReplacer)}function loopReplacer(s,e,t,n){let o="";for(let a=parseInt(e);a<parseInt(t);a++)o+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return o}function generatePrecision(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function generateShadowMapTypeDefine(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===PCFShadowMap?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===PCFSoftShadowMap?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===VSMShadowMap&&(e="SHADOWMAP_TYPE_VSM"),e}function generateEnvMapTypeDefine(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:e="ENVMAP_TYPE_CUBE";break;case CubeUVReflectionMapping:e="ENVMAP_TYPE_CUBE_UV";break}return e}function generateEnvMapModeDefine(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case CubeRefractionMapping:e="ENVMAP_MODE_REFRACTION";break}return e}function generateEnvMapBlendingDefine(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case MultiplyOperation:e="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation:e="ENVMAP_BLENDING_MIX";break;case AddOperation:e="ENVMAP_BLENDING_ADD";break}return e}function generateCubeUVSize(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function WebGLProgram(s,e,t,n){const o=s.getContext(),a=t.defines;let r=t.vertexShader,l=t.fragmentShader;const c=generateShadowMapTypeDefine(t),u=generateEnvMapTypeDefine(t),d=generateEnvMapModeDefine(t),f=generateEnvMapBlendingDefine(t),g=generateCubeUVSize(t),_=generateVertexExtensions(t),b=generateDefines(a),B=o.createProgram();let I,C,R=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(I=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,b].filter(filterEmptyLine).join(`
`),I.length>0&&(I+=`
`),C=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,b].filter(filterEmptyLine).join(`
`),C.length>0&&(C+=`
`)):(I=[generatePrecision(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,b,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(filterEmptyLine).join(`
`),C=[generatePrecision(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,b,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+d:"",t.envMap?"#define "+f:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==NoToneMapping?"#define TONE_MAPPING":"",t.toneMapping!==NoToneMapping?ShaderChunk.tonemapping_pars_fragment:"",t.toneMapping!==NoToneMapping?getToneMappingFunction("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ShaderChunk.colorspace_pars_fragment,getTexelEncodingFunction("linearToOutputTexel",t.outputColorSpace),getLuminanceFunction(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(filterEmptyLine).join(`
`)),r=resolveIncludes(r),r=replaceLightNums(r,t),r=replaceClippingPlaneNums(r,t),l=resolveIncludes(l),l=replaceLightNums(l,t),l=replaceClippingPlaneNums(l,t),r=unrollLoops(r),l=unrollLoops(l),t.isRawShaderMaterial!==!0&&(R=`#version 300 es
`,I=[_,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+I,C=["#define varying in",t.glslVersion===GLSL3?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===GLSL3?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+C);const L=R+I+r,F=R+C+l,N=WebGLShader(o,o.VERTEX_SHADER,L),k=WebGLShader(o,o.FRAGMENT_SHADER,F);o.attachShader(B,N),o.attachShader(B,k),t.index0AttributeName!==void 0?o.bindAttribLocation(B,0,t.index0AttributeName):t.morphTargets===!0&&o.bindAttribLocation(B,0,"position"),o.linkProgram(B);function Q(q){if(s.debug.checkShaderErrors){const ce=o.getProgramInfoLog(B).trim(),ne=o.getShaderInfoLog(N).trim(),ue=o.getShaderInfoLog(k).trim();let pe=!0,fe=!0;if(o.getProgramParameter(B,o.LINK_STATUS)===!1)if(pe=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(o,B,N,k);else{const ee=getShaderErrors(o,N,"vertex"),J=getShaderErrors(o,k,"fragment");console.error("THREE.WebGLProgram: Shader Error "+o.getError()+" - VALIDATE_STATUS "+o.getProgramParameter(B,o.VALIDATE_STATUS)+`

Material Name: `+q.name+`
Material Type: `+q.type+`

Program Info Log: `+ce+`
`+ee+`
`+J)}else ce!==""?console.warn("THREE.WebGLProgram: Program Info Log:",ce):(ne===""||ue==="")&&(fe=!1);fe&&(q.diagnostics={runnable:pe,programLog:ce,vertexShader:{log:ne,prefix:I},fragmentShader:{log:ue,prefix:C}})}o.deleteShader(N),o.deleteShader(k),z=new WebGLUniforms(o,B),G=fetchAttributeLocations(o,B)}let z;this.getUniforms=function(){return z===void 0&&Q(this),z};let G;this.getAttributes=function(){return G===void 0&&Q(this),G};let O=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return O===!1&&(O=o.getProgramParameter(B,COMPLETION_STATUS_KHR)),O},this.destroy=function(){n.releaseStatesOfProgram(this),o.deleteProgram(B),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=programIdCount++,this.cacheKey=e,this.usedTimes=1,this.program=B,this.vertexShader=N,this.fragmentShader=k,this}let _id=0;class WebGLShaderCache{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,o=this._getShaderStage(t),a=this._getShaderStage(n),r=this._getShaderCacheForMaterial(e);return r.has(o)===!1&&(r.add(o),o.usedTimes++),r.has(a)===!1&&(r.add(a),a.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new WebGLShaderStage(e),t.set(e,n)),n}}class WebGLShaderStage{constructor(e){this.id=_id++,this.code=e,this.usedTimes=0}}function WebGLPrograms(s,e,t,n,o,a,r){const l=new Layers,c=new WebGLShaderCache,u=new Set,d=[],f=o.logarithmicDepthBuffer,g=o.vertexTextures;let _=o.precision;const b={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function B(G){return u.add(G),G===0?"uv":`uv${G}`}function I(G,O,q,ce,ne){const ue=ce.fog,pe=ne.geometry,fe=G.isMeshStandardMaterial?ce.environment:null,ee=(G.isMeshStandardMaterial?t:e).get(G.envMap||fe),J=ee&&ee.mapping===CubeUVReflectionMapping?ee.image.height:null,ye=b[G.type];G.precision!==null&&(_=o.getMaxPrecision(G.precision),_!==G.precision&&console.warn("THREE.WebGLProgram.getParameters:",G.precision,"not supported, using",_,"instead."));const Te=pe.morphAttributes.position||pe.morphAttributes.normal||pe.morphAttributes.color,xe=Te!==void 0?Te.length:0;let ve=0;pe.morphAttributes.position!==void 0&&(ve=1),pe.morphAttributes.normal!==void 0&&(ve=2),pe.morphAttributes.color!==void 0&&(ve=3);let he,le,_e,De;if(ye){const Rt=ShaderLib[ye];he=Rt.vertexShader,le=Rt.fragmentShader}else he=G.vertexShader,le=G.fragmentShader,c.update(G),_e=c.getVertexShaderID(G),De=c.getFragmentShaderID(G);const de=s.getRenderTarget(),Me=s.state.buffers.depth.getReversed(),Ne=ne.isInstancedMesh===!0,Pe=ne.isBatchedMesh===!0,nt=!!G.map,ie=!!G.matcap,oe=!!ee,$=!!G.aoMap,Se=!!G.lightMap,Be=!!G.bumpMap,we=!!G.normalMap,Fe=!!G.displacementMap,$e=!!G.emissiveMap,ze=!!G.metalnessMap,qe=!!G.roughnessMap,ut=G.anisotropy>0,te=G.clearcoat>0,H=G.dispersion>0,Ie=G.iridescence>0,Ge=G.sheen>0,We=G.transmission>0,Ve=ut&&!!G.anisotropyMap,dt=te&&!!G.clearcoatMap,it=te&&!!G.clearcoatNormalMap,ft=te&&!!G.clearcoatRoughnessMap,se=Ie&&!!G.iridescenceMap,Ee=Ie&&!!G.iridescenceThicknessMap,Ye=Ge&&!!G.sheenColorMap,Je=Ge&&!!G.sheenRoughnessMap,at=!!G.specularMap,ot=!!G.specularColorMap,Ct=!!G.specularIntensityMap,K=We&&!!G.transmissionMap,be=We&&!!G.thicknessMap,ge=!!G.gradientMap,Re=!!G.alphaMap,Qe=G.alphaTest>0,Oe=!!G.alphaHash,st=!!G.extensions;let _t=NoToneMapping;G.toneMapped&&(de===null||de.isXRRenderTarget===!0)&&(_t=s.toneMapping);const Ft={shaderID:ye,shaderType:G.type,shaderName:G.name,vertexShader:he,fragmentShader:le,defines:G.defines,customVertexShaderID:_e,customFragmentShaderID:De,isRawShaderMaterial:G.isRawShaderMaterial===!0,glslVersion:G.glslVersion,precision:_,batching:Pe,batchingColor:Pe&&ne._colorsTexture!==null,instancing:Ne,instancingColor:Ne&&ne.instanceColor!==null,instancingMorph:Ne&&ne.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:de===null?s.outputColorSpace:de.isXRRenderTarget===!0?de.texture.colorSpace:LinearSRGBColorSpace,alphaToCoverage:!!G.alphaToCoverage,map:nt,matcap:ie,envMap:oe,envMapMode:oe&&ee.mapping,envMapCubeUVHeight:J,aoMap:$,lightMap:Se,bumpMap:Be,normalMap:we,displacementMap:g&&Fe,emissiveMap:$e,normalMapObjectSpace:we&&G.normalMapType===ObjectSpaceNormalMap,normalMapTangentSpace:we&&G.normalMapType===TangentSpaceNormalMap,metalnessMap:ze,roughnessMap:qe,anisotropy:ut,anisotropyMap:Ve,clearcoat:te,clearcoatMap:dt,clearcoatNormalMap:it,clearcoatRoughnessMap:ft,dispersion:H,iridescence:Ie,iridescenceMap:se,iridescenceThicknessMap:Ee,sheen:Ge,sheenColorMap:Ye,sheenRoughnessMap:Je,specularMap:at,specularColorMap:ot,specularIntensityMap:Ct,transmission:We,transmissionMap:K,thicknessMap:be,gradientMap:ge,opaque:G.transparent===!1&&G.blending===NormalBlending&&G.alphaToCoverage===!1,alphaMap:Re,alphaTest:Qe,alphaHash:Oe,combine:G.combine,mapUv:nt&&B(G.map.channel),aoMapUv:$&&B(G.aoMap.channel),lightMapUv:Se&&B(G.lightMap.channel),bumpMapUv:Be&&B(G.bumpMap.channel),normalMapUv:we&&B(G.normalMap.channel),displacementMapUv:Fe&&B(G.displacementMap.channel),emissiveMapUv:$e&&B(G.emissiveMap.channel),metalnessMapUv:ze&&B(G.metalnessMap.channel),roughnessMapUv:qe&&B(G.roughnessMap.channel),anisotropyMapUv:Ve&&B(G.anisotropyMap.channel),clearcoatMapUv:dt&&B(G.clearcoatMap.channel),clearcoatNormalMapUv:it&&B(G.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ft&&B(G.clearcoatRoughnessMap.channel),iridescenceMapUv:se&&B(G.iridescenceMap.channel),iridescenceThicknessMapUv:Ee&&B(G.iridescenceThicknessMap.channel),sheenColorMapUv:Ye&&B(G.sheenColorMap.channel),sheenRoughnessMapUv:Je&&B(G.sheenRoughnessMap.channel),specularMapUv:at&&B(G.specularMap.channel),specularColorMapUv:ot&&B(G.specularColorMap.channel),specularIntensityMapUv:Ct&&B(G.specularIntensityMap.channel),transmissionMapUv:K&&B(G.transmissionMap.channel),thicknessMapUv:be&&B(G.thicknessMap.channel),alphaMapUv:Re&&B(G.alphaMap.channel),vertexTangents:!!pe.attributes.tangent&&(we||ut),vertexColors:G.vertexColors,vertexAlphas:G.vertexColors===!0&&!!pe.attributes.color&&pe.attributes.color.itemSize===4,pointsUvs:ne.isPoints===!0&&!!pe.attributes.uv&&(nt||Re),fog:!!ue,useFog:G.fog===!0,fogExp2:!!ue&&ue.isFogExp2,flatShading:G.flatShading===!0&&G.wireframe===!1,sizeAttenuation:G.sizeAttenuation===!0,logarithmicDepthBuffer:f,reverseDepthBuffer:Me,skinning:ne.isSkinnedMesh===!0,morphTargets:pe.morphAttributes.position!==void 0,morphNormals:pe.morphAttributes.normal!==void 0,morphColors:pe.morphAttributes.color!==void 0,morphTargetsCount:xe,morphTextureStride:ve,numDirLights:O.directional.length,numPointLights:O.point.length,numSpotLights:O.spot.length,numSpotLightMaps:O.spotLightMap.length,numRectAreaLights:O.rectArea.length,numHemiLights:O.hemi.length,numDirLightShadows:O.directionalShadowMap.length,numPointLightShadows:O.pointShadowMap.length,numSpotLightShadows:O.spotShadowMap.length,numSpotLightShadowsWithMaps:O.numSpotLightShadowsWithMaps,numLightProbes:O.numLightProbes,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:G.dithering,shadowMapEnabled:s.shadowMap.enabled&&q.length>0,shadowMapType:s.shadowMap.type,toneMapping:_t,decodeVideoTexture:nt&&G.map.isVideoTexture===!0&&ColorManagement.getTransfer(G.map.colorSpace)===SRGBTransfer,decodeVideoTextureEmissive:$e&&G.emissiveMap.isVideoTexture===!0&&ColorManagement.getTransfer(G.emissiveMap.colorSpace)===SRGBTransfer,premultipliedAlpha:G.premultipliedAlpha,doubleSided:G.side===DoubleSide,flipSided:G.side===BackSide,useDepthPacking:G.depthPacking>=0,depthPacking:G.depthPacking||0,index0AttributeName:G.index0AttributeName,extensionClipCullDistance:st&&G.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(st&&G.extensions.multiDraw===!0||Pe)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:G.customProgramCacheKey()};return Ft.vertexUv1s=u.has(1),Ft.vertexUv2s=u.has(2),Ft.vertexUv3s=u.has(3),u.clear(),Ft}function C(G){const O=[];if(G.shaderID?O.push(G.shaderID):(O.push(G.customVertexShaderID),O.push(G.customFragmentShaderID)),G.defines!==void 0)for(const q in G.defines)O.push(q),O.push(G.defines[q]);return G.isRawShaderMaterial===!1&&(R(O,G),L(O,G),O.push(s.outputColorSpace)),O.push(G.customProgramCacheKey),O.join()}function R(G,O){G.push(O.precision),G.push(O.outputColorSpace),G.push(O.envMapMode),G.push(O.envMapCubeUVHeight),G.push(O.mapUv),G.push(O.alphaMapUv),G.push(O.lightMapUv),G.push(O.aoMapUv),G.push(O.bumpMapUv),G.push(O.normalMapUv),G.push(O.displacementMapUv),G.push(O.emissiveMapUv),G.push(O.metalnessMapUv),G.push(O.roughnessMapUv),G.push(O.anisotropyMapUv),G.push(O.clearcoatMapUv),G.push(O.clearcoatNormalMapUv),G.push(O.clearcoatRoughnessMapUv),G.push(O.iridescenceMapUv),G.push(O.iridescenceThicknessMapUv),G.push(O.sheenColorMapUv),G.push(O.sheenRoughnessMapUv),G.push(O.specularMapUv),G.push(O.specularColorMapUv),G.push(O.specularIntensityMapUv),G.push(O.transmissionMapUv),G.push(O.thicknessMapUv),G.push(O.combine),G.push(O.fogExp2),G.push(O.sizeAttenuation),G.push(O.morphTargetsCount),G.push(O.morphAttributeCount),G.push(O.numDirLights),G.push(O.numPointLights),G.push(O.numSpotLights),G.push(O.numSpotLightMaps),G.push(O.numHemiLights),G.push(O.numRectAreaLights),G.push(O.numDirLightShadows),G.push(O.numPointLightShadows),G.push(O.numSpotLightShadows),G.push(O.numSpotLightShadowsWithMaps),G.push(O.numLightProbes),G.push(O.shadowMapType),G.push(O.toneMapping),G.push(O.numClippingPlanes),G.push(O.numClipIntersection),G.push(O.depthPacking)}function L(G,O){l.disableAll(),O.supportsVertexTextures&&l.enable(0),O.instancing&&l.enable(1),O.instancingColor&&l.enable(2),O.instancingMorph&&l.enable(3),O.matcap&&l.enable(4),O.envMap&&l.enable(5),O.normalMapObjectSpace&&l.enable(6),O.normalMapTangentSpace&&l.enable(7),O.clearcoat&&l.enable(8),O.iridescence&&l.enable(9),O.alphaTest&&l.enable(10),O.vertexColors&&l.enable(11),O.vertexAlphas&&l.enable(12),O.vertexUv1s&&l.enable(13),O.vertexUv2s&&l.enable(14),O.vertexUv3s&&l.enable(15),O.vertexTangents&&l.enable(16),O.anisotropy&&l.enable(17),O.alphaHash&&l.enable(18),O.batching&&l.enable(19),O.dispersion&&l.enable(20),O.batchingColor&&l.enable(21),O.gradientMap&&l.enable(22),G.push(l.mask),l.disableAll(),O.fog&&l.enable(0),O.useFog&&l.enable(1),O.flatShading&&l.enable(2),O.logarithmicDepthBuffer&&l.enable(3),O.reverseDepthBuffer&&l.enable(4),O.skinning&&l.enable(5),O.morphTargets&&l.enable(6),O.morphNormals&&l.enable(7),O.morphColors&&l.enable(8),O.premultipliedAlpha&&l.enable(9),O.shadowMapEnabled&&l.enable(10),O.doubleSided&&l.enable(11),O.flipSided&&l.enable(12),O.useDepthPacking&&l.enable(13),O.dithering&&l.enable(14),O.transmission&&l.enable(15),O.sheen&&l.enable(16),O.opaque&&l.enable(17),O.pointsUvs&&l.enable(18),O.decodeVideoTexture&&l.enable(19),O.decodeVideoTextureEmissive&&l.enable(20),O.alphaToCoverage&&l.enable(21),G.push(l.mask)}function F(G){const O=b[G.type];let q;if(O){const ce=ShaderLib[O];q=UniformsUtils.clone(ce.uniforms)}else q=G.uniforms;return q}function N(G,O){let q;for(let ce=0,ne=d.length;ce<ne;ce++){const ue=d[ce];if(ue.cacheKey===O){q=ue,++q.usedTimes;break}}return q===void 0&&(q=new WebGLProgram(s,O,G,a),d.push(q)),q}function k(G){if(--G.usedTimes===0){const O=d.indexOf(G);d[O]=d[d.length-1],d.pop(),G.destroy()}}function Q(G){c.remove(G)}function z(){c.dispose()}return{getParameters:I,getProgramCacheKey:C,getUniforms:F,acquireProgram:N,releaseProgram:k,releaseShaderCache:Q,programs:d,dispose:z}}function WebGLProperties(){let s=new WeakMap;function e(r){return s.has(r)}function t(r){let l=s.get(r);return l===void 0&&(l={},s.set(r,l)),l}function n(r){s.delete(r)}function o(r,l,c){s.get(r)[l]=c}function a(){s=new WeakMap}return{has:e,get:t,remove:n,update:o,dispose:a}}function painterSortStable(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function reversePainterSortStable(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function WebGLRenderList(){const s=[];let e=0;const t=[],n=[],o=[];function a(){e=0,t.length=0,n.length=0,o.length=0}function r(f,g,_,b,B,I){let C=s[e];return C===void 0?(C={id:f.id,object:f,geometry:g,material:_,groupOrder:b,renderOrder:f.renderOrder,z:B,group:I},s[e]=C):(C.id=f.id,C.object=f,C.geometry=g,C.material=_,C.groupOrder=b,C.renderOrder=f.renderOrder,C.z=B,C.group=I),e++,C}function l(f,g,_,b,B,I){const C=r(f,g,_,b,B,I);_.transmission>0?n.push(C):_.transparent===!0?o.push(C):t.push(C)}function c(f,g,_,b,B,I){const C=r(f,g,_,b,B,I);_.transmission>0?n.unshift(C):_.transparent===!0?o.unshift(C):t.unshift(C)}function u(f,g){t.length>1&&t.sort(f||painterSortStable),n.length>1&&n.sort(g||reversePainterSortStable),o.length>1&&o.sort(g||reversePainterSortStable)}function d(){for(let f=e,g=s.length;f<g;f++){const _=s[f];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:o,init:a,push:l,unshift:c,finish:d,sort:u}}function WebGLRenderLists(){let s=new WeakMap;function e(n,o){const a=s.get(n);let r;return a===void 0?(r=new WebGLRenderList,s.set(n,[r])):o>=a.length?(r=new WebGLRenderList,a.push(r)):r=a[o],r}function t(){s=new WeakMap}return{get:e,dispose:t}}function UniformsCache(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new Vector3,color:new Color};break;case"SpotLight":t={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Vector3,color:new Color,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":t={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3};break}return s[e.id]=t,t}}}function ShadowUniformsCache(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let nextVersion=0;function shadowCastingAndTexturingLightsFirst(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function WebGLLights(s){const e=new UniformsCache,t=ShadowUniformsCache(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let u=0;u<9;u++)n.probe.push(new Vector3);const o=new Vector3,a=new Matrix4,r=new Matrix4;function l(u){let d=0,f=0,g=0;for(let G=0;G<9;G++)n.probe[G].set(0,0,0);let _=0,b=0,B=0,I=0,C=0,R=0,L=0,F=0,N=0,k=0,Q=0;u.sort(shadowCastingAndTexturingLightsFirst);for(let G=0,O=u.length;G<O;G++){const q=u[G],ce=q.color,ne=q.intensity,ue=q.distance,pe=q.shadow&&q.shadow.map?q.shadow.map.texture:null;if(q.isAmbientLight)d+=ce.r*ne,f+=ce.g*ne,g+=ce.b*ne;else if(q.isLightProbe){for(let fe=0;fe<9;fe++)n.probe[fe].addScaledVector(q.sh.coefficients[fe],ne);Q++}else if(q.isDirectionalLight){const fe=e.get(q);if(fe.color.copy(q.color).multiplyScalar(q.intensity),q.castShadow){const ee=q.shadow,J=t.get(q);J.shadowIntensity=ee.intensity,J.shadowBias=ee.bias,J.shadowNormalBias=ee.normalBias,J.shadowRadius=ee.radius,J.shadowMapSize=ee.mapSize,n.directionalShadow[_]=J,n.directionalShadowMap[_]=pe,n.directionalShadowMatrix[_]=q.shadow.matrix,R++}n.directional[_]=fe,_++}else if(q.isSpotLight){const fe=e.get(q);fe.position.setFromMatrixPosition(q.matrixWorld),fe.color.copy(ce).multiplyScalar(ne),fe.distance=ue,fe.coneCos=Math.cos(q.angle),fe.penumbraCos=Math.cos(q.angle*(1-q.penumbra)),fe.decay=q.decay,n.spot[B]=fe;const ee=q.shadow;if(q.map&&(n.spotLightMap[N]=q.map,N++,ee.updateMatrices(q),q.castShadow&&k++),n.spotLightMatrix[B]=ee.matrix,q.castShadow){const J=t.get(q);J.shadowIntensity=ee.intensity,J.shadowBias=ee.bias,J.shadowNormalBias=ee.normalBias,J.shadowRadius=ee.radius,J.shadowMapSize=ee.mapSize,n.spotShadow[B]=J,n.spotShadowMap[B]=pe,F++}B++}else if(q.isRectAreaLight){const fe=e.get(q);fe.color.copy(ce).multiplyScalar(ne),fe.halfWidth.set(q.width*.5,0,0),fe.halfHeight.set(0,q.height*.5,0),n.rectArea[I]=fe,I++}else if(q.isPointLight){const fe=e.get(q);if(fe.color.copy(q.color).multiplyScalar(q.intensity),fe.distance=q.distance,fe.decay=q.decay,q.castShadow){const ee=q.shadow,J=t.get(q);J.shadowIntensity=ee.intensity,J.shadowBias=ee.bias,J.shadowNormalBias=ee.normalBias,J.shadowRadius=ee.radius,J.shadowMapSize=ee.mapSize,J.shadowCameraNear=ee.camera.near,J.shadowCameraFar=ee.camera.far,n.pointShadow[b]=J,n.pointShadowMap[b]=pe,n.pointShadowMatrix[b]=q.shadow.matrix,L++}n.point[b]=fe,b++}else if(q.isHemisphereLight){const fe=e.get(q);fe.skyColor.copy(q.color).multiplyScalar(ne),fe.groundColor.copy(q.groundColor).multiplyScalar(ne),n.hemi[C]=fe,C++}}I>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=UniformsLib.LTC_FLOAT_1,n.rectAreaLTC2=UniformsLib.LTC_FLOAT_2):(n.rectAreaLTC1=UniformsLib.LTC_HALF_1,n.rectAreaLTC2=UniformsLib.LTC_HALF_2)),n.ambient[0]=d,n.ambient[1]=f,n.ambient[2]=g;const z=n.hash;(z.directionalLength!==_||z.pointLength!==b||z.spotLength!==B||z.rectAreaLength!==I||z.hemiLength!==C||z.numDirectionalShadows!==R||z.numPointShadows!==L||z.numSpotShadows!==F||z.numSpotMaps!==N||z.numLightProbes!==Q)&&(n.directional.length=_,n.spot.length=B,n.rectArea.length=I,n.point.length=b,n.hemi.length=C,n.directionalShadow.length=R,n.directionalShadowMap.length=R,n.pointShadow.length=L,n.pointShadowMap.length=L,n.spotShadow.length=F,n.spotShadowMap.length=F,n.directionalShadowMatrix.length=R,n.pointShadowMatrix.length=L,n.spotLightMatrix.length=F+N-k,n.spotLightMap.length=N,n.numSpotLightShadowsWithMaps=k,n.numLightProbes=Q,z.directionalLength=_,z.pointLength=b,z.spotLength=B,z.rectAreaLength=I,z.hemiLength=C,z.numDirectionalShadows=R,z.numPointShadows=L,z.numSpotShadows=F,z.numSpotMaps=N,z.numLightProbes=Q,n.version=nextVersion++)}function c(u,d){let f=0,g=0,_=0,b=0,B=0;const I=d.matrixWorldInverse;for(let C=0,R=u.length;C<R;C++){const L=u[C];if(L.isDirectionalLight){const F=n.directional[f];F.direction.setFromMatrixPosition(L.matrixWorld),o.setFromMatrixPosition(L.target.matrixWorld),F.direction.sub(o),F.direction.transformDirection(I),f++}else if(L.isSpotLight){const F=n.spot[_];F.position.setFromMatrixPosition(L.matrixWorld),F.position.applyMatrix4(I),F.direction.setFromMatrixPosition(L.matrixWorld),o.setFromMatrixPosition(L.target.matrixWorld),F.direction.sub(o),F.direction.transformDirection(I),_++}else if(L.isRectAreaLight){const F=n.rectArea[b];F.position.setFromMatrixPosition(L.matrixWorld),F.position.applyMatrix4(I),r.identity(),a.copy(L.matrixWorld),a.premultiply(I),r.extractRotation(a),F.halfWidth.set(L.width*.5,0,0),F.halfHeight.set(0,L.height*.5,0),F.halfWidth.applyMatrix4(r),F.halfHeight.applyMatrix4(r),b++}else if(L.isPointLight){const F=n.point[g];F.position.setFromMatrixPosition(L.matrixWorld),F.position.applyMatrix4(I),g++}else if(L.isHemisphereLight){const F=n.hemi[B];F.direction.setFromMatrixPosition(L.matrixWorld),F.direction.transformDirection(I),B++}}}return{setup:l,setupView:c,state:n}}function WebGLRenderState(s){const e=new WebGLLights(s),t=[],n=[];function o(d){u.camera=d,t.length=0,n.length=0}function a(d){t.push(d)}function r(d){n.push(d)}function l(){e.setup(t)}function c(d){e.setupView(t,d)}const u={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:o,state:u,setupLights:l,setupLightsView:c,pushLight:a,pushShadow:r}}function WebGLRenderStates(s){let e=new WeakMap;function t(o,a=0){const r=e.get(o);let l;return r===void 0?(l=new WebGLRenderState(s),e.set(o,[l])):a>=r.length?(l=new WebGLRenderState(s),r.push(l)):l=r[a],l}function n(){e=new WeakMap}return{get:t,dispose:n}}const vertex=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,fragment=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function WebGLShadowMap(s,e,t){let n=new Frustum;const o=new Vector2,a=new Vector2,r=new Vector4,l=new MeshDepthMaterial({depthPacking:RGBADepthPacking}),c=new MeshDistanceMaterial,u={},d=t.maxTextureSize,f={[FrontSide]:BackSide,[BackSide]:FrontSide,[DoubleSide]:DoubleSide},g=new ShaderMaterial({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:vertex,fragmentShader:fragment}),_=g.clone();_.defines.HORIZONTAL_PASS=1;const b=new BufferGeometry;b.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const B=new Mesh(b,g),I=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=PCFShadowMap;let C=this.type;this.render=function(k,Q,z){if(I.enabled===!1||I.autoUpdate===!1&&I.needsUpdate===!1||k.length===0)return;const G=s.getRenderTarget(),O=s.getActiveCubeFace(),q=s.getActiveMipmapLevel(),ce=s.state;ce.setBlending(NoBlending),ce.buffers.color.setClear(1,1,1,1),ce.buffers.depth.setTest(!0),ce.setScissorTest(!1);const ne=C!==VSMShadowMap&&this.type===VSMShadowMap,ue=C===VSMShadowMap&&this.type!==VSMShadowMap;for(let pe=0,fe=k.length;pe<fe;pe++){const ee=k[pe],J=ee.shadow;if(J===void 0){console.warn("THREE.WebGLShadowMap:",ee,"has no shadow.");continue}if(J.autoUpdate===!1&&J.needsUpdate===!1)continue;o.copy(J.mapSize);const ye=J.getFrameExtents();if(o.multiply(ye),a.copy(J.mapSize),(o.x>d||o.y>d)&&(o.x>d&&(a.x=Math.floor(d/ye.x),o.x=a.x*ye.x,J.mapSize.x=a.x),o.y>d&&(a.y=Math.floor(d/ye.y),o.y=a.y*ye.y,J.mapSize.y=a.y)),J.map===null||ne===!0||ue===!0){const xe=this.type!==VSMShadowMap?{minFilter:NearestFilter,magFilter:NearestFilter}:{};J.map!==null&&J.map.dispose(),J.map=new WebGLRenderTarget(o.x,o.y,xe),J.map.texture.name=ee.name+".shadowMap",J.camera.updateProjectionMatrix()}s.setRenderTarget(J.map),s.clear();const Te=J.getViewportCount();for(let xe=0;xe<Te;xe++){const ve=J.getViewport(xe);r.set(a.x*ve.x,a.y*ve.y,a.x*ve.z,a.y*ve.w),ce.viewport(r),J.updateMatrices(ee,xe),n=J.getFrustum(),F(Q,z,J.camera,ee,this.type)}J.isPointLightShadow!==!0&&this.type===VSMShadowMap&&R(J,z),J.needsUpdate=!1}C=this.type,I.needsUpdate=!1,s.setRenderTarget(G,O,q)};function R(k,Q){const z=e.update(B);g.defines.VSM_SAMPLES!==k.blurSamples&&(g.defines.VSM_SAMPLES=k.blurSamples,_.defines.VSM_SAMPLES=k.blurSamples,g.needsUpdate=!0,_.needsUpdate=!0),k.mapPass===null&&(k.mapPass=new WebGLRenderTarget(o.x,o.y)),g.uniforms.shadow_pass.value=k.map.texture,g.uniforms.resolution.value=k.mapSize,g.uniforms.radius.value=k.radius,s.setRenderTarget(k.mapPass),s.clear(),s.renderBufferDirect(Q,null,z,g,B,null),_.uniforms.shadow_pass.value=k.mapPass.texture,_.uniforms.resolution.value=k.mapSize,_.uniforms.radius.value=k.radius,s.setRenderTarget(k.map),s.clear(),s.renderBufferDirect(Q,null,z,_,B,null)}function L(k,Q,z,G){let O=null;const q=z.isPointLight===!0?k.customDistanceMaterial:k.customDepthMaterial;if(q!==void 0)O=q;else if(O=z.isPointLight===!0?c:l,s.localClippingEnabled&&Q.clipShadows===!0&&Array.isArray(Q.clippingPlanes)&&Q.clippingPlanes.length!==0||Q.displacementMap&&Q.displacementScale!==0||Q.alphaMap&&Q.alphaTest>0||Q.map&&Q.alphaTest>0||Q.alphaToCoverage===!0){const ce=O.uuid,ne=Q.uuid;let ue=u[ce];ue===void 0&&(ue={},u[ce]=ue);let pe=ue[ne];pe===void 0&&(pe=O.clone(),ue[ne]=pe,Q.addEventListener("dispose",N)),O=pe}if(O.visible=Q.visible,O.wireframe=Q.wireframe,G===VSMShadowMap?O.side=Q.shadowSide!==null?Q.shadowSide:Q.side:O.side=Q.shadowSide!==null?Q.shadowSide:f[Q.side],O.alphaMap=Q.alphaMap,O.alphaTest=Q.alphaToCoverage===!0?.5:Q.alphaTest,O.map=Q.map,O.clipShadows=Q.clipShadows,O.clippingPlanes=Q.clippingPlanes,O.clipIntersection=Q.clipIntersection,O.displacementMap=Q.displacementMap,O.displacementScale=Q.displacementScale,O.displacementBias=Q.displacementBias,O.wireframeLinewidth=Q.wireframeLinewidth,O.linewidth=Q.linewidth,z.isPointLight===!0&&O.isMeshDistanceMaterial===!0){const ce=s.properties.get(O);ce.light=z}return O}function F(k,Q,z,G,O){if(k.visible===!1)return;if(k.layers.test(Q.layers)&&(k.isMesh||k.isLine||k.isPoints)&&(k.castShadow||k.receiveShadow&&O===VSMShadowMap)&&(!k.frustumCulled||n.intersectsObject(k))){k.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,k.matrixWorld);const ne=e.update(k),ue=k.material;if(Array.isArray(ue)){const pe=ne.groups;for(let fe=0,ee=pe.length;fe<ee;fe++){const J=pe[fe],ye=ue[J.materialIndex];if(ye&&ye.visible){const Te=L(k,ye,G,O);k.onBeforeShadow(s,k,Q,z,ne,Te,J),s.renderBufferDirect(z,null,ne,Te,k,J),k.onAfterShadow(s,k,Q,z,ne,Te,J)}}}else if(ue.visible){const pe=L(k,ue,G,O);k.onBeforeShadow(s,k,Q,z,ne,pe,null),s.renderBufferDirect(z,null,ne,pe,k,null),k.onAfterShadow(s,k,Q,z,ne,pe,null)}}const ce=k.children;for(let ne=0,ue=ce.length;ne<ue;ne++)F(ce[ne],Q,z,G,O)}function N(k){k.target.removeEventListener("dispose",N);for(const z in u){const G=u[z],O=k.target.uuid;O in G&&(G[O].dispose(),delete G[O])}}}const reversedFuncs={[NeverDepth]:AlwaysDepth,[LessDepth]:GreaterDepth,[EqualDepth]:NotEqualDepth,[LessEqualDepth]:GreaterEqualDepth,[AlwaysDepth]:NeverDepth,[GreaterDepth]:LessDepth,[NotEqualDepth]:EqualDepth,[GreaterEqualDepth]:LessEqualDepth};function WebGLState(s,e){function t(){let K=!1;const be=new Vector4;let ge=null;const Re=new Vector4(0,0,0,0);return{setMask:function(Qe){ge!==Qe&&!K&&(s.colorMask(Qe,Qe,Qe,Qe),ge=Qe)},setLocked:function(Qe){K=Qe},setClear:function(Qe,Oe,st,_t,Ft){Ft===!0&&(Qe*=_t,Oe*=_t,st*=_t),be.set(Qe,Oe,st,_t),Re.equals(be)===!1&&(s.clearColor(Qe,Oe,st,_t),Re.copy(be))},reset:function(){K=!1,ge=null,Re.set(-1,0,0,0)}}}function n(){let K=!1,be=!1,ge=null,Re=null,Qe=null;return{setReversed:function(Oe){if(be!==Oe){const st=e.get("EXT_clip_control");Oe?st.clipControlEXT(st.LOWER_LEFT_EXT,st.ZERO_TO_ONE_EXT):st.clipControlEXT(st.LOWER_LEFT_EXT,st.NEGATIVE_ONE_TO_ONE_EXT),be=Oe;const _t=Qe;Qe=null,this.setClear(_t)}},getReversed:function(){return be},setTest:function(Oe){Oe?de(s.DEPTH_TEST):Me(s.DEPTH_TEST)},setMask:function(Oe){ge!==Oe&&!K&&(s.depthMask(Oe),ge=Oe)},setFunc:function(Oe){if(be&&(Oe=reversedFuncs[Oe]),Re!==Oe){switch(Oe){case NeverDepth:s.depthFunc(s.NEVER);break;case AlwaysDepth:s.depthFunc(s.ALWAYS);break;case LessDepth:s.depthFunc(s.LESS);break;case LessEqualDepth:s.depthFunc(s.LEQUAL);break;case EqualDepth:s.depthFunc(s.EQUAL);break;case GreaterEqualDepth:s.depthFunc(s.GEQUAL);break;case GreaterDepth:s.depthFunc(s.GREATER);break;case NotEqualDepth:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Re=Oe}},setLocked:function(Oe){K=Oe},setClear:function(Oe){Qe!==Oe&&(be&&(Oe=1-Oe),s.clearDepth(Oe),Qe=Oe)},reset:function(){K=!1,ge=null,Re=null,Qe=null,be=!1}}}function o(){let K=!1,be=null,ge=null,Re=null,Qe=null,Oe=null,st=null,_t=null,Ft=null;return{setTest:function(Rt){K||(Rt?de(s.STENCIL_TEST):Me(s.STENCIL_TEST))},setMask:function(Rt){be!==Rt&&!K&&(s.stencilMask(Rt),be=Rt)},setFunc:function(Rt,An,bn){(ge!==Rt||Re!==An||Qe!==bn)&&(s.stencilFunc(Rt,An,bn),ge=Rt,Re=An,Qe=bn)},setOp:function(Rt,An,bn){(Oe!==Rt||st!==An||_t!==bn)&&(s.stencilOp(Rt,An,bn),Oe=Rt,st=An,_t=bn)},setLocked:function(Rt){K=Rt},setClear:function(Rt){Ft!==Rt&&(s.clearStencil(Rt),Ft=Rt)},reset:function(){K=!1,be=null,ge=null,Re=null,Qe=null,Oe=null,st=null,_t=null,Ft=null}}}const a=new t,r=new n,l=new o,c=new WeakMap,u=new WeakMap;let d={},f={},g=new WeakMap,_=[],b=null,B=!1,I=null,C=null,R=null,L=null,F=null,N=null,k=null,Q=new Color(0,0,0),z=0,G=!1,O=null,q=null,ce=null,ne=null,ue=null;const pe=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let fe=!1,ee=0;const J=s.getParameter(s.VERSION);J.indexOf("WebGL")!==-1?(ee=parseFloat(/^WebGL (\d)/.exec(J)[1]),fe=ee>=1):J.indexOf("OpenGL ES")!==-1&&(ee=parseFloat(/^OpenGL ES (\d)/.exec(J)[1]),fe=ee>=2);let ye=null,Te={};const xe=s.getParameter(s.SCISSOR_BOX),ve=s.getParameter(s.VIEWPORT),he=new Vector4().fromArray(xe),le=new Vector4().fromArray(ve);function _e(K,be,ge,Re){const Qe=new Uint8Array(4),Oe=s.createTexture();s.bindTexture(K,Oe),s.texParameteri(K,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(K,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let st=0;st<ge;st++)K===s.TEXTURE_3D||K===s.TEXTURE_2D_ARRAY?s.texImage3D(be,0,s.RGBA,1,1,Re,0,s.RGBA,s.UNSIGNED_BYTE,Qe):s.texImage2D(be+st,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Qe);return Oe}const De={};De[s.TEXTURE_2D]=_e(s.TEXTURE_2D,s.TEXTURE_2D,1),De[s.TEXTURE_CUBE_MAP]=_e(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),De[s.TEXTURE_2D_ARRAY]=_e(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),De[s.TEXTURE_3D]=_e(s.TEXTURE_3D,s.TEXTURE_3D,1,1),a.setClear(0,0,0,1),r.setClear(1),l.setClear(0),de(s.DEPTH_TEST),r.setFunc(LessEqualDepth),Be(!1),we(CullFaceBack),de(s.CULL_FACE),$(NoBlending);function de(K){d[K]!==!0&&(s.enable(K),d[K]=!0)}function Me(K){d[K]!==!1&&(s.disable(K),d[K]=!1)}function Ne(K,be){return f[K]!==be?(s.bindFramebuffer(K,be),f[K]=be,K===s.DRAW_FRAMEBUFFER&&(f[s.FRAMEBUFFER]=be),K===s.FRAMEBUFFER&&(f[s.DRAW_FRAMEBUFFER]=be),!0):!1}function Pe(K,be){let ge=_,Re=!1;if(K){ge=g.get(be),ge===void 0&&(ge=[],g.set(be,ge));const Qe=K.textures;if(ge.length!==Qe.length||ge[0]!==s.COLOR_ATTACHMENT0){for(let Oe=0,st=Qe.length;Oe<st;Oe++)ge[Oe]=s.COLOR_ATTACHMENT0+Oe;ge.length=Qe.length,Re=!0}}else ge[0]!==s.BACK&&(ge[0]=s.BACK,Re=!0);Re&&s.drawBuffers(ge)}function nt(K){return b!==K?(s.useProgram(K),b=K,!0):!1}const ie={[AddEquation]:s.FUNC_ADD,[SubtractEquation]:s.FUNC_SUBTRACT,[ReverseSubtractEquation]:s.FUNC_REVERSE_SUBTRACT};ie[MinEquation]=s.MIN,ie[MaxEquation]=s.MAX;const oe={[ZeroFactor]:s.ZERO,[OneFactor]:s.ONE,[SrcColorFactor]:s.SRC_COLOR,[SrcAlphaFactor]:s.SRC_ALPHA,[SrcAlphaSaturateFactor]:s.SRC_ALPHA_SATURATE,[DstColorFactor]:s.DST_COLOR,[DstAlphaFactor]:s.DST_ALPHA,[OneMinusSrcColorFactor]:s.ONE_MINUS_SRC_COLOR,[OneMinusSrcAlphaFactor]:s.ONE_MINUS_SRC_ALPHA,[OneMinusDstColorFactor]:s.ONE_MINUS_DST_COLOR,[OneMinusDstAlphaFactor]:s.ONE_MINUS_DST_ALPHA,[ConstantColorFactor]:s.CONSTANT_COLOR,[OneMinusConstantColorFactor]:s.ONE_MINUS_CONSTANT_COLOR,[ConstantAlphaFactor]:s.CONSTANT_ALPHA,[OneMinusConstantAlphaFactor]:s.ONE_MINUS_CONSTANT_ALPHA};function $(K,be,ge,Re,Qe,Oe,st,_t,Ft,Rt){if(K===NoBlending){B===!0&&(Me(s.BLEND),B=!1);return}if(B===!1&&(de(s.BLEND),B=!0),K!==CustomBlending){if(K!==I||Rt!==G){if((C!==AddEquation||F!==AddEquation)&&(s.blendEquation(s.FUNC_ADD),C=AddEquation,F=AddEquation),Rt)switch(K){case NormalBlending:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case AdditiveBlending:s.blendFunc(s.ONE,s.ONE);break;case SubtractiveBlending:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case MultiplyBlending:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",K);break}else switch(K){case NormalBlending:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case AdditiveBlending:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case SubtractiveBlending:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case MultiplyBlending:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",K);break}R=null,L=null,N=null,k=null,Q.set(0,0,0),z=0,I=K,G=Rt}return}Qe=Qe||be,Oe=Oe||ge,st=st||Re,(be!==C||Qe!==F)&&(s.blendEquationSeparate(ie[be],ie[Qe]),C=be,F=Qe),(ge!==R||Re!==L||Oe!==N||st!==k)&&(s.blendFuncSeparate(oe[ge],oe[Re],oe[Oe],oe[st]),R=ge,L=Re,N=Oe,k=st),(_t.equals(Q)===!1||Ft!==z)&&(s.blendColor(_t.r,_t.g,_t.b,Ft),Q.copy(_t),z=Ft),I=K,G=!1}function Se(K,be){K.side===DoubleSide?Me(s.CULL_FACE):de(s.CULL_FACE);let ge=K.side===BackSide;be&&(ge=!ge),Be(ge),K.blending===NormalBlending&&K.transparent===!1?$(NoBlending):$(K.blending,K.blendEquation,K.blendSrc,K.blendDst,K.blendEquationAlpha,K.blendSrcAlpha,K.blendDstAlpha,K.blendColor,K.blendAlpha,K.premultipliedAlpha),r.setFunc(K.depthFunc),r.setTest(K.depthTest),r.setMask(K.depthWrite),a.setMask(K.colorWrite);const Re=K.stencilWrite;l.setTest(Re),Re&&(l.setMask(K.stencilWriteMask),l.setFunc(K.stencilFunc,K.stencilRef,K.stencilFuncMask),l.setOp(K.stencilFail,K.stencilZFail,K.stencilZPass)),$e(K.polygonOffset,K.polygonOffsetFactor,K.polygonOffsetUnits),K.alphaToCoverage===!0?de(s.SAMPLE_ALPHA_TO_COVERAGE):Me(s.SAMPLE_ALPHA_TO_COVERAGE)}function Be(K){O!==K&&(K?s.frontFace(s.CW):s.frontFace(s.CCW),O=K)}function we(K){K!==CullFaceNone?(de(s.CULL_FACE),K!==q&&(K===CullFaceBack?s.cullFace(s.BACK):K===CullFaceFront?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Me(s.CULL_FACE),q=K}function Fe(K){K!==ce&&(fe&&s.lineWidth(K),ce=K)}function $e(K,be,ge){K?(de(s.POLYGON_OFFSET_FILL),(ne!==be||ue!==ge)&&(s.polygonOffset(be,ge),ne=be,ue=ge)):Me(s.POLYGON_OFFSET_FILL)}function ze(K){K?de(s.SCISSOR_TEST):Me(s.SCISSOR_TEST)}function qe(K){K===void 0&&(K=s.TEXTURE0+pe-1),ye!==K&&(s.activeTexture(K),ye=K)}function ut(K,be,ge){ge===void 0&&(ye===null?ge=s.TEXTURE0+pe-1:ge=ye);let Re=Te[ge];Re===void 0&&(Re={type:void 0,texture:void 0},Te[ge]=Re),(Re.type!==K||Re.texture!==be)&&(ye!==ge&&(s.activeTexture(ge),ye=ge),s.bindTexture(K,be||De[K]),Re.type=K,Re.texture=be)}function te(){const K=Te[ye];K!==void 0&&K.type!==void 0&&(s.bindTexture(K.type,null),K.type=void 0,K.texture=void 0)}function H(){try{s.compressedTexImage2D(...arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Ie(){try{s.compressedTexImage3D(...arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Ge(){try{s.texSubImage2D(...arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function We(){try{s.texSubImage3D(...arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Ve(){try{s.compressedTexSubImage2D(...arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function dt(){try{s.compressedTexSubImage3D(...arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function it(){try{s.texStorage2D(...arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function ft(){try{s.texStorage3D(...arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function se(){try{s.texImage2D(...arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Ee(){try{s.texImage3D(...arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Ye(K){he.equals(K)===!1&&(s.scissor(K.x,K.y,K.z,K.w),he.copy(K))}function Je(K){le.equals(K)===!1&&(s.viewport(K.x,K.y,K.z,K.w),le.copy(K))}function at(K,be){let ge=u.get(be);ge===void 0&&(ge=new WeakMap,u.set(be,ge));let Re=ge.get(K);Re===void 0&&(Re=s.getUniformBlockIndex(be,K.name),ge.set(K,Re))}function ot(K,be){const Re=u.get(be).get(K);c.get(be)!==Re&&(s.uniformBlockBinding(be,Re,K.__bindingPointIndex),c.set(be,Re))}function Ct(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),r.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},ye=null,Te={},f={},g=new WeakMap,_=[],b=null,B=!1,I=null,C=null,R=null,L=null,F=null,N=null,k=null,Q=new Color(0,0,0),z=0,G=!1,O=null,q=null,ce=null,ne=null,ue=null,he.set(0,0,s.canvas.width,s.canvas.height),le.set(0,0,s.canvas.width,s.canvas.height),a.reset(),r.reset(),l.reset()}return{buffers:{color:a,depth:r,stencil:l},enable:de,disable:Me,bindFramebuffer:Ne,drawBuffers:Pe,useProgram:nt,setBlending:$,setMaterial:Se,setFlipSided:Be,setCullFace:we,setLineWidth:Fe,setPolygonOffset:$e,setScissorTest:ze,activeTexture:qe,bindTexture:ut,unbindTexture:te,compressedTexImage2D:H,compressedTexImage3D:Ie,texImage2D:se,texImage3D:Ee,updateUBOMapping:at,uniformBlockBinding:ot,texStorage2D:it,texStorage3D:ft,texSubImage2D:Ge,texSubImage3D:We,compressedTexSubImage2D:Ve,compressedTexSubImage3D:dt,scissor:Ye,viewport:Je,reset:Ct}}function WebGLTextures(s,e,t,n,o,a,r){const l=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),u=new Vector2,d=new WeakMap;let f;const g=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(te,H){return _?new OffscreenCanvas(te,H):createElementNS("canvas")}function B(te,H,Ie){let Ge=1;const We=ut(te);if((We.width>Ie||We.height>Ie)&&(Ge=Ie/Math.max(We.width,We.height)),Ge<1)if(typeof HTMLImageElement<"u"&&te instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&te instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&te instanceof ImageBitmap||typeof VideoFrame<"u"&&te instanceof VideoFrame){const Ve=Math.floor(Ge*We.width),dt=Math.floor(Ge*We.height);f===void 0&&(f=b(Ve,dt));const it=H?b(Ve,dt):f;return it.width=Ve,it.height=dt,it.getContext("2d").drawImage(te,0,0,Ve,dt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+We.width+"x"+We.height+") to ("+Ve+"x"+dt+")."),it}else return"data"in te&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+We.width+"x"+We.height+")."),te;return te}function I(te){return te.generateMipmaps}function C(te){s.generateMipmap(te)}function R(te){return te.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:te.isWebGL3DRenderTarget?s.TEXTURE_3D:te.isWebGLArrayRenderTarget||te.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function L(te,H,Ie,Ge,We=!1){if(te!==null){if(s[te]!==void 0)return s[te];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+te+"'")}let Ve=H;if(H===s.RED&&(Ie===s.FLOAT&&(Ve=s.R32F),Ie===s.HALF_FLOAT&&(Ve=s.R16F),Ie===s.UNSIGNED_BYTE&&(Ve=s.R8)),H===s.RED_INTEGER&&(Ie===s.UNSIGNED_BYTE&&(Ve=s.R8UI),Ie===s.UNSIGNED_SHORT&&(Ve=s.R16UI),Ie===s.UNSIGNED_INT&&(Ve=s.R32UI),Ie===s.BYTE&&(Ve=s.R8I),Ie===s.SHORT&&(Ve=s.R16I),Ie===s.INT&&(Ve=s.R32I)),H===s.RG&&(Ie===s.FLOAT&&(Ve=s.RG32F),Ie===s.HALF_FLOAT&&(Ve=s.RG16F),Ie===s.UNSIGNED_BYTE&&(Ve=s.RG8)),H===s.RG_INTEGER&&(Ie===s.UNSIGNED_BYTE&&(Ve=s.RG8UI),Ie===s.UNSIGNED_SHORT&&(Ve=s.RG16UI),Ie===s.UNSIGNED_INT&&(Ve=s.RG32UI),Ie===s.BYTE&&(Ve=s.RG8I),Ie===s.SHORT&&(Ve=s.RG16I),Ie===s.INT&&(Ve=s.RG32I)),H===s.RGB_INTEGER&&(Ie===s.UNSIGNED_BYTE&&(Ve=s.RGB8UI),Ie===s.UNSIGNED_SHORT&&(Ve=s.RGB16UI),Ie===s.UNSIGNED_INT&&(Ve=s.RGB32UI),Ie===s.BYTE&&(Ve=s.RGB8I),Ie===s.SHORT&&(Ve=s.RGB16I),Ie===s.INT&&(Ve=s.RGB32I)),H===s.RGBA_INTEGER&&(Ie===s.UNSIGNED_BYTE&&(Ve=s.RGBA8UI),Ie===s.UNSIGNED_SHORT&&(Ve=s.RGBA16UI),Ie===s.UNSIGNED_INT&&(Ve=s.RGBA32UI),Ie===s.BYTE&&(Ve=s.RGBA8I),Ie===s.SHORT&&(Ve=s.RGBA16I),Ie===s.INT&&(Ve=s.RGBA32I)),H===s.RGB&&Ie===s.UNSIGNED_INT_5_9_9_9_REV&&(Ve=s.RGB9_E5),H===s.RGBA){const dt=We?LinearTransfer:ColorManagement.getTransfer(Ge);Ie===s.FLOAT&&(Ve=s.RGBA32F),Ie===s.HALF_FLOAT&&(Ve=s.RGBA16F),Ie===s.UNSIGNED_BYTE&&(Ve=dt===SRGBTransfer?s.SRGB8_ALPHA8:s.RGBA8),Ie===s.UNSIGNED_SHORT_4_4_4_4&&(Ve=s.RGBA4),Ie===s.UNSIGNED_SHORT_5_5_5_1&&(Ve=s.RGB5_A1)}return(Ve===s.R16F||Ve===s.R32F||Ve===s.RG16F||Ve===s.RG32F||Ve===s.RGBA16F||Ve===s.RGBA32F)&&e.get("EXT_color_buffer_float"),Ve}function F(te,H){let Ie;return te?H===null||H===UnsignedIntType||H===UnsignedInt248Type?Ie=s.DEPTH24_STENCIL8:H===FloatType?Ie=s.DEPTH32F_STENCIL8:H===UnsignedShortType&&(Ie=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):H===null||H===UnsignedIntType||H===UnsignedInt248Type?Ie=s.DEPTH_COMPONENT24:H===FloatType?Ie=s.DEPTH_COMPONENT32F:H===UnsignedShortType&&(Ie=s.DEPTH_COMPONENT16),Ie}function N(te,H){return I(te)===!0||te.isFramebufferTexture&&te.minFilter!==NearestFilter&&te.minFilter!==LinearFilter?Math.log2(Math.max(H.width,H.height))+1:te.mipmaps!==void 0&&te.mipmaps.length>0?te.mipmaps.length:te.isCompressedTexture&&Array.isArray(te.image)?H.mipmaps.length:1}function k(te){const H=te.target;H.removeEventListener("dispose",k),z(H),H.isVideoTexture&&d.delete(H)}function Q(te){const H=te.target;H.removeEventListener("dispose",Q),O(H)}function z(te){const H=n.get(te);if(H.__webglInit===void 0)return;const Ie=te.source,Ge=g.get(Ie);if(Ge){const We=Ge[H.__cacheKey];We.usedTimes--,We.usedTimes===0&&G(te),Object.keys(Ge).length===0&&g.delete(Ie)}n.remove(te)}function G(te){const H=n.get(te);s.deleteTexture(H.__webglTexture);const Ie=te.source,Ge=g.get(Ie);delete Ge[H.__cacheKey],r.memory.textures--}function O(te){const H=n.get(te);if(te.depthTexture&&(te.depthTexture.dispose(),n.remove(te.depthTexture)),te.isWebGLCubeRenderTarget)for(let Ge=0;Ge<6;Ge++){if(Array.isArray(H.__webglFramebuffer[Ge]))for(let We=0;We<H.__webglFramebuffer[Ge].length;We++)s.deleteFramebuffer(H.__webglFramebuffer[Ge][We]);else s.deleteFramebuffer(H.__webglFramebuffer[Ge]);H.__webglDepthbuffer&&s.deleteRenderbuffer(H.__webglDepthbuffer[Ge])}else{if(Array.isArray(H.__webglFramebuffer))for(let Ge=0;Ge<H.__webglFramebuffer.length;Ge++)s.deleteFramebuffer(H.__webglFramebuffer[Ge]);else s.deleteFramebuffer(H.__webglFramebuffer);if(H.__webglDepthbuffer&&s.deleteRenderbuffer(H.__webglDepthbuffer),H.__webglMultisampledFramebuffer&&s.deleteFramebuffer(H.__webglMultisampledFramebuffer),H.__webglColorRenderbuffer)for(let Ge=0;Ge<H.__webglColorRenderbuffer.length;Ge++)H.__webglColorRenderbuffer[Ge]&&s.deleteRenderbuffer(H.__webglColorRenderbuffer[Ge]);H.__webglDepthRenderbuffer&&s.deleteRenderbuffer(H.__webglDepthRenderbuffer)}const Ie=te.textures;for(let Ge=0,We=Ie.length;Ge<We;Ge++){const Ve=n.get(Ie[Ge]);Ve.__webglTexture&&(s.deleteTexture(Ve.__webglTexture),r.memory.textures--),n.remove(Ie[Ge])}n.remove(te)}let q=0;function ce(){q=0}function ne(){const te=q;return te>=o.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+te+" texture units while this GPU supports only "+o.maxTextures),q+=1,te}function ue(te){const H=[];return H.push(te.wrapS),H.push(te.wrapT),H.push(te.wrapR||0),H.push(te.magFilter),H.push(te.minFilter),H.push(te.anisotropy),H.push(te.internalFormat),H.push(te.format),H.push(te.type),H.push(te.generateMipmaps),H.push(te.premultiplyAlpha),H.push(te.flipY),H.push(te.unpackAlignment),H.push(te.colorSpace),H.join()}function pe(te,H){const Ie=n.get(te);if(te.isVideoTexture&&ze(te),te.isRenderTargetTexture===!1&&te.version>0&&Ie.__version!==te.version){const Ge=te.image;if(Ge===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Ge.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{De(Ie,te,H);return}}t.bindTexture(s.TEXTURE_2D,Ie.__webglTexture,s.TEXTURE0+H)}function fe(te,H){const Ie=n.get(te);if(te.version>0&&Ie.__version!==te.version){De(Ie,te,H);return}t.bindTexture(s.TEXTURE_2D_ARRAY,Ie.__webglTexture,s.TEXTURE0+H)}function ee(te,H){const Ie=n.get(te);if(te.version>0&&Ie.__version!==te.version){De(Ie,te,H);return}t.bindTexture(s.TEXTURE_3D,Ie.__webglTexture,s.TEXTURE0+H)}function J(te,H){const Ie=n.get(te);if(te.version>0&&Ie.__version!==te.version){de(Ie,te,H);return}t.bindTexture(s.TEXTURE_CUBE_MAP,Ie.__webglTexture,s.TEXTURE0+H)}const ye={[RepeatWrapping]:s.REPEAT,[ClampToEdgeWrapping]:s.CLAMP_TO_EDGE,[MirroredRepeatWrapping]:s.MIRRORED_REPEAT},Te={[NearestFilter]:s.NEAREST,[NearestMipmapNearestFilter]:s.NEAREST_MIPMAP_NEAREST,[NearestMipmapLinearFilter]:s.NEAREST_MIPMAP_LINEAR,[LinearFilter]:s.LINEAR,[LinearMipmapNearestFilter]:s.LINEAR_MIPMAP_NEAREST,[LinearMipmapLinearFilter]:s.LINEAR_MIPMAP_LINEAR},xe={[NeverCompare]:s.NEVER,[AlwaysCompare]:s.ALWAYS,[LessCompare]:s.LESS,[LessEqualCompare]:s.LEQUAL,[EqualCompare]:s.EQUAL,[GreaterEqualCompare]:s.GEQUAL,[GreaterCompare]:s.GREATER,[NotEqualCompare]:s.NOTEQUAL};function ve(te,H){if(H.type===FloatType&&e.has("OES_texture_float_linear")===!1&&(H.magFilter===LinearFilter||H.magFilter===LinearMipmapNearestFilter||H.magFilter===NearestMipmapLinearFilter||H.magFilter===LinearMipmapLinearFilter||H.minFilter===LinearFilter||H.minFilter===LinearMipmapNearestFilter||H.minFilter===NearestMipmapLinearFilter||H.minFilter===LinearMipmapLinearFilter)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(te,s.TEXTURE_WRAP_S,ye[H.wrapS]),s.texParameteri(te,s.TEXTURE_WRAP_T,ye[H.wrapT]),(te===s.TEXTURE_3D||te===s.TEXTURE_2D_ARRAY)&&s.texParameteri(te,s.TEXTURE_WRAP_R,ye[H.wrapR]),s.texParameteri(te,s.TEXTURE_MAG_FILTER,Te[H.magFilter]),s.texParameteri(te,s.TEXTURE_MIN_FILTER,Te[H.minFilter]),H.compareFunction&&(s.texParameteri(te,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(te,s.TEXTURE_COMPARE_FUNC,xe[H.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(H.magFilter===NearestFilter||H.minFilter!==NearestMipmapLinearFilter&&H.minFilter!==LinearMipmapLinearFilter||H.type===FloatType&&e.has("OES_texture_float_linear")===!1)return;if(H.anisotropy>1||n.get(H).__currentAnisotropy){const Ie=e.get("EXT_texture_filter_anisotropic");s.texParameterf(te,Ie.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(H.anisotropy,o.getMaxAnisotropy())),n.get(H).__currentAnisotropy=H.anisotropy}}}function he(te,H){let Ie=!1;te.__webglInit===void 0&&(te.__webglInit=!0,H.addEventListener("dispose",k));const Ge=H.source;let We=g.get(Ge);We===void 0&&(We={},g.set(Ge,We));const Ve=ue(H);if(Ve!==te.__cacheKey){We[Ve]===void 0&&(We[Ve]={texture:s.createTexture(),usedTimes:0},r.memory.textures++,Ie=!0),We[Ve].usedTimes++;const dt=We[te.__cacheKey];dt!==void 0&&(We[te.__cacheKey].usedTimes--,dt.usedTimes===0&&G(H)),te.__cacheKey=Ve,te.__webglTexture=We[Ve].texture}return Ie}function le(te,H,Ie){return Math.floor(Math.floor(te/Ie)/H)}function _e(te,H,Ie,Ge){const Ve=te.updateRanges;if(Ve.length===0)t.texSubImage2D(s.TEXTURE_2D,0,0,0,H.width,H.height,Ie,Ge,H.data);else{Ve.sort((Ee,Ye)=>Ee.start-Ye.start);let dt=0;for(let Ee=1;Ee<Ve.length;Ee++){const Ye=Ve[dt],Je=Ve[Ee],at=Ye.start+Ye.count,ot=le(Je.start,H.width,4),Ct=le(Ye.start,H.width,4);Je.start<=at+1&&ot===Ct&&le(Je.start+Je.count-1,H.width,4)===ot?Ye.count=Math.max(Ye.count,Je.start+Je.count-Ye.start):(++dt,Ve[dt]=Je)}Ve.length=dt+1;const it=s.getParameter(s.UNPACK_ROW_LENGTH),ft=s.getParameter(s.UNPACK_SKIP_PIXELS),se=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,H.width);for(let Ee=0,Ye=Ve.length;Ee<Ye;Ee++){const Je=Ve[Ee],at=Math.floor(Je.start/4),ot=Math.ceil(Je.count/4),Ct=at%H.width,K=Math.floor(at/H.width),be=ot,ge=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,Ct),s.pixelStorei(s.UNPACK_SKIP_ROWS,K),t.texSubImage2D(s.TEXTURE_2D,0,Ct,K,be,ge,Ie,Ge,H.data)}te.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,it),s.pixelStorei(s.UNPACK_SKIP_PIXELS,ft),s.pixelStorei(s.UNPACK_SKIP_ROWS,se)}}function De(te,H,Ie){let Ge=s.TEXTURE_2D;(H.isDataArrayTexture||H.isCompressedArrayTexture)&&(Ge=s.TEXTURE_2D_ARRAY),H.isData3DTexture&&(Ge=s.TEXTURE_3D);const We=he(te,H),Ve=H.source;t.bindTexture(Ge,te.__webglTexture,s.TEXTURE0+Ie);const dt=n.get(Ve);if(Ve.version!==dt.__version||We===!0){t.activeTexture(s.TEXTURE0+Ie);const it=ColorManagement.getPrimaries(ColorManagement.workingColorSpace),ft=H.colorSpace===NoColorSpace?null:ColorManagement.getPrimaries(H.colorSpace),se=H.colorSpace===NoColorSpace||it===ft?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,H.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,H.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,H.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,se);let Ee=B(H.image,!1,o.maxTextureSize);Ee=qe(H,Ee);const Ye=a.convert(H.format,H.colorSpace),Je=a.convert(H.type);let at=L(H.internalFormat,Ye,Je,H.colorSpace,H.isVideoTexture);ve(Ge,H);let ot;const Ct=H.mipmaps,K=H.isVideoTexture!==!0,be=dt.__version===void 0||We===!0,ge=Ve.dataReady,Re=N(H,Ee);if(H.isDepthTexture)at=F(H.format===DepthStencilFormat,H.type),be&&(K?t.texStorage2D(s.TEXTURE_2D,1,at,Ee.width,Ee.height):t.texImage2D(s.TEXTURE_2D,0,at,Ee.width,Ee.height,0,Ye,Je,null));else if(H.isDataTexture)if(Ct.length>0){K&&be&&t.texStorage2D(s.TEXTURE_2D,Re,at,Ct[0].width,Ct[0].height);for(let Qe=0,Oe=Ct.length;Qe<Oe;Qe++)ot=Ct[Qe],K?ge&&t.texSubImage2D(s.TEXTURE_2D,Qe,0,0,ot.width,ot.height,Ye,Je,ot.data):t.texImage2D(s.TEXTURE_2D,Qe,at,ot.width,ot.height,0,Ye,Je,ot.data);H.generateMipmaps=!1}else K?(be&&t.texStorage2D(s.TEXTURE_2D,Re,at,Ee.width,Ee.height),ge&&_e(H,Ee,Ye,Je)):t.texImage2D(s.TEXTURE_2D,0,at,Ee.width,Ee.height,0,Ye,Je,Ee.data);else if(H.isCompressedTexture)if(H.isCompressedArrayTexture){K&&be&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Re,at,Ct[0].width,Ct[0].height,Ee.depth);for(let Qe=0,Oe=Ct.length;Qe<Oe;Qe++)if(ot=Ct[Qe],H.format!==RGBAFormat)if(Ye!==null)if(K){if(ge)if(H.layerUpdates.size>0){const st=getByteLength(ot.width,ot.height,H.format,H.type);for(const _t of H.layerUpdates){const Ft=ot.data.subarray(_t*st/ot.data.BYTES_PER_ELEMENT,(_t+1)*st/ot.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Qe,0,0,_t,ot.width,ot.height,1,Ye,Ft)}H.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Qe,0,0,0,ot.width,ot.height,Ee.depth,Ye,ot.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,Qe,at,ot.width,ot.height,Ee.depth,0,ot.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else K?ge&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,Qe,0,0,0,ot.width,ot.height,Ee.depth,Ye,Je,ot.data):t.texImage3D(s.TEXTURE_2D_ARRAY,Qe,at,ot.width,ot.height,Ee.depth,0,Ye,Je,ot.data)}else{K&&be&&t.texStorage2D(s.TEXTURE_2D,Re,at,Ct[0].width,Ct[0].height);for(let Qe=0,Oe=Ct.length;Qe<Oe;Qe++)ot=Ct[Qe],H.format!==RGBAFormat?Ye!==null?K?ge&&t.compressedTexSubImage2D(s.TEXTURE_2D,Qe,0,0,ot.width,ot.height,Ye,ot.data):t.compressedTexImage2D(s.TEXTURE_2D,Qe,at,ot.width,ot.height,0,ot.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):K?ge&&t.texSubImage2D(s.TEXTURE_2D,Qe,0,0,ot.width,ot.height,Ye,Je,ot.data):t.texImage2D(s.TEXTURE_2D,Qe,at,ot.width,ot.height,0,Ye,Je,ot.data)}else if(H.isDataArrayTexture)if(K){if(be&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Re,at,Ee.width,Ee.height,Ee.depth),ge)if(H.layerUpdates.size>0){const Qe=getByteLength(Ee.width,Ee.height,H.format,H.type);for(const Oe of H.layerUpdates){const st=Ee.data.subarray(Oe*Qe/Ee.data.BYTES_PER_ELEMENT,(Oe+1)*Qe/Ee.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,Oe,Ee.width,Ee.height,1,Ye,Je,st)}H.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Ee.width,Ee.height,Ee.depth,Ye,Je,Ee.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,at,Ee.width,Ee.height,Ee.depth,0,Ye,Je,Ee.data);else if(H.isData3DTexture)K?(be&&t.texStorage3D(s.TEXTURE_3D,Re,at,Ee.width,Ee.height,Ee.depth),ge&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Ee.width,Ee.height,Ee.depth,Ye,Je,Ee.data)):t.texImage3D(s.TEXTURE_3D,0,at,Ee.width,Ee.height,Ee.depth,0,Ye,Je,Ee.data);else if(H.isFramebufferTexture){if(be)if(K)t.texStorage2D(s.TEXTURE_2D,Re,at,Ee.width,Ee.height);else{let Qe=Ee.width,Oe=Ee.height;for(let st=0;st<Re;st++)t.texImage2D(s.TEXTURE_2D,st,at,Qe,Oe,0,Ye,Je,null),Qe>>=1,Oe>>=1}}else if(Ct.length>0){if(K&&be){const Qe=ut(Ct[0]);t.texStorage2D(s.TEXTURE_2D,Re,at,Qe.width,Qe.height)}for(let Qe=0,Oe=Ct.length;Qe<Oe;Qe++)ot=Ct[Qe],K?ge&&t.texSubImage2D(s.TEXTURE_2D,Qe,0,0,Ye,Je,ot):t.texImage2D(s.TEXTURE_2D,Qe,at,Ye,Je,ot);H.generateMipmaps=!1}else if(K){if(be){const Qe=ut(Ee);t.texStorage2D(s.TEXTURE_2D,Re,at,Qe.width,Qe.height)}ge&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Ye,Je,Ee)}else t.texImage2D(s.TEXTURE_2D,0,at,Ye,Je,Ee);I(H)&&C(Ge),dt.__version=Ve.version,H.onUpdate&&H.onUpdate(H)}te.__version=H.version}function de(te,H,Ie){if(H.image.length!==6)return;const Ge=he(te,H),We=H.source;t.bindTexture(s.TEXTURE_CUBE_MAP,te.__webglTexture,s.TEXTURE0+Ie);const Ve=n.get(We);if(We.version!==Ve.__version||Ge===!0){t.activeTexture(s.TEXTURE0+Ie);const dt=ColorManagement.getPrimaries(ColorManagement.workingColorSpace),it=H.colorSpace===NoColorSpace?null:ColorManagement.getPrimaries(H.colorSpace),ft=H.colorSpace===NoColorSpace||dt===it?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,H.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,H.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,H.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,ft);const se=H.isCompressedTexture||H.image[0].isCompressedTexture,Ee=H.image[0]&&H.image[0].isDataTexture,Ye=[];for(let Oe=0;Oe<6;Oe++)!se&&!Ee?Ye[Oe]=B(H.image[Oe],!0,o.maxCubemapSize):Ye[Oe]=Ee?H.image[Oe].image:H.image[Oe],Ye[Oe]=qe(H,Ye[Oe]);const Je=Ye[0],at=a.convert(H.format,H.colorSpace),ot=a.convert(H.type),Ct=L(H.internalFormat,at,ot,H.colorSpace),K=H.isVideoTexture!==!0,be=Ve.__version===void 0||Ge===!0,ge=We.dataReady;let Re=N(H,Je);ve(s.TEXTURE_CUBE_MAP,H);let Qe;if(se){K&&be&&t.texStorage2D(s.TEXTURE_CUBE_MAP,Re,Ct,Je.width,Je.height);for(let Oe=0;Oe<6;Oe++){Qe=Ye[Oe].mipmaps;for(let st=0;st<Qe.length;st++){const _t=Qe[st];H.format!==RGBAFormat?at!==null?K?ge&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,st,0,0,_t.width,_t.height,at,_t.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,st,Ct,_t.width,_t.height,0,_t.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):K?ge&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,st,0,0,_t.width,_t.height,at,ot,_t.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,st,Ct,_t.width,_t.height,0,at,ot,_t.data)}}}else{if(Qe=H.mipmaps,K&&be){Qe.length>0&&Re++;const Oe=ut(Ye[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,Re,Ct,Oe.width,Oe.height)}for(let Oe=0;Oe<6;Oe++)if(Ee){K?ge&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,0,0,0,Ye[Oe].width,Ye[Oe].height,at,ot,Ye[Oe].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,0,Ct,Ye[Oe].width,Ye[Oe].height,0,at,ot,Ye[Oe].data);for(let st=0;st<Qe.length;st++){const Ft=Qe[st].image[Oe].image;K?ge&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,st+1,0,0,Ft.width,Ft.height,at,ot,Ft.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,st+1,Ct,Ft.width,Ft.height,0,at,ot,Ft.data)}}else{K?ge&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,0,0,0,at,ot,Ye[Oe]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,0,Ct,at,ot,Ye[Oe]);for(let st=0;st<Qe.length;st++){const _t=Qe[st];K?ge&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,st+1,0,0,at,ot,_t.image[Oe]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Oe,st+1,Ct,at,ot,_t.image[Oe])}}}I(H)&&C(s.TEXTURE_CUBE_MAP),Ve.__version=We.version,H.onUpdate&&H.onUpdate(H)}te.__version=H.version}function Me(te,H,Ie,Ge,We,Ve){const dt=a.convert(Ie.format,Ie.colorSpace),it=a.convert(Ie.type),ft=L(Ie.internalFormat,dt,it,Ie.colorSpace),se=n.get(H),Ee=n.get(Ie);if(Ee.__renderTarget=H,!se.__hasExternalTextures){const Ye=Math.max(1,H.width>>Ve),Je=Math.max(1,H.height>>Ve);We===s.TEXTURE_3D||We===s.TEXTURE_2D_ARRAY?t.texImage3D(We,Ve,ft,Ye,Je,H.depth,0,dt,it,null):t.texImage2D(We,Ve,ft,Ye,Je,0,dt,it,null)}t.bindFramebuffer(s.FRAMEBUFFER,te),$e(H)?l.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,Ge,We,Ee.__webglTexture,0,Fe(H)):(We===s.TEXTURE_2D||We>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&We<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,Ge,We,Ee.__webglTexture,Ve),t.bindFramebuffer(s.FRAMEBUFFER,null)}function Ne(te,H,Ie){if(s.bindRenderbuffer(s.RENDERBUFFER,te),H.depthBuffer){const Ge=H.depthTexture,We=Ge&&Ge.isDepthTexture?Ge.type:null,Ve=F(H.stencilBuffer,We),dt=H.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,it=Fe(H);$e(H)?l.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,it,Ve,H.width,H.height):Ie?s.renderbufferStorageMultisample(s.RENDERBUFFER,it,Ve,H.width,H.height):s.renderbufferStorage(s.RENDERBUFFER,Ve,H.width,H.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,dt,s.RENDERBUFFER,te)}else{const Ge=H.textures;for(let We=0;We<Ge.length;We++){const Ve=Ge[We],dt=a.convert(Ve.format,Ve.colorSpace),it=a.convert(Ve.type),ft=L(Ve.internalFormat,dt,it,Ve.colorSpace),se=Fe(H);Ie&&$e(H)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,se,ft,H.width,H.height):$e(H)?l.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,se,ft,H.width,H.height):s.renderbufferStorage(s.RENDERBUFFER,ft,H.width,H.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Pe(te,H){if(H&&H.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,te),!(H.depthTexture&&H.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Ge=n.get(H.depthTexture);Ge.__renderTarget=H,(!Ge.__webglTexture||H.depthTexture.image.width!==H.width||H.depthTexture.image.height!==H.height)&&(H.depthTexture.image.width=H.width,H.depthTexture.image.height=H.height,H.depthTexture.needsUpdate=!0),pe(H.depthTexture,0);const We=Ge.__webglTexture,Ve=Fe(H);if(H.depthTexture.format===DepthFormat)$e(H)?l.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,We,0,Ve):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,We,0);else if(H.depthTexture.format===DepthStencilFormat)$e(H)?l.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,We,0,Ve):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,We,0);else throw new Error("Unknown depthTexture format")}function nt(te){const H=n.get(te),Ie=te.isWebGLCubeRenderTarget===!0;if(H.__boundDepthTexture!==te.depthTexture){const Ge=te.depthTexture;if(H.__depthDisposeCallback&&H.__depthDisposeCallback(),Ge){const We=()=>{delete H.__boundDepthTexture,delete H.__depthDisposeCallback,Ge.removeEventListener("dispose",We)};Ge.addEventListener("dispose",We),H.__depthDisposeCallback=We}H.__boundDepthTexture=Ge}if(te.depthTexture&&!H.__autoAllocateDepthBuffer){if(Ie)throw new Error("target.depthTexture not supported in Cube render targets");const Ge=te.texture.mipmaps;Ge&&Ge.length>0?Pe(H.__webglFramebuffer[0],te):Pe(H.__webglFramebuffer,te)}else if(Ie){H.__webglDepthbuffer=[];for(let Ge=0;Ge<6;Ge++)if(t.bindFramebuffer(s.FRAMEBUFFER,H.__webglFramebuffer[Ge]),H.__webglDepthbuffer[Ge]===void 0)H.__webglDepthbuffer[Ge]=s.createRenderbuffer(),Ne(H.__webglDepthbuffer[Ge],te,!1);else{const We=te.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ve=H.__webglDepthbuffer[Ge];s.bindRenderbuffer(s.RENDERBUFFER,Ve),s.framebufferRenderbuffer(s.FRAMEBUFFER,We,s.RENDERBUFFER,Ve)}}else{const Ge=te.texture.mipmaps;if(Ge&&Ge.length>0?t.bindFramebuffer(s.FRAMEBUFFER,H.__webglFramebuffer[0]):t.bindFramebuffer(s.FRAMEBUFFER,H.__webglFramebuffer),H.__webglDepthbuffer===void 0)H.__webglDepthbuffer=s.createRenderbuffer(),Ne(H.__webglDepthbuffer,te,!1);else{const We=te.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ve=H.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,Ve),s.framebufferRenderbuffer(s.FRAMEBUFFER,We,s.RENDERBUFFER,Ve)}}t.bindFramebuffer(s.FRAMEBUFFER,null)}function ie(te,H,Ie){const Ge=n.get(te);H!==void 0&&Me(Ge.__webglFramebuffer,te,te.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),Ie!==void 0&&nt(te)}function oe(te){const H=te.texture,Ie=n.get(te),Ge=n.get(H);te.addEventListener("dispose",Q);const We=te.textures,Ve=te.isWebGLCubeRenderTarget===!0,dt=We.length>1;if(dt||(Ge.__webglTexture===void 0&&(Ge.__webglTexture=s.createTexture()),Ge.__version=H.version,r.memory.textures++),Ve){Ie.__webglFramebuffer=[];for(let it=0;it<6;it++)if(H.mipmaps&&H.mipmaps.length>0){Ie.__webglFramebuffer[it]=[];for(let ft=0;ft<H.mipmaps.length;ft++)Ie.__webglFramebuffer[it][ft]=s.createFramebuffer()}else Ie.__webglFramebuffer[it]=s.createFramebuffer()}else{if(H.mipmaps&&H.mipmaps.length>0){Ie.__webglFramebuffer=[];for(let it=0;it<H.mipmaps.length;it++)Ie.__webglFramebuffer[it]=s.createFramebuffer()}else Ie.__webglFramebuffer=s.createFramebuffer();if(dt)for(let it=0,ft=We.length;it<ft;it++){const se=n.get(We[it]);se.__webglTexture===void 0&&(se.__webglTexture=s.createTexture(),r.memory.textures++)}if(te.samples>0&&$e(te)===!1){Ie.__webglMultisampledFramebuffer=s.createFramebuffer(),Ie.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,Ie.__webglMultisampledFramebuffer);for(let it=0;it<We.length;it++){const ft=We[it];Ie.__webglColorRenderbuffer[it]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,Ie.__webglColorRenderbuffer[it]);const se=a.convert(ft.format,ft.colorSpace),Ee=a.convert(ft.type),Ye=L(ft.internalFormat,se,Ee,ft.colorSpace,te.isXRRenderTarget===!0),Je=Fe(te);s.renderbufferStorageMultisample(s.RENDERBUFFER,Je,Ye,te.width,te.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+it,s.RENDERBUFFER,Ie.__webglColorRenderbuffer[it])}s.bindRenderbuffer(s.RENDERBUFFER,null),te.depthBuffer&&(Ie.__webglDepthRenderbuffer=s.createRenderbuffer(),Ne(Ie.__webglDepthRenderbuffer,te,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(Ve){t.bindTexture(s.TEXTURE_CUBE_MAP,Ge.__webglTexture),ve(s.TEXTURE_CUBE_MAP,H);for(let it=0;it<6;it++)if(H.mipmaps&&H.mipmaps.length>0)for(let ft=0;ft<H.mipmaps.length;ft++)Me(Ie.__webglFramebuffer[it][ft],te,H,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+it,ft);else Me(Ie.__webglFramebuffer[it],te,H,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+it,0);I(H)&&C(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(dt){for(let it=0,ft=We.length;it<ft;it++){const se=We[it],Ee=n.get(se);t.bindTexture(s.TEXTURE_2D,Ee.__webglTexture),ve(s.TEXTURE_2D,se),Me(Ie.__webglFramebuffer,te,se,s.COLOR_ATTACHMENT0+it,s.TEXTURE_2D,0),I(se)&&C(s.TEXTURE_2D)}t.unbindTexture()}else{let it=s.TEXTURE_2D;if((te.isWebGL3DRenderTarget||te.isWebGLArrayRenderTarget)&&(it=te.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(it,Ge.__webglTexture),ve(it,H),H.mipmaps&&H.mipmaps.length>0)for(let ft=0;ft<H.mipmaps.length;ft++)Me(Ie.__webglFramebuffer[ft],te,H,s.COLOR_ATTACHMENT0,it,ft);else Me(Ie.__webglFramebuffer,te,H,s.COLOR_ATTACHMENT0,it,0);I(H)&&C(it),t.unbindTexture()}te.depthBuffer&&nt(te)}function $(te){const H=te.textures;for(let Ie=0,Ge=H.length;Ie<Ge;Ie++){const We=H[Ie];if(I(We)){const Ve=R(te),dt=n.get(We).__webglTexture;t.bindTexture(Ve,dt),C(Ve),t.unbindTexture()}}}const Se=[],Be=[];function we(te){if(te.samples>0){if($e(te)===!1){const H=te.textures,Ie=te.width,Ge=te.height;let We=s.COLOR_BUFFER_BIT;const Ve=te.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,dt=n.get(te),it=H.length>1;if(it)for(let se=0;se<H.length;se++)t.bindFramebuffer(s.FRAMEBUFFER,dt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+se,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,dt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+se,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,dt.__webglMultisampledFramebuffer);const ft=te.texture.mipmaps;ft&&ft.length>0?t.bindFramebuffer(s.DRAW_FRAMEBUFFER,dt.__webglFramebuffer[0]):t.bindFramebuffer(s.DRAW_FRAMEBUFFER,dt.__webglFramebuffer);for(let se=0;se<H.length;se++){if(te.resolveDepthBuffer&&(te.depthBuffer&&(We|=s.DEPTH_BUFFER_BIT),te.stencilBuffer&&te.resolveStencilBuffer&&(We|=s.STENCIL_BUFFER_BIT)),it){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,dt.__webglColorRenderbuffer[se]);const Ee=n.get(H[se]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Ee,0)}s.blitFramebuffer(0,0,Ie,Ge,0,0,Ie,Ge,We,s.NEAREST),c===!0&&(Se.length=0,Be.length=0,Se.push(s.COLOR_ATTACHMENT0+se),te.depthBuffer&&te.resolveDepthBuffer===!1&&(Se.push(Ve),Be.push(Ve),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,Be)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Se))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),it)for(let se=0;se<H.length;se++){t.bindFramebuffer(s.FRAMEBUFFER,dt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+se,s.RENDERBUFFER,dt.__webglColorRenderbuffer[se]);const Ee=n.get(H[se]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,dt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+se,s.TEXTURE_2D,Ee,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,dt.__webglMultisampledFramebuffer)}else if(te.depthBuffer&&te.resolveDepthBuffer===!1&&c){const H=te.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[H])}}}function Fe(te){return Math.min(o.maxSamples,te.samples)}function $e(te){const H=n.get(te);return te.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&H.__useRenderToTexture!==!1}function ze(te){const H=r.render.frame;d.get(te)!==H&&(d.set(te,H),te.update())}function qe(te,H){const Ie=te.colorSpace,Ge=te.format,We=te.type;return te.isCompressedTexture===!0||te.isVideoTexture===!0||Ie!==LinearSRGBColorSpace&&Ie!==NoColorSpace&&(ColorManagement.getTransfer(Ie)===SRGBTransfer?(Ge!==RGBAFormat||We!==UnsignedByteType)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Ie)),H}function ut(te){return typeof HTMLImageElement<"u"&&te instanceof HTMLImageElement?(u.width=te.naturalWidth||te.width,u.height=te.naturalHeight||te.height):typeof VideoFrame<"u"&&te instanceof VideoFrame?(u.width=te.displayWidth,u.height=te.displayHeight):(u.width=te.width,u.height=te.height),u}this.allocateTextureUnit=ne,this.resetTextureUnits=ce,this.setTexture2D=pe,this.setTexture2DArray=fe,this.setTexture3D=ee,this.setTextureCube=J,this.rebindTextures=ie,this.setupRenderTarget=oe,this.updateRenderTargetMipmap=$,this.updateMultisampleRenderTarget=we,this.setupDepthRenderbuffer=nt,this.setupFrameBufferTexture=Me,this.useMultisampledRTT=$e}function WebGLUtils(s,e){function t(n,o=NoColorSpace){let a;const r=ColorManagement.getTransfer(o);if(n===UnsignedByteType)return s.UNSIGNED_BYTE;if(n===UnsignedShort4444Type)return s.UNSIGNED_SHORT_4_4_4_4;if(n===UnsignedShort5551Type)return s.UNSIGNED_SHORT_5_5_5_1;if(n===UnsignedInt5999Type)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===ByteType)return s.BYTE;if(n===ShortType)return s.SHORT;if(n===UnsignedShortType)return s.UNSIGNED_SHORT;if(n===IntType)return s.INT;if(n===UnsignedIntType)return s.UNSIGNED_INT;if(n===FloatType)return s.FLOAT;if(n===HalfFloatType)return s.HALF_FLOAT;if(n===AlphaFormat)return s.ALPHA;if(n===RGBFormat)return s.RGB;if(n===RGBAFormat)return s.RGBA;if(n===DepthFormat)return s.DEPTH_COMPONENT;if(n===DepthStencilFormat)return s.DEPTH_STENCIL;if(n===RedFormat)return s.RED;if(n===RedIntegerFormat)return s.RED_INTEGER;if(n===RGFormat)return s.RG;if(n===RGIntegerFormat)return s.RG_INTEGER;if(n===RGBAIntegerFormat)return s.RGBA_INTEGER;if(n===RGB_S3TC_DXT1_Format||n===RGBA_S3TC_DXT1_Format||n===RGBA_S3TC_DXT3_Format||n===RGBA_S3TC_DXT5_Format)if(r===SRGBTransfer)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(n===RGB_S3TC_DXT1_Format)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===RGBA_S3TC_DXT1_Format)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===RGBA_S3TC_DXT3_Format)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===RGBA_S3TC_DXT5_Format)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(n===RGB_S3TC_DXT1_Format)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===RGBA_S3TC_DXT1_Format)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===RGBA_S3TC_DXT3_Format)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===RGBA_S3TC_DXT5_Format)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===RGB_PVRTC_4BPPV1_Format||n===RGB_PVRTC_2BPPV1_Format||n===RGBA_PVRTC_4BPPV1_Format||n===RGBA_PVRTC_2BPPV1_Format)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(n===RGB_PVRTC_4BPPV1_Format)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===RGB_PVRTC_2BPPV1_Format)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===RGBA_PVRTC_4BPPV1_Format)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===RGBA_PVRTC_2BPPV1_Format)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===RGB_ETC1_Format||n===RGB_ETC2_Format||n===RGBA_ETC2_EAC_Format)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(n===RGB_ETC1_Format||n===RGB_ETC2_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(n===RGBA_ETC2_EAC_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===RGBA_ASTC_4x4_Format||n===RGBA_ASTC_5x4_Format||n===RGBA_ASTC_5x5_Format||n===RGBA_ASTC_6x5_Format||n===RGBA_ASTC_6x6_Format||n===RGBA_ASTC_8x5_Format||n===RGBA_ASTC_8x6_Format||n===RGBA_ASTC_8x8_Format||n===RGBA_ASTC_10x5_Format||n===RGBA_ASTC_10x6_Format||n===RGBA_ASTC_10x8_Format||n===RGBA_ASTC_10x10_Format||n===RGBA_ASTC_12x10_Format||n===RGBA_ASTC_12x12_Format)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(n===RGBA_ASTC_4x4_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===RGBA_ASTC_5x4_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===RGBA_ASTC_5x5_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===RGBA_ASTC_6x5_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===RGBA_ASTC_6x6_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===RGBA_ASTC_8x5_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===RGBA_ASTC_8x6_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===RGBA_ASTC_8x8_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===RGBA_ASTC_10x5_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===RGBA_ASTC_10x6_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===RGBA_ASTC_10x8_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===RGBA_ASTC_10x10_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===RGBA_ASTC_12x10_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===RGBA_ASTC_12x12_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===RGBA_BPTC_Format||n===RGB_BPTC_SIGNED_Format||n===RGB_BPTC_UNSIGNED_Format)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(n===RGBA_BPTC_Format)return r===SRGBTransfer?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===RGB_BPTC_SIGNED_Format)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===RGB_BPTC_UNSIGNED_Format)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===RED_RGTC1_Format||n===SIGNED_RED_RGTC1_Format||n===RED_GREEN_RGTC2_Format||n===SIGNED_RED_GREEN_RGTC2_Format)if(a=e.get("EXT_texture_compression_rgtc"),a!==null){if(n===RGBA_BPTC_Format)return a.COMPRESSED_RED_RGTC1_EXT;if(n===SIGNED_RED_RGTC1_Format)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===RED_GREEN_RGTC2_Format)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===SIGNED_RED_GREEN_RGTC2_Format)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===UnsignedInt248Type?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:t}}const _occlusion_vertex=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,_occlusion_fragment=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class WebXRDepthSensing{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const o=new Texture,a=e.properties.get(o);a.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=o}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new ShaderMaterial({vertexShader:_occlusion_vertex,fragmentShader:_occlusion_fragment,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Mesh(new PlaneGeometry(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class WebXRManager extends EventDispatcher{constructor(e,t){super();const n=this;let o=null,a=1,r=null,l="local-floor",c=1,u=null,d=null,f=null,g=null,_=null,b=null;const B=new WebXRDepthSensing,I=t.getContextAttributes();let C=null,R=null;const L=[],F=[],N=new Vector2;let k=null;const Q=new PerspectiveCamera;Q.viewport=new Vector4;const z=new PerspectiveCamera;z.viewport=new Vector4;const G=[Q,z],O=new ArrayCamera;let q=null,ce=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(le){let _e=L[le];return _e===void 0&&(_e=new WebXRController,L[le]=_e),_e.getTargetRaySpace()},this.getControllerGrip=function(le){let _e=L[le];return _e===void 0&&(_e=new WebXRController,L[le]=_e),_e.getGripSpace()},this.getHand=function(le){let _e=L[le];return _e===void 0&&(_e=new WebXRController,L[le]=_e),_e.getHandSpace()};function ne(le){const _e=F.indexOf(le.inputSource);if(_e===-1)return;const De=L[_e];De!==void 0&&(De.update(le.inputSource,le.frame,u||r),De.dispatchEvent({type:le.type,data:le.inputSource}))}function ue(){o.removeEventListener("select",ne),o.removeEventListener("selectstart",ne),o.removeEventListener("selectend",ne),o.removeEventListener("squeeze",ne),o.removeEventListener("squeezestart",ne),o.removeEventListener("squeezeend",ne),o.removeEventListener("end",ue),o.removeEventListener("inputsourceschange",pe);for(let le=0;le<L.length;le++){const _e=F[le];_e!==null&&(F[le]=null,L[le].disconnect(_e))}q=null,ce=null,B.reset(),e.setRenderTarget(C),_=null,g=null,f=null,o=null,R=null,he.stop(),n.isPresenting=!1,e.setPixelRatio(k),e.setSize(N.width,N.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(le){a=le,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(le){l=le,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||r},this.setReferenceSpace=function(le){u=le},this.getBaseLayer=function(){return g!==null?g:_},this.getBinding=function(){return f},this.getFrame=function(){return b},this.getSession=function(){return o},this.setSession=async function(le){if(o=le,o!==null){if(C=e.getRenderTarget(),o.addEventListener("select",ne),o.addEventListener("selectstart",ne),o.addEventListener("selectend",ne),o.addEventListener("squeeze",ne),o.addEventListener("squeezestart",ne),o.addEventListener("squeezeend",ne),o.addEventListener("end",ue),o.addEventListener("inputsourceschange",pe),I.xrCompatible!==!0&&await t.makeXRCompatible(),k=e.getPixelRatio(),e.getSize(N),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let De=null,de=null,Me=null;I.depth&&(Me=I.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,De=I.stencil?DepthStencilFormat:DepthFormat,de=I.stencil?UnsignedInt248Type:UnsignedIntType);const Ne={colorFormat:t.RGBA8,depthFormat:Me,scaleFactor:a};f=new XRWebGLBinding(o,t),g=f.createProjectionLayer(Ne),o.updateRenderState({layers:[g]}),e.setPixelRatio(1),e.setSize(g.textureWidth,g.textureHeight,!1),R=new WebGLRenderTarget(g.textureWidth,g.textureHeight,{format:RGBAFormat,type:UnsignedByteType,depthTexture:new DepthTexture(g.textureWidth,g.textureHeight,de,void 0,void 0,void 0,void 0,void 0,void 0,De),stencilBuffer:I.stencil,colorSpace:e.outputColorSpace,samples:I.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const De={antialias:I.antialias,alpha:!0,depth:I.depth,stencil:I.stencil,framebufferScaleFactor:a};_=new XRWebGLLayer(o,t,De),o.updateRenderState({baseLayer:_}),e.setPixelRatio(1),e.setSize(_.framebufferWidth,_.framebufferHeight,!1),R=new WebGLRenderTarget(_.framebufferWidth,_.framebufferHeight,{format:RGBAFormat,type:UnsignedByteType,colorSpace:e.outputColorSpace,stencilBuffer:I.stencil,resolveDepthBuffer:_.ignoreDepthValues===!1,resolveStencilBuffer:_.ignoreDepthValues===!1})}R.isXRRenderTarget=!0,this.setFoveation(c),u=null,r=await o.requestReferenceSpace(l),he.setContext(o),he.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(o!==null)return o.environmentBlendMode},this.getDepthTexture=function(){return B.getDepthTexture()};function pe(le){for(let _e=0;_e<le.removed.length;_e++){const De=le.removed[_e],de=F.indexOf(De);de>=0&&(F[de]=null,L[de].disconnect(De))}for(let _e=0;_e<le.added.length;_e++){const De=le.added[_e];let de=F.indexOf(De);if(de===-1){for(let Ne=0;Ne<L.length;Ne++)if(Ne>=F.length){F.push(De),de=Ne;break}else if(F[Ne]===null){F[Ne]=De,de=Ne;break}if(de===-1)break}const Me=L[de];Me&&Me.connect(De)}}const fe=new Vector3,ee=new Vector3;function J(le,_e,De){fe.setFromMatrixPosition(_e.matrixWorld),ee.setFromMatrixPosition(De.matrixWorld);const de=fe.distanceTo(ee),Me=_e.projectionMatrix.elements,Ne=De.projectionMatrix.elements,Pe=Me[14]/(Me[10]-1),nt=Me[14]/(Me[10]+1),ie=(Me[9]+1)/Me[5],oe=(Me[9]-1)/Me[5],$=(Me[8]-1)/Me[0],Se=(Ne[8]+1)/Ne[0],Be=Pe*$,we=Pe*Se,Fe=de/(-$+Se),$e=Fe*-$;if(_e.matrixWorld.decompose(le.position,le.quaternion,le.scale),le.translateX($e),le.translateZ(Fe),le.matrixWorld.compose(le.position,le.quaternion,le.scale),le.matrixWorldInverse.copy(le.matrixWorld).invert(),Me[10]===-1)le.projectionMatrix.copy(_e.projectionMatrix),le.projectionMatrixInverse.copy(_e.projectionMatrixInverse);else{const ze=Pe+Fe,qe=nt+Fe,ut=Be-$e,te=we+(de-$e),H=ie*nt/qe*ze,Ie=oe*nt/qe*ze;le.projectionMatrix.makePerspective(ut,te,H,Ie,ze,qe),le.projectionMatrixInverse.copy(le.projectionMatrix).invert()}}function ye(le,_e){_e===null?le.matrixWorld.copy(le.matrix):le.matrixWorld.multiplyMatrices(_e.matrixWorld,le.matrix),le.matrixWorldInverse.copy(le.matrixWorld).invert()}this.updateCamera=function(le){if(o===null)return;let _e=le.near,De=le.far;B.texture!==null&&(B.depthNear>0&&(_e=B.depthNear),B.depthFar>0&&(De=B.depthFar)),O.near=z.near=Q.near=_e,O.far=z.far=Q.far=De,(q!==O.near||ce!==O.far)&&(o.updateRenderState({depthNear:O.near,depthFar:O.far}),q=O.near,ce=O.far),Q.layers.mask=le.layers.mask|2,z.layers.mask=le.layers.mask|4,O.layers.mask=Q.layers.mask|z.layers.mask;const de=le.parent,Me=O.cameras;ye(O,de);for(let Ne=0;Ne<Me.length;Ne++)ye(Me[Ne],de);Me.length===2?J(O,Q,z):O.projectionMatrix.copy(Q.projectionMatrix),Te(le,O,de)};function Te(le,_e,De){De===null?le.matrix.copy(_e.matrixWorld):(le.matrix.copy(De.matrixWorld),le.matrix.invert(),le.matrix.multiply(_e.matrixWorld)),le.matrix.decompose(le.position,le.quaternion,le.scale),le.updateMatrixWorld(!0),le.projectionMatrix.copy(_e.projectionMatrix),le.projectionMatrixInverse.copy(_e.projectionMatrixInverse),le.isPerspectiveCamera&&(le.fov=RAD2DEG*2*Math.atan(1/le.projectionMatrix.elements[5]),le.zoom=1)}this.getCamera=function(){return O},this.getFoveation=function(){if(!(g===null&&_===null))return c},this.setFoveation=function(le){c=le,g!==null&&(g.fixedFoveation=le),_!==null&&_.fixedFoveation!==void 0&&(_.fixedFoveation=le)},this.hasDepthSensing=function(){return B.texture!==null},this.getDepthSensingMesh=function(){return B.getMesh(O)};let xe=null;function ve(le,_e){if(d=_e.getViewerPose(u||r),b=_e,d!==null){const De=d.views;_!==null&&(e.setRenderTargetFramebuffer(R,_.framebuffer),e.setRenderTarget(R));let de=!1;De.length!==O.cameras.length&&(O.cameras.length=0,de=!0);for(let Pe=0;Pe<De.length;Pe++){const nt=De[Pe];let ie=null;if(_!==null)ie=_.getViewport(nt);else{const $=f.getViewSubImage(g,nt);ie=$.viewport,Pe===0&&(e.setRenderTargetTextures(R,$.colorTexture,$.depthStencilTexture),e.setRenderTarget(R))}let oe=G[Pe];oe===void 0&&(oe=new PerspectiveCamera,oe.layers.enable(Pe),oe.viewport=new Vector4,G[Pe]=oe),oe.matrix.fromArray(nt.transform.matrix),oe.matrix.decompose(oe.position,oe.quaternion,oe.scale),oe.projectionMatrix.fromArray(nt.projectionMatrix),oe.projectionMatrixInverse.copy(oe.projectionMatrix).invert(),oe.viewport.set(ie.x,ie.y,ie.width,ie.height),Pe===0&&(O.matrix.copy(oe.matrix),O.matrix.decompose(O.position,O.quaternion,O.scale)),de===!0&&O.cameras.push(oe)}const Me=o.enabledFeatures;if(Me&&Me.includes("depth-sensing")&&o.depthUsage=="gpu-optimized"&&f){const Pe=f.getDepthInformation(De[0]);Pe&&Pe.isValid&&Pe.texture&&B.init(e,Pe,o.renderState)}}for(let De=0;De<L.length;De++){const de=F[De],Me=L[De];de!==null&&Me!==void 0&&Me.update(de,_e,u||r)}xe&&xe(le,_e),_e.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:_e}),b=null}const he=new WebGLAnimation;he.setAnimationLoop(ve),this.setAnimationLoop=function(le){xe=le},this.dispose=function(){}}}const _e1=new Euler,_m1=new Matrix4;function WebGLMaterials(s,e){function t(I,C){I.matrixAutoUpdate===!0&&I.updateMatrix(),C.value.copy(I.matrix)}function n(I,C){C.color.getRGB(I.fogColor.value,getUnlitUniformColorSpace(s)),C.isFog?(I.fogNear.value=C.near,I.fogFar.value=C.far):C.isFogExp2&&(I.fogDensity.value=C.density)}function o(I,C,R,L,F){C.isMeshBasicMaterial||C.isMeshLambertMaterial?a(I,C):C.isMeshToonMaterial?(a(I,C),f(I,C)):C.isMeshPhongMaterial?(a(I,C),d(I,C)):C.isMeshStandardMaterial?(a(I,C),g(I,C),C.isMeshPhysicalMaterial&&_(I,C,F)):C.isMeshMatcapMaterial?(a(I,C),b(I,C)):C.isMeshDepthMaterial?a(I,C):C.isMeshDistanceMaterial?(a(I,C),B(I,C)):C.isMeshNormalMaterial?a(I,C):C.isLineBasicMaterial?(r(I,C),C.isLineDashedMaterial&&l(I,C)):C.isPointsMaterial?c(I,C,R,L):C.isSpriteMaterial?u(I,C):C.isShadowMaterial?(I.color.value.copy(C.color),I.opacity.value=C.opacity):C.isShaderMaterial&&(C.uniformsNeedUpdate=!1)}function a(I,C){I.opacity.value=C.opacity,C.color&&I.diffuse.value.copy(C.color),C.emissive&&I.emissive.value.copy(C.emissive).multiplyScalar(C.emissiveIntensity),C.map&&(I.map.value=C.map,t(C.map,I.mapTransform)),C.alphaMap&&(I.alphaMap.value=C.alphaMap,t(C.alphaMap,I.alphaMapTransform)),C.bumpMap&&(I.bumpMap.value=C.bumpMap,t(C.bumpMap,I.bumpMapTransform),I.bumpScale.value=C.bumpScale,C.side===BackSide&&(I.bumpScale.value*=-1)),C.normalMap&&(I.normalMap.value=C.normalMap,t(C.normalMap,I.normalMapTransform),I.normalScale.value.copy(C.normalScale),C.side===BackSide&&I.normalScale.value.negate()),C.displacementMap&&(I.displacementMap.value=C.displacementMap,t(C.displacementMap,I.displacementMapTransform),I.displacementScale.value=C.displacementScale,I.displacementBias.value=C.displacementBias),C.emissiveMap&&(I.emissiveMap.value=C.emissiveMap,t(C.emissiveMap,I.emissiveMapTransform)),C.specularMap&&(I.specularMap.value=C.specularMap,t(C.specularMap,I.specularMapTransform)),C.alphaTest>0&&(I.alphaTest.value=C.alphaTest);const R=e.get(C),L=R.envMap,F=R.envMapRotation;L&&(I.envMap.value=L,_e1.copy(F),_e1.x*=-1,_e1.y*=-1,_e1.z*=-1,L.isCubeTexture&&L.isRenderTargetTexture===!1&&(_e1.y*=-1,_e1.z*=-1),I.envMapRotation.value.setFromMatrix4(_m1.makeRotationFromEuler(_e1)),I.flipEnvMap.value=L.isCubeTexture&&L.isRenderTargetTexture===!1?-1:1,I.reflectivity.value=C.reflectivity,I.ior.value=C.ior,I.refractionRatio.value=C.refractionRatio),C.lightMap&&(I.lightMap.value=C.lightMap,I.lightMapIntensity.value=C.lightMapIntensity,t(C.lightMap,I.lightMapTransform)),C.aoMap&&(I.aoMap.value=C.aoMap,I.aoMapIntensity.value=C.aoMapIntensity,t(C.aoMap,I.aoMapTransform))}function r(I,C){I.diffuse.value.copy(C.color),I.opacity.value=C.opacity,C.map&&(I.map.value=C.map,t(C.map,I.mapTransform))}function l(I,C){I.dashSize.value=C.dashSize,I.totalSize.value=C.dashSize+C.gapSize,I.scale.value=C.scale}function c(I,C,R,L){I.diffuse.value.copy(C.color),I.opacity.value=C.opacity,I.size.value=C.size*R,I.scale.value=L*.5,C.map&&(I.map.value=C.map,t(C.map,I.uvTransform)),C.alphaMap&&(I.alphaMap.value=C.alphaMap,t(C.alphaMap,I.alphaMapTransform)),C.alphaTest>0&&(I.alphaTest.value=C.alphaTest)}function u(I,C){I.diffuse.value.copy(C.color),I.opacity.value=C.opacity,I.rotation.value=C.rotation,C.map&&(I.map.value=C.map,t(C.map,I.mapTransform)),C.alphaMap&&(I.alphaMap.value=C.alphaMap,t(C.alphaMap,I.alphaMapTransform)),C.alphaTest>0&&(I.alphaTest.value=C.alphaTest)}function d(I,C){I.specular.value.copy(C.specular),I.shininess.value=Math.max(C.shininess,1e-4)}function f(I,C){C.gradientMap&&(I.gradientMap.value=C.gradientMap)}function g(I,C){I.metalness.value=C.metalness,C.metalnessMap&&(I.metalnessMap.value=C.metalnessMap,t(C.metalnessMap,I.metalnessMapTransform)),I.roughness.value=C.roughness,C.roughnessMap&&(I.roughnessMap.value=C.roughnessMap,t(C.roughnessMap,I.roughnessMapTransform)),C.envMap&&(I.envMapIntensity.value=C.envMapIntensity)}function _(I,C,R){I.ior.value=C.ior,C.sheen>0&&(I.sheenColor.value.copy(C.sheenColor).multiplyScalar(C.sheen),I.sheenRoughness.value=C.sheenRoughness,C.sheenColorMap&&(I.sheenColorMap.value=C.sheenColorMap,t(C.sheenColorMap,I.sheenColorMapTransform)),C.sheenRoughnessMap&&(I.sheenRoughnessMap.value=C.sheenRoughnessMap,t(C.sheenRoughnessMap,I.sheenRoughnessMapTransform))),C.clearcoat>0&&(I.clearcoat.value=C.clearcoat,I.clearcoatRoughness.value=C.clearcoatRoughness,C.clearcoatMap&&(I.clearcoatMap.value=C.clearcoatMap,t(C.clearcoatMap,I.clearcoatMapTransform)),C.clearcoatRoughnessMap&&(I.clearcoatRoughnessMap.value=C.clearcoatRoughnessMap,t(C.clearcoatRoughnessMap,I.clearcoatRoughnessMapTransform)),C.clearcoatNormalMap&&(I.clearcoatNormalMap.value=C.clearcoatNormalMap,t(C.clearcoatNormalMap,I.clearcoatNormalMapTransform),I.clearcoatNormalScale.value.copy(C.clearcoatNormalScale),C.side===BackSide&&I.clearcoatNormalScale.value.negate())),C.dispersion>0&&(I.dispersion.value=C.dispersion),C.iridescence>0&&(I.iridescence.value=C.iridescence,I.iridescenceIOR.value=C.iridescenceIOR,I.iridescenceThicknessMinimum.value=C.iridescenceThicknessRange[0],I.iridescenceThicknessMaximum.value=C.iridescenceThicknessRange[1],C.iridescenceMap&&(I.iridescenceMap.value=C.iridescenceMap,t(C.iridescenceMap,I.iridescenceMapTransform)),C.iridescenceThicknessMap&&(I.iridescenceThicknessMap.value=C.iridescenceThicknessMap,t(C.iridescenceThicknessMap,I.iridescenceThicknessMapTransform))),C.transmission>0&&(I.transmission.value=C.transmission,I.transmissionSamplerMap.value=R.texture,I.transmissionSamplerSize.value.set(R.width,R.height),C.transmissionMap&&(I.transmissionMap.value=C.transmissionMap,t(C.transmissionMap,I.transmissionMapTransform)),I.thickness.value=C.thickness,C.thicknessMap&&(I.thicknessMap.value=C.thicknessMap,t(C.thicknessMap,I.thicknessMapTransform)),I.attenuationDistance.value=C.attenuationDistance,I.attenuationColor.value.copy(C.attenuationColor)),C.anisotropy>0&&(I.anisotropyVector.value.set(C.anisotropy*Math.cos(C.anisotropyRotation),C.anisotropy*Math.sin(C.anisotropyRotation)),C.anisotropyMap&&(I.anisotropyMap.value=C.anisotropyMap,t(C.anisotropyMap,I.anisotropyMapTransform))),I.specularIntensity.value=C.specularIntensity,I.specularColor.value.copy(C.specularColor),C.specularColorMap&&(I.specularColorMap.value=C.specularColorMap,t(C.specularColorMap,I.specularColorMapTransform)),C.specularIntensityMap&&(I.specularIntensityMap.value=C.specularIntensityMap,t(C.specularIntensityMap,I.specularIntensityMapTransform))}function b(I,C){C.matcap&&(I.matcap.value=C.matcap)}function B(I,C){const R=e.get(C).light;I.referencePosition.value.setFromMatrixPosition(R.matrixWorld),I.nearDistance.value=R.shadow.camera.near,I.farDistance.value=R.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:o}}function WebGLUniformsGroups(s,e,t,n){let o={},a={},r=[];const l=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function c(R,L){const F=L.program;n.uniformBlockBinding(R,F)}function u(R,L){let F=o[R.id];F===void 0&&(b(R),F=d(R),o[R.id]=F,R.addEventListener("dispose",I));const N=L.program;n.updateUBOMapping(R,N);const k=e.render.frame;a[R.id]!==k&&(g(R),a[R.id]=k)}function d(R){const L=f();R.__bindingPointIndex=L;const F=s.createBuffer(),N=R.__size,k=R.usage;return s.bindBuffer(s.UNIFORM_BUFFER,F),s.bufferData(s.UNIFORM_BUFFER,N,k),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,L,F),F}function f(){for(let R=0;R<l;R++)if(r.indexOf(R)===-1)return r.push(R),R;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(R){const L=o[R.id],F=R.uniforms,N=R.__cache;s.bindBuffer(s.UNIFORM_BUFFER,L);for(let k=0,Q=F.length;k<Q;k++){const z=Array.isArray(F[k])?F[k]:[F[k]];for(let G=0,O=z.length;G<O;G++){const q=z[G];if(_(q,k,G,N)===!0){const ce=q.__offset,ne=Array.isArray(q.value)?q.value:[q.value];let ue=0;for(let pe=0;pe<ne.length;pe++){const fe=ne[pe],ee=B(fe);typeof fe=="number"||typeof fe=="boolean"?(q.__data[0]=fe,s.bufferSubData(s.UNIFORM_BUFFER,ce+ue,q.__data)):fe.isMatrix3?(q.__data[0]=fe.elements[0],q.__data[1]=fe.elements[1],q.__data[2]=fe.elements[2],q.__data[3]=0,q.__data[4]=fe.elements[3],q.__data[5]=fe.elements[4],q.__data[6]=fe.elements[5],q.__data[7]=0,q.__data[8]=fe.elements[6],q.__data[9]=fe.elements[7],q.__data[10]=fe.elements[8],q.__data[11]=0):(fe.toArray(q.__data,ue),ue+=ee.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,ce,q.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function _(R,L,F,N){const k=R.value,Q=L+"_"+F;if(N[Q]===void 0)return typeof k=="number"||typeof k=="boolean"?N[Q]=k:N[Q]=k.clone(),!0;{const z=N[Q];if(typeof k=="number"||typeof k=="boolean"){if(z!==k)return N[Q]=k,!0}else if(z.equals(k)===!1)return z.copy(k),!0}return!1}function b(R){const L=R.uniforms;let F=0;const N=16;for(let Q=0,z=L.length;Q<z;Q++){const G=Array.isArray(L[Q])?L[Q]:[L[Q]];for(let O=0,q=G.length;O<q;O++){const ce=G[O],ne=Array.isArray(ce.value)?ce.value:[ce.value];for(let ue=0,pe=ne.length;ue<pe;ue++){const fe=ne[ue],ee=B(fe),J=F%N,ye=J%ee.boundary,Te=J+ye;F+=ye,Te!==0&&N-Te<ee.storage&&(F+=N-Te),ce.__data=new Float32Array(ee.storage/Float32Array.BYTES_PER_ELEMENT),ce.__offset=F,F+=ee.storage}}}const k=F%N;return k>0&&(F+=N-k),R.__size=F,R.__cache={},this}function B(R){const L={boundary:0,storage:0};return typeof R=="number"||typeof R=="boolean"?(L.boundary=4,L.storage=4):R.isVector2?(L.boundary=8,L.storage=8):R.isVector3||R.isColor?(L.boundary=16,L.storage=12):R.isVector4?(L.boundary=16,L.storage=16):R.isMatrix3?(L.boundary=48,L.storage=48):R.isMatrix4?(L.boundary=64,L.storage=64):R.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",R),L}function I(R){const L=R.target;L.removeEventListener("dispose",I);const F=r.indexOf(L.__bindingPointIndex);r.splice(F,1),s.deleteBuffer(o[L.id]),delete o[L.id],delete a[L.id]}function C(){for(const R in o)s.deleteBuffer(o[R]);r=[],o={},a={}}return{bind:c,update:u,dispose:C}}class WebGLRenderer{constructor(e={}){const{canvas:t=createCanvasElement(),context:n=null,depth:o=!0,stencil:a=!1,alpha:r=!1,antialias:l=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:u=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:f=!1,reverseDepthBuffer:g=!1}=e;this.isWebGLRenderer=!0;let _;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");_=n.getContextAttributes().alpha}else _=r;const b=new Uint32Array(4),B=new Int32Array(4);let I=null,C=null;const R=[],L=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=NoToneMapping,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const F=this;let N=!1;this._outputColorSpace=SRGBColorSpace;let k=0,Q=0,z=null,G=-1,O=null;const q=new Vector4,ce=new Vector4;let ne=null;const ue=new Color(0);let pe=0,fe=t.width,ee=t.height,J=1,ye=null,Te=null;const xe=new Vector4(0,0,fe,ee),ve=new Vector4(0,0,fe,ee);let he=!1;const le=new Frustum;let _e=!1,De=!1;const de=new Matrix4,Me=new Matrix4,Ne=new Vector3,Pe=new Vector4,nt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ie=!1;function oe(){return z===null?J:1}let $=n;function Se(re,Le){return t.getContext(re,Le)}try{const re={alpha:!0,depth:o,stencil:a,antialias:l,premultipliedAlpha:c,preserveDrawingBuffer:u,powerPreference:d,failIfMajorPerformanceCaveat:f};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${REVISION}`),t.addEventListener("webglcontextlost",Re,!1),t.addEventListener("webglcontextrestored",Qe,!1),t.addEventListener("webglcontextcreationerror",Oe,!1),$===null){const Le="webgl2";if($=Se(Le,re),$===null)throw Se(Le)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(re){throw console.error("THREE.WebGLRenderer: "+re.message),re}let Be,we,Fe,$e,ze,qe,ut,te,H,Ie,Ge,We,Ve,dt,it,ft,se,Ee,Ye,Je,at,ot,Ct,K;function be(){Be=new WebGLExtensions$1($),Be.init(),ot=new WebGLUtils($,Be),we=new WebGLCapabilities$1($,Be,e,ot),Fe=new WebGLState($,Be),we.reverseDepthBuffer&&g&&Fe.buffers.depth.setReversed(!0),$e=new WebGLInfo($),ze=new WebGLProperties,qe=new WebGLTextures($,Be,Fe,ze,we,ot,$e),ut=new WebGLCubeMaps(F),te=new WebGLCubeUVMaps(F),H=new WebGLAttributes($),Ct=new WebGLBindingStates($,H),Ie=new WebGLGeometries($,H,$e,Ct),Ge=new WebGLObjects($,Ie,H,$e),Ye=new WebGLMorphtargets($,we,qe),ft=new WebGLClipping(ze),We=new WebGLPrograms(F,ut,te,Be,we,Ct,ft),Ve=new WebGLMaterials(F,ze),dt=new WebGLRenderLists,it=new WebGLRenderStates(Be),Ee=new WebGLBackground(F,ut,te,Fe,Ge,_,c),se=new WebGLShadowMap(F,Ge,we),K=new WebGLUniformsGroups($,$e,we,Fe),Je=new WebGLBufferRenderer($,Be,$e),at=new WebGLIndexedBufferRenderer($,Be,$e),$e.programs=We.programs,F.capabilities=we,F.extensions=Be,F.properties=ze,F.renderLists=dt,F.shadowMap=se,F.state=Fe,F.info=$e}be();const ge=new WebXRManager(F,$);this.xr=ge,this.getContext=function(){return $},this.getContextAttributes=function(){return $.getContextAttributes()},this.forceContextLoss=function(){const re=Be.get("WEBGL_lose_context");re&&re.loseContext()},this.forceContextRestore=function(){const re=Be.get("WEBGL_lose_context");re&&re.restoreContext()},this.getPixelRatio=function(){return J},this.setPixelRatio=function(re){re!==void 0&&(J=re,this.setSize(fe,ee,!1))},this.getSize=function(re){return re.set(fe,ee)},this.setSize=function(re,Le,Xe=!0){if(ge.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}fe=re,ee=Le,t.width=Math.floor(re*J),t.height=Math.floor(Le*J),Xe===!0&&(t.style.width=re+"px",t.style.height=Le+"px"),this.setViewport(0,0,re,Le)},this.getDrawingBufferSize=function(re){return re.set(fe*J,ee*J).floor()},this.setDrawingBufferSize=function(re,Le,Xe){fe=re,ee=Le,J=Xe,t.width=Math.floor(re*Xe),t.height=Math.floor(Le*Xe),this.setViewport(0,0,re,Le)},this.getCurrentViewport=function(re){return re.copy(q)},this.getViewport=function(re){return re.copy(xe)},this.setViewport=function(re,Le,Xe,Ke){re.isVector4?xe.set(re.x,re.y,re.z,re.w):xe.set(re,Le,Xe,Ke),Fe.viewport(q.copy(xe).multiplyScalar(J).round())},this.getScissor=function(re){return re.copy(ve)},this.setScissor=function(re,Le,Xe,Ke){re.isVector4?ve.set(re.x,re.y,re.z,re.w):ve.set(re,Le,Xe,Ke),Fe.scissor(ce.copy(ve).multiplyScalar(J).round())},this.getScissorTest=function(){return he},this.setScissorTest=function(re){Fe.setScissorTest(he=re)},this.setOpaqueSort=function(re){ye=re},this.setTransparentSort=function(re){Te=re},this.getClearColor=function(re){return re.copy(Ee.getClearColor())},this.setClearColor=function(){Ee.setClearColor(...arguments)},this.getClearAlpha=function(){return Ee.getClearAlpha()},this.setClearAlpha=function(){Ee.setClearAlpha(...arguments)},this.clear=function(re=!0,Le=!0,Xe=!0){let Ke=0;if(re){let Ue=!1;if(z!==null){const ht=z.texture.format;Ue=ht===RGBAIntegerFormat||ht===RGIntegerFormat||ht===RedIntegerFormat}if(Ue){const ht=z.texture.type,yt=ht===UnsignedByteType||ht===UnsignedIntType||ht===UnsignedShortType||ht===UnsignedInt248Type||ht===UnsignedShort4444Type||ht===UnsignedShort5551Type,Bt=Ee.getClearColor(),vt=Ee.getClearAlpha(),Lt=Bt.r,Pt=Bt.g,Mt=Bt.b;yt?(b[0]=Lt,b[1]=Pt,b[2]=Mt,b[3]=vt,$.clearBufferuiv($.COLOR,0,b)):(B[0]=Lt,B[1]=Pt,B[2]=Mt,B[3]=vt,$.clearBufferiv($.COLOR,0,B))}else Ke|=$.COLOR_BUFFER_BIT}Le&&(Ke|=$.DEPTH_BUFFER_BIT),Xe&&(Ke|=$.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),$.clear(Ke)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Re,!1),t.removeEventListener("webglcontextrestored",Qe,!1),t.removeEventListener("webglcontextcreationerror",Oe,!1),Ee.dispose(),dt.dispose(),it.dispose(),ze.dispose(),ut.dispose(),te.dispose(),Ge.dispose(),Ct.dispose(),K.dispose(),We.dispose(),ge.dispose(),ge.removeEventListener("sessionstart",Sn),ge.removeEventListener("sessionend",En),fn.stop()};function Re(re){re.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),N=!0}function Qe(){console.log("THREE.WebGLRenderer: Context Restored."),N=!1;const re=$e.autoReset,Le=se.enabled,Xe=se.autoUpdate,Ke=se.needsUpdate,Ue=se.type;be(),$e.autoReset=re,se.enabled=Le,se.autoUpdate=Xe,se.needsUpdate=Ke,se.type=Ue}function Oe(re){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",re.statusMessage)}function st(re){const Le=re.target;Le.removeEventListener("dispose",st),_t(Le)}function _t(re){Ft(re),ze.remove(re)}function Ft(re){const Le=ze.get(re).programs;Le!==void 0&&(Le.forEach(function(Xe){We.releaseProgram(Xe)}),re.isShaderMaterial&&We.releaseShaderCache(re))}this.renderBufferDirect=function(re,Le,Xe,Ke,Ue,ht){Le===null&&(Le=nt);const yt=Ue.isMesh&&Ue.matrixWorld.determinant()<0,Bt=si(re,Le,Xe,Ke,Ue);Fe.setMaterial(Ke,yt);let vt=Xe.index,Lt=1;if(Ke.wireframe===!0){if(vt=Ie.getWireframeAttribute(Xe),vt===void 0)return;Lt=2}const Pt=Xe.drawRange,Mt=Xe.attributes.position;let zt=Pt.start*Lt,Jt=(Pt.start+Pt.count)*Lt;ht!==null&&(zt=Math.max(zt,ht.start*Lt),Jt=Math.min(Jt,(ht.start+ht.count)*Lt)),vt!==null?(zt=Math.max(zt,0),Jt=Math.min(Jt,vt.count)):Mt!=null&&(zt=Math.max(zt,0),Jt=Math.min(Jt,Mt.count));const hn=Jt-zt;if(hn<0||hn===1/0)return;Ct.setup(Ue,Ke,Bt,Xe,vt);let sn,Zt=Je;if(vt!==null&&(sn=H.get(vt),Zt=at,Zt.setIndex(sn)),Ue.isMesh)Ke.wireframe===!0?(Fe.setLineWidth(Ke.wireframeLinewidth*oe()),Zt.setMode($.LINES)):Zt.setMode($.TRIANGLES);else if(Ue.isLine){let Dt=Ke.linewidth;Dt===void 0&&(Dt=1),Fe.setLineWidth(Dt*oe()),Ue.isLineSegments?Zt.setMode($.LINES):Ue.isLineLoop?Zt.setMode($.LINE_LOOP):Zt.setMode($.LINE_STRIP)}else Ue.isPoints?Zt.setMode($.POINTS):Ue.isSprite&&Zt.setMode($.TRIANGLES);if(Ue.isBatchedMesh)if(Ue._multiDrawInstances!==null)warnOnce("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Zt.renderMultiDrawInstances(Ue._multiDrawStarts,Ue._multiDrawCounts,Ue._multiDrawCount,Ue._multiDrawInstances);else if(Be.get("WEBGL_multi_draw"))Zt.renderMultiDraw(Ue._multiDrawStarts,Ue._multiDrawCounts,Ue._multiDrawCount);else{const Dt=Ue._multiDrawStarts,nn=Ue._multiDrawCounts,Ht=Ue._multiDrawCount,Bn=vt?H.get(vt).bytesPerElement:1,li=ze.get(Ke).currentProgram.getUniforms();for(let pn=0;pn<Ht;pn++)li.setValue($,"_gl_DrawID",pn),Zt.render(Dt[pn]/Bn,nn[pn])}else if(Ue.isInstancedMesh)Zt.renderInstances(zt,hn,Ue.count);else if(Xe.isInstancedBufferGeometry){const Dt=Xe._maxInstanceCount!==void 0?Xe._maxInstanceCount:1/0,nn=Math.min(Xe.instanceCount,Dt);Zt.renderInstances(zt,hn,nn)}else Zt.render(zt,hn)};function Rt(re,Le,Xe){re.transparent===!0&&re.side===DoubleSide&&re.forceSinglePass===!1?(re.side=BackSide,re.needsUpdate=!0,Gn(re,Le,Xe),re.side=FrontSide,re.needsUpdate=!0,Gn(re,Le,Xe),re.side=DoubleSide):Gn(re,Le,Xe)}this.compile=function(re,Le,Xe=null){Xe===null&&(Xe=re),C=it.get(Xe),C.init(Le),L.push(C),Xe.traverseVisible(function(Ue){Ue.isLight&&Ue.layers.test(Le.layers)&&(C.pushLight(Ue),Ue.castShadow&&C.pushShadow(Ue))}),re!==Xe&&re.traverseVisible(function(Ue){Ue.isLight&&Ue.layers.test(Le.layers)&&(C.pushLight(Ue),Ue.castShadow&&C.pushShadow(Ue))}),C.setupLights();const Ke=new Set;return re.traverse(function(Ue){if(!(Ue.isMesh||Ue.isPoints||Ue.isLine||Ue.isSprite))return;const ht=Ue.material;if(ht)if(Array.isArray(ht))for(let yt=0;yt<ht.length;yt++){const Bt=ht[yt];Rt(Bt,Xe,Ue),Ke.add(Bt)}else Rt(ht,Xe,Ue),Ke.add(ht)}),C=L.pop(),Ke},this.compileAsync=function(re,Le,Xe=null){const Ke=this.compile(re,Le,Xe);return new Promise(Ue=>{function ht(){if(Ke.forEach(function(yt){ze.get(yt).currentProgram.isReady()&&Ke.delete(yt)}),Ke.size===0){Ue(re);return}setTimeout(ht,10)}Be.get("KHR_parallel_shader_compile")!==null?ht():setTimeout(ht,10)})};let An=null;function bn(re){An&&An(re)}function Sn(){fn.stop()}function En(){fn.start()}const fn=new WebGLAnimation;fn.setAnimationLoop(bn),typeof self<"u"&&fn.setContext(self),this.setAnimationLoop=function(re){An=re,ge.setAnimationLoop(re),re===null?fn.stop():fn.start()},ge.addEventListener("sessionstart",Sn),ge.addEventListener("sessionend",En),this.render=function(re,Le){if(Le!==void 0&&Le.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(N===!0)return;if(re.matrixWorldAutoUpdate===!0&&re.updateMatrixWorld(),Le.parent===null&&Le.matrixWorldAutoUpdate===!0&&Le.updateMatrixWorld(),ge.enabled===!0&&ge.isPresenting===!0&&(ge.cameraAutoUpdate===!0&&ge.updateCamera(Le),Le=ge.getCamera()),re.isScene===!0&&re.onBeforeRender(F,re,Le,z),C=it.get(re,L.length),C.init(Le),L.push(C),Me.multiplyMatrices(Le.projectionMatrix,Le.matrixWorldInverse),le.setFromProjectionMatrix(Me),De=this.localClippingEnabled,_e=ft.init(this.clippingPlanes,De),I=dt.get(re,R.length),I.init(),R.push(I),ge.enabled===!0&&ge.isPresenting===!0){const ht=F.xr.getDepthSensingMesh();ht!==null&&jn(ht,Le,-1/0,F.sortObjects)}jn(re,Le,0,F.sortObjects),I.finish(),F.sortObjects===!0&&I.sort(ye,Te),ie=ge.enabled===!1||ge.isPresenting===!1||ge.hasDepthSensing()===!1,ie&&Ee.addToRenderList(I,re),this.info.render.frame++,_e===!0&&ft.beginShadows();const Xe=C.state.shadowsArray;se.render(Xe,re,Le),_e===!0&&ft.endShadows(),this.info.autoReset===!0&&this.info.reset();const Ke=I.opaque,Ue=I.transmissive;if(C.setupLights(),Le.isArrayCamera){const ht=Le.cameras;if(Ue.length>0)for(let yt=0,Bt=ht.length;yt<Bt;yt++){const vt=ht[yt];ui(Ke,Ue,re,vt)}ie&&Ee.render(re);for(let yt=0,Bt=ht.length;yt<Bt;yt++){const vt=ht[yt];ri(I,re,vt,vt.viewport)}}else Ue.length>0&&ui(Ke,Ue,re,Le),ie&&Ee.render(re),ri(I,re,Le);z!==null&&Q===0&&(qe.updateMultisampleRenderTarget(z),qe.updateRenderTargetMipmap(z)),re.isScene===!0&&re.onAfterRender(F,re,Le),Ct.resetDefaultState(),G=-1,O=null,L.pop(),L.length>0?(C=L[L.length-1],_e===!0&&ft.setGlobalState(F.clippingPlanes,C.state.camera)):C=null,R.pop(),R.length>0?I=R[R.length-1]:I=null};function jn(re,Le,Xe,Ke){if(re.visible===!1)return;if(re.layers.test(Le.layers)){if(re.isGroup)Xe=re.renderOrder;else if(re.isLOD)re.autoUpdate===!0&&re.update(Le);else if(re.isLight)C.pushLight(re),re.castShadow&&C.pushShadow(re);else if(re.isSprite){if(!re.frustumCulled||le.intersectsSprite(re)){Ke&&Pe.setFromMatrixPosition(re.matrixWorld).applyMatrix4(Me);const yt=Ge.update(re),Bt=re.material;Bt.visible&&I.push(re,yt,Bt,Xe,Pe.z,null)}}else if((re.isMesh||re.isLine||re.isPoints)&&(!re.frustumCulled||le.intersectsObject(re))){const yt=Ge.update(re),Bt=re.material;if(Ke&&(re.boundingSphere!==void 0?(re.boundingSphere===null&&re.computeBoundingSphere(),Pe.copy(re.boundingSphere.center)):(yt.boundingSphere===null&&yt.computeBoundingSphere(),Pe.copy(yt.boundingSphere.center)),Pe.applyMatrix4(re.matrixWorld).applyMatrix4(Me)),Array.isArray(Bt)){const vt=yt.groups;for(let Lt=0,Pt=vt.length;Lt<Pt;Lt++){const Mt=vt[Lt],zt=Bt[Mt.materialIndex];zt&&zt.visible&&I.push(re,yt,zt,Xe,Pe.z,Mt)}}else Bt.visible&&I.push(re,yt,Bt,Xe,Pe.z,null)}}const ht=re.children;for(let yt=0,Bt=ht.length;yt<Bt;yt++)jn(ht[yt],Le,Xe,Ke)}function ri(re,Le,Xe,Ke){const Ue=re.opaque,ht=re.transmissive,yt=re.transparent;C.setupLightsView(Xe),_e===!0&&ft.setGlobalState(F.clippingPlanes,Xe),Ke&&Fe.viewport(q.copy(Ke)),Ue.length>0&&ti(Ue,Le,Xe),ht.length>0&&ti(ht,Le,Xe),yt.length>0&&ti(yt,Le,Xe),Fe.buffers.depth.setTest(!0),Fe.buffers.depth.setMask(!0),Fe.buffers.color.setMask(!0),Fe.setPolygonOffset(!1)}function ui(re,Le,Xe,Ke){if((Xe.isScene===!0?Xe.overrideMaterial:null)!==null)return;C.state.transmissionRenderTarget[Ke.id]===void 0&&(C.state.transmissionRenderTarget[Ke.id]=new WebGLRenderTarget(1,1,{generateMipmaps:!0,type:Be.has("EXT_color_buffer_half_float")||Be.has("EXT_color_buffer_float")?HalfFloatType:UnsignedByteType,minFilter:LinearMipmapLinearFilter,samples:4,stencilBuffer:a,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:ColorManagement.workingColorSpace}));const ht=C.state.transmissionRenderTarget[Ke.id],yt=Ke.viewport||q;ht.setSize(yt.z*F.transmissionResolutionScale,yt.w*F.transmissionResolutionScale);const Bt=F.getRenderTarget(),vt=F.getActiveCubeFace(),Lt=F.getActiveMipmapLevel();F.setRenderTarget(ht),F.getClearColor(ue),pe=F.getClearAlpha(),pe<1&&F.setClearColor(16777215,.5),F.clear(),ie&&Ee.render(Xe);const Pt=F.toneMapping;F.toneMapping=NoToneMapping;const Mt=Ke.viewport;if(Ke.viewport!==void 0&&(Ke.viewport=void 0),C.setupLightsView(Ke),_e===!0&&ft.setGlobalState(F.clippingPlanes,Ke),ti(re,Xe,Ke),qe.updateMultisampleRenderTarget(ht),qe.updateRenderTargetMipmap(ht),Be.has("WEBGL_multisampled_render_to_texture")===!1){let zt=!1;for(let Jt=0,hn=Le.length;Jt<hn;Jt++){const sn=Le[Jt],Zt=sn.object,Dt=sn.geometry,nn=sn.material,Ht=sn.group;if(nn.side===DoubleSide&&Zt.layers.test(Ke.layers)){const Bn=nn.side;nn.side=BackSide,nn.needsUpdate=!0,hi(Zt,Xe,Ke,Dt,nn,Ht),nn.side=Bn,nn.needsUpdate=!0,zt=!0}}zt===!0&&(qe.updateMultisampleRenderTarget(ht),qe.updateRenderTargetMipmap(ht))}F.setRenderTarget(Bt,vt,Lt),F.setClearColor(ue,pe),Mt!==void 0&&(Ke.viewport=Mt),F.toneMapping=Pt}function ti(re,Le,Xe){const Ke=Le.isScene===!0?Le.overrideMaterial:null;for(let Ue=0,ht=re.length;Ue<ht;Ue++){const yt=re[Ue],Bt=yt.object,vt=yt.geometry,Lt=yt.group;let Pt=yt.material;Pt.allowOverride===!0&&Ke!==null&&(Pt=Ke),Bt.layers.test(Xe.layers)&&hi(Bt,Le,Xe,vt,Pt,Lt)}}function hi(re,Le,Xe,Ke,Ue,ht){re.onBeforeRender(F,Le,Xe,Ke,Ue,ht),re.modelViewMatrix.multiplyMatrices(Xe.matrixWorldInverse,re.matrixWorld),re.normalMatrix.getNormalMatrix(re.modelViewMatrix),Ue.onBeforeRender(F,Le,Xe,Ke,re,ht),Ue.transparent===!0&&Ue.side===DoubleSide&&Ue.forceSinglePass===!1?(Ue.side=BackSide,Ue.needsUpdate=!0,F.renderBufferDirect(Xe,Le,Ke,Ue,re,ht),Ue.side=FrontSide,Ue.needsUpdate=!0,F.renderBufferDirect(Xe,Le,Ke,Ue,re,ht),Ue.side=DoubleSide):F.renderBufferDirect(Xe,Le,Ke,Ue,re,ht),re.onAfterRender(F,Le,Xe,Ke,Ue,ht)}function Gn(re,Le,Xe){Le.isScene!==!0&&(Le=nt);const Ke=ze.get(re),Ue=C.state.lights,ht=C.state.shadowsArray,yt=Ue.state.version,Bt=We.getParameters(re,Ue.state,ht,Le,Xe),vt=We.getProgramCacheKey(Bt);let Lt=Ke.programs;Ke.environment=re.isMeshStandardMaterial?Le.environment:null,Ke.fog=Le.fog,Ke.envMap=(re.isMeshStandardMaterial?te:ut).get(re.envMap||Ke.environment),Ke.envMapRotation=Ke.environment!==null&&re.envMap===null?Le.environmentRotation:re.envMapRotation,Lt===void 0&&(re.addEventListener("dispose",st),Lt=new Map,Ke.programs=Lt);let Pt=Lt.get(vt);if(Pt!==void 0){if(Ke.currentProgram===Pt&&Ke.lightsStateVersion===yt)return Ei(re,Bt),Pt}else Bt.uniforms=We.getUniforms(re),re.onBeforeCompile(Bt,F),Pt=We.acquireProgram(Bt,vt),Lt.set(vt,Pt),Ke.uniforms=Bt.uniforms;const Mt=Ke.uniforms;return(!re.isShaderMaterial&&!re.isRawShaderMaterial||re.clipping===!0)&&(Mt.clippingPlanes=ft.uniform),Ei(re,Bt),Ke.needsLights=Zn(re),Ke.lightsStateVersion=yt,Ke.needsLights&&(Mt.ambientLightColor.value=Ue.state.ambient,Mt.lightProbe.value=Ue.state.probe,Mt.directionalLights.value=Ue.state.directional,Mt.directionalLightShadows.value=Ue.state.directionalShadow,Mt.spotLights.value=Ue.state.spot,Mt.spotLightShadows.value=Ue.state.spotShadow,Mt.rectAreaLights.value=Ue.state.rectArea,Mt.ltc_1.value=Ue.state.rectAreaLTC1,Mt.ltc_2.value=Ue.state.rectAreaLTC2,Mt.pointLights.value=Ue.state.point,Mt.pointLightShadows.value=Ue.state.pointShadow,Mt.hemisphereLights.value=Ue.state.hemi,Mt.directionalShadowMap.value=Ue.state.directionalShadowMap,Mt.directionalShadowMatrix.value=Ue.state.directionalShadowMatrix,Mt.spotShadowMap.value=Ue.state.spotShadowMap,Mt.spotLightMatrix.value=Ue.state.spotLightMatrix,Mt.spotLightMap.value=Ue.state.spotLightMap,Mt.pointShadowMap.value=Ue.state.pointShadowMap,Mt.pointShadowMatrix.value=Ue.state.pointShadowMatrix),Ke.currentProgram=Pt,Ke.uniformsList=null,Pt}function di(re){if(re.uniformsList===null){const Le=re.currentProgram.getUniforms();re.uniformsList=WebGLUniforms.seqWithValue(Le.seq,re.uniforms)}return re.uniformsList}function Ei(re,Le){const Xe=ze.get(re);Xe.outputColorSpace=Le.outputColorSpace,Xe.batching=Le.batching,Xe.batchingColor=Le.batchingColor,Xe.instancing=Le.instancing,Xe.instancingColor=Le.instancingColor,Xe.instancingMorph=Le.instancingMorph,Xe.skinning=Le.skinning,Xe.morphTargets=Le.morphTargets,Xe.morphNormals=Le.morphNormals,Xe.morphColors=Le.morphColors,Xe.morphTargetsCount=Le.morphTargetsCount,Xe.numClippingPlanes=Le.numClippingPlanes,Xe.numIntersection=Le.numClipIntersection,Xe.vertexAlphas=Le.vertexAlphas,Xe.vertexTangents=Le.vertexTangents,Xe.toneMapping=Le.toneMapping}function si(re,Le,Xe,Ke,Ue){Le.isScene!==!0&&(Le=nt),qe.resetTextureUnits();const ht=Le.fog,yt=Ke.isMeshStandardMaterial?Le.environment:null,Bt=z===null?F.outputColorSpace:z.isXRRenderTarget===!0?z.texture.colorSpace:LinearSRGBColorSpace,vt=(Ke.isMeshStandardMaterial?te:ut).get(Ke.envMap||yt),Lt=Ke.vertexColors===!0&&!!Xe.attributes.color&&Xe.attributes.color.itemSize===4,Pt=!!Xe.attributes.tangent&&(!!Ke.normalMap||Ke.anisotropy>0),Mt=!!Xe.morphAttributes.position,zt=!!Xe.morphAttributes.normal,Jt=!!Xe.morphAttributes.color;let hn=NoToneMapping;Ke.toneMapped&&(z===null||z.isXRRenderTarget===!0)&&(hn=F.toneMapping);const sn=Xe.morphAttributes.position||Xe.morphAttributes.normal||Xe.morphAttributes.color,Zt=sn!==void 0?sn.length:0,Dt=ze.get(Ke),nn=C.state.lights;if(_e===!0&&(De===!0||re!==O)){const Cn=re===O&&Ke.id===G;ft.setState(Ke,re,Cn)}let Ht=!1;Ke.version===Dt.__version?(Dt.needsLights&&Dt.lightsStateVersion!==nn.state.version||Dt.outputColorSpace!==Bt||Ue.isBatchedMesh&&Dt.batching===!1||!Ue.isBatchedMesh&&Dt.batching===!0||Ue.isBatchedMesh&&Dt.batchingColor===!0&&Ue.colorTexture===null||Ue.isBatchedMesh&&Dt.batchingColor===!1&&Ue.colorTexture!==null||Ue.isInstancedMesh&&Dt.instancing===!1||!Ue.isInstancedMesh&&Dt.instancing===!0||Ue.isSkinnedMesh&&Dt.skinning===!1||!Ue.isSkinnedMesh&&Dt.skinning===!0||Ue.isInstancedMesh&&Dt.instancingColor===!0&&Ue.instanceColor===null||Ue.isInstancedMesh&&Dt.instancingColor===!1&&Ue.instanceColor!==null||Ue.isInstancedMesh&&Dt.instancingMorph===!0&&Ue.morphTexture===null||Ue.isInstancedMesh&&Dt.instancingMorph===!1&&Ue.morphTexture!==null||Dt.envMap!==vt||Ke.fog===!0&&Dt.fog!==ht||Dt.numClippingPlanes!==void 0&&(Dt.numClippingPlanes!==ft.numPlanes||Dt.numIntersection!==ft.numIntersection)||Dt.vertexAlphas!==Lt||Dt.vertexTangents!==Pt||Dt.morphTargets!==Mt||Dt.morphNormals!==zt||Dt.morphColors!==Jt||Dt.toneMapping!==hn||Dt.morphTargetsCount!==Zt)&&(Ht=!0):(Ht=!0,Dt.__version=Ke.version);let Bn=Dt.currentProgram;Ht===!0&&(Bn=Gn(Ke,Le,Ue));let li=!1,pn=!1,gi=!1;const an=Bn.getUniforms(),Vt=Dt.uniforms;if(Fe.useProgram(Bn.program)&&(li=!0,pn=!0,gi=!0),Ke.id!==G&&(G=Ke.id,pn=!0),li||O!==re){Fe.buffers.depth.getReversed()?(de.copy(re.projectionMatrix),toNormalizedProjectionMatrix(de),toReversedProjectionMatrix(de),an.setValue($,"projectionMatrix",de)):an.setValue($,"projectionMatrix",re.projectionMatrix),an.setValue($,"viewMatrix",re.matrixWorldInverse);const wn=an.map.cameraPosition;wn!==void 0&&wn.setValue($,Ne.setFromMatrixPosition(re.matrixWorld)),we.logarithmicDepthBuffer&&an.setValue($,"logDepthBufFC",2/(Math.log(re.far+1)/Math.LN2)),(Ke.isMeshPhongMaterial||Ke.isMeshToonMaterial||Ke.isMeshLambertMaterial||Ke.isMeshBasicMaterial||Ke.isMeshStandardMaterial||Ke.isShaderMaterial)&&an.setValue($,"isOrthographic",re.isOrthographicCamera===!0),O!==re&&(O=re,pn=!0,gi=!0)}if(Ue.isSkinnedMesh){an.setOptional($,Ue,"bindMatrix"),an.setOptional($,Ue,"bindMatrixInverse");const Cn=Ue.skeleton;Cn&&(Cn.boneTexture===null&&Cn.computeBoneTexture(),an.setValue($,"boneTexture",Cn.boneTexture,qe))}Ue.isBatchedMesh&&(an.setOptional($,Ue,"batchingTexture"),an.setValue($,"batchingTexture",Ue._matricesTexture,qe),an.setOptional($,Ue,"batchingIdTexture"),an.setValue($,"batchingIdTexture",Ue._indirectTexture,qe),an.setOptional($,Ue,"batchingColorTexture"),Ue._colorsTexture!==null&&an.setValue($,"batchingColorTexture",Ue._colorsTexture,qe));const zn=Xe.morphAttributes;if((zn.position!==void 0||zn.normal!==void 0||zn.color!==void 0)&&Ye.update(Ue,Xe,Bn),(pn||Dt.receiveShadow!==Ue.receiveShadow)&&(Dt.receiveShadow=Ue.receiveShadow,an.setValue($,"receiveShadow",Ue.receiveShadow)),Ke.isMeshGouraudMaterial&&Ke.envMap!==null&&(Vt.envMap.value=vt,Vt.flipEnvMap.value=vt.isCubeTexture&&vt.isRenderTargetTexture===!1?-1:1),Ke.isMeshStandardMaterial&&Ke.envMap===null&&Le.environment!==null&&(Vt.envMapIntensity.value=Le.environmentIntensity),pn&&(an.setValue($,"toneMappingExposure",F.toneMappingExposure),Dt.needsLights&&Ci(Vt,gi),ht&&Ke.fog===!0&&Ve.refreshFogUniforms(Vt,ht),Ve.refreshMaterialUniforms(Vt,Ke,J,ee,C.state.transmissionRenderTarget[re.id]),WebGLUniforms.upload($,di(Dt),Vt,qe)),Ke.isShaderMaterial&&Ke.uniformsNeedUpdate===!0&&(WebGLUniforms.upload($,di(Dt),Vt,qe),Ke.uniformsNeedUpdate=!1),Ke.isSpriteMaterial&&an.setValue($,"center",Ue.center),an.setValue($,"modelViewMatrix",Ue.modelViewMatrix),an.setValue($,"normalMatrix",Ue.normalMatrix),an.setValue($,"modelMatrix",Ue.matrixWorld),Ke.isShaderMaterial||Ke.isRawShaderMaterial){const Cn=Ke.uniformsGroups;for(let wn=0,Mi=Cn.length;wn<Mi;wn++){const fi=Cn[wn];K.update(fi,Bn),K.bind(fi,Bn)}}return Bn}function Ci(re,Le){re.ambientLightColor.needsUpdate=Le,re.lightProbe.needsUpdate=Le,re.directionalLights.needsUpdate=Le,re.directionalLightShadows.needsUpdate=Le,re.pointLights.needsUpdate=Le,re.pointLightShadows.needsUpdate=Le,re.spotLights.needsUpdate=Le,re.spotLightShadows.needsUpdate=Le,re.rectAreaLights.needsUpdate=Le,re.hemisphereLights.needsUpdate=Le}function Zn(re){return re.isMeshLambertMaterial||re.isMeshToonMaterial||re.isMeshPhongMaterial||re.isMeshStandardMaterial||re.isShadowMaterial||re.isShaderMaterial&&re.lights===!0}this.getActiveCubeFace=function(){return k},this.getActiveMipmapLevel=function(){return Q},this.getRenderTarget=function(){return z},this.setRenderTargetTextures=function(re,Le,Xe){const Ke=ze.get(re);Ke.__autoAllocateDepthBuffer=re.resolveDepthBuffer===!1,Ke.__autoAllocateDepthBuffer===!1&&(Ke.__useRenderToTexture=!1),ze.get(re.texture).__webglTexture=Le,ze.get(re.depthTexture).__webglTexture=Ke.__autoAllocateDepthBuffer?void 0:Xe,Ke.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(re,Le){const Xe=ze.get(re);Xe.__webglFramebuffer=Le,Xe.__useDefaultFramebuffer=Le===void 0};const ni=$.createFramebuffer();this.setRenderTarget=function(re,Le=0,Xe=0){z=re,k=Le,Q=Xe;let Ke=!0,Ue=null,ht=!1,yt=!1;if(re){const vt=ze.get(re);if(vt.__useDefaultFramebuffer!==void 0)Fe.bindFramebuffer($.FRAMEBUFFER,null),Ke=!1;else if(vt.__webglFramebuffer===void 0)qe.setupRenderTarget(re);else if(vt.__hasExternalTextures)qe.rebindTextures(re,ze.get(re.texture).__webglTexture,ze.get(re.depthTexture).__webglTexture);else if(re.depthBuffer){const Mt=re.depthTexture;if(vt.__boundDepthTexture!==Mt){if(Mt!==null&&ze.has(Mt)&&(re.width!==Mt.image.width||re.height!==Mt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");qe.setupDepthRenderbuffer(re)}}const Lt=re.texture;(Lt.isData3DTexture||Lt.isDataArrayTexture||Lt.isCompressedArrayTexture)&&(yt=!0);const Pt=ze.get(re).__webglFramebuffer;re.isWebGLCubeRenderTarget?(Array.isArray(Pt[Le])?Ue=Pt[Le][Xe]:Ue=Pt[Le],ht=!0):re.samples>0&&qe.useMultisampledRTT(re)===!1?Ue=ze.get(re).__webglMultisampledFramebuffer:Array.isArray(Pt)?Ue=Pt[Xe]:Ue=Pt,q.copy(re.viewport),ce.copy(re.scissor),ne=re.scissorTest}else q.copy(xe).multiplyScalar(J).floor(),ce.copy(ve).multiplyScalar(J).floor(),ne=he;if(Xe!==0&&(Ue=ni),Fe.bindFramebuffer($.FRAMEBUFFER,Ue)&&Ke&&Fe.drawBuffers(re,Ue),Fe.viewport(q),Fe.scissor(ce),Fe.setScissorTest(ne),ht){const vt=ze.get(re.texture);$.framebufferTexture2D($.FRAMEBUFFER,$.COLOR_ATTACHMENT0,$.TEXTURE_CUBE_MAP_POSITIVE_X+Le,vt.__webglTexture,Xe)}else if(yt){const vt=ze.get(re.texture),Lt=Le;$.framebufferTextureLayer($.FRAMEBUFFER,$.COLOR_ATTACHMENT0,vt.__webglTexture,Xe,Lt)}else if(re!==null&&Xe!==0){const vt=ze.get(re.texture);$.framebufferTexture2D($.FRAMEBUFFER,$.COLOR_ATTACHMENT0,$.TEXTURE_2D,vt.__webglTexture,Xe)}G=-1},this.readRenderTargetPixels=function(re,Le,Xe,Ke,Ue,ht,yt,Bt=0){if(!(re&&re.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let vt=ze.get(re).__webglFramebuffer;if(re.isWebGLCubeRenderTarget&&yt!==void 0&&(vt=vt[yt]),vt){Fe.bindFramebuffer($.FRAMEBUFFER,vt);try{const Lt=re.textures[Bt],Pt=Lt.format,Mt=Lt.type;if(!we.textureFormatReadable(Pt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!we.textureTypeReadable(Mt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Le>=0&&Le<=re.width-Ke&&Xe>=0&&Xe<=re.height-Ue&&(re.textures.length>1&&$.readBuffer($.COLOR_ATTACHMENT0+Bt),$.readPixels(Le,Xe,Ke,Ue,ot.convert(Pt),ot.convert(Mt),ht))}finally{const Lt=z!==null?ze.get(z).__webglFramebuffer:null;Fe.bindFramebuffer($.FRAMEBUFFER,Lt)}}},this.readRenderTargetPixelsAsync=async function(re,Le,Xe,Ke,Ue,ht,yt,Bt=0){if(!(re&&re.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let vt=ze.get(re).__webglFramebuffer;if(re.isWebGLCubeRenderTarget&&yt!==void 0&&(vt=vt[yt]),vt)if(Le>=0&&Le<=re.width-Ke&&Xe>=0&&Xe<=re.height-Ue){Fe.bindFramebuffer($.FRAMEBUFFER,vt);const Lt=re.textures[Bt],Pt=Lt.format,Mt=Lt.type;if(!we.textureFormatReadable(Pt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!we.textureTypeReadable(Mt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const zt=$.createBuffer();$.bindBuffer($.PIXEL_PACK_BUFFER,zt),$.bufferData($.PIXEL_PACK_BUFFER,ht.byteLength,$.STREAM_READ),re.textures.length>1&&$.readBuffer($.COLOR_ATTACHMENT0+Bt),$.readPixels(Le,Xe,Ke,Ue,ot.convert(Pt),ot.convert(Mt),0);const Jt=z!==null?ze.get(z).__webglFramebuffer:null;Fe.bindFramebuffer($.FRAMEBUFFER,Jt);const hn=$.fenceSync($.SYNC_GPU_COMMANDS_COMPLETE,0);return $.flush(),await probeAsync($,hn,4),$.bindBuffer($.PIXEL_PACK_BUFFER,zt),$.getBufferSubData($.PIXEL_PACK_BUFFER,0,ht),$.deleteBuffer(zt),$.deleteSync(hn),ht}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(re,Le=null,Xe=0){const Ke=Math.pow(2,-Xe),Ue=Math.floor(re.image.width*Ke),ht=Math.floor(re.image.height*Ke),yt=Le!==null?Le.x:0,Bt=Le!==null?Le.y:0;qe.setTexture2D(re,0),$.copyTexSubImage2D($.TEXTURE_2D,Xe,0,0,yt,Bt,Ue,ht),Fe.unbindTexture()};const oi=$.createFramebuffer(),ai=$.createFramebuffer();this.copyTextureToTexture=function(re,Le,Xe=null,Ke=null,Ue=0,ht=null){ht===null&&(Ue!==0?(warnOnce("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),ht=Ue,Ue=0):ht=0);let yt,Bt,vt,Lt,Pt,Mt,zt,Jt,hn;const sn=re.isCompressedTexture?re.mipmaps[ht]:re.image;if(Xe!==null)yt=Xe.max.x-Xe.min.x,Bt=Xe.max.y-Xe.min.y,vt=Xe.isBox3?Xe.max.z-Xe.min.z:1,Lt=Xe.min.x,Pt=Xe.min.y,Mt=Xe.isBox3?Xe.min.z:0;else{const zn=Math.pow(2,-Ue);yt=Math.floor(sn.width*zn),Bt=Math.floor(sn.height*zn),re.isDataArrayTexture?vt=sn.depth:re.isData3DTexture?vt=Math.floor(sn.depth*zn):vt=1,Lt=0,Pt=0,Mt=0}Ke!==null?(zt=Ke.x,Jt=Ke.y,hn=Ke.z):(zt=0,Jt=0,hn=0);const Zt=ot.convert(Le.format),Dt=ot.convert(Le.type);let nn;Le.isData3DTexture?(qe.setTexture3D(Le,0),nn=$.TEXTURE_3D):Le.isDataArrayTexture||Le.isCompressedArrayTexture?(qe.setTexture2DArray(Le,0),nn=$.TEXTURE_2D_ARRAY):(qe.setTexture2D(Le,0),nn=$.TEXTURE_2D),$.pixelStorei($.UNPACK_FLIP_Y_WEBGL,Le.flipY),$.pixelStorei($.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Le.premultiplyAlpha),$.pixelStorei($.UNPACK_ALIGNMENT,Le.unpackAlignment);const Ht=$.getParameter($.UNPACK_ROW_LENGTH),Bn=$.getParameter($.UNPACK_IMAGE_HEIGHT),li=$.getParameter($.UNPACK_SKIP_PIXELS),pn=$.getParameter($.UNPACK_SKIP_ROWS),gi=$.getParameter($.UNPACK_SKIP_IMAGES);$.pixelStorei($.UNPACK_ROW_LENGTH,sn.width),$.pixelStorei($.UNPACK_IMAGE_HEIGHT,sn.height),$.pixelStorei($.UNPACK_SKIP_PIXELS,Lt),$.pixelStorei($.UNPACK_SKIP_ROWS,Pt),$.pixelStorei($.UNPACK_SKIP_IMAGES,Mt);const an=re.isDataArrayTexture||re.isData3DTexture,Vt=Le.isDataArrayTexture||Le.isData3DTexture;if(re.isDepthTexture){const zn=ze.get(re),Cn=ze.get(Le),wn=ze.get(zn.__renderTarget),Mi=ze.get(Cn.__renderTarget);Fe.bindFramebuffer($.READ_FRAMEBUFFER,wn.__webglFramebuffer),Fe.bindFramebuffer($.DRAW_FRAMEBUFFER,Mi.__webglFramebuffer);for(let fi=0;fi<vt;fi++)an&&($.framebufferTextureLayer($.READ_FRAMEBUFFER,$.COLOR_ATTACHMENT0,ze.get(re).__webglTexture,Ue,Mt+fi),$.framebufferTextureLayer($.DRAW_FRAMEBUFFER,$.COLOR_ATTACHMENT0,ze.get(Le).__webglTexture,ht,hn+fi)),$.blitFramebuffer(Lt,Pt,yt,Bt,zt,Jt,yt,Bt,$.DEPTH_BUFFER_BIT,$.NEAREST);Fe.bindFramebuffer($.READ_FRAMEBUFFER,null),Fe.bindFramebuffer($.DRAW_FRAMEBUFFER,null)}else if(Ue!==0||re.isRenderTargetTexture||ze.has(re)){const zn=ze.get(re),Cn=ze.get(Le);Fe.bindFramebuffer($.READ_FRAMEBUFFER,oi),Fe.bindFramebuffer($.DRAW_FRAMEBUFFER,ai);for(let wn=0;wn<vt;wn++)an?$.framebufferTextureLayer($.READ_FRAMEBUFFER,$.COLOR_ATTACHMENT0,zn.__webglTexture,Ue,Mt+wn):$.framebufferTexture2D($.READ_FRAMEBUFFER,$.COLOR_ATTACHMENT0,$.TEXTURE_2D,zn.__webglTexture,Ue),Vt?$.framebufferTextureLayer($.DRAW_FRAMEBUFFER,$.COLOR_ATTACHMENT0,Cn.__webglTexture,ht,hn+wn):$.framebufferTexture2D($.DRAW_FRAMEBUFFER,$.COLOR_ATTACHMENT0,$.TEXTURE_2D,Cn.__webglTexture,ht),Ue!==0?$.blitFramebuffer(Lt,Pt,yt,Bt,zt,Jt,yt,Bt,$.COLOR_BUFFER_BIT,$.NEAREST):Vt?$.copyTexSubImage3D(nn,ht,zt,Jt,hn+wn,Lt,Pt,yt,Bt):$.copyTexSubImage2D(nn,ht,zt,Jt,Lt,Pt,yt,Bt);Fe.bindFramebuffer($.READ_FRAMEBUFFER,null),Fe.bindFramebuffer($.DRAW_FRAMEBUFFER,null)}else Vt?re.isDataTexture||re.isData3DTexture?$.texSubImage3D(nn,ht,zt,Jt,hn,yt,Bt,vt,Zt,Dt,sn.data):Le.isCompressedArrayTexture?$.compressedTexSubImage3D(nn,ht,zt,Jt,hn,yt,Bt,vt,Zt,sn.data):$.texSubImage3D(nn,ht,zt,Jt,hn,yt,Bt,vt,Zt,Dt,sn):re.isDataTexture?$.texSubImage2D($.TEXTURE_2D,ht,zt,Jt,yt,Bt,Zt,Dt,sn.data):re.isCompressedTexture?$.compressedTexSubImage2D($.TEXTURE_2D,ht,zt,Jt,sn.width,sn.height,Zt,sn.data):$.texSubImage2D($.TEXTURE_2D,ht,zt,Jt,yt,Bt,Zt,Dt,sn);$.pixelStorei($.UNPACK_ROW_LENGTH,Ht),$.pixelStorei($.UNPACK_IMAGE_HEIGHT,Bn),$.pixelStorei($.UNPACK_SKIP_PIXELS,li),$.pixelStorei($.UNPACK_SKIP_ROWS,pn),$.pixelStorei($.UNPACK_SKIP_IMAGES,gi),ht===0&&Le.generateMipmaps&&$.generateMipmap(nn),Fe.unbindTexture()},this.copyTextureToTexture3D=function(re,Le,Xe=null,Ke=null,Ue=0){return warnOnce('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(re,Le,Xe,Ke,Ue)},this.initRenderTarget=function(re){ze.get(re).__webglFramebuffer===void 0&&qe.setupRenderTarget(re)},this.initTexture=function(re){re.isCubeTexture?qe.setTextureCube(re,0):re.isData3DTexture?qe.setTexture3D(re,0):re.isDataArrayTexture||re.isCompressedArrayTexture?qe.setTexture2DArray(re,0):qe.setTexture2D(re,0),Fe.unbindTexture()},this.resetState=function(){k=0,Q=0,z=null,Fe.reset(),Ct.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return WebGLCoordinateSystem}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=ColorManagement._getDrawingBufferColorSpace(e),t.unpackColorSpace=ColorManagement._getUnpackColorSpace()}}const xi=class xi{constructor(e,t){let n,o;this.promise=new Promise((u,d)=>{n=u,o=d});const a=n.bind(this),r=o.bind(this),l=(...u)=>{a(...u)},c=u=>{r(u)};e(l.bind(this),c.bind(this)),this.abortHandler=t,this.id=xi.idGen++}then(e){return new xi((t,n)=>{this.promise=this.promise.then((...o)=>{const a=e(...o);a instanceof Promise||a instanceof xi?a.then((...r)=>{t(...r)}):t(a)}).catch(o=>{n(o)})},this.abortHandler)}catch(e){return new xi(t=>{this.promise=this.promise.then((...n)=>{t(...n)}).catch(e)},this.abortHandler)}abort(e){this.abortHandler&&this.abortHandler(e)}};At(xi,"idGen",0);let AbortablePromise=xi;class AbortedPromiseError extends Error{constructor(e){super(e)}}(function(){const s=new Float32Array(1),e=new Int32Array(s.buffer);return function(t){s[0]=t;const n=e[0];let o=n>>16&32768,a=n>>12&2047;const r=n>>23&255;return r<103?o:r>142?(o|=31744,o|=(r==255?0:1)&&n&8388607,o):r<113?(a|=2048,o|=(a>>114-r)+(a>>113-r&1),o):(o|=r-112<<10|a>>1,o+=a&1,o)}})();const uintEncodedFloat=function(){const s=new Float32Array(1),e=new Int32Array(s.buffer);return function(t){return s[0]=t,e[0]}}(),rgbaArrayToInteger=function(s,e){return s[e]+(s[e+1]<<8)+(s[e+2]<<16)+(s[e+3]<<24)},fetchWithProgress$1=function(s,e,t=!0,n){const o=new AbortController,a=o.signal;let r=!1;const l=d=>{o.abort(d),r=!0};let c=!1;const u=(d,f,g,_)=>{e&&!c&&(e(d,f,g,_),d===100&&(c=!0))};return new AbortablePromise((d,f)=>{const g={signal:a};n&&(g.headers=n),fetch(s,g).then(async _=>{if(!_.ok){const L=await _.text();f(new Error(`Fetch failed: ${_.status} ${_.statusText} ${L}`));return}const b=_.body.getReader();let B=0,I=_.headers.get("Content-Length"),C=I?parseInt(I):void 0;const R=[];for(;!r;)try{const{value:L,done:F}=await b.read();if(F){if(u(100,"100%",L,C),t){const Q=new Blob(R).arrayBuffer();d(Q)}else d();break}B+=L.length;let N,k;C!==void 0&&(N=B/C*100,k=`${N.toFixed(2)}%`),t&&R.push(L),u(N,k,L,C)}catch(L){f(L);return}}).catch(_=>{f(new AbortedPromiseError(_))})},l)},clamp=function(s,e,t){return Math.max(Math.min(s,t),e)},getCurrentTime=function(){return performance.now()/1e3},disposeAllMeshes=s=>{if(s.geometry&&(s.geometry.dispose(),s.geometry=null),s.material&&(s.material.dispose(),s.material=null),s.children)for(let e of s.children)disposeAllMeshes(e)},delayedExecute=(s,e)=>new Promise(t=>{window.setTimeout(()=>{t(s?s():void 0)},e?1:50)}),getSphericalHarmonicsComponentCountForDegree=(s=0)=>{let e=0;if(s===1)e=9;else if(s===2)e=24;else if(s===3)e=45;else if(s>3)throw new Error("getSphericalHarmonicsComponentCountForDegree() -> Invalid spherical harmonics degree");return e},nativePromiseWithExtractedComponents=()=>{let s,e;return{promise:new Promise((n,o)=>{s=n,e=o}),resolve:s,reject:e}},abortablePromiseWithExtractedComponents=s=>{let e,t;return s||(s=()=>{}),{promise:new AbortablePromise((o,a)=>{e=o,t=a},s),resolve:e,reject:t}};class Semver{constructor(e,t,n){this.major=e,this.minor=t,this.patch=n}toString(){return`${this.major}_${this.minor}_${this.patch}`}}function isIOS(){const s=navigator.userAgent;return s.indexOf("iPhone")>0||s.indexOf("iPad")>0}function getIOSSemever(){if(isIOS()){const s=navigator.userAgent.match(/OS (\d+)_(\d+)_?(\d+)?/);return new Semver(parseInt(s[1]||0,10),parseInt(s[2]||0,10),parseInt(s[3]||0,10))}else return null}const BASE_COMPONENT_COUNT=14,Ni=class Ni{constructor(e=0){this.sphericalHarmonicsDegree=e,this.sphericalHarmonicsCount=getSphericalHarmonicsComponentCountForDegree(this.sphericalHarmonicsDegree),this.componentCount=this.sphericalHarmonicsCount+BASE_COMPONENT_COUNT,this.defaultSphericalHarmonics=new Array(this.sphericalHarmonicsCount).fill(0),this.splats=[],this.splatCount=0}static createSplat(e=0){const t=[0,0,0,1,1,1,1,0,0,0,0,0,0,0];let n=getSphericalHarmonicsComponentCountForDegree(e);for(let o=0;o<n;o++)t.push(0);return t}addSplat(e){this.splats.push(e),this.splatCount++}getSplat(e){return this.splats[e]}addDefaultSplat(){const e=Ni.createSplat(this.sphericalHarmonicsDegree);return this.addSplat(e),e}addSplatFromComonents(e,t,n,o,a,r,l,c,u,d,f,g,_,b,...B){const I=[e,t,n,o,a,r,l,c,u,d,f,g,_,b,...this.defaultSphericalHarmonics];for(let C=0;C<B.length&&C<this.sphericalHarmonicsCount;C++)I[C]=B[C];return this.addSplat(I),I}addSplatFromArray(e,t){const n=e.splats[t],o=Ni.createSplat(this.sphericalHarmonicsDegree);for(let a=0;a<this.componentCount&&a<n.length;a++)o[a]=n[a];this.addSplat(o)}};At(Ni,"OFFSET",{X:0,Y:1,Z:2,SCALE0:3,SCALE1:4,SCALE2:5,ROTATION0:6,ROTATION1:7,ROTATION2:8,ROTATION3:9,FDC0:10,FDC1:11,FDC2:12,OPACITY:13,FRC0:14,FRC1:15,FRC2:16,FRC3:17,FRC4:18,FRC5:19,FRC6:20,FRC7:21,FRC8:22,FRC9:23,FRC10:24,FRC11:25,FRC12:26,FRC13:27,FRC14:28,FRC15:29,FRC16:30,FRC17:31,FRC18:32,FRC19:33,FRC20:34,FRC21:35,FRC22:36,FRC23:37});let UncompressedSplatArray=Ni;class Constants{}At(Constants,"DefaultSplatSortDistanceMapPrecision",16),At(Constants,"MemoryPageSize",65536),At(Constants,"BytesPerFloat",4),At(Constants,"BytesPerInt",4),At(Constants,"MaxScenes",32),At(Constants,"ProgressiveLoadSectionSize",262144),At(Constants,"ProgressiveLoadSectionDelayDuration",15),At(Constants,"SphericalHarmonics8BitCompressionRange",3);const DefaultSphericalHarmonics8BitCompressionRange=Constants.SphericalHarmonics8BitCompressionRange,DefaultSphericalHarmonics8BitCompressionHalfRange=DefaultSphericalHarmonics8BitCompressionRange/2,toHalfFloat=DataUtils.toHalfFloat.bind(DataUtils),fromHalfFloat$1=DataUtils.fromHalfFloat.bind(DataUtils),toUncompressedFloat=(s,e,t=!1,n,o)=>{if(e===0)return s;if(e===1||e===2&&!t)return DataUtils.fromHalfFloat(s);if(e===2)return fromUint8(s,n,o)},toUint8=(s,e,t)=>{s=clamp(s,e,t);const n=t-e;return clamp(Math.floor((s-e)/n*255),0,255)},fromUint8=(s,e,t)=>{const n=t-e;return s/255*n+e},fromHalfFloatToUint8=(s,e,t)=>toUint8(fromHalfFloat$1(s,e,t)),fromUint8ToHalfFloat=(s,e,t)=>toHalfFloat(fromUint8(s,e,t)),dataViewFloatForCompressionLevel=(s,e,t,n=!1)=>t===0?s.getFloat32(e*4,!0):t===1||t===2&&!n?s.getUint16(e*2,!0):s.getUint8(e,!0),convertBetweenCompressionLevels=function(){const s=e=>e;return function(e,t,n,o=!1){if(t===n)return e;let a=s;return t===2&&o?n===1?a=fromUint8ToHalfFloat:n==0&&(a=fromUint8):t===2||t===1?n===0?a=fromHalfFloat$1:n==2&&(o?a=fromHalfFloatToUint8:a=s):t===0&&(n===1?a=toHalfFloat:n==2&&(o?a=toUint8:a=toHalfFloat)),a(e)}}(),copyBetweenBuffers=(s,e,t,n,o=0)=>{const a=new Uint8Array(s,e),r=new Uint8Array(t,n);for(let l=0;l<o;l++)r[l]=a[l]},Ze=class Ze{constructor(e,t=!0){At(this,"getSplatScaleAndRotation",function(){const e=new Matrix4,t=new Matrix4,n=new Matrix4,o=new Vector3,a=new Vector3,r=new Quaternion;return function(l,c,u,d,f){const g=this.globalSplatIndexToSectionMap[l],_=this.sections[g],b=l-_.splatCountOffset,B=_.bytesPerSplat*b+Ze.CompressionLevels[this.compressionLevel].ScaleOffsetBytes,I=new DataView(this.bufferData,_.dataBase+B);a.set(toUncompressedFloat(dataViewFloatForCompressionLevel(I,0,this.compressionLevel),this.compressionLevel),toUncompressedFloat(dataViewFloatForCompressionLevel(I,1,this.compressionLevel),this.compressionLevel),toUncompressedFloat(dataViewFloatForCompressionLevel(I,2,this.compressionLevel),this.compressionLevel)),f&&(f.x!==void 0&&(a.x=f.x),f.y!==void 0&&(a.y=f.y),f.z!==void 0&&(a.z=f.z)),r.set(toUncompressedFloat(dataViewFloatForCompressionLevel(I,4,this.compressionLevel),this.compressionLevel),toUncompressedFloat(dataViewFloatForCompressionLevel(I,5,this.compressionLevel),this.compressionLevel),toUncompressedFloat(dataViewFloatForCompressionLevel(I,6,this.compressionLevel),this.compressionLevel),toUncompressedFloat(dataViewFloatForCompressionLevel(I,3,this.compressionLevel),this.compressionLevel)),d?(e.makeScale(a.x,a.y,a.z),t.makeRotationFromQuaternion(r),n.copy(e).multiply(t).multiply(d),n.decompose(o,u,c)):(c.copy(a),u.copy(r))}}());At(this,"fillSplatScaleRotationArray",function(){const e=new Matrix4,t=new Matrix4,n=new Matrix4,o=new Vector3,a=new Quaternion,r=new Vector3,l=c=>{const u=c.w<0?-1:1;c.x*=u,c.y*=u,c.z*=u,c.w*=u};return function(c,u,d,f,g,_,b,B){const I=this.splatCount;f=f||0,g=g||I-1,_===void 0&&(_=f);const C=(R,L)=>convertBetweenCompressionLevels(R,L,b);for(let R=f;R<=g;R++){const L=this.globalSplatIndexToSectionMap[R],F=this.sections[L],N=R-F.splatCountOffset,k=F.bytesPerSplat*N+Ze.CompressionLevels[this.compressionLevel].ScaleOffsetBytes,Q=(R-f+_)*Ze.ScaleComponentCount,z=(R-f+_)*Ze.RotationComponentCount,G=new DataView(this.bufferData,F.dataBase+k),O=B&&B.x!==void 0?B.x:dataViewFloatForCompressionLevel(G,0,this.compressionLevel),q=B&&B.y!==void 0?B.y:dataViewFloatForCompressionLevel(G,1,this.compressionLevel),ce=B&&B.z!==void 0?B.z:dataViewFloatForCompressionLevel(G,2,this.compressionLevel),ne=dataViewFloatForCompressionLevel(G,3,this.compressionLevel),ue=dataViewFloatForCompressionLevel(G,4,this.compressionLevel),pe=dataViewFloatForCompressionLevel(G,5,this.compressionLevel),fe=dataViewFloatForCompressionLevel(G,6,this.compressionLevel);o.set(toUncompressedFloat(O,this.compressionLevel),toUncompressedFloat(q,this.compressionLevel),toUncompressedFloat(ce,this.compressionLevel)),a.set(toUncompressedFloat(ue,this.compressionLevel),toUncompressedFloat(pe,this.compressionLevel),toUncompressedFloat(fe,this.compressionLevel),toUncompressedFloat(ne,this.compressionLevel)).normalize(),d&&(r.set(0,0,0),e.makeScale(o.x,o.y,o.z),t.makeRotationFromQuaternion(a),n.identity().premultiply(e).premultiply(t),n.premultiply(d),n.decompose(r,a,o),a.normalize()),l(a),c&&(c[Q]=C(o.x,0),c[Q+1]=C(o.y,0),c[Q+2]=C(o.z,0)),u&&(u[z]=C(a.x,0),u[z+1]=C(a.y,0),u[z+2]=C(a.z,0),u[z+3]=C(a.w,0))}}}());At(this,"fillSphericalHarmonicsArray",function(){for(let ue=0;ue<15;ue++)new Vector3;const e=new Matrix3,t=new Matrix4,n=new Vector3,o=new Vector3,a=new Quaternion,r=[],l=[],c=[],u=[],d=[],f=[],g=[],_=[],b=[],B=[],I=[],C=[],R=[],L=[],F=[],N=[],k=[],Q=[],z=ue=>ue,G=(ue,pe,fe,ee)=>{ue[0]=pe,ue[1]=fe,ue[2]=ee},O=(ue,pe,fe,ee,J)=>{ue[0]=dataViewFloatForCompressionLevel(pe,ee,J,!0),ue[1]=dataViewFloatForCompressionLevel(pe,ee+fe,J,!0),ue[2]=dataViewFloatForCompressionLevel(pe,ee+fe+fe,J,!0)},q=(ue,pe)=>{pe[0]=ue[0],pe[1]=ue[1],pe[2]=ue[2]},ce=(ue,pe,fe,ee)=>{pe[fe]=ee(ue[0]),pe[fe+1]=ee(ue[1]),pe[fe+2]=ee(ue[2])},ne=(ue,pe,fe,ee,J)=>(pe[0]=toUncompressedFloat(ue[0],fe,!0,ee,J),pe[1]=toUncompressedFloat(ue[1],fe,!0,ee,J),pe[2]=toUncompressedFloat(ue[2],fe,!0,ee,J),pe);return function(ue,pe,fe,ee,J,ye,Te){const xe=this.splatCount;ee=ee||0,J=J||xe-1,ye===void 0&&(ye=ee),fe&&pe>=1&&(t.copy(fe),t.decompose(n,a,o),a.normalize(),t.makeRotationFromQuaternion(a),e.setFromMatrix4(t),G(r,e.elements[4],-e.elements[7],e.elements[1]),G(l,-e.elements[5],e.elements[8],-e.elements[2]),G(c,e.elements[3],-e.elements[6],e.elements[0]));const ve=le=>fromHalfFloatToUint8(le,this.minSphericalHarmonicsCoeff,this.maxSphericalHarmonicsCoeff),he=le=>toUint8(le,this.minSphericalHarmonicsCoeff,this.maxSphericalHarmonicsCoeff);for(let le=ee;le<=J;le++){const _e=this.globalSplatIndexToSectionMap[le],De=this.sections[_e];pe=Math.min(pe,De.sphericalHarmonicsDegree);const de=getSphericalHarmonicsComponentCountForDegree(pe),Me=le-De.splatCountOffset,Ne=De.bytesPerSplat*Me+Ze.CompressionLevels[this.compressionLevel].SphericalHarmonicsOffsetBytes,Pe=new DataView(this.bufferData,De.dataBase+Ne),nt=(le-ee+ye)*de;let ie=fe?0:this.compressionLevel,oe=z;ie!==Te&&(ie===1?Te===0?oe=fromHalfFloat$1:Te==2&&(oe=ve):ie===0&&(Te===1?oe=toHalfFloat:Te==2&&(oe=he)));const $=this.minSphericalHarmonicsCoeff,Se=this.maxSphericalHarmonicsCoeff;pe>=1&&(O(b,Pe,3,0,this.compressionLevel),O(B,Pe,3,1,this.compressionLevel),O(I,Pe,3,2,this.compressionLevel),fe?(ne(b,b,this.compressionLevel,$,Se),ne(B,B,this.compressionLevel,$,Se),ne(I,I,this.compressionLevel,$,Se),Ze.rotateSphericalHarmonics3(b,B,I,r,l,c,L,F,N)):(q(b,L),q(B,F),q(I,N)),ce(L,ue,nt,oe),ce(F,ue,nt+3,oe),ce(N,ue,nt+6,oe),pe>=2&&(O(b,Pe,5,9,this.compressionLevel),O(B,Pe,5,10,this.compressionLevel),O(I,Pe,5,11,this.compressionLevel),O(C,Pe,5,12,this.compressionLevel),O(R,Pe,5,13,this.compressionLevel),fe?(ne(b,b,this.compressionLevel,$,Se),ne(B,B,this.compressionLevel,$,Se),ne(I,I,this.compressionLevel,$,Se),ne(C,C,this.compressionLevel,$,Se),ne(R,R,this.compressionLevel,$,Se),Ze.rotateSphericalHarmonics5(b,B,I,C,R,r,l,c,u,d,f,g,_,L,F,N,k,Q)):(q(b,L),q(B,F),q(I,N),q(C,k),q(R,Q)),ce(L,ue,nt+9,oe),ce(F,ue,nt+12,oe),ce(N,ue,nt+15,oe),ce(k,ue,nt+18,oe),ce(Q,ue,nt+21,oe)))}}}());this.constructFromBuffer(e,t)}getSplatCount(){return this.splatCount}getMaxSplatCount(){return this.maxSplatCount}getMinSphericalHarmonicsDegree(){let e=0;for(let t=0;t<this.sections.length;t++){const n=this.sections[t];(t===0||n.sphericalHarmonicsDegree<e)&&(e=n.sphericalHarmonicsDegree)}return e}getBucketIndex(e,t){let n;const o=e.fullBucketCount*e.bucketSize;if(t<o)n=Math.floor(t/e.bucketSize);else{let a=o;n=e.fullBucketCount;let r=0;for(;a<e.splatCount;){let l=e.partiallyFilledBucketLengths[r];if(t>=a&&t<a+l)break;a+=l,n++,r++}}return n}getSplatCenter(e,t,n){const o=this.globalSplatIndexToSectionMap[e],a=this.sections[o],r=e-a.splatCountOffset,l=a.bytesPerSplat*r,c=new DataView(this.bufferData,a.dataBase+l),u=dataViewFloatForCompressionLevel(c,0,this.compressionLevel),d=dataViewFloatForCompressionLevel(c,1,this.compressionLevel),f=dataViewFloatForCompressionLevel(c,2,this.compressionLevel);if(this.compressionLevel>=1){const _=this.getBucketIndex(a,r)*Ze.BucketStorageSizeFloats,b=a.compressionScaleFactor,B=a.compressionScaleRange;t.x=(u-B)*b+a.bucketArray[_],t.y=(d-B)*b+a.bucketArray[_+1],t.z=(f-B)*b+a.bucketArray[_+2]}else t.x=u,t.y=d,t.z=f;n&&t.applyMatrix4(n)}getSplatColor(e,t){const n=this.globalSplatIndexToSectionMap[e],o=this.sections[n],a=e-o.splatCountOffset,r=o.bytesPerSplat*a+Ze.CompressionLevels[this.compressionLevel].ColorOffsetBytes,l=new Uint8Array(this.bufferData,o.dataBase+r,4);t.set(l[0],l[1],l[2],l[3])}fillSplatCenterArray(e,t,n,o,a){const r=this.splatCount;n=n||0,o=o||r-1,a===void 0&&(a=n);const l=new Vector3;for(let c=n;c<=o;c++){const u=this.globalSplatIndexToSectionMap[c],d=this.sections[u],f=c-d.splatCountOffset,g=(c-n+a)*Ze.CenterComponentCount,_=d.bytesPerSplat*f,b=new DataView(this.bufferData,d.dataBase+_),B=dataViewFloatForCompressionLevel(b,0,this.compressionLevel),I=dataViewFloatForCompressionLevel(b,1,this.compressionLevel),C=dataViewFloatForCompressionLevel(b,2,this.compressionLevel);if(this.compressionLevel>=1){const L=this.getBucketIndex(d,f)*Ze.BucketStorageSizeFloats,F=d.compressionScaleFactor,N=d.compressionScaleRange;l.x=(B-N)*F+d.bucketArray[L],l.y=(I-N)*F+d.bucketArray[L+1],l.z=(C-N)*F+d.bucketArray[L+2]}else l.x=B,l.y=I,l.z=C;t&&l.applyMatrix4(t),e[g]=l.x,e[g+1]=l.y,e[g+2]=l.z}}fillSplatCovarianceArray(e,t,n,o,a,r){const l=this.splatCount,c=new Vector3,u=new Quaternion;n=n||0,o=o||l-1,a===void 0&&(a=n);for(let d=n;d<=o;d++){const f=this.globalSplatIndexToSectionMap[d],g=this.sections[f],_=d-g.splatCountOffset,b=(d-n+a)*Ze.CovarianceComponentCount,B=g.bytesPerSplat*_+Ze.CompressionLevels[this.compressionLevel].ScaleOffsetBytes,I=new DataView(this.bufferData,g.dataBase+B);c.set(toUncompressedFloat(dataViewFloatForCompressionLevel(I,0,this.compressionLevel),this.compressionLevel),toUncompressedFloat(dataViewFloatForCompressionLevel(I,1,this.compressionLevel),this.compressionLevel),toUncompressedFloat(dataViewFloatForCompressionLevel(I,2,this.compressionLevel),this.compressionLevel)),u.set(toUncompressedFloat(dataViewFloatForCompressionLevel(I,4,this.compressionLevel),this.compressionLevel),toUncompressedFloat(dataViewFloatForCompressionLevel(I,5,this.compressionLevel),this.compressionLevel),toUncompressedFloat(dataViewFloatForCompressionLevel(I,6,this.compressionLevel),this.compressionLevel),toUncompressedFloat(dataViewFloatForCompressionLevel(I,3,this.compressionLevel),this.compressionLevel)),Ze.computeCovariance(c,u,t,e,b,r)}}fillSplatColorArray(e,t,n,o,a){const r=this.splatCount;n=n||0,o=o||r-1,a===void 0&&(a=n);for(let l=n;l<=o;l++){const c=this.globalSplatIndexToSectionMap[l],u=this.sections[c],d=l-u.splatCountOffset,f=(l-n+a)*Ze.ColorComponentCount,g=u.bytesPerSplat*d+Ze.CompressionLevels[this.compressionLevel].ColorOffsetBytes,_=new Uint8Array(this.bufferData,u.dataBase+g);let b=_[3];b=b>=t?b:0,e[f]=_[0],e[f+1]=_[1],e[f+2]=_[2],e[f+3]=b}}static parseHeader(e){const t=new Uint8Array(e,0,Ze.HeaderSizeBytes),n=new Uint16Array(e,0,Ze.HeaderSizeBytes/2),o=new Uint32Array(e,0,Ze.HeaderSizeBytes/4),a=new Float32Array(e,0,Ze.HeaderSizeBytes/4),r=t[0],l=t[1],c=o[1],u=o[2],d=o[3],f=o[4],g=n[10],_=new Vector3(a[6],a[7],a[8]),b=a[9]||-DefaultSphericalHarmonics8BitCompressionHalfRange,B=a[10]||DefaultSphericalHarmonics8BitCompressionHalfRange;return{versionMajor:r,versionMinor:l,maxSectionCount:c,sectionCount:u,maxSplatCount:d,splatCount:f,compressionLevel:g,sceneCenter:_,minSphericalHarmonicsCoeff:b,maxSphericalHarmonicsCoeff:B}}static writeHeaderCountsToBuffer(e,t,n){const o=new Uint32Array(n,0,Ze.HeaderSizeBytes/4);o[2]=e,o[4]=t}static writeHeaderToBuffer(e,t){const n=new Uint8Array(t,0,Ze.HeaderSizeBytes),o=new Uint16Array(t,0,Ze.HeaderSizeBytes/2),a=new Uint32Array(t,0,Ze.HeaderSizeBytes/4),r=new Float32Array(t,0,Ze.HeaderSizeBytes/4);n[0]=e.versionMajor,n[1]=e.versionMinor,n[2]=0,n[3]=0,a[1]=e.maxSectionCount,a[2]=e.sectionCount,a[3]=e.maxSplatCount,a[4]=e.splatCount,o[10]=e.compressionLevel,r[6]=e.sceneCenter.x,r[7]=e.sceneCenter.y,r[8]=e.sceneCenter.z,r[9]=e.minSphericalHarmonicsCoeff||-DefaultSphericalHarmonics8BitCompressionHalfRange,r[10]=e.maxSphericalHarmonicsCoeff||DefaultSphericalHarmonics8BitCompressionHalfRange}static parseSectionHeaders(e,t,n=0,o){const a=e.compressionLevel,r=e.maxSectionCount,l=new Uint16Array(t,n,r*Ze.SectionHeaderSizeBytes/2),c=new Uint32Array(t,n,r*Ze.SectionHeaderSizeBytes/4),u=new Float32Array(t,n,r*Ze.SectionHeaderSizeBytes/4),d=[];let f=0,g=f/2,_=f/4,b=Ze.HeaderSizeBytes+e.maxSectionCount*Ze.SectionHeaderSizeBytes,B=0;for(let I=0;I<r;I++){const C=c[_+1],R=c[_+2],L=c[_+3],F=u[_+4],N=F/2,k=l[g+10],Q=c[_+6]||Ze.CompressionLevels[a].ScaleRange,z=c[_+8],G=c[_+9],O=G*4,q=k*L+O,ce=l[g+20],{bytesPerSplat:ne}=Ze.calculateComponentStorage(a,ce),ue=ne*C,pe=ue+q,fe={bytesPerSplat:ne,splatCountOffset:B,splatCount:o?C:0,maxSplatCount:C,bucketSize:R,bucketCount:L,bucketBlockSize:F,halfBucketBlockSize:N,bucketStorageSizeBytes:k,bucketsStorageSizeBytes:q,splatDataStorageSizeBytes:ue,storageSizeBytes:pe,compressionScaleRange:Q,compressionScaleFactor:N/Q,base:b,bucketsBase:b+O,dataBase:b+q,fullBucketCount:z,partiallyFilledBucketCount:G,sphericalHarmonicsDegree:ce};d[I]=fe,b+=pe,f+=Ze.SectionHeaderSizeBytes,g=f/2,_=f/4,B+=C}return d}static writeSectionHeaderToBuffer(e,t,n,o=0){const a=new Uint16Array(n,o,Ze.SectionHeaderSizeBytes/2),r=new Uint32Array(n,o,Ze.SectionHeaderSizeBytes/4),l=new Float32Array(n,o,Ze.SectionHeaderSizeBytes/4);r[0]=e.splatCount,r[1]=e.maxSplatCount,r[2]=t>=1?e.bucketSize:0,r[3]=t>=1?e.bucketCount:0,l[4]=t>=1?e.bucketBlockSize:0,a[10]=t>=1?Ze.BucketStorageSizeBytes:0,r[6]=t>=1?e.compressionScaleRange:0,r[7]=e.storageSizeBytes,r[8]=t>=1?e.fullBucketCount:0,r[9]=t>=1?e.partiallyFilledBucketCount:0,a[20]=e.sphericalHarmonicsDegree}static writeSectionHeaderSplatCountToBuffer(e,t,n=0){const o=new Uint32Array(t,n,Ze.SectionHeaderSizeBytes/4);o[0]=e}constructFromBuffer(e,t){this.bufferData=e,this.globalSplatIndexToLocalSplatIndexMap=[],this.globalSplatIndexToSectionMap=[];const n=Ze.parseHeader(this.bufferData);this.versionMajor=n.versionMajor,this.versionMinor=n.versionMinor,this.maxSectionCount=n.maxSectionCount,this.sectionCount=t?n.maxSectionCount:0,this.maxSplatCount=n.maxSplatCount,this.splatCount=t?n.maxSplatCount:0,this.compressionLevel=n.compressionLevel,this.sceneCenter=new Vector3().copy(n.sceneCenter),this.minSphericalHarmonicsCoeff=n.minSphericalHarmonicsCoeff,this.maxSphericalHarmonicsCoeff=n.maxSphericalHarmonicsCoeff,this.sections=Ze.parseSectionHeaders(n,this.bufferData,Ze.HeaderSizeBytes,t),this.linkBufferArrays(),this.buildMaps()}static calculateComponentStorage(e,t){const n=Ze.CompressionLevels[e].BytesPerCenter,o=Ze.CompressionLevels[e].BytesPerScale,a=Ze.CompressionLevels[e].BytesPerRotation,r=Ze.CompressionLevels[e].BytesPerColor,l=getSphericalHarmonicsComponentCountForDegree(t),c=Ze.CompressionLevels[e].BytesPerSphericalHarmonicsComponent*l,u=n+o+a+r+c;return{bytesPerCenter:n,bytesPerScale:o,bytesPerRotation:a,bytesPerColor:r,sphericalHarmonicsComponentsPerSplat:l,sphericalHarmonicsBytesPerSplat:c,bytesPerSplat:u}}linkBufferArrays(){for(let e=0;e<this.maxSectionCount;e++){const t=this.sections[e];t.bucketArray=new Float32Array(this.bufferData,t.bucketsBase,t.bucketCount*Ze.BucketStorageSizeFloats),t.partiallyFilledBucketCount>0&&(t.partiallyFilledBucketLengths=new Uint32Array(this.bufferData,t.base,t.partiallyFilledBucketCount))}}buildMaps(){let e=0;for(let t=0;t<this.maxSectionCount;t++){const n=this.sections[t];for(let o=0;o<n.maxSplatCount;o++){const a=e+o;this.globalSplatIndexToLocalSplatIndexMap[a]=o,this.globalSplatIndexToSectionMap[a]=t}e+=n.maxSplatCount}}updateLoadedCounts(e,t){Ze.writeHeaderCountsToBuffer(e,t,this.bufferData),this.sectionCount=e,this.splatCount=t}updateSectionLoadedCounts(e,t){const n=Ze.HeaderSizeBytes+Ze.SectionHeaderSizeBytes*e;Ze.writeSectionHeaderSplatCountToBuffer(t,this.bufferData,n),this.sections[e].splatCount=t}static generateFromUncompressedSplatArrays(e,t,n,o,a,r,l=[]){let c=0;for(let N=0;N<e.length;N++){const k=e[N];c=Math.max(k.sphericalHarmonicsDegree,c)}let u,d;for(let N=0;N<e.length;N++){const k=e[N];for(let Q=0;Q<k.splats.length;Q++){const z=k.splats[Q];for(let G=UncompressedSplatArray.OFFSET.FRC0;G<UncompressedSplatArray.OFFSET.FRC23&&G<z.length;G++)(!u||z[G]<u)&&(u=z[G]),(!d||z[G]>d)&&(d=z[G])}}u=u||-DefaultSphericalHarmonics8BitCompressionHalfRange,d=d||DefaultSphericalHarmonics8BitCompressionHalfRange;const{bytesPerSplat:f}=Ze.calculateComponentStorage(n,c),g=Ze.CompressionLevels[n].ScaleRange,_=[],b=[];let B=0;for(let N=0;N<e.length;N++){const k=e[N],Q=new UncompressedSplatArray(c);for(let _e=0;_e<k.splatCount;_e++){const De=k.splats[_e];(De[UncompressedSplatArray.OFFSET.OPACITY]||0)>=t&&Q.addSplat(De)}const z=l[N]||{},G=(z.blockSizeFactor||1)*(a||Ze.BucketBlockSize),O=Math.ceil((z.bucketSizeFactor||1)*(r||Ze.BucketSize)),q=Ze.computeBucketsForUncompressedSplatArray(Q,G,O),ce=q.fullBuckets.length,ne=q.partiallyFullBuckets.map(_e=>_e.splats.length),ue=ne.length,pe=[...q.fullBuckets,...q.partiallyFullBuckets],fe=Q.splats.length*f,ee=ue*4,J=n>=1?pe.length*Ze.BucketStorageSizeBytes+ee:0,ye=fe+J,Te=new ArrayBuffer(ye),xe=g/(G*.5),ve=new Vector3;let he=0;for(let _e=0;_e<pe.length;_e++){const De=pe[_e];ve.fromArray(De.center);for(let de=0;de<De.splats.length;de++){let Me=De.splats[de];const Ne=Q.splats[Me],Pe=J+he*f;Ze.writeSplatDataToSectionBuffer(Ne,Te,Pe,n,c,ve,xe,g,u,d),he++}}if(B+=he,n>=1){const _e=new Uint32Array(Te,0,ne.length*4);for(let de=0;de<ne.length;de++)_e[de]=ne[de];const De=new Float32Array(Te,ee,pe.length*Ze.BucketStorageSizeFloats);for(let de=0;de<pe.length;de++){const Me=pe[de],Ne=de*3;De[Ne]=Me.center[0],De[Ne+1]=Me.center[1],De[Ne+2]=Me.center[2]}}_.push(Te);const le=new ArrayBuffer(Ze.SectionHeaderSizeBytes);Ze.writeSectionHeaderToBuffer({maxSplatCount:he,splatCount:he,bucketSize:O,bucketCount:pe.length,bucketBlockSize:G,compressionScaleRange:g,storageSizeBytes:ye,fullBucketCount:ce,partiallyFilledBucketCount:ue,sphericalHarmonicsDegree:c},n,le,0),b.push(le)}let I=0;for(let N of _)I+=N.byteLength;const C=Ze.HeaderSizeBytes+Ze.SectionHeaderSizeBytes*_.length+I,R=new ArrayBuffer(C);Ze.writeHeaderToBuffer({versionMajor:0,versionMinor:1,maxSectionCount:_.length,sectionCount:_.length,maxSplatCount:B,splatCount:B,compressionLevel:n,sceneCenter:o,minSphericalHarmonicsCoeff:u,maxSphericalHarmonicsCoeff:d},R);let L=Ze.HeaderSizeBytes;for(let N of b)new Uint8Array(R,L,Ze.SectionHeaderSizeBytes).set(new Uint8Array(N)),L+=Ze.SectionHeaderSizeBytes;for(let N of _)new Uint8Array(R,L,N.byteLength).set(new Uint8Array(N)),L+=N.byteLength;return new Ze(R)}static computeBucketsForUncompressedSplatArray(e,t,n){let o=e.splatCount;const a=t/2,r=new Vector3,l=new Vector3;for(let B=0;B<o;B++){const I=e.splats[B],C=[I[UncompressedSplatArray.OFFSET.X],I[UncompressedSplatArray.OFFSET.Y],I[UncompressedSplatArray.OFFSET.Z]];(B===0||C[0]<r.x)&&(r.x=C[0]),(B===0||C[0]>l.x)&&(l.x=C[0]),(B===0||C[1]<r.y)&&(r.y=C[1]),(B===0||C[1]>l.y)&&(l.y=C[1]),(B===0||C[2]<r.z)&&(r.z=C[2]),(B===0||C[2]>l.z)&&(l.z=C[2])}const c=new Vector3().copy(l).sub(r),u=Math.ceil(c.y/t),d=Math.ceil(c.z/t),f=new Vector3,g=[],_={};for(let B=0;B<o;B++){const I=e.splats[B],C=[I[UncompressedSplatArray.OFFSET.X],I[UncompressedSplatArray.OFFSET.Y],I[UncompressedSplatArray.OFFSET.Z]],R=Math.floor((C[0]-r.x)/t),L=Math.floor((C[1]-r.y)/t),F=Math.floor((C[2]-r.z)/t);f.x=R*t+r.x+a,f.y=L*t+r.y+a,f.z=F*t+r.z+a;const N=R*(u*d)+L*d+F;let k=_[N];k||(_[N]=k={splats:[],center:f.toArray()}),k.splats.push(B),k.splats.length>=n&&(g.push(k),_[N]=null)}const b=[];for(let B in _)if(_.hasOwnProperty(B)){const I=_[B];I&&b.push(I)}return{fullBuckets:g,partiallyFullBuckets:b}}static preallocateUncompressed(e,t){const n=Ze.CompressionLevels[0].SphericalHarmonicsDegrees[t],o=Ze.HeaderSizeBytes+Ze.SectionHeaderSizeBytes,a=o+n.BytesPerSplat*e,r=new ArrayBuffer(a);return Ze.writeHeaderToBuffer({versionMajor:Ze.CurrentMajorVersion,versionMinor:Ze.CurrentMinorVersion,maxSectionCount:1,sectionCount:1,maxSplatCount:e,splatCount:e,compressionLevel:0,sceneCenter:new Vector3},r),Ze.writeSectionHeaderToBuffer({maxSplatCount:e,splatCount:e,bucketSize:0,bucketCount:0,bucketBlockSize:0,compressionScaleRange:0,storageSizeBytes:0,fullBucketCount:0,partiallyFilledBucketCount:0,sphericalHarmonicsDegree:t},0,r,Ze.HeaderSizeBytes),{splatBuffer:new Ze(r,!0),splatBufferDataOffsetBytes:o}}};At(Ze,"CurrentMajorVersion",0),At(Ze,"CurrentMinorVersion",1),At(Ze,"CenterComponentCount",3),At(Ze,"ScaleComponentCount",3),At(Ze,"RotationComponentCount",4),At(Ze,"ColorComponentCount",4),At(Ze,"CovarianceComponentCount",6),At(Ze,"SplatScaleOffsetFloat",3),At(Ze,"SplatRotationOffsetFloat",6),At(Ze,"CompressionLevels",{0:{BytesPerCenter:12,BytesPerScale:12,BytesPerRotation:16,BytesPerColor:4,ScaleOffsetBytes:12,RotationffsetBytes:24,ColorOffsetBytes:40,SphericalHarmonicsOffsetBytes:44,ScaleRange:1,BytesPerSphericalHarmonicsComponent:4,SphericalHarmonicsOffsetFloat:11,SphericalHarmonicsDegrees:{0:{BytesPerSplat:44},1:{BytesPerSplat:80},2:{BytesPerSplat:140}}},1:{BytesPerCenter:6,BytesPerScale:6,BytesPerRotation:8,BytesPerColor:4,ScaleOffsetBytes:6,RotationffsetBytes:12,ColorOffsetBytes:20,SphericalHarmonicsOffsetBytes:24,ScaleRange:32767,BytesPerSphericalHarmonicsComponent:2,SphericalHarmonicsOffsetFloat:12,SphericalHarmonicsDegrees:{0:{BytesPerSplat:24},1:{BytesPerSplat:42},2:{BytesPerSplat:72}}},2:{BytesPerCenter:6,BytesPerScale:6,BytesPerRotation:8,BytesPerColor:4,ScaleOffsetBytes:6,RotationffsetBytes:12,ColorOffsetBytes:20,SphericalHarmonicsOffsetBytes:24,ScaleRange:32767,BytesPerSphericalHarmonicsComponent:1,SphericalHarmonicsOffsetFloat:12,SphericalHarmonicsDegrees:{0:{BytesPerSplat:24},1:{BytesPerSplat:33},2:{BytesPerSplat:48}}}}),At(Ze,"CovarianceSizeFloats",6),At(Ze,"HeaderSizeBytes",4096),At(Ze,"SectionHeaderSizeBytes",1024),At(Ze,"BucketStorageSizeBytes",12),At(Ze,"BucketStorageSizeFloats",3),At(Ze,"BucketBlockSize",5),At(Ze,"BucketSize",256),At(Ze,"computeCovariance",function(){const e=new Matrix4,t=new Matrix3,n=new Matrix3,o=new Matrix3,a=new Matrix3,r=new Matrix3,l=new Matrix3;return function(c,u,d,f,g=0,_){e.makeScale(c.x,c.y,c.z),t.setFromMatrix4(e),e.makeRotationFromQuaternion(u),n.setFromMatrix4(e),o.copy(n).multiply(t),a.copy(o).transpose().premultiply(o),d&&(r.setFromMatrix4(d),l.copy(r).transpose(),a.multiply(l),a.premultiply(r)),_>=1?(f[g]=toHalfFloat(a.elements[0]),f[g+1]=toHalfFloat(a.elements[3]),f[g+2]=toHalfFloat(a.elements[6]),f[g+3]=toHalfFloat(a.elements[4]),f[g+4]=toHalfFloat(a.elements[7]),f[g+5]=toHalfFloat(a.elements[8])):(f[g]=a.elements[0],f[g+1]=a.elements[3],f[g+2]=a.elements[6],f[g+3]=a.elements[4],f[g+4]=a.elements[7],f[g+5]=a.elements[8])}}()),At(Ze,"dot3",(e,t,n,o,a)=>{a[0]=a[1]=a[2]=0;const r=o[0],l=o[1],c=o[2];Ze.addInto3(e[0]*r,e[1]*r,e[2]*r,a),Ze.addInto3(t[0]*l,t[1]*l,t[2]*l,a),Ze.addInto3(n[0]*c,n[1]*c,n[2]*c,a)}),At(Ze,"addInto3",(e,t,n,o)=>{o[0]=o[0]+e,o[1]=o[1]+t,o[2]=o[2]+n}),At(Ze,"dot5",(e,t,n,o,a,r,l)=>{l[0]=l[1]=l[2]=0;const c=r[0],u=r[1],d=r[2],f=r[3],g=r[4];Ze.addInto3(e[0]*c,e[1]*c,e[2]*c,l),Ze.addInto3(t[0]*u,t[1]*u,t[2]*u,l),Ze.addInto3(n[0]*d,n[1]*d,n[2]*d,l),Ze.addInto3(o[0]*f,o[1]*f,o[2]*f,l),Ze.addInto3(a[0]*g,a[1]*g,a[2]*g,l)}),At(Ze,"rotateSphericalHarmonics3",(e,t,n,o,a,r,l,c,u)=>{Ze.dot3(e,t,n,o,l),Ze.dot3(e,t,n,a,c),Ze.dot3(e,t,n,r,u)}),At(Ze,"rotateSphericalHarmonics5",(e,t,n,o,a,r,l,c,u,d,f,g,_,b,B,I,C,R)=>{const L=Math.sqrt(.25),F=Math.sqrt(3/4),N=Math.sqrt(1/3),k=Math.sqrt(4/3),Q=Math.sqrt(1/12);u[0]=L*(c[2]*r[0]+c[0]*r[2]+(r[2]*c[0]+r[0]*c[2])),u[1]=c[1]*r[0]+r[1]*c[0],u[2]=F*(c[1]*r[1]+r[1]*c[1]),u[3]=c[1]*r[2]+r[1]*c[2],u[4]=L*(c[2]*r[2]-c[0]*r[0]+(r[2]*c[2]-r[0]*c[0])),Ze.dot5(e,t,n,o,a,u,b),d[0]=L*(l[2]*r[0]+l[0]*r[2]+(r[2]*l[0]+r[0]*l[2])),d[1]=l[1]*r[0]+r[1]*l[0],d[2]=F*(l[1]*r[1]+r[1]*l[1]),d[3]=l[1]*r[2]+r[1]*l[2],d[4]=L*(l[2]*r[2]-l[0]*r[0]+(r[2]*l[2]-r[0]*l[0])),Ze.dot5(e,t,n,o,a,d,B),f[0]=N*(l[2]*l[0]+l[0]*l[2])+-Q*(c[2]*c[0]+c[0]*c[2]+(r[2]*r[0]+r[0]*r[2])),f[1]=k*l[1]*l[0]+-N*(c[1]*c[0]+r[1]*r[0]),f[2]=l[1]*l[1]+-L*(c[1]*c[1]+r[1]*r[1]),f[3]=k*l[1]*l[2]+-N*(c[1]*c[2]+r[1]*r[2]),f[4]=N*(l[2]*l[2]-l[0]*l[0])+-Q*(c[2]*c[2]-c[0]*c[0]+(r[2]*r[2]-r[0]*r[0])),Ze.dot5(e,t,n,o,a,f,I),g[0]=L*(l[2]*c[0]+l[0]*c[2]+(c[2]*l[0]+c[0]*l[2])),g[1]=l[1]*c[0]+c[1]*l[0],g[2]=F*(l[1]*c[1]+c[1]*l[1]),g[3]=l[1]*c[2]+c[1]*l[2],g[4]=L*(l[2]*c[2]-l[0]*c[0]+(c[2]*l[2]-c[0]*l[0])),Ze.dot5(e,t,n,o,a,g,C),_[0]=L*(c[2]*c[0]+c[0]*c[2]-(r[2]*r[0]+r[0]*r[2])),_[1]=c[1]*c[0]-r[1]*r[0],_[2]=F*(c[1]*c[1]-r[1]*r[1]),_[3]=c[1]*c[2]-r[1]*r[2],_[4]=L*(c[2]*c[2]-c[0]*c[0]-(r[2]*r[2]-r[0]*r[0])),Ze.dot5(e,t,n,o,a,_,R)}),At(Ze,"writeSplatDataToSectionBuffer",function(){const e=new ArrayBuffer(12),t=new ArrayBuffer(12),n=new ArrayBuffer(16),o=new ArrayBuffer(4),a=new ArrayBuffer(256),r=new Quaternion,l=new Vector3,c=new Vector3,{X:u,Y:d,Z:f,SCALE0:g,SCALE1:_,SCALE2:b,ROTATION0:B,ROTATION1:I,ROTATION2:C,ROTATION3:R,FDC0:L,FDC1:F,FDC2:N,OPACITY:k,FRC0:Q,FRC9:z}=UncompressedSplatArray.OFFSET,G=(O,q,ce)=>{const ne=ce*2+1;return O=Math.round(O*q)+ce,clamp(O,0,ne)};return function(O,q,ce,ne,ue,pe,fe,ee,J=-DefaultSphericalHarmonics8BitCompressionHalfRange,ye=DefaultSphericalHarmonics8BitCompressionHalfRange){const Te=getSphericalHarmonicsComponentCountForDegree(ue),xe=Ze.CompressionLevels[ne].BytesPerCenter,ve=Ze.CompressionLevels[ne].BytesPerScale,he=Ze.CompressionLevels[ne].BytesPerRotation,le=Ze.CompressionLevels[ne].BytesPerColor,_e=ce,De=_e+xe,de=De+ve,Me=de+he,Ne=Me+le;if(O[B]!==void 0?(r.set(O[B],O[I],O[C],O[R]),r.normalize()):r.set(1,0,0,0),O[g]!==void 0?l.set(O[g]||0,O[_]||0,O[b]||0):l.set(0,0,0),ne===0){const nt=new Float32Array(q,_e,Ze.CenterComponentCount),ie=new Float32Array(q,de,Ze.RotationComponentCount),oe=new Float32Array(q,De,Ze.ScaleComponentCount);if(ie.set([r.x,r.y,r.z,r.w]),oe.set([l.x,l.y,l.z]),nt.set([O[u],O[d],O[f]]),ue>0){const $=new Float32Array(q,Ne,Te);if(ue>=1){for(let Se=0;Se<9;Se++)$[Se]=O[Q+Se]||0;if(ue>=2)for(let Se=0;Se<15;Se++)$[Se+9]=O[z+Se]||0}}}else{const nt=new Uint16Array(e,0,Ze.CenterComponentCount),ie=new Uint16Array(n,0,Ze.RotationComponentCount),oe=new Uint16Array(t,0,Ze.ScaleComponentCount);if(ie.set([toHalfFloat(r.x),toHalfFloat(r.y),toHalfFloat(r.z),toHalfFloat(r.w)]),oe.set([toHalfFloat(l.x),toHalfFloat(l.y),toHalfFloat(l.z)]),c.set(O[u],O[d],O[f]).sub(pe),c.x=G(c.x,fe,ee),c.y=G(c.y,fe,ee),c.z=G(c.z,fe,ee),nt.set([c.x,c.y,c.z]),ue>0){const $=ne===1?Uint16Array:Uint8Array,Se=ne===1?2:1,Be=new $(a,0,Te);if(ue>=1){for(let Fe=0;Fe<9;Fe++){const $e=O[Q+Fe]||0;Be[Fe]=ne===1?toHalfFloat($e):toUint8($e,J,ye)}const we=9*Se;if(copyBetweenBuffers(Be.buffer,0,q,Ne,we),ue>=2){for(let Fe=0;Fe<15;Fe++){const $e=O[z+Fe]||0;Be[Fe+9]=ne===1?toHalfFloat($e):toUint8($e,J,ye)}copyBetweenBuffers(Be.buffer,we,q,Ne+we,15*Se)}}}copyBetweenBuffers(nt.buffer,0,q,_e,6),copyBetweenBuffers(oe.buffer,0,q,De,6),copyBetweenBuffers(ie.buffer,0,q,de,8)}const Pe=new Uint8ClampedArray(o,0,4);Pe.set([O[L]||0,O[F]||0,O[N]||0]),Pe[3]=O[k]||0,copyBetweenBuffers(Pe.buffer,0,q,Me,4)}}());let SplatBuffer=Ze;const HeaderMagicBytes=new Uint8Array([112,108,121,10]),HeaderEndTokenBytes=new Uint8Array([10,101,110,100,95,104,101,97,100,101,114,10]),HeaderEndToken="end_header",DataTypeMap=new Map([["char",Int8Array],["uchar",Uint8Array],["short",Int16Array],["ushort",Uint16Array],["int",Int32Array],["uint",Uint32Array],["float",Float32Array],["double",Float64Array]]),unpackUnorm=(s,e)=>{const t=(1<<e)-1;return(s&t)/t},unpack111011=(s,e)=>{s.x=unpackUnorm(e>>>21,11),s.y=unpackUnorm(e>>>11,10),s.z=unpackUnorm(e,11)},unpack8888=(s,e)=>{s.x=unpackUnorm(e>>>24,8),s.y=unpackUnorm(e>>>16,8),s.z=unpackUnorm(e>>>8,8),s.w=unpackUnorm(e,8)},unpackRot=(s,e)=>{const t=1/(Math.sqrt(2)*.5),n=(unpackUnorm(e>>>20,10)-.5)*t,o=(unpackUnorm(e>>>10,10)-.5)*t,a=(unpackUnorm(e,10)-.5)*t,r=Math.sqrt(1-(n*n+o*o+a*a));switch(e>>>30){case 0:s.set(r,n,o,a);break;case 1:s.set(n,r,o,a);break;case 2:s.set(n,o,r,a);break;case 3:s.set(n,o,a,r);break}},lerp=(s,e,t)=>s*(1-t)+e*t,getElementPropStorage=(s,e)=>{var t;return(t=s.properties.find(n=>n.name===e&&n.storage))==null?void 0:t.storage},rn=class rn{static decodeHeaderText(e){let t,n,o,a;const r=e.split(`
`).filter(f=>!f.startsWith("comment "));let l=0,c=!1;for(let f=1;f<r.length;++f){const g=r[f].split(" ");switch(g[0]){case"format":if(g[1]!=="binary_little_endian")throw new Error("Unsupported ply format");break;case"element":t={name:g[1],count:parseInt(g[2],10),properties:[],storageSizeBytes:0},t.name==="chunk"?n=t:t.name==="vertex"?o=t:t.name==="sh"&&(a=t);break;case"property":{if(!DataTypeMap.has(g[1]))throw new Error(`Unrecognized property data type '${g[1]}' in ply header`);const _=DataTypeMap.get(g[1]),b=_.BYTES_PER_ELEMENT*t.count;t.name==="vertex"&&(l+=_.BYTES_PER_ELEMENT),t.properties.push({type:g[1],name:g[2],storage:null,byteSize:_.BYTES_PER_ELEMENT,storageSizeByes:b}),t.storageSizeBytes+=b;break}case HeaderEndToken:c=!0;break;default:throw new Error(`Unrecognized header value '${g[0]}' in ply header`)}if(c)break}let u=0,d=0;return a&&(d=a.properties.length,a.properties.length>=45?u=3:a.properties.length>=24?u=2:a.properties.length>=9&&(u=1)),{chunkElement:n,vertexElement:o,shElement:a,bytesPerSplat:l,headerSizeBytes:e.indexOf(HeaderEndToken)+HeaderEndToken.length+1,sphericalHarmonicsDegree:u,sphericalHarmonicsPerSplat:d}}static decodeHeader(e){const t=(_,b)=>{const B=_.length-b.length;let I,C;for(I=0;I<=B;++I){for(C=0;C<b.length&&_[I+C]===b[C];++C);if(C===b.length)return I}return-1},n=(_,b)=>{if(_.length<b.length)return!1;for(let B=0;B<b.length;++B)if(_[B]!==b[B])return!1;return!0};let o=new Uint8Array(e),a;if(o.length>=HeaderMagicBytes.length&&!n(o,HeaderMagicBytes))throw new Error("Invalid PLY header");if(a=t(o,HeaderEndTokenBytes),a===-1)throw new Error("End of PLY header not found");const r=new TextDecoder("ascii").decode(o.slice(0,a)),{chunkElement:l,vertexElement:c,shElement:u,sphericalHarmonicsDegree:d,sphericalHarmonicsPerSplat:f,bytesPerSplat:g}=rn.decodeHeaderText(r);return{headerSizeBytes:a+HeaderEndTokenBytes.length,bytesPerSplat:g,chunkElement:l,vertexElement:c,shElement:u,sphericalHarmonicsDegree:d,sphericalHarmonicsPerSplat:f}}static readElementData(e,t,n,o,a,r=null){let l=t instanceof DataView?t:new DataView(t);o=o||0,a=a||e.count-1;for(let c=o;c<=a;++c)for(let u=0;u<e.properties.length;++u){const d=e.properties[u],f=DataTypeMap.get(d.type),g=f.BYTES_PER_ELEMENT*e.count;if((!d.storage||d.storage.byteLength<g)&&(!r||r(d.name))&&(d.storage=new f(e.count)),d.storage)switch(d.type){case"char":d.storage[c]=l.getInt8(n);break;case"uchar":d.storage[c]=l.getUint8(n);break;case"short":d.storage[c]=l.getInt16(n,!0);break;case"ushort":d.storage[c]=l.getUint16(n,!0);break;case"int":d.storage[c]=l.getInt32(n,!0);break;case"uint":d.storage[c]=l.getUint32(n,!0);break;case"float":d.storage[c]=l.getFloat32(n,!0);break;case"double":d.storage[c]=l.getFloat64(n,!0);break}n+=d.byteSize}return n}static readPly(e,t=null){const n=rn.decodeHeader(e);let o=rn.readElementData(n.chunkElement,e,n.headerSizeBytes,null,null,t);return o=rn.readElementData(n.vertexElement,e,o,null,null,t),rn.readElementData(n.shElement,e,o,null,null,t),{chunkElement:n.chunkElement,vertexElement:n.vertexElement,shElement:n.shElement,sphericalHarmonicsDegree:n.sphericalHarmonicsDegree,sphericalHarmonicsPerSplat:n.sphericalHarmonicsPerSplat}}static getElementStorageArrays(e,t,n){const o={};if(t){const a=getElementPropStorage(e,"min_r"),r=getElementPropStorage(e,"min_g"),l=getElementPropStorage(e,"min_b"),c=getElementPropStorage(e,"max_r"),u=getElementPropStorage(e,"max_g"),d=getElementPropStorage(e,"max_b"),f=getElementPropStorage(e,"min_x"),g=getElementPropStorage(e,"min_y"),_=getElementPropStorage(e,"min_z"),b=getElementPropStorage(e,"max_x"),B=getElementPropStorage(e,"max_y"),I=getElementPropStorage(e,"max_z"),C=getElementPropStorage(e,"min_scale_x"),R=getElementPropStorage(e,"min_scale_y"),L=getElementPropStorage(e,"min_scale_z"),F=getElementPropStorage(e,"max_scale_x"),N=getElementPropStorage(e,"max_scale_y"),k=getElementPropStorage(e,"max_scale_z"),Q=getElementPropStorage(t,"packed_position"),z=getElementPropStorage(t,"packed_rotation"),G=getElementPropStorage(t,"packed_scale"),O=getElementPropStorage(t,"packed_color");o.colorExtremes={minR:a,maxR:c,minG:r,maxG:u,minB:l,maxB:d},o.positionExtremes={minX:f,maxX:b,minY:g,maxY:B,minZ:_,maxZ:I},o.scaleExtremes={minScaleX:C,maxScaleX:F,minScaleY:R,maxScaleY:N,minScaleZ:L,maxScaleZ:k},o.position=Q,o.rotation=z,o.scale=G,o.color=O}if(n){const a={};for(let r=0;r<45;r++){const l=`f_rest_${r}`,c=getElementPropStorage(n,l);if(c)a[l]=c;else break}o.sh=a}return o}static parseToUncompressedSplatBufferSection(e,t,n,o,a,r,l,c,u=null){rn.readElementData(t,r,0,n,o,u);const d=SplatBuffer.CompressionLevels[0].SphericalHarmonicsDegrees[0].BytesPerSplat,{positionExtremes:f,scaleExtremes:g,colorExtremes:_,position:b,rotation:B,scale:I,color:C}=rn.getElementStorageArrays(e,t),R=UncompressedSplatArray.createSplat();for(let L=n;L<=o;++L){rn.decompressBaseSplat(L,a,b,f,I,g,B,_,C,R);const F=L*d+c;SplatBuffer.writeSplatDataToSectionBuffer(R,l,F,0,0)}}static parseToUncompressedSplatArraySection(e,t,n,o,a,r,l,c=null){rn.readElementData(t,r,0,n,o,c);const{positionExtremes:u,scaleExtremes:d,colorExtremes:f,position:g,rotation:_,scale:b,color:B}=rn.getElementStorageArrays(e,t);for(let I=n;I<=o;++I){const C=UncompressedSplatArray.createSplat();rn.decompressBaseSplat(I,a,g,u,b,d,_,f,B,C),l.addSplat(C)}}static parseSphericalHarmonicsToUncompressedSplatArraySection(e,t,n,o,a,r,l,c,u,d=null){rn.readElementData(t,a,r,n,o,d);const{sh:f}=rn.getElementStorageArrays(e,void 0,t),g=Object.values(f);for(let _=n;_<=o;++_)rn.decompressSphericalHarmonics(_,g,l,c,u.splats[_])}static parseToUncompressedSplatArray(e,t){const{chunkElement:n,vertexElement:o,shElement:a,sphericalHarmonicsDegree:r}=rn.readPly(e);t=Math.min(t,r);const l=new UncompressedSplatArray(t),{positionExtremes:c,scaleExtremes:u,colorExtremes:d,position:f,rotation:g,scale:_,color:b}=rn.getElementStorageArrays(n,o);let B;if(t>0){const{sh:I}=rn.getElementStorageArrays(n,void 0,a);B=Object.values(I)}for(let I=0;I<o.count;++I){l.addDefaultSplat();const C=l.getSplat(l.splatCount-1);rn.decompressBaseSplat(I,0,f,c,_,u,g,d,b,C),t>0&&rn.decompressSphericalHarmonics(I,B,t,r,C)}return l}static parseToUncompressedSplatBuffer(e,t){const{chunkElement:n,vertexElement:o,shElement:a,sphericalHarmonicsDegree:r}=rn.readPly(e);t=Math.min(t,r);const{splatBuffer:l,splatBufferDataOffsetBytes:c}=SplatBuffer.preallocateUncompressed(o.count,t),{positionExtremes:u,scaleExtremes:d,colorExtremes:f,position:g,rotation:_,scale:b,color:B}=rn.getElementStorageArrays(n,o);let I;if(t>0){const{sh:L}=rn.getElementStorageArrays(n,void 0,a);I=Object.values(L)}const C=SplatBuffer.CompressionLevels[0].SphericalHarmonicsDegrees[t].BytesPerSplat,R=UncompressedSplatArray.createSplat(t);for(let L=0;L<o.count;++L){rn.decompressBaseSplat(L,0,g,u,b,d,_,f,B,R),t>0&&rn.decompressSphericalHarmonics(L,I,t,r,R);const F=L*C+c;SplatBuffer.writeSplatDataToSectionBuffer(R,l.bufferData,F,0,t)}return l}};At(rn,"decompressBaseSplat",function(){const e=new Vector3,t=new Quaternion,n=new Vector3,o=new Vector4,a=UncompressedSplatArray.OFFSET;return function(r,l,c,u,d,f,g,_,b,B){B=B||UncompressedSplatArray.createSplat();const I=Math.floor((l+r)/256);return unpack111011(e,c[r]),unpackRot(t,g[r]),unpack111011(n,d[r]),unpack8888(o,b[r]),B[a.X]=lerp(u.minX[I],u.maxX[I],e.x),B[a.Y]=lerp(u.minY[I],u.maxY[I],e.y),B[a.Z]=lerp(u.minZ[I],u.maxZ[I],e.z),B[a.ROTATION0]=t.x,B[a.ROTATION1]=t.y,B[a.ROTATION2]=t.z,B[a.ROTATION3]=t.w,B[a.SCALE0]=Math.exp(lerp(f.minScaleX[I],f.maxScaleX[I],n.x)),B[a.SCALE1]=Math.exp(lerp(f.minScaleY[I],f.maxScaleY[I],n.y)),B[a.SCALE2]=Math.exp(lerp(f.minScaleZ[I],f.maxScaleZ[I],n.z)),_.minR&&_.maxR?B[a.FDC0]=clamp(Math.round(lerp(_.minR[I],_.maxR[I],o.x)*255),0,255):B[a.FDC0]=clamp(Math.floor(o.x*255),0,255),_.minG&&_.maxG?B[a.FDC1]=clamp(Math.round(lerp(_.minG[I],_.maxG[I],o.y)*255),0,255):B[a.FDC1]=clamp(Math.floor(o.y*255),0,255),_.minB&&_.maxB?B[a.FDC2]=clamp(Math.round(lerp(_.minB[I],_.maxB[I],o.z)*255),0,255):B[a.FDC2]=clamp(Math.floor(o.z*255),0,255),B[a.OPACITY]=clamp(Math.floor(o.w*255),0,255),B}}()),At(rn,"decompressSphericalHarmonics",function(){const e=[0,3,8,15],t=[0,1,2,9,10,11,12,13,24,25,26,27,28,29,30,3,4,5,14,15,16,17,18,31,32,33,34,35,36,37,6,7,8,19,20,21,22,23,38,39,40,41,42,43,44];return function(n,o,a,r,l){l=l||UncompressedSplatArray.createSplat();let c=e[a],u=e[r];for(let d=0;d<3;++d)for(let f=0;f<15;++f){const g=t[d*15+f];f<c&&f<u&&(l[UncompressedSplatArray.OFFSET.FRC0+g]=o[d*u+f][n]*(8/255)-4)}return l}}());let PlayCanvasCompressedPlyParser=rn;const PlyFormat={INRIAV1:0,INRIAV2:1,PlayCanvasCompressed:2},[FieldSizeIdDouble,FieldSizeIdInt,FieldSizeIdUInt,FieldSizeIdFloat,FieldSizeIdShort,FieldSizeIdUShort,FieldSizeIdUChar]=[0,1,2,3,4,5,6],FieldSizeStringMap={double:FieldSizeIdDouble,int:FieldSizeIdInt,uint:FieldSizeIdUInt,float:FieldSizeIdFloat,short:FieldSizeIdShort,ushort:FieldSizeIdUShort,uchar:FieldSizeIdUChar},FieldSize={[FieldSizeIdDouble]:8,[FieldSizeIdInt]:4,[FieldSizeIdUInt]:4,[FieldSizeIdFloat]:4,[FieldSizeIdShort]:2,[FieldSizeIdUShort]:2,[FieldSizeIdUChar]:1},Yn=class Yn{static decodeSectionHeader(e,t,n=0){const o=[];let a=!1,r=-1,l=0,c=!1,u=null;const d=[],f=[],g=[],_={};for(let C=n;C<e.length;C++){const R=e[C].trim();if(R.startsWith("element"))if(a){r--;break}else{a=!0,n=C,r=C;const L=R.split(" ");let F=0;for(let N of L){const k=N.trim();k.length>0&&(F++,F===2?u=k:F===3&&(l=parseInt(k)))}}else if(R.startsWith("property")){const L=R.match(/(\w+)\s+(\w+)\s+(\w+)/);if(L){const F=L[2],N=L[3];g.push(N);const k=t[N];_[N]=F;const Q=FieldSizeStringMap[F];k!==void 0&&(d.push(k),f[k]=Q)}}if(R===Yn.HeaderEndToken){c=!0;break}a&&(o.push(R),r++)}const b=[];let B=0;for(let C of g){const R=_[C];if(_.hasOwnProperty(C)){const L=t[C];L!==void 0&&(b[L]=B)}B+=FieldSize[FieldSizeStringMap[R]]}const I=Yn.decodeSphericalHarmonicsFromSectionHeader(g,t);return{headerLines:o,headerStartLine:n,headerEndLine:r,fieldTypes:f,fieldIds:d,fieldOffsets:b,bytesPerVertex:B,vertexCount:l,dataSizeBytes:B*l,endOfHeader:c,sectionName:u,sphericalHarmonicsDegree:I.degree,sphericalHarmonicsCoefficientsPerChannel:I.coefficientsPerChannel,sphericalHarmonicsDegree1Fields:I.degree1Fields,sphericalHarmonicsDegree2Fields:I.degree2Fields}}static decodeSphericalHarmonicsFromSectionHeader(e,t){let n=0,o=0;for(let c of e)c.startsWith("f_rest")&&n++;o=n/3;let a=0;o>=3&&(a=1),o>=8&&(a=2);let r=[],l=[];for(let c=0;c<3;c++){if(a>=1)for(let u=0;u<3;u++)r.push(t["f_rest_"+(u+o*c)]);if(a>=2)for(let u=0;u<5;u++)l.push(t["f_rest_"+(u+o*c+3)])}return{degree:a,coefficientsPerChannel:o,degree1Fields:r,degree2Fields:l}}static getHeaderSectionNames(e){const t=[];for(let n of e)if(n.startsWith("element")){const o=n.split(" ");let a=0;for(let r of o){const l=r.trim();l.length>0&&(a++,a===2&&t.push(l))}}return t}static checkTextForEndHeader(e){return!!e.includes(Yn.HeaderEndToken)}static checkBufferForEndHeader(e,t,n,o){const a=new Uint8Array(e,Math.max(0,t-n),n),r=o.decode(a);return Yn.checkTextForEndHeader(r)}static extractHeaderFromBufferToText(e){const t=new TextDecoder;let n=0,o="";const a=100;for(;;){if(n+a>=e.byteLength)throw new Error("End of file reached while searching for end of header");const r=new Uint8Array(e,n,a);if(o+=t.decode(r),n+=a,Yn.checkBufferForEndHeader(e,n,a*2,t))break}return o}static readHeaderFromBuffer(e){const t=new TextDecoder;let n=0,o="";const a=100;for(;;){if(n+a>=e.byteLength)throw new Error("End of file reached while searching for end of header");const r=new Uint8Array(e,n,a);if(o+=t.decode(r),n+=a,Yn.checkBufferForEndHeader(e,n,a*2,t))break}return o}static convertHeaderTextToLines(e){const t=e.split(`
`),n=[];for(let o=0;o<t.length;o++){const a=t[o].trim();if(n.push(a),a===Yn.HeaderEndToken)break}return n}static determineHeaderFormatFromHeaderText(e){const t=Yn.convertHeaderTextToLines(e);let n=PlyFormat.INRIAV1;for(let o=0;o<t.length;o++){const a=t[o].trim();if(a.startsWith("element chunk")||a.match(/[A-Za-z]*packed_[A-Za-z]*/))n=PlyFormat.PlayCanvasCompressed;else if(a.startsWith("element codebook_centers"))n=PlyFormat.INRIAV2;else if(a===Yn.HeaderEndToken)break}return n}static determineHeaderFormatFromPlyBuffer(e){const t=Yn.extractHeaderFromBufferToText(e);return Yn.determineHeaderFormatFromHeaderText(t)}static readVertex(e,t,n,o,a,r,l=!0){const c=n*t.bytesPerVertex+o,u=t.fieldOffsets,d=t.fieldTypes;for(let f of a){const g=d[f];g===FieldSizeIdFloat?r[f]=e.getFloat32(c+u[f],!0):g===FieldSizeIdShort?r[f]=e.getInt16(c+u[f],!0):g===FieldSizeIdUShort?r[f]=e.getUint16(c+u[f],!0):g===FieldSizeIdInt?r[f]=e.getInt32(c+u[f],!0):g===FieldSizeIdUInt?r[f]=e.getUint32(c+u[f],!0):g===FieldSizeIdUChar&&(l?r[f]=e.getUint8(c+u[f])/255:r[f]=e.getUint8(c+u[f]))}}};At(Yn,"HeaderEndToken","end_header");let PlyParserUtils=Yn;const BaseFieldNamesToRead=["scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3","x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","red","green","blue","f_rest_0"],BaseFieldsToReadIndexes=BaseFieldNamesToRead.map((s,e)=>e),[SCALE_0,SCALE_1,SCALE_2,ROT_0,ROT_1,ROT_2,ROT_3,X,Y,Z,F_DC_0,F_DC_1,F_DC_2,OPACITY,RED$1,GREEN$1,BLUE$1,F_REST_0]=BaseFieldsToReadIndexes,ei=class ei{static decodeHeaderLines(e){let t=0;e.forEach(d=>{d.includes("f_rest_")&&t++});let n=0;t>=45?n=45:t>=24?n=24:t>=9&&(n=9);let a=Array.from(Array(Math.max(n-1,0))).map((d,f)=>`f_rest_${f+1}`);const r=[...BaseFieldNamesToRead,...a],l=r.map((d,f)=>f),c=l.reduce((d,f)=>(d[r[f]]=f,d),{}),u=PlyParserUtils.decodeSectionHeader(e,c,0);return u.splatCount=u.vertexCount,u.bytesPerSplat=u.bytesPerVertex,u.fieldsToReadIndexes=l,u}static decodeHeaderText(e){const t=PlyParserUtils.convertHeaderTextToLines(e),n=ei.decodeHeaderLines(t);return n.headerText=e,n.headerSizeBytes=e.indexOf(PlyParserUtils.HeaderEndToken)+PlyParserUtils.HeaderEndToken.length+1,n}static decodeHeaderFromBuffer(e){const t=PlyParserUtils.readHeaderFromBuffer(e);return ei.decodeHeaderText(t)}static findSplatData(e,t){return new DataView(e,t.headerSizeBytes)}static parseToUncompressedSplatBufferSection(e,t,n,o,a,r,l,c=0){c=Math.min(c,e.sphericalHarmonicsDegree);const u=SplatBuffer.CompressionLevels[0].SphericalHarmonicsDegrees[c].BytesPerSplat;for(let d=t;d<=n;d++){const f=ei.parseToUncompressedSplat(o,d,e,a,c),g=d*u+l;SplatBuffer.writeSplatDataToSectionBuffer(f,r,g,0,c)}}static parseToUncompressedSplatArraySection(e,t,n,o,a,r,l=0){l=Math.min(l,e.sphericalHarmonicsDegree);for(let c=t;c<=n;c++){const u=ei.parseToUncompressedSplat(o,c,e,a,l);r.addSplat(u)}}static decodeSectionSplatData(e,t,n,o,a=!0){if(o=Math.min(o,n.sphericalHarmonicsDegree),a){const r=new UncompressedSplatArray(o);for(let l=0;l<t;l++){const c=ei.parseToUncompressedSplat(e,l,n,0,o);r.addSplat(c)}return r}else{const{splatBuffer:r,splatBufferDataOffsetBytes:l}=SplatBuffer.preallocateUncompressed(t,o);return ei.parseToUncompressedSplatBufferSection(n,0,t-1,e,0,r.bufferData,l,o),r}}static readSplat(e,t,n,o,a){return PlyParserUtils.readVertex(e,t,n,o,t.fieldsToReadIndexes,a,!0)}static parseToUncompressedSplatArray(e,t=0){const{header:n,splatCount:o,splatData:a}=separatePlyHeaderAndData(e);return ei.decodeSectionSplatData(a,o,n,t,!0)}static parseToUncompressedSplatBuffer(e,t=0){const{header:n,splatCount:o,splatData:a}=separatePlyHeaderAndData(e);return ei.decodeSectionSplatData(a,o,n,t,!1)}};At(ei,"parseToUncompressedSplat",function(){let e=[];const t=new Quaternion,n=UncompressedSplatArray.OFFSET.X,o=UncompressedSplatArray.OFFSET.Y,a=UncompressedSplatArray.OFFSET.Z,r=UncompressedSplatArray.OFFSET.SCALE0,l=UncompressedSplatArray.OFFSET.SCALE1,c=UncompressedSplatArray.OFFSET.SCALE2,u=UncompressedSplatArray.OFFSET.ROTATION0,d=UncompressedSplatArray.OFFSET.ROTATION1,f=UncompressedSplatArray.OFFSET.ROTATION2,g=UncompressedSplatArray.OFFSET.ROTATION3,_=UncompressedSplatArray.OFFSET.FDC0,b=UncompressedSplatArray.OFFSET.FDC1,B=UncompressedSplatArray.OFFSET.FDC2,I=UncompressedSplatArray.OFFSET.OPACITY,C=[];for(let R=0;R<45;R++)C[R]=UncompressedSplatArray.OFFSET.FRC0+R;return function(R,L,F,N=0,k=0){k=Math.min(k,F.sphericalHarmonicsDegree),ei.readSplat(R,F,L,N,e);const Q=UncompressedSplatArray.createSplat(k);if(e[SCALE_0]!==void 0?(Q[r]=Math.exp(e[SCALE_0]),Q[l]=Math.exp(e[SCALE_1]),Q[c]=Math.exp(e[SCALE_2])):(Q[r]=.01,Q[l]=.01,Q[c]=.01),e[F_DC_0]!==void 0){const z=.28209479177387814;Q[_]=(.5+z*e[F_DC_0])*255,Q[b]=(.5+z*e[F_DC_1])*255,Q[B]=(.5+z*e[F_DC_2])*255}else e[RED$1]!==void 0?(Q[_]=e[RED$1]*255,Q[b]=e[GREEN$1]*255,Q[B]=e[BLUE$1]*255):(Q[_]=0,Q[b]=0,Q[B]=0);if(e[OPACITY]!==void 0&&(Q[I]=1/(1+Math.exp(-e[OPACITY]))*255),Q[_]=clamp(Math.floor(Q[_]),0,255),Q[b]=clamp(Math.floor(Q[b]),0,255),Q[B]=clamp(Math.floor(Q[B]),0,255),Q[I]=clamp(Math.floor(Q[I]),0,255),k>=1&&e[F_REST_0]!==void 0){for(let z=0;z<9;z++)Q[C[z]]=e[F.sphericalHarmonicsDegree1Fields[z]];if(k>=2)for(let z=0;z<15;z++)Q[C[9+z]]=e[F.sphericalHarmonicsDegree2Fields[z]]}return t.set(e[ROT_0],e[ROT_1],e[ROT_2],e[ROT_3]),t.normalize(),Q[u]=t.x,Q[d]=t.y,Q[f]=t.z,Q[g]=t.w,Q[n]=e[X],Q[o]=e[Y],Q[a]=e[Z],Q}}());let INRIAV1PlyParser=ei;function separatePlyHeaderAndData(s){const e=INRIAV1PlyParser.decodeHeaderFromBuffer(s),t=e.splatCount,n=INRIAV1PlyParser.findSplatData(s,e);return{header:e,splatCount:t,splatData:n}}const CodeBookEntryNamesToRead=["features_dc","features_rest_0","features_rest_1","features_rest_2","features_rest_3","features_rest_4","features_rest_5","features_rest_6","features_rest_7","features_rest_8","features_rest_9","features_rest_10","features_rest_11","features_rest_12","features_rest_13","features_rest_14","opacity","scaling","rotation_re","rotation_im"],CodeBookEntriesToReadIndexes=CodeBookEntryNamesToRead.map((s,e)=>e),[CB_FEATURES_DC,CB_FEATURES_REST_0,CB_FEATURES_REST_3,CB_OPACITY,CB_SCALING,CB_ROTATION_RE,CB_ROTATION_IM]=[0,1,4,16,17,18,19],FieldNamesToRead=["scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3","x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","red","green","blue","f_rest_0","f_rest_1","f_rest_2","f_rest_3","f_rest_4","f_rest_5","f_rest_6","f_rest_7","f_rest_8","f_rest_9","f_rest_10","f_rest_11","f_rest_12","f_rest_13","f_rest_14","f_rest_15","f_rest_16","f_rest_17","f_rest_18","f_rest_19","f_rest_20","f_rest_21","f_rest_22","f_rest_23","f_rest_24","f_rest_25","f_rest_26","f_rest_27","f_rest_28","f_rest_29","f_rest_30","f_rest_31","f_rest_32","f_rest_33","f_rest_34","f_rest_35","f_rest_36","f_rest_37","f_rest_38","f_rest_39","f_rest_40","f_rest_41","f_rest_42","f_rest_43","f_rest_44","f_rest_45"],FieldsToReadIndexes=FieldNamesToRead.map((s,e)=>e),[PLY_SCALE_0,PLY_SCALE_1,PLY_SCALE_2,PLY_ROT_0,PLY_ROT_1,PLY_ROT_2,PLY_ROT_3,PLY_X,PLY_Y,PLY_Z,PLY_F_DC_0,PLY_F_DC_1,PLY_F_DC_2,PLY_OPACITY]=FieldsToReadIndexes,PLY_RED=PLY_F_DC_0,PLY_GREEN=PLY_F_DC_1,PLY_BLUE=PLY_F_DC_2,fromHalfFloat=s=>{const e=(31744&s)>>10,t=1023&s;return(s>>15?-1:1)*(e?e===31?t?NaN:1/0:Math.pow(2,e-15)*(1+t/1024):t/1024*6103515625e-14)},qn=class qn{static decodeSectionHeadersFromHeaderLines(e){const t=FieldsToReadIndexes.reduce((d,f)=>(d[FieldNamesToRead[f]]=f,d),{}),n=CodeBookEntriesToReadIndexes.reduce((d,f)=>(d[CodeBookEntryNamesToRead[f]]=f,d),{}),o=PlyParserUtils.getHeaderSectionNames(e);let a;for(let d=0;d<o.length;d++)o[d]==="codebook_centers"&&(a=d);let r=0,l=!1;const c=[];let u=0;for(;!l;){let d;u===a?d=PlyParserUtils.decodeSectionHeader(e,n,r):d=PlyParserUtils.decodeSectionHeader(e,t,r),l=d.endOfHeader,r=d.headerEndLine+1,l||(d.splatCount=d.vertexCount,d.bytesPerSplat=d.bytesPerVertex),c.push(d),u++}return c}static decodeSectionHeadersFromHeaderText(e){const t=PlyParserUtils.convertHeaderTextToLines(e);return qn.decodeSectionHeadersFromHeaderLines(t)}static getSplatCountFromSectionHeaders(e){let t=0;for(let n of e)n.sectionName!=="codebook_centers"&&(t+=n.vertexCount);return t}static decodeHeaderFromHeaderText(e){const t=e.indexOf(PlyParserUtils.HeaderEndToken)+PlyParserUtils.HeaderEndToken.length+1,n=qn.decodeSectionHeadersFromHeaderText(e),o=qn.getSplatCountFromSectionHeaders(n);return{headerSizeBytes:t,sectionHeaders:n,splatCount:o}}static decodeHeaderFromBuffer(e){const t=PlyParserUtils.readHeaderFromBuffer(e);return qn.decodeHeaderFromHeaderText(t)}static findVertexData(e,t,n){let o=t.headerSizeBytes;for(let a=0;a<n&&a<t.sectionHeaders.length;a++){const r=t.sectionHeaders[a];o+=r.dataSizeBytes}return new DataView(e,o,t.sectionHeaders[n].dataSizeBytes)}static decodeCodeBook(e,t){const n=[],o=[];for(let a=0;a<t.vertexCount;a++){PlyParserUtils.readVertex(e,t,a,0,CodeBookEntriesToReadIndexes,n);for(let r of CodeBookEntriesToReadIndexes){const l=CodeBookEntriesToReadIndexes[r];let c=o[l];c||(o[l]=c=[]),c.push(n[r])}}for(let a=0;a<o.length;a++){const r=o[a],l=.28209479177387814;for(let c=0;c<r.length;c++){const u=fromHalfFloat(r[c]);a===CB_OPACITY?r[c]=Math.round(1/(1+Math.exp(-u))*255):a===CB_FEATURES_DC?r[c]=Math.round((.5+l*u)*255):a===CB_SCALING?r[c]=Math.exp(u):r[c]=u}}return o}static decodeSectionSplatData(e,t,n,o,a){a=Math.min(a,n.sphericalHarmonicsDegree);const r=new UncompressedSplatArray(a);for(let l=0;l<t;l++){const c=qn.parseToUncompressedSplat(e,l,n,o,0,a);r.addSplat(c)}return r}static readSplat(e,t,n,o,a){return PlyParserUtils.readVertex(e,t,n,o,FieldsToReadIndexes,a,!1)}static parseToUncompressedSplatArray(e,t=0){const n=[],o=qn.decodeHeaderFromBuffer(e,t);let a;for(let l=0;l<o.sectionHeaders.length;l++){const c=o.sectionHeaders[l];if(c.sectionName==="codebook_centers"){const u=qn.findVertexData(e,o,l);a=qn.decodeCodeBook(u,c)}}for(let l=0;l<o.sectionHeaders.length;l++){const c=o.sectionHeaders[l];if(c.sectionName!=="codebook_centers"){const u=c.vertexCount,d=qn.findVertexData(e,o,l),f=qn.decodeSectionSplatData(d,u,c,a,t);n.push(f)}}const r=new UncompressedSplatArray(t);for(let l of n)for(let c of l.splats)r.addSplat(c);return r}};At(qn,"parseToUncompressedSplat",function(){let e=[];const t=new Quaternion,n=UncompressedSplatArray.OFFSET.X,o=UncompressedSplatArray.OFFSET.Y,a=UncompressedSplatArray.OFFSET.Z,r=UncompressedSplatArray.OFFSET.SCALE0,l=UncompressedSplatArray.OFFSET.SCALE1,c=UncompressedSplatArray.OFFSET.SCALE2,u=UncompressedSplatArray.OFFSET.ROTATION0,d=UncompressedSplatArray.OFFSET.ROTATION1,f=UncompressedSplatArray.OFFSET.ROTATION2,g=UncompressedSplatArray.OFFSET.ROTATION3,_=UncompressedSplatArray.OFFSET.FDC0,b=UncompressedSplatArray.OFFSET.FDC1,B=UncompressedSplatArray.OFFSET.FDC2,I=UncompressedSplatArray.OFFSET.OPACITY,C=[];for(let R=0;R<45;R++)C[R]=UncompressedSplatArray.OFFSET.FRC0+R;return function(R,L,F,N,k=0,Q=0){Q=Math.min(Q,F.sphericalHarmonicsDegree),qn.readSplat(R,F,L,k,e);const z=UncompressedSplatArray.createSplat(Q);if(e[PLY_SCALE_0]!==void 0?(z[r]=N[CB_SCALING][e[PLY_SCALE_0]],z[l]=N[CB_SCALING][e[PLY_SCALE_1]],z[c]=N[CB_SCALING][e[PLY_SCALE_2]]):(z[r]=.01,z[l]=.01,z[c]=.01),e[PLY_F_DC_0]!==void 0?(z[_]=N[CB_FEATURES_DC][e[PLY_F_DC_0]],z[b]=N[CB_FEATURES_DC][e[PLY_F_DC_1]],z[B]=N[CB_FEATURES_DC][e[PLY_F_DC_2]]):e[PLY_RED]!==void 0?(z[_]=e[PLY_RED]*255,z[b]=e[PLY_GREEN]*255,z[B]=e[PLY_BLUE]*255):(z[_]=0,z[b]=0,z[B]=0),e[PLY_OPACITY]!==void 0&&(z[I]=N[CB_OPACITY][e[PLY_OPACITY]]),z[_]=clamp(Math.floor(z[_]),0,255),z[b]=clamp(Math.floor(z[b]),0,255),z[B]=clamp(Math.floor(z[B]),0,255),z[I]=clamp(Math.floor(z[I]),0,255),Q>=1&&F.sphericalHarmonicsDegree>=1){for(let ne=0;ne<9;ne++){const ue=N[CB_FEATURES_REST_0+ne%3];z[C[ne]]=ue[e[F.sphericalHarmonicsDegree1Fields[ne]]]}if(Q>=2&&F.sphericalHarmonicsDegree>=2)for(let ne=0;ne<15;ne++){const ue=N[CB_FEATURES_REST_3+ne%5];z[C[9+ne]]=ue[e[F.sphericalHarmonicsDegree2Fields[ne]]]}}const G=N[CB_ROTATION_RE][e[PLY_ROT_0]],O=N[CB_ROTATION_IM][e[PLY_ROT_1]],q=N[CB_ROTATION_IM][e[PLY_ROT_2]],ce=N[CB_ROTATION_IM][e[PLY_ROT_3]];return t.set(G,O,q,ce),t.normalize(),z[u]=t.x,z[d]=t.y,z[f]=t.z,z[g]=t.w,z[n]=fromHalfFloat(e[PLY_X]),z[o]=fromHalfFloat(e[PLY_Y]),z[a]=fromHalfFloat(e[PLY_Z]),z}}());let INRIAV2PlyParser=qn;class PlyParser{static parseToUncompressedSplatArray(e,t=0){const n=PlyParserUtils.determineHeaderFormatFromPlyBuffer(e);if(n===PlyFormat.PlayCanvasCompressed)return PlayCanvasCompressedPlyParser.parseToUncompressedSplatArray(e,t);if(n===PlyFormat.INRIAV1)return INRIAV1PlyParser.parseToUncompressedSplatArray(e,t);if(n===PlyFormat.INRIAV2)return INRIAV2PlyParser.parseToUncompressedSplatArray(e,t)}static parseToUncompressedSplatBuffer(e,t=0){const n=PlyParserUtils.determineHeaderFormatFromPlyBuffer(e);if(n===PlyFormat.PlayCanvasCompressed)return PlayCanvasCompressedPlyParser.parseToUncompressedSplatBuffer(e,t);if(n===PlyFormat.INRIAV1)return INRIAV1PlyParser.parseToUncompressedSplatBuffer(e,t);if(n===PlyFormat.INRIAV2)throw new Error("parseToUncompressedSplatBuffer() is not implemented for INRIA V2 PLY files")}}class SplatPartitioner{constructor(e,t,n,o){this.sectionCount=e,this.sectionFilters=t,this.groupingParameters=n,this.partitionGenerator=o}partitionUncompressedSplatArray(e){let t,n,o;if(this.partitionGenerator){const r=this.partitionGenerator(e);t=r.groupingParameters,n=r.sectionCount,o=r.sectionFilters}else t=this.groupingParameters,n=this.sectionCount,o=this.sectionFilters;const a=[];for(let r=0;r<n;r++){const l=new UncompressedSplatArray(e.sphericalHarmonicsDegree),c=o[r];for(let u=0;u<e.splatCount;u++)c(u)&&l.addSplat(e.splats[u]);a.push(l)}return{splatArrays:a,parameters:t}}static getStandardPartitioner(e=0,t=new Vector3,n=SplatBuffer.BucketBlockSize,o=SplatBuffer.BucketSize){const a=r=>{const l=UncompressedSplatArray.OFFSET.X,c=UncompressedSplatArray.OFFSET.Y,u=UncompressedSplatArray.OFFSET.Z;e<=0&&(e=r.splatCount);const d=new Vector3,f=.5,g=C=>{C.x=Math.floor(C.x/f)*f,C.y=Math.floor(C.y/f)*f,C.z=Math.floor(C.z/f)*f};r.splats.forEach(C=>{d.set(C[l],C[c],C[u]).sub(t),g(d),C.centerDist=d.lengthSq()}),r.splats.sort((C,R)=>{let L=C.centerDist,F=R.centerDist;return L>F?1:-1});const _=[],b=[];e=Math.min(r.splatCount,e);const B=Math.ceil(r.splatCount/e);let I=0;for(let C=0;C<B;C++){let R=I;_.push(L=>L>=R&&L<R+e),b.push({blocksSize:n,bucketSize:o}),I+=e}return{sectionCount:_.length,sectionFilters:_,groupingParameters:b}};return new SplatPartitioner(void 0,void 0,void 0,a)}}class SplatBufferGenerator{constructor(e,t,n,o,a,r,l){this.splatPartitioner=e,this.alphaRemovalThreshold=t,this.compressionLevel=n,this.sectionSize=o,this.sceneCenter=a?new Vector3().copy(a):void 0,this.blockSize=r,this.bucketSize=l}generateFromUncompressedSplatArray(e){const t=this.splatPartitioner.partitionUncompressedSplatArray(e);return SplatBuffer.generateFromUncompressedSplatArrays(t.splatArrays,this.alphaRemovalThreshold,this.compressionLevel,this.sceneCenter,this.blockSize,this.bucketSize,t.parameters)}static getStandardGenerator(e=1,t=1,n=0,o=new Vector3,a=SplatBuffer.BucketBlockSize,r=SplatBuffer.BucketSize){const l=SplatPartitioner.getStandardPartitioner(n,o,a,r);return new SplatBufferGenerator(l,e,t,n,o,a,r)}}const LoaderStatus={Downloading:0,Processing:1,Done:2};class DirectLoadError extends Error{constructor(e){super(e)}}const InternalLoadType={ProgressiveToSplatBuffer:0,ProgressiveToSplatArray:1,DownloadBeforeProcessing:2};function storeChunksInBuffer(s,e){let t=0;for(let o of s)t+=o.sizeBytes;(!e||e.byteLength<t)&&(e=new ArrayBuffer(t));let n=0;for(let o of s)new Uint8Array(e,n,o.sizeBytes).set(o.data),n+=o.sizeBytes;return e}function finalize$1(s,e,t,n,o,a,r,l){return e?SplatBufferGenerator.getStandardGenerator(t,n,o,a,r,l).generateFromUncompressedSplatArray(s):SplatBuffer.generateFromUncompressedSplatArrays([s],t,0,new Vector3)}class PlyLoader{static loadFromURL(e,t,n,o,a,r,l=!0,c=0,u,d,f,g,_){let b;!n&&!l?b=InternalLoadType.DownloadBeforeProcessing:l?b=InternalLoadType.ProgressiveToSplatArray:b=InternalLoadType.ProgressiveToSplatBuffer;const B=Constants.ProgressiveLoadSectionSize,I=SplatBuffer.HeaderSizeBytes+SplatBuffer.SectionHeaderSizeBytes,C=1;let R,L,F,N,k,Q=0,z=0,G=0,O=!1,q=!1,ce=!1;const ne=nativePromiseWithExtractedComponents();let ue=0,pe=0,fe=0,ee=0,J="",ye=null,Te=[],xe;const ve=new TextDecoder,he=(le,_e,De)=>{const de=le>=100;if(De&&(Te.push({data:De,sizeBytes:De.byteLength,startBytes:fe,endBytes:fe+De.byteLength}),fe+=De.byteLength),b===InternalLoadType.DownloadBeforeProcessing)de&&ne.resolve(Te);else{if(O){if(R===PlyFormat.PlayCanvasCompressed&&!q){const Me=ye.headerSizeBytes+ye.chunkElement.storageSizeBytes;k=storeChunksInBuffer(Te,k),k.byteLength>=Me&&(PlayCanvasCompressedPlyParser.readElementData(ye.chunkElement,k,ye.headerSizeBytes),ue=Me,pe=Me,q=!0)}}else if(J+=ve.decode(De),PlyParserUtils.checkTextForEndHeader(J)){if(R=PlyParserUtils.determineHeaderFormatFromHeaderText(J),R===PlyFormat.INRIAV1)ye=INRIAV1PlyParser.decodeHeaderText(J),c=Math.min(c,ye.sphericalHarmonicsDegree),Q=ye.splatCount,q=!0,ee=ye.headerSizeBytes+ye.bytesPerSplat*Q;else if(R===PlyFormat.PlayCanvasCompressed){if(ye=PlayCanvasCompressedPlyParser.decodeHeaderText(J),c=Math.min(c,ye.sphericalHarmonicsDegree),b===InternalLoadType.ProgressiveToSplatBuffer&&c>0)throw new DirectLoadError("PlyLoader.loadFromURL() -> Selected PLY format has spherical harmonics data that cannot be progressively loaded.");Q=ye.vertexElement.count,ee=ye.headerSizeBytes+ye.bytesPerSplat*Q+ye.chunkElement.storageSizeBytes}else{if(b===InternalLoadType.ProgressiveToSplatBuffer)throw new DirectLoadError("PlyLoader.loadFromURL() -> Selected PLY format cannot be progressively loaded.");b=InternalLoadType.DownloadBeforeProcessing;return}if(b===InternalLoadType.ProgressiveToSplatBuffer){const Me=SplatBuffer.CompressionLevels[0].SphericalHarmonicsDegrees[c],Ne=I+Me.BytesPerSplat*Q;F=new ArrayBuffer(Ne),SplatBuffer.writeHeaderToBuffer({versionMajor:SplatBuffer.CurrentMajorVersion,versionMinor:SplatBuffer.CurrentMinorVersion,maxSectionCount:C,sectionCount:C,maxSplatCount:Q,splatCount:0,compressionLevel:0,sceneCenter:new Vector3},F)}else xe=new UncompressedSplatArray(c);ue=ye.headerSizeBytes,pe=ye.headerSizeBytes,O=!0}if(O&&q&&Te.length>0&&(L=storeChunksInBuffer(Te,L),fe-ue>B||fe>=ee&&!ce||de)){const Ne=ce?ye.sphericalHarmonicsPerSplat:ye.bytesPerSplat,nt=(ce?fe:Math.min(ee,fe))-pe,ie=Math.floor(nt/Ne),oe=ie*Ne,$=fe-pe-oe,Se=pe-Te[0].startBytes,Be=new DataView(L,Se,oe);if(ce)R===PlyFormat.PlayCanvasCompressed&&b===InternalLoadType.ProgressiveToSplatArray&&(PlayCanvasCompressedPlyParser.parseSphericalHarmonicsToUncompressedSplatArraySection(ye.chunkElement,ye.shElement,G,G+ie-1,Be,0,c,ye.sphericalHarmonicsDegree,xe),G+=ie);else{if(b===InternalLoadType.ProgressiveToSplatBuffer){const we=SplatBuffer.CompressionLevels[0].SphericalHarmonicsDegrees[c],Fe=z*we.BytesPerSplat+I;R===PlyFormat.PlayCanvasCompressed?PlayCanvasCompressedPlyParser.parseToUncompressedSplatBufferSection(ye.chunkElement,ye.vertexElement,0,ie-1,z,Be,F,Fe):INRIAV1PlyParser.parseToUncompressedSplatBufferSection(ye,0,ie-1,Be,0,F,Fe,c)}else R===PlyFormat.PlayCanvasCompressed?PlayCanvasCompressedPlyParser.parseToUncompressedSplatArraySection(ye.chunkElement,ye.vertexElement,0,ie-1,z,Be,xe):INRIAV1PlyParser.parseToUncompressedSplatArraySection(ye,0,ie-1,Be,0,xe,c);z+=ie,b===InternalLoadType.ProgressiveToSplatBuffer&&(N||(SplatBuffer.writeSectionHeaderToBuffer({maxSplatCount:Q,splatCount:z,bucketSize:0,bucketCount:0,bucketBlockSize:0,compressionScaleRange:0,storageSizeBytes:0,fullBucketCount:0,partiallyFilledBucketCount:0,sphericalHarmonicsDegree:c},0,F,SplatBuffer.HeaderSizeBytes),N=new SplatBuffer(F,!1)),N.updateLoadedCounts(1,z)),fe>=ee&&(ce=!0)}if($===0)Te=[];else{let we=[],Fe=0;for(let $e=Te.length-1;$e>=0;$e--){const ze=Te[$e];if(Fe+=ze.sizeBytes,we.unshift(ze),Fe>=$)break}Te=we}ue+=B,pe+=oe}o&&N&&o(N,de),de&&(b===InternalLoadType.ProgressiveToSplatBuffer?ne.resolve(N):ne.resolve(xe))}t&&t(le,_e,LoaderStatus.Downloading)};return t&&t(0,"0%",LoaderStatus.Downloading),fetchWithProgress$1(e,he,!1,u).then(()=>(t&&t(0,"0%",LoaderStatus.Processing),ne.promise.then(le=>{if(t&&t(100,"100%",LoaderStatus.Done),b===InternalLoadType.DownloadBeforeProcessing){const _e=Te.map(De=>De.data);return new Blob(_e).arrayBuffer().then(De=>PlyLoader.loadFromFileData(De,a,r,l,c,d,f,g,_))}else return b===InternalLoadType.ProgressiveToSplatBuffer?le:delayedExecute(()=>finalize$1(le,l,a,r,d,f,g,_))})))}static loadFromFileData(e,t,n,o,a=0,r,l,c,u){return o?delayedExecute(()=>PlyParser.parseToUncompressedSplatArray(e,a)).then(d=>finalize$1(d,o,t,n,r,l,c,u)):delayedExecute(()=>PlyParser.parseToUncompressedSplatBuffer(e,a))}}const createStream=s=>new ReadableStream({async start(e){e.enqueue(s),e.close()}});async function decompressGzipped(s){try{const e=createStream(s);if(!e)throw new Error("Failed to create stream from data");return await decompressGzipStream(e)}catch(e){throw console.error("Error decompressing gzipped data:",e),e}}async function decompressGzipStream(s){const e=s.pipeThrough(new DecompressionStream("gzip")),n=await new Response(e).arrayBuffer();return new Uint8Array(n)}const SPZ_MAGIC=1347635022,FLAG_ANTIALIASED=1,COLOR_SCALE=.15;function halfToFloat(s){const e=s>>15&1,t=s>>10&31,n=s&1023,o=e===1?-1:1;return t===0?o*Math.pow(2,-14)*n/1024:t===31?n!==0?NaN:o*(1/0):o*Math.pow(2,t-15)*(1+n/1024)}function unquantizeSH(s){return(s-128)/128}function dimForDegree(s){switch(s){case 0:return 0;case 1:return 3;case 2:return 8;case 3:return 15;default:return console.error(`[SPZ: ERROR] Unsupported SH degree: ${s}`),0}}const unpackedSplatToUncompressedSplat=function(){let s=[];const e=new Quaternion,t=UncompressedSplatArray.OFFSET.X,n=UncompressedSplatArray.OFFSET.Y,o=UncompressedSplatArray.OFFSET.Z,a=UncompressedSplatArray.OFFSET.SCALE0,r=UncompressedSplatArray.OFFSET.SCALE1,l=UncompressedSplatArray.OFFSET.SCALE2,c=UncompressedSplatArray.OFFSET.ROTATION0,u=UncompressedSplatArray.OFFSET.ROTATION1,d=UncompressedSplatArray.OFFSET.ROTATION2,f=UncompressedSplatArray.OFFSET.ROTATION3,g=UncompressedSplatArray.OFFSET.FDC0,_=UncompressedSplatArray.OFFSET.FDC1,b=UncompressedSplatArray.OFFSET.FDC2,B=UncompressedSplatArray.OFFSET.OPACITY,I=[dimForDegree(0),dimForDegree(1),dimForDegree(2),dimForDegree(3)],C=[0,1,2,9,10,11,12,13,24,25,26,27,28,29,30,3,4,5,14,15,16,17,18,31,32,33,34,35,36,37,6,7,8,19,20,21,22,23,38,39,40,41,42,43,44];return function(R,L,F){F=Math.min(L,F);const N=UncompressedSplatArray.createSplat(F);R.scale[0]!==void 0?(N[a]=R.scale[0],N[r]=R.scale[1],N[l]=R.scale[2]):(N[a]=.01,N[r]=.01,N[l]=.01),R.color[0]!==void 0?(N[g]=R.color[0],N[_]=R.color[1],N[b]=R.color[2]):s[RED]!==void 0?(N[g]=s[RED]*255,N[_]=s[GREEN]*255,N[b]=s[BLUE]*255):(N[g]=0,N[_]=0,N[b]=0),R.alpha!==void 0&&(N[B]=R.alpha),N[g]=clamp(Math.floor(N[g]),0,255),N[_]=clamp(Math.floor(N[_]),0,255),N[b]=clamp(Math.floor(N[b]),0,255),N[B]=clamp(Math.floor(N[B]),0,255);let k=I[F],Q=I[L];for(let z=0;z<3;++z)for(let G=0;G<15;++G){const O=C[z*15+G];G<k&&G<Q&&(N[UncompressedSplatArray.OFFSET.FRC0+O]=R.sh[z*Q+G])}return e.set(R.rotation[3],R.rotation[0],R.rotation[1],R.rotation[2]),e.normalize(),N[c]=e.x,N[u]=e.y,N[d]=e.z,N[f]=e.w,N[t]=R.position[0],N[n]=R.position[1],N[o]=R.position[2],N}}();function checkSizes2(s,e,t,n){return!(s.positions.length!==e*3*(n?2:3)||s.scales.length!==e*3||s.rotations.length!==e*3||s.alphas.length!==e||s.colors.length!==e*3||s.sh.length!==e*t*3)}function unpackGaussians(s,e,t,n,o){e=Math.min(e,s.shDegree);const a=s.numPoints,r=dimForDegree(s.shDegree),l=s.positions.length===a*3*2;if(!checkSizes2(s,a,r,l))return null;const c={position:[],scale:[],rotation:[],alpha:void 0,color:[],sh:[]};let u;l&&(u=new Uint16Array(s.positions.buffer,s.positions.byteOffset,a*3));const d=1/(1<<s.fractionalBits),f=dimForDegree(s.shDegree),g=.28209479177387814;for(let _=0;_<a;_++){if(l)for(let R=0;R<3;R++)c.position[R]=halfToFloat(u[_*3+R]);else for(let R=0;R<3;R++){const L=_*9+R*3;let F=s.positions[L];F|=s.positions[L+1]<<8,F|=s.positions[L+2]<<16,F|=F&8388608?4278190080:0,c.position[R]=F*d}for(let R=0;R<3;R++)c.scale[R]=Math.exp(s.scales[_*3+R]/16-10);const b=s.rotations.subarray(_*3,_*3+3),B=[b[0]/127.5-1,b[1]/127.5-1,b[2]/127.5-1];c.rotation[0]=B[0],c.rotation[1]=B[1],c.rotation[2]=B[2];const I=B[0]*B[0]+B[1]*B[1]+B[2]*B[2];c.rotation[3]=Math.sqrt(Math.max(0,1-I)),c.alpha=Math.floor(s.alphas[_]);for(let R=0;R<3;R++)c.color[R]=Math.floor(((s.colors[_*3+R]/255-.5)/COLOR_SCALE*g+.5)*255);for(let R=0;R<3;R++)for(let L=0;L<f;L++)c.sh[R*f+L]=unquantizeSH(s.sh[f*3*_+L*3+R]);const C=unpackedSplatToUncompressedSplat(c,s.shDegree,e);if(t){const R=SplatBuffer.CompressionLevels[0].SphericalHarmonicsDegrees[e].BytesPerSplat,L=_*R+o;SplatBuffer.writeSplatDataToSectionBuffer(C,n,L,0,e)}else n.addSplat(C)}}const HEADER_SIZE=16,MAX_POINTS_TO_READ=1e7;function deserializePackedGaussians(s){const e=new DataView(s);let t=0;const n={magic:e.getUint32(t,!0),version:e.getUint32(t+4,!0),numPoints:e.getUint32(t+8,!0),shDegree:e.getUint8(t+12),fractionalBits:e.getUint8(t+13),flags:e.getUint8(t+14),reserved:e.getUint8(t+15)};if(t+=HEADER_SIZE,n.magic!==SPZ_MAGIC)return console.error("[SPZ ERROR] deserializePackedGaussians: header not found"),null;if(n.version<1||n.version>2)return console.error(`[SPZ ERROR] deserializePackedGaussians: version not supported: ${n.version}`),null;if(n.numPoints>MAX_POINTS_TO_READ)return console.error(`[SPZ ERROR] deserializePackedGaussians: Too many points: ${n.numPoints}`),null;if(n.shDegree>3)return console.error(`[SPZ ERROR] deserializePackedGaussians: Unsupported SH degree: ${n.shDegree}`),null;const o=n.numPoints,a=dimForDegree(n.shDegree),r=n.version===1,l={numPoints:o,shDegree:n.shDegree,fractionalBits:n.fractionalBits,antialiased:(n.flags&FLAG_ANTIALIASED)!==0,positions:new Uint8Array(o*3*(r?2:3)),scales:new Uint8Array(o*3),rotations:new Uint8Array(o*3),alphas:new Uint8Array(o),colors:new Uint8Array(o*3),sh:new Uint8Array(o*a*3)};try{const c=new Uint8Array(s);let u=l.positions.length,d=t;if(l.positions.set(c.slice(d,d+u)),d+=u,l.alphas.set(c.slice(d,d+l.alphas.length)),d+=l.alphas.length,l.colors.set(c.slice(d,d+l.colors.length)),d+=l.colors.length,l.scales.set(c.slice(d,d+l.scales.length)),d+=l.scales.length,l.rotations.set(c.slice(d,d+l.rotations.length)),d+=l.rotations.length,l.sh.set(c.slice(d,d+l.sh.length)),d+l.sh.length!==s.byteLength)return console.error("[SPZ ERROR] deserializePackedGaussians: incorrect buffer size"),null}catch(c){return console.error("[SPZ ERROR] deserializePackedGaussians: read error",c),null}return l}async function loadSpzPacked(s){try{const e=await decompressGzipped(s);return deserializePackedGaussians(e.buffer)}catch(e){return console.error("[SPZ ERROR] loadSpzPacked: decompression error",e),null}}class SpzLoader{static loadFromURL(e,t,n,o,a=!0,r=0,l,c,u,d,f){return t&&t(0,"0%",LoaderStatus.Downloading),fetchWithProgress$1(e,t,!0,l).then(g=>(t&&t(0,"0%",LoaderStatus.Processing),SpzLoader.loadFromFileData(g,n,o,a,r,c,u,d,f)))}static async loadFromFileData(e,t,n,o,a=0,r,l,c,u){await delayedExecute();const d=await loadSpzPacked(e);a=Math.min(d.shDegree,a);const f=new UncompressedSplatArray(a);if(o)return unpackGaussians(d,a,!1,f,0),SplatBufferGenerator.getStandardGenerator(t,n,r,l,c,u).generateFromUncompressedSplatArray(f);{const{splatBuffer:g,splatBufferDataOffsetBytes:_}=SplatBuffer.preallocateUncompressed(d.numPoints,a);return unpackGaussians(d,a,!0,g.bufferData,_),g}}}const tn=class tn{static parseToUncompressedSplatBufferSection(e,t,n,o,a,r){const l=SplatBuffer.CompressionLevels[0].BytesPerCenter,c=SplatBuffer.CompressionLevels[0].BytesPerScale,u=SplatBuffer.CompressionLevels[0].BytesPerRotation,d=SplatBuffer.CompressionLevels[0].SphericalHarmonicsDegrees[0].BytesPerSplat;for(let f=e;f<=t;f++){const g=f*tn.RowSizeBytes+o,_=new Float32Array(n,g,3),b=new Float32Array(n,g+tn.CenterSizeBytes,3),B=new Uint8Array(n,g+tn.CenterSizeBytes+tn.ScaleSizeBytes,4),I=new Uint8Array(n,g+tn.CenterSizeBytes+tn.ScaleSizeBytes+tn.RotationSizeBytes,4),C=new Quaternion((I[1]-128)/128,(I[2]-128)/128,(I[3]-128)/128,(I[0]-128)/128);C.normalize();const R=f*d+r,L=new Float32Array(a,R,3),F=new Float32Array(a,R+l,3),N=new Float32Array(a,R+l+c,4),k=new Uint8Array(a,R+l+c+u,4);L[0]=_[0],L[1]=_[1],L[2]=_[2],F[0]=b[0],F[1]=b[1],F[2]=b[2],N[0]=C.w,N[1]=C.x,N[2]=C.y,N[3]=C.z,k[0]=B[0],k[1]=B[1],k[2]=B[2],k[3]=B[3]}}static parseToUncompressedSplatArraySection(e,t,n,o,a){for(let r=e;r<=t;r++){const l=r*tn.RowSizeBytes+o,c=new Float32Array(n,l,3),u=new Float32Array(n,l+tn.CenterSizeBytes,3),d=new Uint8Array(n,l+tn.CenterSizeBytes+tn.ScaleSizeBytes,4),f=new Uint8Array(n,l+tn.CenterSizeBytes+tn.ScaleSizeBytes+tn.RotationSizeBytes,4),g=new Quaternion((f[1]-128)/128,(f[2]-128)/128,(f[3]-128)/128,(f[0]-128)/128);g.normalize(),a.addSplatFromComonents(c[0],c[1],c[2],u[0],u[1],u[2],g.w,g.x,g.y,g.z,d[0],d[1],d[2],d[3])}}static parseStandardSplatToUncompressedSplatArray(e){const t=e.byteLength/tn.RowSizeBytes,n=new UncompressedSplatArray;for(let o=0;o<t;o++){const a=o*tn.RowSizeBytes,r=new Float32Array(e,a,3),l=new Float32Array(e,a+tn.CenterSizeBytes,3),c=new Uint8Array(e,a+tn.CenterSizeBytes+tn.ScaleSizeBytes,4),u=new Uint8Array(e,a+tn.CenterSizeBytes+tn.ScaleSizeBytes+tn.ColorSizeBytes,4),d=new Quaternion((u[1]-128)/128,(u[2]-128)/128,(u[3]-128)/128,(u[0]-128)/128);d.normalize(),n.addSplatFromComonents(r[0],r[1],r[2],l[0],l[1],l[2],d.w,d.x,d.y,d.z,c[0],c[1],c[2],c[3])}return n}};At(tn,"RowSizeBytes",32),At(tn,"CenterSizeBytes",12),At(tn,"ScaleSizeBytes",12),At(tn,"RotationSizeBytes",4),At(tn,"ColorSizeBytes",4);let SplatParser=tn;function finalize(s,e,t,n,o,a,r,l){return e?SplatBufferGenerator.getStandardGenerator(t,n,o,a,r,l).generateFromUncompressedSplatArray(s):SplatBuffer.generateFromUncompressedSplatArrays([s],t,0,new Vector3)}let SplatLoader$1=class ks{static loadFromURL(e,t,n,o,a,r,l=!0,c,u,d,f,g){let _=n?InternalLoadType.ProgressiveToSplatBuffer:InternalLoadType.ProgressiveToSplatArray;l&&(_=InternalLoadType.ProgressiveToSplatArray);const b=SplatBuffer.HeaderSizeBytes+SplatBuffer.SectionHeaderSizeBytes,B=Constants.ProgressiveLoadSectionSize,I=1;let C,R,L,F=0,N=0,k;const Q=nativePromiseWithExtractedComponents();let z=0,G=0,O=[];const q=(ce,ne,ue,pe)=>{const fe=ce>=100;if(ue&&O.push(ue),_===InternalLoadType.DownloadBeforeProcessing){fe&&Q.resolve(O);return}if(!pe){if(n)throw new DirectLoadError("Cannon directly load .splat because no file size info is available.");_=InternalLoadType.DownloadBeforeProcessing;return}if(!C){F=pe/SplatParser.RowSizeBytes,C=new ArrayBuffer(pe);const ee=SplatBuffer.CompressionLevels[0].SphericalHarmonicsDegrees[0].BytesPerSplat,J=b+ee*F;_===InternalLoadType.ProgressiveToSplatBuffer?(R=new ArrayBuffer(J),SplatBuffer.writeHeaderToBuffer({versionMajor:SplatBuffer.CurrentMajorVersion,versionMinor:SplatBuffer.CurrentMinorVersion,maxSectionCount:I,sectionCount:I,maxSplatCount:F,splatCount:N,compressionLevel:0,sceneCenter:new Vector3},R)):k=new UncompressedSplatArray(0)}if(ue){new Uint8Array(C,G,ue.byteLength).set(new Uint8Array(ue)),G+=ue.byteLength;const ee=G-z;if(ee>B||fe){const ye=(fe?ee:B)/SplatParser.RowSizeBytes,Te=N+ye;_===InternalLoadType.ProgressiveToSplatBuffer?SplatParser.parseToUncompressedSplatBufferSection(N,Te-1,C,0,R,b):SplatParser.parseToUncompressedSplatArraySection(N,Te-1,C,0,k),N=Te,_===InternalLoadType.ProgressiveToSplatBuffer&&(L||(SplatBuffer.writeSectionHeaderToBuffer({maxSplatCount:F,splatCount:N,bucketSize:0,bucketCount:0,bucketBlockSize:0,compressionScaleRange:0,storageSizeBytes:0,fullBucketCount:0,partiallyFilledBucketCount:0},0,R,SplatBuffer.HeaderSizeBytes),L=new SplatBuffer(R,!1)),L.updateLoadedCounts(1,N),o&&o(L,fe)),z+=B}}fe&&(_===InternalLoadType.ProgressiveToSplatBuffer?Q.resolve(L):Q.resolve(k)),t&&t(ce,ne,LoaderStatus.Downloading)};return t&&t(0,"0%",LoaderStatus.Downloading),fetchWithProgress$1(e,q,!1,c).then(()=>(t&&t(0,"0%",LoaderStatus.Processing),Q.promise.then(ce=>(t&&t(100,"100%",LoaderStatus.Done),_===InternalLoadType.DownloadBeforeProcessing?new Blob(O).arrayBuffer().then(ne=>ks.loadFromFileData(ne,a,r,l,u,d,f,g)):_===InternalLoadType.ProgressiveToSplatBuffer?ce:delayedExecute(()=>finalize(ce,l,a,r,u,d,f,g))))))}static loadFromFileData(e,t,n,o,a,r,l,c){return delayedExecute(()=>{const u=SplatParser.parseStandardSplatToUncompressedSplatArray(e);return finalize(u,o,t,n,a,r,l,c)})}};const Ti=class Ti{static checkVersion(e){const t=SplatBuffer.CurrentMajorVersion,n=SplatBuffer.CurrentMinorVersion,o=SplatBuffer.parseHeader(e);if(o.versionMajor===t&&o.versionMinor>=n||o.versionMajor>t)return!0;throw new Error(`KSplat version not supported: v${o.versionMajor}.${o.versionMinor}. Minimum required: v${t}.${n}`)}static loadFromURL(e,t,n,o,a){let r,l,c,u,d=!1,f=!1,g,_=[],b=!1,B=!1,I=0,C=0,R=0,L=!1,F=!1,N=!1,k=[];const Q=nativePromiseWithExtractedComponents(),z=()=>{!d&&!f&&I>=SplatBuffer.HeaderSizeBytes&&(f=!0,new Blob(k).arrayBuffer().then(pe=>{c=new ArrayBuffer(SplatBuffer.HeaderSizeBytes),new Uint8Array(c).set(new Uint8Array(pe,0,SplatBuffer.HeaderSizeBytes)),Ti.checkVersion(c),f=!1,d=!0,u=SplatBuffer.parseHeader(c),window.setTimeout(()=>{q()},1)}))};let G=0;const O=()=>{G===0&&(G++,window.setTimeout(()=>{G--,ce()},1))},q=()=>{const ue=()=>{B=!0,new Blob(k).arrayBuffer().then(fe=>{B=!1,b=!0,g=new ArrayBuffer(u.maxSectionCount*SplatBuffer.SectionHeaderSizeBytes),new Uint8Array(g).set(new Uint8Array(fe,SplatBuffer.HeaderSizeBytes,u.maxSectionCount*SplatBuffer.SectionHeaderSizeBytes)),_=SplatBuffer.parseSectionHeaders(u,g,0,!1);let ee=0;for(let ye=0;ye<u.maxSectionCount;ye++)ee+=_[ye].storageSizeBytes;const J=SplatBuffer.HeaderSizeBytes+u.maxSectionCount*SplatBuffer.SectionHeaderSizeBytes+ee;if(!r){r=new ArrayBuffer(J);let ye=0;for(let Te=0;Te<k.length;Te++){const xe=k[Te];new Uint8Array(r,ye,xe.byteLength).set(new Uint8Array(xe)),ye+=xe.byteLength}}R=SplatBuffer.HeaderSizeBytes+SplatBuffer.SectionHeaderSizeBytes*u.maxSectionCount;for(let ye=0;ye<=_.length&&ye<u.maxSectionCount;ye++)R+=_[ye].storageSizeBytes;O()})};!B&&!b&&d&&I>=SplatBuffer.HeaderSizeBytes+SplatBuffer.SectionHeaderSizeBytes*u.maxSectionCount&&ue()},ce=()=>{if(N)return;N=!0;const ue=()=>{if(N=!1,b){if(F)return;if(L=I>=R,I-C>Constants.ProgressiveLoadSectionSize||L){C+=Constants.ProgressiveLoadSectionSize,F=C>=R,l||(l=new SplatBuffer(r,!1));const fe=SplatBuffer.HeaderSizeBytes+SplatBuffer.SectionHeaderSizeBytes*u.maxSectionCount;let ee=0,J=0,ye=0;for(let ve=0;ve<u.maxSectionCount;ve++){const he=_[ve],le=ee+he.partiallyFilledBucketCount*4+he.bucketStorageSizeBytes*he.bucketCount,_e=fe+le;if(C>=_e){J++;const De=C-_e,Ne=SplatBuffer.CompressionLevels[u.compressionLevel].SphericalHarmonicsDegrees[he.sphericalHarmonicsDegree].BytesPerSplat;let Pe=Math.floor(De/Ne);Pe=Math.min(Pe,he.maxSplatCount),ye+=Pe,l.updateLoadedCounts(J,ye),l.updateSectionLoadedCounts(ve,Pe)}else break;ee+=he.storageSizeBytes}o(l,F);const Te=C/R*100,xe=Te.toFixed(2)+"%";t&&t(Te,xe,LoaderStatus.Downloading),F?Q.resolve(l):ce()}}};window.setTimeout(ue,Constants.ProgressiveLoadSectionDelayDuration)};return fetchWithProgress$1(e,(ue,pe,fe)=>{fe&&(k.push(fe),r&&new Uint8Array(r,I,fe.byteLength).set(new Uint8Array(fe)),I+=fe.byteLength),n?(z(),q(),ce()):t&&t(ue,pe,LoaderStatus.Downloading)},!n,a).then(ue=>(t&&t(0,"0%",LoaderStatus.Processing),(n?Q.promise:Ti.loadFromFileData(ue)).then(fe=>(t&&t(100,"100%",LoaderStatus.Done),fe))))}static loadFromFileData(e){return delayedExecute(()=>(Ti.checkVersion(e),new SplatBuffer(e)))}};At(Ti,"downloadFile",function(){let e;return function(t,n){const o=new Blob([t.bufferData],{type:"application/octet-stream"});e||(e=document.createElement("a"),document.body.appendChild(e)),e.download=n,e.href=URL.createObjectURL(o),e.click()}}());let KSplatLoader=Ti;const SceneFormat={Splat:0,KSplat:1,Ply:2,Spz:3},sceneFormatFromPath=s=>s.endsWith(".ply")?SceneFormat.Ply:s.endsWith(".splat")?SceneFormat.Splat:s.endsWith(".ksplat")?SceneFormat.KSplat:s.endsWith(".spz")?SceneFormat.Spz:null,_changeEvent$1={type:"change"},_startEvent$1={type:"start"},_endEvent$1={type:"end"},_ray$1=new Ray$1,_plane$2=new Plane,TILT_LIMIT=Math.cos(70*MathUtils.DEG2RAD);let OrbitControls$1=class extends EventDispatcher{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"KeyA",UP:"KeyW",RIGHT:"KeyD",BOTTOM:"KeyS"},this.mouseButtons={LEFT:MOUSE.ROTATE,MIDDLE:MOUSE.DOLLY,RIGHT:MOUSE.PAN},this.touches={ONE:TOUCH.ROTATE,TWO:TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return l.phi},this.getAzimuthalAngle=function(){return l.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(se){se.addEventListener("keydown",H),this._domElementKeyEvents=se},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",H),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,this.clearDampedRotation(),this.clearDampedPan(),n.object.updateProjectionMatrix(),n.dispatchEvent(_changeEvent$1),n.update(),a=o.NONE},this.clearDampedRotation=function(){c.theta=0,c.phi=0},this.clearDampedPan=function(){d.set(0,0,0)},this.update=function(){const se=new Vector3,Ee=new Quaternion().setFromUnitVectors(e.up,new Vector3(0,1,0)),Ye=Ee.clone().invert(),Je=new Vector3,at=new Quaternion,ot=new Vector3,Ct=2*Math.PI;return function(){Ee.setFromUnitVectors(e.up,new Vector3(0,1,0)),Ye.copy(Ee).invert();const be=n.object.position;se.copy(be).sub(n.target),se.applyQuaternion(Ee),l.setFromVector3(se),n.autoRotate&&a===o.NONE&&q(G()),n.enableDamping?(l.theta+=c.theta*n.dampingFactor,l.phi+=c.phi*n.dampingFactor):(l.theta+=c.theta,l.phi+=c.phi);let ge=n.minAzimuthAngle,Re=n.maxAzimuthAngle;isFinite(ge)&&isFinite(Re)&&(ge<-Math.PI?ge+=Ct:ge>Math.PI&&(ge-=Ct),Re<-Math.PI?Re+=Ct:Re>Math.PI&&(Re-=Ct),ge<=Re?l.theta=Math.max(ge,Math.min(Re,l.theta)):l.theta=l.theta>(ge+Re)/2?Math.max(ge,l.theta):Math.min(Re,l.theta)),l.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,l.phi)),l.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(d,n.dampingFactor):n.target.add(d),n.zoomToCursor&&k||n.object.isOrthographicCamera?l.radius=ye(l.radius):l.radius=ye(l.radius*u),se.setFromSpherical(l),se.applyQuaternion(Ye),be.copy(n.target).add(se),n.object.lookAt(n.target),n.enableDamping===!0?(c.theta*=1-n.dampingFactor,c.phi*=1-n.dampingFactor,d.multiplyScalar(1-n.dampingFactor)):(c.set(0,0,0),d.set(0,0,0));let Qe=!1;if(n.zoomToCursor&&k){let Oe=null;if(n.object.isPerspectiveCamera){const st=se.length();Oe=ye(st*u);const _t=st-Oe;n.object.position.addScaledVector(F,_t),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const st=new Vector3(N.x,N.y,0);st.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/u)),n.object.updateProjectionMatrix(),Qe=!0;const _t=new Vector3(N.x,N.y,0);_t.unproject(n.object),n.object.position.sub(_t).add(st),n.object.updateMatrixWorld(),Oe=se.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Oe!==null&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Oe).add(n.object.position):(_ray$1.origin.copy(n.object.position),_ray$1.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(_ray$1.direction))<TILT_LIMIT?e.lookAt(n.target):(_plane$2.setFromNormalAndCoplanarPoint(n.object.up,n.target),_ray$1.intersectPlane(_plane$2,n.target))))}else n.object.isOrthographicCamera&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/u)),n.object.updateProjectionMatrix(),Qe=!0);return u=1,k=!1,Qe||Je.distanceToSquared(n.object.position)>r||8*(1-at.dot(n.object.quaternion))>r||ot.distanceToSquared(n.target)>0?(n.dispatchEvent(_changeEvent$1),Je.copy(n.object.position),at.copy(n.object.quaternion),ot.copy(n.target),Qe=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",We),n.domElement.removeEventListener("pointerdown",Fe),n.domElement.removeEventListener("pointercancel",ze),n.domElement.removeEventListener("wheel",te),n.domElement.removeEventListener("pointermove",$e),n.domElement.removeEventListener("pointerup",ze),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",H),n._domElementKeyEvents=null)};const n=this,o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let a=o.NONE;const r=1e-6,l=new Spherical,c=new Spherical;let u=1;const d=new Vector3,f=new Vector2,g=new Vector2,_=new Vector2,b=new Vector2,B=new Vector2,I=new Vector2,C=new Vector2,R=new Vector2,L=new Vector2,F=new Vector3,N=new Vector2;let k=!1;const Q=[],z={};function G(){return 2*Math.PI/60/60*n.autoRotateSpeed}function O(){return Math.pow(.95,n.zoomSpeed)}function q(se){c.theta-=se}function ce(se){c.phi-=se}const ne=function(){const se=new Vector3;return function(Ye,Je){se.setFromMatrixColumn(Je,0),se.multiplyScalar(-Ye),d.add(se)}}(),ue=function(){const se=new Vector3;return function(Ye,Je){n.screenSpacePanning===!0?se.setFromMatrixColumn(Je,1):(se.setFromMatrixColumn(Je,0),se.crossVectors(n.object.up,se)),se.multiplyScalar(Ye),d.add(se)}}(),pe=function(){const se=new Vector3;return function(Ye,Je){const at=n.domElement;if(n.object.isPerspectiveCamera){const ot=n.object.position;se.copy(ot).sub(n.target);let Ct=se.length();Ct*=Math.tan(n.object.fov/2*Math.PI/180),ne(2*Ye*Ct/at.clientHeight,n.object.matrix),ue(2*Je*Ct/at.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(ne(Ye*(n.object.right-n.object.left)/n.object.zoom/at.clientWidth,n.object.matrix),ue(Je*(n.object.top-n.object.bottom)/n.object.zoom/at.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function fe(se){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?u/=se:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function ee(se){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?u*=se:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function J(se){if(!n.zoomToCursor)return;k=!0;const Ee=n.domElement.getBoundingClientRect(),Ye=se.clientX-Ee.left,Je=se.clientY-Ee.top,at=Ee.width,ot=Ee.height;N.x=Ye/at*2-1,N.y=-(Je/ot)*2+1,F.set(N.x,N.y,1).unproject(e).sub(e.position).normalize()}function ye(se){return Math.max(n.minDistance,Math.min(n.maxDistance,se))}function Te(se){f.set(se.clientX,se.clientY)}function xe(se){J(se),C.set(se.clientX,se.clientY)}function ve(se){b.set(se.clientX,se.clientY)}function he(se){g.set(se.clientX,se.clientY),_.subVectors(g,f).multiplyScalar(n.rotateSpeed);const Ee=n.domElement;q(2*Math.PI*_.x/Ee.clientHeight),ce(2*Math.PI*_.y/Ee.clientHeight),f.copy(g),n.update()}function le(se){R.set(se.clientX,se.clientY),L.subVectors(R,C),L.y>0?fe(O()):L.y<0&&ee(O()),C.copy(R),n.update()}function _e(se){B.set(se.clientX,se.clientY),I.subVectors(B,b).multiplyScalar(n.panSpeed),pe(I.x,I.y),b.copy(B),n.update()}function De(se){J(se),se.deltaY<0?ee(O()):se.deltaY>0&&fe(O()),n.update()}function de(se){let Ee=!1;switch(se.code){case n.keys.UP:se.ctrlKey||se.metaKey||se.shiftKey?ce(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):pe(0,n.keyPanSpeed),Ee=!0;break;case n.keys.BOTTOM:se.ctrlKey||se.metaKey||se.shiftKey?ce(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):pe(0,-n.keyPanSpeed),Ee=!0;break;case n.keys.LEFT:se.ctrlKey||se.metaKey||se.shiftKey?q(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):pe(n.keyPanSpeed,0),Ee=!0;break;case n.keys.RIGHT:se.ctrlKey||se.metaKey||se.shiftKey?q(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):pe(-n.keyPanSpeed,0),Ee=!0;break}Ee&&(se.preventDefault(),n.update())}function Me(){if(Q.length===1)f.set(Q[0].pageX,Q[0].pageY);else{const se=.5*(Q[0].pageX+Q[1].pageX),Ee=.5*(Q[0].pageY+Q[1].pageY);f.set(se,Ee)}}function Ne(){if(Q.length===1)b.set(Q[0].pageX,Q[0].pageY);else{const se=.5*(Q[0].pageX+Q[1].pageX),Ee=.5*(Q[0].pageY+Q[1].pageY);b.set(se,Ee)}}function Pe(){const se=Q[0].pageX-Q[1].pageX,Ee=Q[0].pageY-Q[1].pageY,Ye=Math.sqrt(se*se+Ee*Ee);C.set(0,Ye)}function nt(){n.enableZoom&&Pe(),n.enablePan&&Ne()}function ie(){n.enableZoom&&Pe(),n.enableRotate&&Me()}function oe(se){if(Q.length==1)g.set(se.pageX,se.pageY);else{const Ye=ft(se),Je=.5*(se.pageX+Ye.x),at=.5*(se.pageY+Ye.y);g.set(Je,at)}_.subVectors(g,f).multiplyScalar(n.rotateSpeed);const Ee=n.domElement;q(2*Math.PI*_.x/Ee.clientHeight),ce(2*Math.PI*_.y/Ee.clientHeight),f.copy(g)}function $(se){if(Q.length===1)B.set(se.pageX,se.pageY);else{const Ee=ft(se),Ye=.5*(se.pageX+Ee.x),Je=.5*(se.pageY+Ee.y);B.set(Ye,Je)}I.subVectors(B,b).multiplyScalar(n.panSpeed),pe(I.x,I.y),b.copy(B)}function Se(se){const Ee=ft(se),Ye=se.pageX-Ee.x,Je=se.pageY-Ee.y,at=Math.sqrt(Ye*Ye+Je*Je);R.set(0,at),L.set(0,Math.pow(R.y/C.y,n.zoomSpeed)),fe(L.y),C.copy(R)}function Be(se){n.enableZoom&&Se(se),n.enablePan&&$(se)}function we(se){n.enableZoom&&Se(se),n.enableRotate&&oe(se)}function Fe(se){n.enabled!==!1&&(Q.length===0&&(n.domElement.setPointerCapture(se.pointerId),n.domElement.addEventListener("pointermove",$e),n.domElement.addEventListener("pointerup",ze)),Ve(se),se.pointerType==="touch"?Ie(se):qe(se))}function $e(se){n.enabled!==!1&&(se.pointerType==="touch"?Ge(se):ut(se))}function ze(se){dt(se),Q.length===0&&(n.domElement.releasePointerCapture(se.pointerId),n.domElement.removeEventListener("pointermove",$e),n.domElement.removeEventListener("pointerup",ze)),n.dispatchEvent(_endEvent$1),a=o.NONE}function qe(se){let Ee;switch(se.button){case 0:Ee=n.mouseButtons.LEFT;break;case 1:Ee=n.mouseButtons.MIDDLE;break;case 2:Ee=n.mouseButtons.RIGHT;break;default:Ee=-1}switch(Ee){case MOUSE.DOLLY:if(n.enableZoom===!1)return;xe(se),a=o.DOLLY;break;case MOUSE.ROTATE:if(se.ctrlKey||se.metaKey||se.shiftKey){if(n.enablePan===!1)return;ve(se),a=o.PAN}else{if(n.enableRotate===!1)return;Te(se),a=o.ROTATE}break;case MOUSE.PAN:if(se.ctrlKey||se.metaKey||se.shiftKey){if(n.enableRotate===!1)return;Te(se),a=o.ROTATE}else{if(n.enablePan===!1)return;ve(se),a=o.PAN}break;default:a=o.NONE}a!==o.NONE&&n.dispatchEvent(_startEvent$1)}function ut(se){switch(a){case o.ROTATE:if(n.enableRotate===!1)return;he(se);break;case o.DOLLY:if(n.enableZoom===!1)return;le(se);break;case o.PAN:if(n.enablePan===!1)return;_e(se);break}}function te(se){n.enabled===!1||n.enableZoom===!1||a!==o.NONE||(se.preventDefault(),n.dispatchEvent(_startEvent$1),De(se),n.dispatchEvent(_endEvent$1))}function H(se){n.enabled===!1||n.enablePan===!1||de(se)}function Ie(se){switch(it(se),Q.length){case 1:switch(n.touches.ONE){case TOUCH.ROTATE:if(n.enableRotate===!1)return;Me(),a=o.TOUCH_ROTATE;break;case TOUCH.PAN:if(n.enablePan===!1)return;Ne(),a=o.TOUCH_PAN;break;default:a=o.NONE}break;case 2:switch(n.touches.TWO){case TOUCH.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;nt(),a=o.TOUCH_DOLLY_PAN;break;case TOUCH.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ie(),a=o.TOUCH_DOLLY_ROTATE;break;default:a=o.NONE}break;default:a=o.NONE}a!==o.NONE&&n.dispatchEvent(_startEvent$1)}function Ge(se){switch(it(se),a){case o.TOUCH_ROTATE:if(n.enableRotate===!1)return;oe(se),n.update();break;case o.TOUCH_PAN:if(n.enablePan===!1)return;$(se),n.update();break;case o.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Be(se),n.update();break;case o.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;we(se),n.update();break;default:a=o.NONE}}function We(se){n.enabled!==!1&&se.preventDefault()}function Ve(se){Q.push(se)}function dt(se){delete z[se.pointerId];for(let Ee=0;Ee<Q.length;Ee++)if(Q[Ee].pointerId==se.pointerId){Q.splice(Ee,1);return}}function it(se){let Ee=z[se.pointerId];Ee===void 0&&(Ee=new Vector2,z[se.pointerId]=Ee),Ee.set(se.pageX,se.pageY)}function ft(se){const Ee=se.pointerId===Q[0].pointerId?Q[1]:Q[0];return z[Ee.pointerId]}n.domElement.addEventListener("contextmenu",We),n.domElement.addEventListener("pointerdown",Fe),n.domElement.addEventListener("pointercancel",ze),n.domElement.addEventListener("wheel",te,{passive:!1}),this.update()}};const fadeElement=(s,e,t,n,o)=>{const a=performance.now();let r=s.style.display==="none"?0:parseFloat(s.style.opacity);isNaN(r)&&(r=1);const l=window.setInterval(()=>{const u=performance.now()-a;let d=Math.min(u/n,1);d>.999&&(d=1);let f;e?(f=(1-d)*r,f<1e-4&&(f=0)):f=(1-r)*d+r,f>0?(s.style.display=t,s.style.opacity=f):s.style.display="none",d>=1&&(o&&o(),window.clearInterval(l))},16);return l},STANDARD_FADE_DURATION=500,ir=class ir{constructor(e,t){this.taskIDGen=0,this.elementID=ir.elementIDGen++,this.tasks=[],this.message=e||"Loading...",this.container=t||document.body,this.spinnerContainerOuter=document.createElement("div"),this.spinnerContainerOuter.className=`spinnerOuterContainer${this.elementID}`,this.spinnerContainerOuter.style.display="none",this.spinnerContainerPrimary=document.createElement("div"),this.spinnerContainerPrimary.className=`spinnerContainerPrimary${this.elementID}`,this.spinnerPrimary=document.createElement("div"),this.spinnerPrimary.classList.add(`spinner${this.elementID}`,`spinnerPrimary${this.elementID}`),this.messageContainerPrimary=document.createElement("div"),this.messageContainerPrimary.classList.add(`messageContainer${this.elementID}`,`messageContainerPrimary${this.elementID}`),this.messageContainerPrimary.innerHTML=this.message,this.spinnerContainerMin=document.createElement("div"),this.spinnerContainerMin.className=`spinnerContainerMin${this.elementID}`,this.spinnerMin=document.createElement("div"),this.spinnerMin.classList.add(`spinner${this.elementID}`,`spinnerMin${this.elementID}`),this.messageContainerMin=document.createElement("div"),this.messageContainerMin.classList.add(`messageContainer${this.elementID}`,`messageContainerMin${this.elementID}`),this.messageContainerMin.innerHTML=this.message,this.spinnerContainerPrimary.appendChild(this.spinnerPrimary),this.spinnerContainerPrimary.appendChild(this.messageContainerPrimary),this.spinnerContainerOuter.appendChild(this.spinnerContainerPrimary),this.spinnerContainerMin.appendChild(this.spinnerMin),this.spinnerContainerMin.appendChild(this.messageContainerMin),this.spinnerContainerOuter.appendChild(this.spinnerContainerMin);const n=document.createElement("style");n.innerHTML=`

            .spinnerOuterContainer${this.elementID} {
                width: 100%;
                height: 100%;
                margin: 0;
                top: 0;
                left: 0;
                position: absolute;
                pointer-events: none;
            }

            .messageContainer${this.elementID} {
                height: 20px;
                font-family: arial;
                font-size: 12pt;
                color: #ffffff;
                text-align: center;
                vertical-align: middle;
            }

            .spinner${this.elementID} {
                padding: 15px;
                background: #07e8d6;
                z-index:99999;
            
                aspect-ratio: 1;
                border-radius: 50%;
                --_m: 
                    conic-gradient(#0000,#000),
                    linear-gradient(#000 0 0) content-box;
                -webkit-mask: var(--_m);
                    mask: var(--_m);
                -webkit-mask-composite: source-out;
                    mask-composite: subtract;
                box-sizing: border-box;
                animation: load 1s linear infinite;
            }

            .spinnerContainerPrimary${this.elementID} {
                z-index:99999;
                background-color: rgba(128, 128, 128, 0.75);
                border: #666666 1px solid;
                border-radius: 5px;
                padding-top: 20px;
                padding-bottom: 10px;
                margin: 0;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-80px, -80px);
                width: 180px;
                pointer-events: auto;
            }

            .spinnerPrimary${this.elementID} {
                width: 120px;
                margin-left: 30px;
            }

            .messageContainerPrimary${this.elementID} {
                padding-top: 15px;
            }

            .spinnerContainerMin${this.elementID} {
                z-index:99999;
                background-color: rgba(128, 128, 128, 0.75);
                border: #666666 1px solid;
                border-radius: 5px;
                padding-top: 20px;
                padding-bottom: 15px;
                margin: 0;
                position: absolute;
                bottom: 50px;
                left: 50%;
                transform: translate(-50%, 0);
                display: flex;
                flex-direction: left;
                pointer-events: auto;
                min-width: 250px;
            }

            .messageContainerMin${this.elementID} {
                margin-right: 15px;
            }

            .spinnerMin${this.elementID} {
                width: 50px;
                height: 50px;
                margin-left: 15px;
                margin-right: 25px;
            }

            .messageContainerMin${this.elementID} {
                padding-top: 15px;
            }
            
            @keyframes load {
                to{transform: rotate(1turn)}
            }

        `,this.spinnerContainerOuter.appendChild(n),this.container.appendChild(this.spinnerContainerOuter),this.setMinimized(!1,!0),this.fadeTransitions=[]}addTask(e){const t={message:e,id:this.taskIDGen++};return this.tasks.push(t),this.update(),t.id}removeTask(e){let t=0;for(let n of this.tasks){if(n.id===e){this.tasks.splice(t,1);break}t++}this.update()}removeAllTasks(){this.tasks=[],this.update()}setMessageForTask(e,t){for(let n of this.tasks)if(n.id===e){n.message=t;break}this.update()}update(){this.tasks.length>0?(this.show(),this.setMessage(this.tasks[this.tasks.length-1].message)):this.hide()}show(){this.spinnerContainerOuter.style.display="block",this.visible=!0}hide(){this.spinnerContainerOuter.style.display="none",this.visible=!1}setContainer(e){this.container&&this.spinnerContainerOuter.parentElement===this.container&&this.container.removeChild(this.spinnerContainerOuter),e&&(this.container=e,this.container.appendChild(this.spinnerContainerOuter),this.spinnerContainerOuter.style.zIndex=this.container.style.zIndex+1)}setMinimized(e,t){const n=(o,a,r,l,c)=>{r?o.style.display=a?l:"none":this.fadeTransitions[c]=fadeElement(o,!a,l,STANDARD_FADE_DURATION,()=>{this.fadeTransitions[c]=null})};n(this.spinnerContainerPrimary,!e,t,"block",0),n(this.spinnerContainerMin,e,t,"flex",1),this.minimized=e}setMessage(e){this.messageContainerPrimary.innerHTML=e,this.messageContainerMin.innerHTML=e}};At(ir,"elementIDGen",0);let LoadingSpinner=ir;class LoadingProgressBar{constructor(e){this.idGen=0,this.tasks=[],this.container=e||document.body,this.progressBarContainerOuter=document.createElement("div"),this.progressBarContainerOuter.className="progressBarOuterContainer",this.progressBarContainerOuter.style.display="none",this.progressBarBox=document.createElement("div"),this.progressBarBox.className="progressBarBox",this.progressBarBackground=document.createElement("div"),this.progressBarBackground.className="progressBarBackground",this.progressBar=document.createElement("div"),this.progressBar.className="progressBar",this.progressBarBackground.appendChild(this.progressBar),this.progressBarBox.appendChild(this.progressBarBackground),this.progressBarContainerOuter.appendChild(this.progressBarBox);const t=document.createElement("style");t.innerHTML=`

            .progressBarOuterContainer {
                width: 100%;
                height: 100%;
                margin: 0;
                top: 0;
                left: 0;
                position: absolute;
                pointer-events: none;
            }

            .progressBarBox {
                z-index:99999;
                padding: 7px 9px 5px 7px;
                background-color: rgba(190, 190, 190, 0.75);
                border: #555555 1px solid;
                border-radius: 15px;
                margin: 0;
                position: absolute;
                bottom: 50px;
                left: 50%;
                transform: translate(-50%, 0);
                width: 180px;
                height: 30px;
                pointer-events: auto;
            }

            .progressBarBackground {
                width: 100%;
                height: 25px;
                border-radius:10px;
                background-color: rgba(128, 128, 128, 0.75);
                border: #444444 1px solid;
                box-shadow: inset 0 0 10px #333333;
            }

            .progressBar {
                height: 25px;
                width: 0px;
                border-radius:10px;
                background-color: rgba(0, 200, 0, 0.75);
                box-shadow: inset 0 0 10px #003300;
            }

        `,this.progressBarContainerOuter.appendChild(t),this.container.appendChild(this.progressBarContainerOuter)}show(){this.progressBarContainerOuter.style.display="block"}hide(){this.progressBarContainerOuter.style.display="none"}setProgress(e){this.progressBar.style.width=e+"%"}setContainer(e){this.container&&this.progressBarContainerOuter.parentElement===this.container&&this.container.removeChild(this.progressBarContainerOuter),e&&(this.container=e,this.container.appendChild(this.progressBarContainerOuter),this.progressBarContainerOuter.style.zIndex=this.container.style.zIndex+1)}}class InfoPanel{constructor(e){At(this,"update",function(e,t,n,o,a,r,l,c,u,d,f,g,_,b){const B=`${t.x.toFixed(5)}, ${t.y.toFixed(5)}, ${t.z.toFixed(5)}`;if(this.infoCells.cameraPosition.innerHTML!==B&&(this.infoCells.cameraPosition.innerHTML=B),n){const C=n,R=`${C.x.toFixed(5)}, ${C.y.toFixed(5)}, ${C.z.toFixed(5)}`;this.infoCells.cameraLookAt.innerHTML!==R&&(this.infoCells.cameraLookAt.innerHTML=R)}const I=`${o.x.toFixed(5)}, ${o.y.toFixed(5)}, ${o.z.toFixed(5)}`;if(this.infoCells.cameraUp.innerHTML!==I&&(this.infoCells.cameraUp.innerHTML=I),this.infoCells.orthographicCamera.innerHTML=a?"Orthographic":"Perspective",r){const C=r,R=`${C.x.toFixed(5)}, ${C.y.toFixed(5)}, ${C.z.toFixed(5)}`;this.infoCells.cursorPosition.innerHTML=R}else this.infoCells.cursorPosition.innerHTML="N/A";this.infoCells.fps.innerHTML=l,this.infoCells.renderWindow.innerHTML=`${e.x} x ${e.y}`,this.infoCells.renderSplatCount.innerHTML=`${u} splats out of ${c} (${d.toFixed(2)}%)`,this.infoCells.sortTime.innerHTML=`${f.toFixed(3)} ms`,this.infoCells.focalAdjustment.innerHTML=`${g.toFixed(3)}`,this.infoCells.splatScale.innerHTML=`${_.toFixed(3)}`,this.infoCells.pointCloudMode.innerHTML=`${b}`});this.container=e||document.body,this.infoCells={};const t=[["Camera position","cameraPosition"],["Camera look-at","cameraLookAt"],["Camera up","cameraUp"],["Camera mode","orthographicCamera"],["Cursor position","cursorPosition"],["FPS","fps"],["Rendering:","renderSplatCount"],["Sort time","sortTime"],["Render window","renderWindow"],["Focal adjustment","focalAdjustment"],["Splat scale","splatScale"],["Point cloud mode","pointCloudMode"]];this.infoPanelContainer=document.createElement("div");const n=document.createElement("style");n.innerHTML=`

            .infoPanel {
                width: 430px;
                padding: 10px;
                background-color: rgba(50, 50, 50, 0.85);
                border: #555555 2px solid;
                color: #dddddd;
                border-radius: 10px;
                z-index: 9999;
                font-family: arial;
                font-size: 11pt;
                text-align: left;
                margin: 0;
                top: 10px;
                left:10px;
                position: absolute;
                pointer-events: auto;
            }

            .info-panel-cell {
                margin-bottom: 5px;
                padding-bottom: 2px;
            }

            .label-cell {
                font-weight: bold;
                font-size: 12pt;
                width: 140px;
            }

        `,this.infoPanelContainer.append(n),this.infoPanel=document.createElement("div"),this.infoPanel.className="infoPanel";const o=document.createElement("div");o.style.display="table";for(let a of t){const r=document.createElement("div");r.style.display="table-row",r.className="info-panel-row";const l=document.createElement("div");l.style.display="table-cell",l.innerHTML=`${a[0]}: `,l.classList.add("info-panel-cell","label-cell");const c=document.createElement("div");c.style.display="table-cell",c.style.width="10px",c.innerHTML=" ",c.className="info-panel-cell";const u=document.createElement("div");u.style.display="table-cell",u.innerHTML="",u.className="info-panel-cell",this.infoCells[a[1]]=u,r.appendChild(l),r.appendChild(c),r.appendChild(u),o.appendChild(r)}this.infoPanel.appendChild(o),this.infoPanelContainer.append(this.infoPanel),this.infoPanelContainer.style.display="none",this.container.appendChild(this.infoPanelContainer),this.visible=!1}setContainer(e){this.container&&this.infoPanelContainer.parentElement===this.container&&this.container.removeChild(this.infoPanelContainer),e&&(this.container=e,this.container.appendChild(this.infoPanelContainer),this.infoPanelContainer.style.zIndex=this.container.style.zIndex+1)}show(){this.infoPanelContainer.style.display="block",this.visible=!0}hide(){this.infoPanelContainer.style.display="none",this.visible=!1}}const _axis=new Vector3;class ArrowHelper extends Object3D{constructor(e=new Vector3(0,0,1),t=new Vector3(0,0,0),n=1,o=.1,a=16776960,r=n*.2,l=r*.2){super(),this.type="ArrowHelper";const c=new CylinderGeometry(o,o,n,32);c.translate(0,n/2,0);const u=new CylinderGeometry(0,l,r,32);u.translate(0,n,0),this.position.copy(t),this.line=new Mesh(c,new MeshBasicMaterial({color:a,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mesh(u,new MeshBasicMaterial({color:a,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{_axis.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(_axis,t)}}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class SceneHelper{constructor(e){At(this,"updateFocusMarker",function(){const e=new Vector3,t=new Matrix4,n=new Vector3;return function(o,a,r){t.copy(a.matrixWorld).invert(),e.copy(o).applyMatrix4(t),e.normalize().multiplyScalar(10),e.applyMatrix4(a.matrixWorld),n.copy(a.position).sub(o);const l=n.length();this.focusMarker.position.copy(o),this.focusMarker.scale.set(l,l,l),this.focusMarker.material.uniforms.realFocusPosition.value.copy(o),this.focusMarker.material.uniforms.viewport.value.copy(r),this.focusMarker.material.uniformsNeedUpdate=!0}}());At(this,"positionAndOrientControlPlane",function(){const e=new Quaternion,t=new Vector3(0,1,0);return function(n,o){e.setFromUnitVectors(t,o),this.controlPlane.position.copy(n),this.controlPlane.quaternion.copy(e)}}());this.threeScene=e,this.splatRenderTarget=null,this.renderTargetCopyQuad=null,this.renderTargetCopyCamera=null,this.meshCursor=null,this.focusMarker=null,this.controlPlane=null,this.debugRoot=null,this.secondaryDebugRoot=null}updateSplatRenderTargetForRenderDimensions(e,t){this.destroySplatRendertarget(),this.splatRenderTarget=new WebGLRenderTarget(e,t,{format:RGBAFormat,stencilBuffer:!1,depthBuffer:!0}),this.splatRenderTarget.depthTexture=new DepthTexture(e,t),this.splatRenderTarget.depthTexture.format=DepthFormat,this.splatRenderTarget.depthTexture.type=UnsignedIntType}destroySplatRendertarget(){this.splatRenderTarget&&(this.splatRenderTarget=null)}setupRenderTargetCopyObjects(){const e={sourceColorTexture:{type:"t",value:null},sourceDepthTexture:{type:"t",value:null}},t=new ShaderMaterial({vertexShader:`
                varying vec2 vUv;
                void main() {
                    vUv = uv;
                    gl_Position = vec4( position.xy, 0.0, 1.0 );    
                }
            `,fragmentShader:`
                #include <common>
                #include <packing>
                varying vec2 vUv;
                uniform sampler2D sourceColorTexture;
                uniform sampler2D sourceDepthTexture;
                void main() {
                    vec4 color = texture2D(sourceColorTexture, vUv);
                    float fragDepth = texture2D(sourceDepthTexture, vUv).x;
                    gl_FragDepth = fragDepth;
                    gl_FragColor = vec4(color.rgb, color.a * 2.0);
              }
            `,uniforms:e,depthWrite:!1,depthTest:!1,transparent:!0,blending:CustomBlending,blendSrc:SrcAlphaFactor,blendSrcAlpha:SrcAlphaFactor,blendDst:OneMinusSrcAlphaFactor,blendDstAlpha:OneMinusSrcAlphaFactor});t.extensions.fragDepth=!0,this.renderTargetCopyQuad=new Mesh(new PlaneGeometry(2,2),t),this.renderTargetCopyCamera=new OrthographicCamera(-1,1,1,-1,0,1)}destroyRenderTargetCopyObjects(){this.renderTargetCopyQuad&&(disposeAllMeshes(this.renderTargetCopyQuad),this.renderTargetCopyQuad=null)}setupMeshCursor(){if(!this.meshCursor){const e=new ConeGeometry(.5,1.5,32),t=new MeshBasicMaterial({color:16777215}),n=new Mesh(e,t);n.rotation.set(0,0,Math.PI),n.position.set(0,1,0);const o=new Mesh(e,t);o.position.set(0,-1,0);const a=new Mesh(e,t);a.rotation.set(0,0,Math.PI/2),a.position.set(1,0,0);const r=new Mesh(e,t);r.rotation.set(0,0,-Math.PI/2),r.position.set(-1,0,0),this.meshCursor=new Object3D,this.meshCursor.add(n),this.meshCursor.add(o),this.meshCursor.add(a),this.meshCursor.add(r),this.meshCursor.scale.set(.1,.1,.1),this.threeScene.add(this.meshCursor),this.meshCursor.visible=!1}}destroyMeshCursor(){this.meshCursor&&(disposeAllMeshes(this.meshCursor),this.threeScene.remove(this.meshCursor),this.meshCursor=null)}setMeshCursorVisibility(e){this.meshCursor.visible=e}getMeschCursorVisibility(){return this.meshCursor.visible}setMeshCursorPosition(e){this.meshCursor.position.copy(e)}positionAndOrientMeshCursor(e,t){this.meshCursor.position.copy(e),this.meshCursor.up.copy(t.up),this.meshCursor.lookAt(t.position)}setupFocusMarker(){if(!this.focusMarker){const e=new SphereGeometry(.5,32,32),t=SceneHelper.buildFocusMarkerMaterial();t.depthTest=!1,t.depthWrite=!1,t.transparent=!0,this.focusMarker=new Mesh(e,t)}}destroyFocusMarker(){this.focusMarker&&(disposeAllMeshes(this.focusMarker),this.focusMarker=null)}setFocusMarkerVisibility(e){this.focusMarker.visible=e}setFocusMarkerOpacity(e){this.focusMarker.material.uniforms.opacity.value=e,this.focusMarker.material.uniformsNeedUpdate=!0}getFocusMarkerOpacity(){return this.focusMarker.material.uniforms.opacity.value}setupControlPlane(){if(!this.controlPlane){const e=new PlaneGeometry(1,1);e.rotateX(-Math.PI/2);const t=new MeshBasicMaterial({color:16777215});t.transparent=!0,t.opacity=.6,t.depthTest=!1,t.depthWrite=!1,t.side=DoubleSide;const n=new Mesh(e,t),o=new Vector3(0,1,0);o.normalize();const a=new Vector3(0,0,0),r=.5,l=.01,c=56576,u=new ArrowHelper(o,a,r,l,c,.1,.03);this.controlPlane=new Object3D,this.controlPlane.add(n),this.controlPlane.add(u)}}destroyControlPlane(){this.controlPlane&&(disposeAllMeshes(this.controlPlane),this.controlPlane=null)}setControlPlaneVisibility(e){this.controlPlane.visible=e}addDebugMeshes(){this.debugRoot=this.createDebugMeshes(),this.secondaryDebugRoot=this.createSecondaryDebugMeshes(),this.threeScene.add(this.debugRoot),this.threeScene.add(this.secondaryDebugRoot)}destroyDebugMeshes(){for(let e of[this.debugRoot,this.secondaryDebugRoot])e&&(disposeAllMeshes(e),this.threeScene.remove(e));this.debugRoot=null,this.secondaryDebugRoot=null}createDebugMeshes(e){const t=new SphereGeometry(1,32,32),n=new Object3D,o=(a,r)=>{let l=new Mesh(t,SceneHelper.buildDebugMaterial(a));l.renderOrder=e,n.add(l),l.position.fromArray(r)};return o(16711680,[-50,0,0]),o(16711680,[50,0,0]),o(65280,[0,0,-50]),o(65280,[0,0,50]),o(16755200,[5,0,5]),n}createSecondaryDebugMeshes(e){const t=new BoxGeometry(3,3,3),n=new Object3D;let o=12303291;const a=l=>{let c=new Mesh(t,SceneHelper.buildDebugMaterial(o));c.renderOrder=e,n.add(c),c.position.fromArray(l)};let r=10;return a([-r,0,-r]),a([-r,0,r]),a([r,0,-r]),a([r,0,r]),n}static buildDebugMaterial(e){const t=`
            #include <common>
            varying float ndcDepth;

            void main() {
                gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position.xyz, 1.0);
                ndcDepth = gl_Position.z / gl_Position.w;
                gl_Position.x = gl_Position.x / gl_Position.w;
                gl_Position.y = gl_Position.y / gl_Position.w;
                gl_Position.z = 0.0;
                gl_Position.w = 1.0;
    
            }
        `,n=`
            #include <common>
            uniform vec3 color;
            varying float ndcDepth;
            void main() {
                gl_FragDepth = (ndcDepth + 1.0) / 2.0;
                gl_FragColor = vec4(color.rgb, 0.0);
            }
        `,o={color:{type:"v3",value:new Color(e)}},a=new ShaderMaterial({uniforms:o,vertexShader:t,fragmentShader:n,transparent:!1,depthTest:!0,depthWrite:!0,side:FrontSide});return a.extensions.fragDepth=!0,a}static buildFocusMarkerMaterial(e){const t=`
            #include <common>

            uniform vec2 viewport;
            uniform vec3 realFocusPosition;

            varying vec4 ndcPosition;
            varying vec4 ndcCenter;
            varying vec4 ndcFocusPosition;

            void main() {
                float radius = 0.01;

                vec4 viewPosition = modelViewMatrix * vec4(position.xyz, 1.0);
                vec4 viewCenter = modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0);

                vec4 viewFocusPosition = modelViewMatrix * vec4(realFocusPosition, 1.0);

                ndcPosition = projectionMatrix * viewPosition;
                ndcPosition = ndcPosition * vec4(1.0 / ndcPosition.w);
                ndcCenter = projectionMatrix * viewCenter;
                ndcCenter = ndcCenter * vec4(1.0 / ndcCenter.w);

                ndcFocusPosition = projectionMatrix * viewFocusPosition;
                ndcFocusPosition = ndcFocusPosition * vec4(1.0 / ndcFocusPosition.w);

                gl_Position = projectionMatrix * viewPosition;

            }
        `,n=`
            #include <common>
            uniform vec3 color;
            uniform vec2 viewport;
            uniform float opacity;

            varying vec4 ndcPosition;
            varying vec4 ndcCenter;
            varying vec4 ndcFocusPosition;

            void main() {
                vec2 screenPosition = vec2(ndcPosition) * viewport;
                vec2 screenCenter = vec2(ndcCenter) * viewport;

                vec2 screenVec = screenPosition - screenCenter;

                float projectedRadius = length(screenVec);

                float lineWidth = 0.0005 * viewport.y;
                float aaRange = 0.0025 * viewport.y;
                float radius = 0.06 * viewport.y;
                float radDiff = abs(projectedRadius - radius) - lineWidth;
                float alpha = 1.0 - clamp(radDiff / 5.0, 0.0, 1.0); 

                gl_FragColor = vec4(color.rgb, alpha * opacity);
            }
        `,o={color:{type:"v3",value:new Color(e)},realFocusPosition:{type:"v3",value:new Vector3},viewport:{type:"v2",value:new Vector2},opacity:{value:0}};return new ShaderMaterial({uniforms:o,vertexShader:t,fragmentShader:n,transparent:!0,depthTest:!1,depthWrite:!1,side:FrontSide})}dispose(){this.destroyMeshCursor(),this.destroyFocusMarker(),this.destroyDebugMeshes(),this.destroyControlPlane(),this.destroyRenderTargetCopyObjects(),this.destroySplatRendertarget()}}const VectorRight=new Vector3(1,0,0),VectorUp=new Vector3(0,1,0),VectorBackward=new Vector3(0,0,1);class Ray{constructor(e=new Vector3,t=new Vector3){At(this,"intersectBox",function(){const e=new Vector3,t=[],n=[],o=[];return function(a,r){if(n[0]=this.origin.x,n[1]=this.origin.y,n[2]=this.origin.z,o[0]=this.direction.x,o[1]=this.direction.y,o[2]=this.direction.z,this.boxContainsPoint(a,this.origin,1e-4))return r&&(r.origin.copy(this.origin),r.normal.set(0,0,0),r.distance=-1),!0;for(let l=0;l<3;l++){if(o[l]==0)continue;const c=l==0?VectorRight:l==1?VectorUp:VectorBackward,u=o[l]<0?a.max:a.min;let d=-Math.sign(o[l]);t[0]=l==0?u.x:l==1?u.y:u.z;let f=t[0]-n[l];if(f*d<0){const g=(l+1)%3,_=(l+2)%3;if(t[2]=o[g]/o[l]*f+n[g],t[1]=o[_]/o[l]*f+n[_],e.set(t[l],t[_],t[g]),this.boxContainsPoint(a,e,1e-4))return r&&(r.origin.copy(e),r.normal.copy(c).multiplyScalar(d),r.distance=e.sub(this.origin).length()),!0}}return!1}}());At(this,"intersectSphere",function(){const e=new Vector3;return function(t,n,o){e.copy(t).sub(this.origin);const a=e.dot(this.direction),r=a*a,c=e.dot(e)-r,u=n*n;if(c>u)return!1;const d=Math.sqrt(u-c),f=a-d,g=a+d;if(g<0)return!1;let _=f<0?g:f;return o&&(o.origin.copy(this.origin).addScaledVector(this.direction,_),o.normal.copy(o.origin).sub(t).normalize(),o.distance=_),!0}}());this.origin=new Vector3,this.direction=new Vector3,this.setParameters(e,t)}setParameters(e,t){this.origin.copy(e),this.direction.copy(t).normalize()}boxContainsPoint(e,t,n){return!(t.x<e.min.x-n||t.x>e.max.x+n||t.y<e.min.y-n||t.y>e.max.y+n||t.z<e.min.z-n||t.z>e.max.z+n)}}class Hit{constructor(){this.origin=new Vector3,this.normal=new Vector3,this.distance=0,this.splatIndex=0}set(e,t,n,o){this.origin.copy(e),this.normal.copy(t),this.distance=n,this.splatIndex=o}clone(){const e=new Hit;return e.origin.copy(this.origin),e.normal.copy(this.normal),e.distance=this.distance,e.splatIndex=this.splatIndex,e}}const SplatRenderMode={ThreeD:0,TwoD:1};class Raycaster{constructor(e,t,n=!1){At(this,"setFromCameraAndScreenPosition",function(){const e=new Vector2;return function(t,n,o){if(e.x=n.x/o.x*2-1,e.y=(o.y-n.y)/o.y*2-1,t.isPerspectiveCamera)this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t;else if(t.isOrthographicCamera)this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t;else throw new Error("Raycaster::setFromCameraAndScreenPosition() -> Unsupported camera type")}}());At(this,"intersectSplatMesh",function(){const e=new Matrix4,t=new Matrix4,n=new Matrix4,o=new Ray,a=new Vector3;return function(r,l=[]){const c=r.getSplatTree();if(c){for(let u=0;u<c.subTrees.length;u++){const d=c.subTrees[u];t.copy(r.matrixWorld),r.dynamicMode&&(r.getSceneTransform(u,n),t.multiply(n)),e.copy(t).invert(),o.origin.copy(this.ray.origin).applyMatrix4(e),o.direction.copy(this.ray.origin).add(this.ray.direction),o.direction.applyMatrix4(e).sub(o.origin).normalize();const f=[];d.rootNode&&this.castRayAtSplatTreeNode(o,c,d.rootNode,f),f.forEach(g=>{g.origin.applyMatrix4(t),g.normal.applyMatrix4(t).normalize(),g.distance=a.copy(g.origin).sub(this.ray.origin).length()}),l.push(...f)}return l.sort((u,d)=>u.distance>d.distance?1:-1),l}}}());At(this,"castRayAtSplatTreeNode",function(){const e=new Vector4,t=new Vector3,n=new Vector3,o=new Quaternion,a=new Hit,r=1e-7,l=new Vector3(0,0,0),c=new Matrix4,u=new Matrix4,d=new Matrix4,f=new Matrix4,g=new Matrix4,_=new Ray;return function(b,B,I,C=[]){if(b.intersectBox(I.boundingBox)){if(I.data&&I.data.indexes&&I.data.indexes.length>0)for(let R=0;R<I.data.indexes.length;R++){const L=I.data.indexes[R],F=B.splatMesh.getSceneIndexForSplat(L);if(B.splatMesh.getScene(F).visible&&(B.splatMesh.getSplatColor(L,e),B.splatMesh.getSplatCenter(L,t),B.splatMesh.getSplatScaleAndRotation(L,n,o),!(n.x<=r||n.y<=r||B.splatMesh.splatRenderMode===SplatRenderMode.ThreeD&&n.z<=r)))if(this.raycastAgainstTrueSplatEllipsoid){u.makeScale(n.x,n.y,n.z),d.makeRotationFromQuaternion(o);const k=Math.log10(e.w)*2;if(c.makeScale(k,k,k),g.copy(c).multiply(d).multiply(u),f.copy(g).invert(),_.origin.copy(b.origin).sub(t).applyMatrix4(f),_.direction.copy(b.origin).add(b.direction).sub(t),_.direction.applyMatrix4(f).sub(_.origin).normalize(),_.intersectSphere(l,1,a)){const Q=a.clone();Q.splatIndex=L,Q.origin.applyMatrix4(g).add(t),C.push(Q)}}else{let k=n.x+n.y,Q=2;if(B.splatMesh.splatRenderMode===SplatRenderMode.ThreeD&&(k+=n.z,Q=3),k=k/Q,b.intersectSphere(t,k,a)){const z=a.clone();z.splatIndex=L,C.push(z)}}}if(I.children&&I.children.length>0)for(let R of I.children)this.castRayAtSplatTreeNode(b,B,R,C);return C}}}());this.ray=new Ray(e,t),this.raycastAgainstTrueSplatEllipsoid=n}}class SplatMaterial{static buildVertexShaderBase(e=!1,t=!1,n=0,o=""){let a=`
        precision highp float;
        #include <common>

        attribute uint splatIndex;
        uniform highp usampler2D centersColorsTexture;
        uniform highp sampler2D sphericalHarmonicsTexture;
        uniform highp sampler2D sphericalHarmonicsTextureR;
        uniform highp sampler2D sphericalHarmonicsTextureG;
        uniform highp sampler2D sphericalHarmonicsTextureB;

        uniform highp usampler2D sceneIndexesTexture;
        uniform vec2 sceneIndexesTextureSize;
        uniform int sceneCount;
    `;return t&&(a+=`
            uniform float sceneOpacity[${Constants.MaxScenes}];
            uniform int sceneVisibility[${Constants.MaxScenes}];
        `),e&&(a+=`
            uniform highp mat4 transforms[${Constants.MaxScenes}];
        `),a+=`
        ${o}
        uniform vec2 focal;
        uniform float orthoZoom;
        uniform int orthographicMode;
        uniform int pointCloudModeEnabled;
        uniform float inverseFocalAdjustment;
        uniform vec2 viewport;
        uniform vec2 basisViewport;
        uniform vec2 centersColorsTextureSize;
        uniform int sphericalHarmonicsDegree;
        uniform vec2 sphericalHarmonicsTextureSize;
        uniform int sphericalHarmonics8BitMode;
        uniform int sphericalHarmonicsMultiTextureMode;
        uniform float visibleRegionRadius;
        uniform float visibleRegionFadeStartRadius;
        uniform float firstRenderTime;
        uniform float currentTime;
        uniform int fadeInComplete;
        uniform vec3 sceneCenter;
        uniform float splatScale;
        uniform float sphericalHarmonics8BitCompressionRangeMin[${Constants.MaxScenes}];
        uniform float sphericalHarmonics8BitCompressionRangeMax[${Constants.MaxScenes}];

        varying vec4 vColor;
        varying vec2 vUv;
        varying vec2 vPosition;

        mat3 quaternionToRotationMatrix(float x, float y, float z, float w) {
            float s = 1.0 / sqrt(w * w + x * x + y * y + z * z);
        
            return mat3(
                1. - 2. * (y * y + z * z),
                2. * (x * y + w * z),
                2. * (x * z - w * y),
                2. * (x * y - w * z),
                1. - 2. * (x * x + z * z),
                2. * (y * z + w * x),
                2. * (x * z + w * y),
                2. * (y * z - w * x),
                1. - 2. * (x * x + y * y)
            );
        }

        const float sqrt8 = sqrt(8.0);
        const float minAlpha = 1.0 / 255.0;

        const vec4 encodeNorm4 = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0);
        const uvec4 mask4 = uvec4(uint(0x000000FF), uint(0x0000FF00), uint(0x00FF0000), uint(0xFF000000));
        const uvec4 shift4 = uvec4(0, 8, 16, 24);
        vec4 uintToRGBAVec (uint u) {
           uvec4 urgba = mask4 & u;
           urgba = urgba >> shift4;
           vec4 rgba = vec4(urgba) * encodeNorm4;
           return rgba;
        }

        vec2 getDataUV(in int stride, in int offset, in vec2 dimensions) {
            vec2 samplerUV = vec2(0.0, 0.0);
            float d = float(splatIndex * uint(stride) + uint(offset)) / dimensions.x;
            samplerUV.y = float(floor(d)) / dimensions.y;
            samplerUV.x = fract(d);
            return samplerUV;
        }

        vec2 getDataUVF(in uint sIndex, in float stride, in uint offset, in vec2 dimensions) {
            vec2 samplerUV = vec2(0.0, 0.0);
            float d = float(uint(float(sIndex) * stride) + offset) / dimensions.x;
            samplerUV.y = float(floor(d)) / dimensions.y;
            samplerUV.x = fract(d);
            return samplerUV;
        }

        const float SH_C1 = 0.4886025119029199f;
        const float[5] SH_C2 = float[](1.0925484, -1.0925484, 0.3153916, -1.0925484, 0.5462742);

        void main () {

            uint oddOffset = splatIndex & uint(0x00000001);
            uint doubleOddOffset = oddOffset * uint(2);
            bool isEven = oddOffset == uint(0);
            uint nearestEvenIndex = splatIndex - oddOffset;
            float fOddOffset = float(oddOffset);

            uvec4 sampledCenterColor = texture(centersColorsTexture, getDataUV(1, 0, centersColorsTextureSize));
            vec3 splatCenter = uintBitsToFloat(uvec3(sampledCenterColor.gba));

            uint sceneIndex = uint(0);
            if (sceneCount > 1) {
                sceneIndex = texture(sceneIndexesTexture, getDataUV(1, 0, sceneIndexesTextureSize)).r;
            }
            `,t&&(a+=`
                float splatOpacityFromScene = sceneOpacity[sceneIndex];
                int sceneVisible = sceneVisibility[sceneIndex];
                if (splatOpacityFromScene <= 0.01 || sceneVisible == 0) {
                    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);
                    return;
                }
            `),e?a+=`
                mat4 transform = transforms[sceneIndex];
                mat4 transformModelViewMatrix = viewMatrix * transform;
            `:a+="mat4 transformModelViewMatrix = modelViewMatrix;",a+=`
            float sh8BitCompressionRangeMinForScene = sphericalHarmonics8BitCompressionRangeMin[sceneIndex];
            float sh8BitCompressionRangeMaxForScene = sphericalHarmonics8BitCompressionRangeMax[sceneIndex];
            float sh8BitCompressionRangeForScene = sh8BitCompressionRangeMaxForScene - sh8BitCompressionRangeMinForScene;
            float sh8BitCompressionHalfRangeForScene = sh8BitCompressionRangeForScene / 2.0;
            vec3 vec8BitSHShift = vec3(sh8BitCompressionRangeMinForScene);

            vec4 viewCenter = transformModelViewMatrix * vec4(splatCenter, 1.0);

            vec4 clipCenter = projectionMatrix * viewCenter;

            float clip = 1.2 * clipCenter.w;
            if (clipCenter.z < -clip || clipCenter.x < -clip || clipCenter.x > clip || clipCenter.y < -clip || clipCenter.y > clip) {
                gl_Position = vec4(0.0, 0.0, 2.0, 1.0);
                return;
            }

            vec3 ndcCenter = clipCenter.xyz / clipCenter.w;

            vPosition = position.xy;
            vColor = uintToRGBAVec(sampledCenterColor.r);
        `,n>=1&&(a+=`   
            if (sphericalHarmonicsDegree >= 1) {
            `,e?a+=`
                    vec3 worldViewDir = normalize(splatCenter - vec3(inverse(transform) * vec4(cameraPosition, 1.0)));
                `:a+=`
                    vec3 worldViewDir = normalize(splatCenter - cameraPosition);
                `,a+=`
                vec3 sh1;
                vec3 sh2;
                vec3 sh3;
            `,n>=2&&(a+=`
                    vec3 sh4;
                    vec3 sh5;
                    vec3 sh6;
                    vec3 sh7;
                    vec3 sh8;
                `),n===1?a+=`
                    if (sphericalHarmonicsMultiTextureMode == 0) {
                        vec2 shUV = getDataUVF(nearestEvenIndex, 2.5, doubleOddOffset, sphericalHarmonicsTextureSize);
                        vec4 sampledSH0123 = texture(sphericalHarmonicsTexture, shUV);
                        shUV = getDataUVF(nearestEvenIndex, 2.5, doubleOddOffset + uint(1), sphericalHarmonicsTextureSize);
                        vec4 sampledSH4567 = texture(sphericalHarmonicsTexture, shUV);
                        shUV = getDataUVF(nearestEvenIndex, 2.5, doubleOddOffset + uint(2), sphericalHarmonicsTextureSize);
                        vec4 sampledSH891011 = texture(sphericalHarmonicsTexture, shUV);
                        sh1 = vec3(sampledSH0123.rgb) * (1.0 - fOddOffset) + vec3(sampledSH0123.ba, sampledSH4567.r) * fOddOffset;
                        sh2 = vec3(sampledSH0123.a, sampledSH4567.rg) * (1.0 - fOddOffset) + vec3(sampledSH4567.gba) * fOddOffset;
                        sh3 = vec3(sampledSH4567.ba, sampledSH891011.r) * (1.0 - fOddOffset) + vec3(sampledSH891011.rgb) * fOddOffset;
                    } else {
                        vec2 sampledSH01R = texture(sphericalHarmonicsTextureR, getDataUV(2, 0, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH23R = texture(sphericalHarmonicsTextureR, getDataUV(2, 1, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH01G = texture(sphericalHarmonicsTextureG, getDataUV(2, 0, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH23G = texture(sphericalHarmonicsTextureG, getDataUV(2, 1, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH01B = texture(sphericalHarmonicsTextureB, getDataUV(2, 0, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH23B = texture(sphericalHarmonicsTextureB, getDataUV(2, 1, sphericalHarmonicsTextureSize)).rg;
                        sh1 = vec3(sampledSH01R.rg, sampledSH23R.r);
                        sh2 = vec3(sampledSH01G.rg, sampledSH23G.r);
                        sh3 = vec3(sampledSH01B.rg, sampledSH23B.r);
                    }
                `:n===2&&(a+=`
                    vec4 sampledSH0123;
                    vec4 sampledSH4567;
                    vec4 sampledSH891011;

                    vec4 sampledSH0123R;
                    vec4 sampledSH0123G;
                    vec4 sampledSH0123B;

                    if (sphericalHarmonicsMultiTextureMode == 0) {
                        sampledSH0123 = texture(sphericalHarmonicsTexture, getDataUV(6, 0, sphericalHarmonicsTextureSize));
                        sampledSH4567 = texture(sphericalHarmonicsTexture, getDataUV(6, 1, sphericalHarmonicsTextureSize));
                        sampledSH891011 = texture(sphericalHarmonicsTexture, getDataUV(6, 2, sphericalHarmonicsTextureSize));
                        sh1 = sampledSH0123.rgb;
                        sh2 = vec3(sampledSH0123.a, sampledSH4567.rg);
                        sh3 = vec3(sampledSH4567.ba, sampledSH891011.r);
                    } else {
                        sampledSH0123R = texture(sphericalHarmonicsTextureR, getDataUV(2, 0, sphericalHarmonicsTextureSize));
                        sampledSH0123G = texture(sphericalHarmonicsTextureG, getDataUV(2, 0, sphericalHarmonicsTextureSize));
                        sampledSH0123B = texture(sphericalHarmonicsTextureB, getDataUV(2, 0, sphericalHarmonicsTextureSize));
                        sh1 = vec3(sampledSH0123R.rgb);
                        sh2 = vec3(sampledSH0123G.rgb);
                        sh3 = vec3(sampledSH0123B.rgb);
                    }
                `),a+=`
                    if (sphericalHarmonics8BitMode == 1) {
                        sh1 = sh1 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                        sh2 = sh2 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                        sh3 = sh3 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                    }
                    float x = worldViewDir.x;
                    float y = worldViewDir.y;
                    float z = worldViewDir.z;
                    vColor.rgb += SH_C1 * (-sh1 * y + sh2 * z - sh3 * x);
            `,n>=2&&(a+=`
                    if (sphericalHarmonicsDegree >= 2) {
                        float xx = x * x;
                        float yy = y * y;
                        float zz = z * z;
                        float xy = x * y;
                        float yz = y * z;
                        float xz = x * z;
                `,n===2&&(a+=`
                        if (sphericalHarmonicsMultiTextureMode == 0) {
                            vec4 sampledSH12131415 = texture(sphericalHarmonicsTexture, getDataUV(6, 3, sphericalHarmonicsTextureSize));
                            vec4 sampledSH16171819 = texture(sphericalHarmonicsTexture, getDataUV(6, 4, sphericalHarmonicsTextureSize));
                            vec4 sampledSH20212223 = texture(sphericalHarmonicsTexture, getDataUV(6, 5, sphericalHarmonicsTextureSize));
                            sh4 = sampledSH891011.gba;
                            sh5 = sampledSH12131415.rgb;
                            sh6 = vec3(sampledSH12131415.a, sampledSH16171819.rg);
                            sh7 = vec3(sampledSH16171819.ba, sampledSH20212223.r);
                            sh8 = sampledSH20212223.gba;
                        } else {
                            vec4 sampledSH4567R = texture(sphericalHarmonicsTextureR, getDataUV(2, 1, sphericalHarmonicsTextureSize));
                            vec4 sampledSH4567G = texture(sphericalHarmonicsTextureG, getDataUV(2, 1, sphericalHarmonicsTextureSize));
                            vec4 sampledSH4567B = texture(sphericalHarmonicsTextureB, getDataUV(2, 1, sphericalHarmonicsTextureSize));
                            sh4 = vec3(sampledSH0123R.a, sampledSH4567R.rg);
                            sh5 = vec3(sampledSH4567R.ba, sampledSH0123G.a);
                            sh6 = vec3(sampledSH4567G.rgb);
                            sh7 = vec3(sampledSH4567G.a, sampledSH0123B.a, sampledSH4567B.r);
                            sh8 = vec3(sampledSH4567B.gba);
                        }
                    `),a+=`
                        if (sphericalHarmonics8BitMode == 1) {
                            sh4 = sh4 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh5 = sh5 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh6 = sh6 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh7 = sh7 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh8 = sh8 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                        }

                        vColor.rgb +=
                            (SH_C2[0] * xy) * sh4 +
                            (SH_C2[1] * yz) * sh5 +
                            (SH_C2[2] * (2.0 * zz - xx - yy)) * sh6 +
                            (SH_C2[3] * xz) * sh7 +
                            (SH_C2[4] * (xx - yy)) * sh8;
                    }
                `),a+=`

                vColor.rgb = clamp(vColor.rgb, vec3(0.), vec3(1.));

            }

            `),a}static getVertexShaderFadeIn(){return`
            if (fadeInComplete == 0) {
                float opacityAdjust = 1.0;
                float centerDist = length(splatCenter - sceneCenter);
                float renderTime = max(currentTime - firstRenderTime, 0.0);

                float fadeDistance = 0.75;
                float distanceLoadFadeInFactor = step(visibleRegionFadeStartRadius, centerDist);
                distanceLoadFadeInFactor = (1.0 - distanceLoadFadeInFactor) +
                                        (1.0 - clamp((centerDist - visibleRegionFadeStartRadius) / fadeDistance, 0.0, 1.0)) *
                                        distanceLoadFadeInFactor;
                opacityAdjust *= distanceLoadFadeInFactor;
                vColor.a *= opacityAdjust;
            }
        `}static getUniforms(e=!1,t=!1,n=0,o=1,a=!1){const r={sceneCenter:{type:"v3",value:new Vector3},fadeInComplete:{type:"i",value:0},orthographicMode:{type:"i",value:0},visibleRegionFadeStartRadius:{type:"f",value:0},visibleRegionRadius:{type:"f",value:0},currentTime:{type:"f",value:0},firstRenderTime:{type:"f",value:0},centersColorsTexture:{type:"t",value:null},sphericalHarmonicsTexture:{type:"t",value:null},sphericalHarmonicsTextureR:{type:"t",value:null},sphericalHarmonicsTextureG:{type:"t",value:null},sphericalHarmonicsTextureB:{type:"t",value:null},sphericalHarmonics8BitCompressionRangeMin:{type:"f",value:[]},sphericalHarmonics8BitCompressionRangeMax:{type:"f",value:[]},focal:{type:"v2",value:new Vector2},orthoZoom:{type:"f",value:1},inverseFocalAdjustment:{type:"f",value:1},viewport:{type:"v2",value:new Vector2},basisViewport:{type:"v2",value:new Vector2},debugColor:{type:"v3",value:new Color},centersColorsTextureSize:{type:"v2",value:new Vector2(1024,1024)},sphericalHarmonicsDegree:{type:"i",value:n},sphericalHarmonicsTextureSize:{type:"v2",value:new Vector2(1024,1024)},sphericalHarmonics8BitMode:{type:"i",value:0},sphericalHarmonicsMultiTextureMode:{type:"i",value:0},splatScale:{type:"f",value:o},pointCloudModeEnabled:{type:"i",value:a?1:0},sceneIndexesTexture:{type:"t",value:null},sceneIndexesTextureSize:{type:"v2",value:new Vector2(1024,1024)},sceneCount:{type:"i",value:1}};for(let l=0;l<Constants.MaxScenes;l++)r.sphericalHarmonics8BitCompressionRangeMin.value.push(-3/2),r.sphericalHarmonics8BitCompressionRangeMax.value.push(Constants.SphericalHarmonics8BitCompressionRange/2);if(t){const l=[];for(let u=0;u<Constants.MaxScenes;u++)l.push(1);r.sceneOpacity={type:"f",value:l};const c=[];for(let u=0;u<Constants.MaxScenes;u++)c.push(1);r.sceneVisibility={type:"i",value:c}}if(e){const l=[];for(let c=0;c<Constants.MaxScenes;c++)l.push(new Matrix4);r.transforms={type:"mat4",value:l}}return r}}class SplatMaterial3D{static build(e=!1,t=!1,n=!1,o=2048,a=1,r=!1,l=0,c=.3){let d=SplatMaterial.buildVertexShaderBase(e,t,l,`
            uniform vec2 covariancesTextureSize;
            uniform highp sampler2D covariancesTexture;
            uniform highp usampler2D covariancesTextureHalfFloat;
            uniform int covariancesAreHalfFloat;

            void fromCovarianceHalfFloatV4(uvec4 val, out vec4 first, out vec4 second) {
                vec2 r = unpackHalf2x16(val.r);
                vec2 g = unpackHalf2x16(val.g);
                vec2 b = unpackHalf2x16(val.b);

                first = vec4(r.x, r.y, g.x, g.y);
                second = vec4(b.x, b.y, 0.0, 0.0);
            }
        `);d+=SplatMaterial3D.buildVertexShaderProjection(n,t,o,c);const f=SplatMaterial3D.buildFragmentShader(),g=SplatMaterial.getUniforms(e,t,l,a,r);return g.covariancesTextureSize={type:"v2",value:new Vector2(1024,1024)},g.covariancesTexture={type:"t",value:null},g.covariancesTextureHalfFloat={type:"t",value:null},g.covariancesAreHalfFloat={type:"i",value:0},new ShaderMaterial({uniforms:g,vertexShader:d,fragmentShader:f,transparent:!0,alphaTest:1,blending:NormalBlending,depthTest:!0,depthWrite:!1,side:DoubleSide})}static buildVertexShaderProjection(e,t,n,o){let a=`

            vec4 sampledCovarianceA;
            vec4 sampledCovarianceB;
            vec3 cov3D_M11_M12_M13;
            vec3 cov3D_M22_M23_M33;
            if (covariancesAreHalfFloat == 0) {
                sampledCovarianceA = texture(covariancesTexture, getDataUVF(nearestEvenIndex, 1.5, oddOffset,
                                                                            covariancesTextureSize));
                sampledCovarianceB = texture(covariancesTexture, getDataUVF(nearestEvenIndex, 1.5, oddOffset + uint(1),
                                                                            covariancesTextureSize));

                cov3D_M11_M12_M13 = vec3(sampledCovarianceA.rgb) * (1.0 - fOddOffset) +
                                    vec3(sampledCovarianceA.ba, sampledCovarianceB.r) * fOddOffset;
                cov3D_M22_M23_M33 = vec3(sampledCovarianceA.a, sampledCovarianceB.rg) * (1.0 - fOddOffset) +
                                    vec3(sampledCovarianceB.gba) * fOddOffset;
            } else {
                uvec4 sampledCovarianceU = texture(covariancesTextureHalfFloat, getDataUV(1, 0, covariancesTextureSize));
                fromCovarianceHalfFloatV4(sampledCovarianceU, sampledCovarianceA, sampledCovarianceB);
                cov3D_M11_M12_M13 = sampledCovarianceA.rgb;
                cov3D_M22_M23_M33 = vec3(sampledCovarianceA.a, sampledCovarianceB.rg);
            }
        
            // Construct the 3D covariance matrix
            mat3 Vrk = mat3(
                cov3D_M11_M12_M13.x, cov3D_M11_M12_M13.y, cov3D_M11_M12_M13.z,
                cov3D_M11_M12_M13.y, cov3D_M22_M23_M33.x, cov3D_M22_M23_M33.y,
                cov3D_M11_M12_M13.z, cov3D_M22_M23_M33.y, cov3D_M22_M23_M33.z
            );

            mat3 J;
            if (orthographicMode == 1) {
                // Since the projection is linear, we don't need an approximation
                J = transpose(mat3(orthoZoom, 0.0, 0.0,
                                0.0, orthoZoom, 0.0,
                                0.0, 0.0, 0.0));
            } else {
                // Construct the Jacobian of the affine approximation of the projection matrix. It will be used to transform the
                // 3D covariance matrix instead of using the actual projection matrix because that transformation would
                // require a non-linear component (perspective division) which would yield a non-gaussian result.
                float s = 1.0 / (viewCenter.z * viewCenter.z);
                J = mat3(
                    focal.x / viewCenter.z, 0., -(focal.x * viewCenter.x) * s,
                    0., focal.y / viewCenter.z, -(focal.y * viewCenter.y) * s,
                    0., 0., 0.
                );
            }

            // Concatenate the projection approximation with the model-view transformation
            mat3 W = transpose(mat3(transformModelViewMatrix));
            mat3 T = W * J;

            // Transform the 3D covariance matrix (Vrk) to compute the 2D covariance matrix
            mat3 cov2Dm = transpose(T) * Vrk * T;
            `;return e?a+=`
                float detOrig = cov2Dm[0][0] * cov2Dm[1][1] - cov2Dm[0][1] * cov2Dm[0][1];
                cov2Dm[0][0] += ${o};
                cov2Dm[1][1] += ${o};
                float detBlur = cov2Dm[0][0] * cov2Dm[1][1] - cov2Dm[0][1] * cov2Dm[0][1];
                vColor.a *= sqrt(max(detOrig / detBlur, 0.0));
                if (vColor.a < minAlpha) return;
            `:a+=`
                cov2Dm[0][0] += ${o};
                cov2Dm[1][1] += ${o};
            `,a+=`

            // We are interested in the upper-left 2x2 portion of the projected 3D covariance matrix because
            // we only care about the X and Y values. We want the X-diagonal, cov2Dm[0][0],
            // the Y-diagonal, cov2Dm[1][1], and the correlation between the two cov2Dm[0][1]. We don't
            // need cov2Dm[1][0] because it is a symetric matrix.
            vec3 cov2Dv = vec3(cov2Dm[0][0], cov2Dm[0][1], cov2Dm[1][1]);

            // We now need to solve for the eigen-values and eigen vectors of the 2D covariance matrix
            // so that we can determine the 2D basis for the splat. This is done using the method described
            // here: https://people.math.harvard.edu/~knill/teaching/math21b2004/exhibits/2dmatrices/index.html
            // After calculating the eigen-values and eigen-vectors, we calculate the basis for rendering the splat
            // by normalizing the eigen-vectors and then multiplying them by (sqrt(8) * sqrt(eigen-value)), which is
            // equal to scaling them by sqrt(8) standard deviations.
            //
            // This is a different approach than in the original work at INRIA. In that work they compute the
            // max extents of the projected splat in screen space to form a screen-space aligned bounding rectangle
            // which forms the geometry that is actually rasterized. The dimensions of that bounding box are 3.0
            // times the square root of the maximum eigen-value, or 3 standard deviations. They then use the inverse
            // 2D covariance matrix (called 'conic') in the CUDA rendering thread to determine fragment opacity by
            // calculating the full gaussian: exp(-0.5 * (X - mean) * conic * (X - mean)) * splat opacity
            float a = cov2Dv.x;
            float d = cov2Dv.z;
            float b = cov2Dv.y;
            float D = a * d - b * b;
            float trace = a + d;
            float traceOver2 = 0.5 * trace;
            float term2 = sqrt(max(0.1f, traceOver2 * traceOver2 - D));
            float eigenValue1 = traceOver2 + term2;
            float eigenValue2 = traceOver2 - term2;

            if (pointCloudModeEnabled == 1) {
                eigenValue1 = eigenValue2 = 0.2;
            }

            if (eigenValue2 <= 0.0) return;

            vec2 eigenVector1 = normalize(vec2(b, eigenValue1 - a));
            // since the eigen vectors are orthogonal, we derive the second one from the first
            vec2 eigenVector2 = vec2(eigenVector1.y, -eigenVector1.x);

            // We use sqrt(8) standard deviations instead of 3 to eliminate more of the splat with a very low opacity.
            vec2 basisVector1 = eigenVector1 * splatScale * min(sqrt8 * sqrt(eigenValue1), ${parseInt(n)}.0);
            vec2 basisVector2 = eigenVector2 * splatScale * min(sqrt8 * sqrt(eigenValue2), ${parseInt(n)}.0);
            `,t&&(a+=`
                vColor.a *= splatOpacityFromScene;
            `),a+=`
            vec2 ndcOffset = vec2(vPosition.x * basisVector1 + vPosition.y * basisVector2) *
                             basisViewport * 2.0 * inverseFocalAdjustment;

            vec4 quadPos = vec4(ndcCenter.xy + ndcOffset, ndcCenter.z, 1.0);
            gl_Position = quadPos;

            // Scale the position data we send to the fragment shader
            vPosition *= sqrt8;
        `,a+=SplatMaterial.getVertexShaderFadeIn(),a+="}",a}static buildFragmentShader(){let e=`
            precision highp float;
            #include <common>
 
            uniform vec3 debugColor;

            varying vec4 vColor;
            varying vec2 vUv;
            varying vec2 vPosition;
        `;return e+=`
            void main () {
                // Compute the positional squared distance from the center of the splat to the current fragment.
                float A = dot(vPosition, vPosition);
                // Since the positional data in vPosition has been scaled by sqrt(8), the squared result will be
                // scaled by a factor of 8. If the squared result is larger than 8, it means it is outside the ellipse
                // defined by the rectangle formed by vPosition. It also means it's farther
                // away than sqrt(8) standard deviations from the mean.
                if (A > 8.0) discard;
                vec3 color = vColor.rgb;

                // Since the rendered splat is scaled by sqrt(8), the inverse covariance matrix that is part of
                // the gaussian formula becomes the identity matrix. We're then left with (X - mean) * (X - mean),
                // and since 'mean' is zero, we have X * X, which is the same as A:
                float opacity = exp(-0.5 * A) * vColor.a;

                gl_FragColor = vec4(color.rgb, opacity);
            }
        `,e}}class SplatMaterial2D{static build(e=!1,t=!1,n=1,o=!1,a=0){let l=SplatMaterial.buildVertexShaderBase(e,t,a,`
            uniform vec2 scaleRotationsTextureSize;
            uniform highp sampler2D scaleRotationsTexture;
            varying mat3 vT;
            varying vec2 vQuadCenter;
            varying vec2 vFragCoord;
        `);l+=SplatMaterial2D.buildVertexShaderProjection();const c=SplatMaterial2D.buildFragmentShader(),u=SplatMaterial.getUniforms(e,t,a,n,o);return u.scaleRotationsTexture={type:"t",value:null},u.scaleRotationsTextureSize={type:"v2",value:new Vector2(1024,1024)},new ShaderMaterial({uniforms:u,vertexShader:l,fragmentShader:c,transparent:!0,alphaTest:1,blending:NormalBlending,depthTest:!0,depthWrite:!1,side:DoubleSide})}static buildVertexShaderProjection(){let e=`

            vec4 scaleRotationA = texture(scaleRotationsTexture, getDataUVF(nearestEvenIndex, 1.5,
                                                                            oddOffset, scaleRotationsTextureSize));
            vec4 scaleRotationB = texture(scaleRotationsTexture, getDataUVF(nearestEvenIndex, 1.5,
                                                                            oddOffset + uint(1), scaleRotationsTextureSize));

            vec3 scaleRotation123 = vec3(scaleRotationA.rgb) * (1.0 - fOddOffset) +
                                    vec3(scaleRotationA.ba, scaleRotationB.r) * fOddOffset;
            vec3 scaleRotation456 = vec3(scaleRotationA.a, scaleRotationB.rg) * (1.0 - fOddOffset) +
                                    vec3(scaleRotationB.gba) * fOddOffset;

            float missingW = sqrt(1.0 - scaleRotation456.x * scaleRotation456.x - scaleRotation456.y *
                                    scaleRotation456.y - scaleRotation456.z * scaleRotation456.z);
            mat3 R = quaternionToRotationMatrix(scaleRotation456.r, scaleRotation456.g, scaleRotation456.b, missingW);
            mat3 S = mat3(scaleRotation123.r, 0.0, 0.0,
                            0.0, scaleRotation123.g, 0.0,
                            0.0, 0.0, scaleRotation123.b);
            
            mat3 L = R * S;

            mat3x4 splat2World = mat3x4(vec4(L[0], 0.0),
                                        vec4(L[1], 0.0),
                                        vec4(splatCenter.x, splatCenter.y, splatCenter.z, 1.0));

            mat4 world2ndc = transpose(projectionMatrix * transformModelViewMatrix);

            mat3x4 ndc2pix = mat3x4(vec4(viewport.x / 2.0, 0.0, 0.0, (viewport.x - 1.0) / 2.0),
                                    vec4(0.0, viewport.y / 2.0, 0.0, (viewport.y - 1.0) / 2.0),
                                    vec4(0.0, 0.0, 0.0, 1.0));

            mat3 T = transpose(splat2World) * world2ndc * ndc2pix;
            vec3 normal = vec3(viewMatrix * vec4(L[0][2], L[1][2], L[2][2], 0.0));
        `;return e+=`

                mat4 splat2World4 = mat4(vec4(L[0], 0.0),
                                        vec4(L[1], 0.0),
                                        vec4(L[2], 0.0),
                                        vec4(splatCenter.x, splatCenter.y, splatCenter.z, 1.0));

                mat4 Tt = transpose(transpose(splat2World4) * world2ndc);

                vec4 tempPoint1 = Tt * vec4(1.0, 0.0, 0.0, 1.0);
                tempPoint1 /= tempPoint1.w;

                vec4 tempPoint2 = Tt * vec4(0.0, 1.0, 0.0, 1.0);
                tempPoint2 /= tempPoint2.w;

                vec4 center = Tt * vec4(0.0, 0.0, 0.0, 1.0);
                center /= center.w;

                vec2 basisVector1 = tempPoint1.xy - center.xy;
                vec2 basisVector2 = tempPoint2.xy - center.xy;

                vec2 basisVector1Screen = basisVector1 * 0.5 * viewport;
                vec2 basisVector2Screen = basisVector2 * 0.5 * viewport;

                const float minPix = 1.;
                if (length(basisVector1Screen) < minPix || length(basisVector2Screen) < minPix) {
                    
            vec3 T0 = vec3(T[0][0], T[0][1], T[0][2]);
            vec3 T1 = vec3(T[1][0], T[1][1], T[1][2]);
            vec3 T3 = vec3(T[2][0], T[2][1], T[2][2]);

            vec3 tempPoint = vec3(1.0, 1.0, -1.0);
            float distance = (T3.x * T3.x * tempPoint.x) + (T3.y * T3.y * tempPoint.y) + (T3.z * T3.z * tempPoint.z);
            vec3 f = (1.0 / distance) * tempPoint;
            if (abs(distance) < 0.00001) return;

            float pointImageX = (T0.x * T3.x * f.x) + (T0.y * T3.y * f.y) + (T0.z * T3.z * f.z);
            float pointImageY = (T1.x * T3.x * f.x) + (T1.y * T3.y * f.y) + (T1.z * T3.z * f.z);
            vec2 pointImage = vec2(pointImageX, pointImageY);

            float tempX = (T0.x * T0.x * f.x) + (T0.y * T0.y * f.y) + (T0.z * T0.z * f.z);
            float tempY = (T1.x * T1.x * f.x) + (T1.y * T1.y * f.y) + (T1.z * T1.z * f.z);
            vec2 temp = vec2(tempX, tempY);

            vec2 halfExtend = pointImage * pointImage - temp;
            vec2 extent = sqrt(max(vec2(0.0001), halfExtend));
            float radius = max(extent.x, extent.y);

            vec2 ndcOffset = ((position.xy * radius * 3.0) * basisViewport * 2.0);

            vec4 quadPos = vec4(ndcCenter.xy + ndcOffset, ndcCenter.z, 1.0);
            gl_Position = quadPos;

            vT = T;
            vQuadCenter = pointImage;
            vFragCoord = (quadPos.xy * 0.5 + 0.5) * viewport;
        
                } else {
                    vec2 ndcOffset = vec2(position.x * basisVector1 + position.y * basisVector2) * 3.0 * inverseFocalAdjustment;
                    vec4 quadPos = vec4(ndcCenter.xy + ndcOffset, ndcCenter.z, 1.0);
                    gl_Position = quadPos;

                    vT = T;
                    vQuadCenter = center.xy;
                    vFragCoord = (quadPos.xy * 0.5 + 0.5) * viewport;
                }
            `,e+=SplatMaterial.getVertexShaderFadeIn(),e+="}",e}static buildFragmentShader(){return`
            precision highp float;
            #include <common>

            uniform vec3 debugColor;

            varying vec4 vColor;
            varying vec2 vUv;
            varying vec2 vPosition;
            varying mat3 vT;
            varying vec2 vQuadCenter;
            varying vec2 vFragCoord;

            void main () {

                const float FilterInvSquare = 2.0;
                const float near_n = 0.2;
                const float T = 1.0;

                vec2 xy = vQuadCenter;
                vec3 Tu = vT[0];
                vec3 Tv = vT[1];
                vec3 Tw = vT[2];
                vec3 k = vFragCoord.x * Tw - Tu;
                vec3 l = vFragCoord.y * Tw - Tv;
                vec3 p = cross(k, l);
                if (p.z == 0.0) discard;
                vec2 s = vec2(p.x / p.z, p.y / p.z);
                float rho3d = (s.x * s.x + s.y * s.y); 
                vec2 d = vec2(xy.x - vFragCoord.x, xy.y - vFragCoord.y);
                float rho2d = FilterInvSquare * (d.x * d.x + d.y * d.y); 

                // compute intersection and depth
                float rho = min(rho3d, rho2d);
                float depth = (rho3d <= rho2d) ? (s.x * Tw.x + s.y * Tw.y) + Tw.z : Tw.z; 
                if (depth < near_n) discard;
                //  vec4 nor_o = collected_normal_opacity[j];
                //  float normal[3] = {nor_o.x, nor_o.y, nor_o.z};
                float opa = vColor.a;

                float power = -0.5f * rho;
                if (power > 0.0f) discard;

                // Eq. (2) from 3D Gaussian splatting paper.
                // Obtain alpha by multiplying with Gaussian opacity
                // and its exponential falloff from mean.
                // Avoid numerical instabilities (see paper appendix). 
                float alpha = min(0.99f, opa * exp(power));
                if (alpha < 1.0f / 255.0f) discard;
                float test_T = T * (1.0 - alpha);
                if (test_T < 0.0001)discard;

                float w = alpha * T;
                gl_FragColor = vec4(vColor.rgb, w);
            }
        `}}let SplatGeometry$1=class{static build(e){const t=new BufferGeometry;t.setIndex([0,1,2,0,2,3]);const n=new Float32Array(4*3),o=new BufferAttribute(n,3);t.setAttribute("position",o),o.setXYZ(0,-1,-1,0),o.setXYZ(1,-1,1,0),o.setXYZ(2,1,1,0),o.setXYZ(3,1,-1,0),o.needsUpdate=!0;const a=new InstancedBufferGeometry().copy(t),r=new Uint32Array(e),l=new InstancedBufferAttribute(r,1,!1);return l.setUsage(DynamicDrawUsage),a.setAttribute("splatIndex",l),a.instanceCount=0,a}};class SplatScene extends Object3D{constructor(e,t=new Vector3,n=new Quaternion,o=new Vector3(1,1,1),a=1,r=1,l=!0){super(),this.splatBuffer=e,this.position.copy(t),this.quaternion.copy(n),this.scale.copy(o),this.transform=new Matrix4,this.minimumAlpha=a,this.opacity=r,this.visible=l}copyTransformData(e){this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.transform.copy(e.transform)}updateTransform(e){e?(this.matrixWorldAutoUpdate&&this.updateWorldMatrix(!0,!1),this.transform.copy(this.matrixWorld)):(this.matrixAutoUpdate&&this.updateMatrix(),this.transform.copy(this.matrix))}}const rr=class rr{constructor(e,t,n,o){this.min=new Vector3().copy(e),this.max=new Vector3().copy(t),this.boundingBox=new Box3(this.min,this.max),this.center=new Vector3().copy(this.max).sub(this.min).multiplyScalar(.5).add(this.min),this.depth=n,this.children=[],this.data=null,this.id=o||rr.idGen++}};At(rr,"idGen",0);let SplatTreeNode=rr;class SplatSubTree{constructor(e,t){this.maxDepth=e,this.maxCentersPerNode=t,this.sceneDimensions=new Vector3,this.sceneMin=new Vector3,this.sceneMax=new Vector3,this.rootNode=null,this.nodesWithIndexes=[],this.splatMesh=null}static convertWorkerSubTreeNode(e){const t=new Vector3().fromArray(e.min),n=new Vector3().fromArray(e.max),o=new SplatTreeNode(t,n,e.depth,e.id);if(e.data.indexes){o.data={indexes:[]};for(let a of e.data.indexes)o.data.indexes.push(a)}if(e.children)for(let a of e.children)o.children.push(SplatSubTree.convertWorkerSubTreeNode(a));return o}static convertWorkerSubTree(e,t){const n=new SplatSubTree(e.maxDepth,e.maxCentersPerNode);n.sceneMin=new Vector3().fromArray(e.sceneMin),n.sceneMax=new Vector3().fromArray(e.sceneMax),n.splatMesh=t,n.rootNode=SplatSubTree.convertWorkerSubTreeNode(e.rootNode);const o=(a,r)=>{a.children.length===0&&r(a);for(let l of a.children)o(l,r)};return n.nodesWithIndexes=[],o(n.rootNode,a=>{a.data&&a.data.indexes&&a.data.indexes.length>0&&n.nodesWithIndexes.push(a)}),n}}function createSplatTreeWorker(s){let e=0;class t{constructor(c,u){this.min=[c[0],c[1],c[2]],this.max=[u[0],u[1],u[2]]}containsPoint(c){return c[0]>=this.min[0]&&c[0]<=this.max[0]&&c[1]>=this.min[1]&&c[1]<=this.max[1]&&c[2]>=this.min[2]&&c[2]<=this.max[2]}}class n{constructor(c,u){this.maxDepth=c,this.maxCentersPerNode=u,this.sceneDimensions=[],this.sceneMin=[],this.sceneMax=[],this.rootNode=null,this.addedIndexes={},this.nodesWithIndexes=[],this.splatMesh=null,this.disposed=!1}}class o{constructor(c,u,d,f){this.min=[c[0],c[1],c[2]],this.max=[u[0],u[1],u[2]],this.center=[(u[0]-c[0])*.5+c[0],(u[1]-c[1])*.5+c[1],(u[2]-c[2])*.5+c[2]],this.depth=d,this.children=[],this.data=null,this.id=f||e++}}processSplatTreeNode=function(l,c,u,d){const f=c.data.indexes.length;if(f<l.maxCentersPerNode||c.depth>l.maxDepth){const R=[];for(let L=0;L<c.data.indexes.length;L++)l.addedIndexes[c.data.indexes[L]]||(R.push(c.data.indexes[L]),l.addedIndexes[c.data.indexes[L]]=!0);c.data.indexes=R,c.data.indexes.sort((L,F)=>L>F?1:-1),l.nodesWithIndexes.push(c);return}const g=[c.max[0]-c.min[0],c.max[1]-c.min[1],c.max[2]-c.min[2]],_=[g[0]*.5,g[1]*.5,g[2]*.5],b=[c.min[0]+_[0],c.min[1]+_[1],c.min[2]+_[2]],B=[new t([b[0]-_[0],b[1],b[2]-_[2]],[b[0],b[1]+_[1],b[2]]),new t([b[0],b[1],b[2]-_[2]],[b[0]+_[0],b[1]+_[1],b[2]]),new t([b[0],b[1],b[2]],[b[0]+_[0],b[1]+_[1],b[2]+_[2]]),new t([b[0]-_[0],b[1],b[2]],[b[0],b[1]+_[1],b[2]+_[2]]),new t([b[0]-_[0],b[1]-_[1],b[2]-_[2]],[b[0],b[1],b[2]]),new t([b[0],b[1]-_[1],b[2]-_[2]],[b[0]+_[0],b[1],b[2]]),new t([b[0],b[1]-_[1],b[2]],[b[0]+_[0],b[1],b[2]+_[2]]),new t([b[0]-_[0],b[1]-_[1],b[2]],[b[0],b[1],b[2]+_[2]])],I=[];for(let R=0;R<B.length;R++)I[R]=[];const C=[0,0,0];for(let R=0;R<f;R++){const L=c.data.indexes[R],F=u[L];C[0]=d[F],C[1]=d[F+1],C[2]=d[F+2];for(let N=0;N<B.length;N++)B[N].containsPoint(C)&&I[N].push(L)}for(let R=0;R<B.length;R++){const L=new o(B[R].min,B[R].max,c.depth+1);L.data={indexes:I[R]},c.children.push(L)}c.data={};for(let R of c.children)processSplatTreeNode(l,R,u,d)};const a=(l,c,u)=>{const d=[0,0,0],f=[0,0,0],g=[],_=Math.floor(l.length/4);for(let B=0;B<_;B++){const I=B*4,C=l[I],R=l[I+1],L=l[I+2],F=Math.round(l[I+3]);(B===0||C<d[0])&&(d[0]=C),(B===0||C>f[0])&&(f[0]=C),(B===0||R<d[1])&&(d[1]=R),(B===0||R>f[1])&&(f[1]=R),(B===0||L<d[2])&&(d[2]=L),(B===0||L>f[2])&&(f[2]=L),g.push(F)}const b=new n(c,u);return b.sceneMin=d,b.sceneMax=f,b.rootNode=new o(b.sceneMin,b.sceneMax,0),b.rootNode.data={indexes:g},b};function r(l,c,u){const d=[];for(let g of l){const _=Math.floor(g.length/4);for(let b=0;b<_;b++){const B=b*4,I=Math.round(g[B+3]);d[I]=B}}const f=[];for(let g of l){const _=a(g,c,u);f.push(_),processSplatTreeNode(_,_.rootNode,d,g)}s.postMessage({subTrees:f})}s.onmessage=l=>{l.data.process&&r(l.data.process.centers,l.data.process.maxDepth,l.data.process.maxCentersPerNode)}}function workerProcessCenters(s,e,t,n,o){s.postMessage({process:{centers:e,maxDepth:n,maxCentersPerNode:o}},t)}function checkAndCreateWorker(){return new Worker(URL.createObjectURL(new Blob(["(",createSplatTreeWorker.toString(),")(self)"],{type:"application/javascript"})))}class SplatTree{constructor(e,t){At(this,"processSplatMesh",function(e,t=()=>!0,n,o){this.splatTreeWorker||(this.splatTreeWorker=checkAndCreateWorker()),this.splatMesh=e,this.subTrees=[];const a=new Vector3,r=(l,c)=>{const u=new Float32Array(c*4);let d=0;for(let f=0;f<c;f++){const g=f+l;if(t(g)){e.getSplatCenter(g,a);const _=d*4;u[_]=a.x,u[_+1]=a.y,u[_+2]=a.z,u[_+3]=g,d++}}return u};return new Promise(l=>{const c=()=>this.disposed?(this.diposeSplatTreeWorker(),l(),!0):!1;n&&n(!1),delayedExecute(()=>{if(c())return;const u=[];if(e.dynamicMode){let d=0;for(let f=0;f<e.scenes.length;f++){const _=e.getScene(f).splatBuffer.getSplatCount(),b=r(d,_);u.push(b),d+=_}}else{const d=r(0,e.getSplatCount());u.push(d)}this.splatTreeWorker.onmessage=d=>{c()||d.data.subTrees&&(o&&o(!1),delayedExecute(()=>{if(!c()){for(let f of d.data.subTrees){const g=SplatSubTree.convertWorkerSubTree(f,e);this.subTrees.push(g)}this.diposeSplatTreeWorker(),o&&o(!0),delayedExecute(()=>{l()})}}))},delayedExecute(()=>{if(c())return;n&&n(!0);const d=u.map(f=>f.buffer);workerProcessCenters(this.splatTreeWorker,u,d,this.maxDepth,this.maxCentersPerNode)})})})});this.maxDepth=e,this.maxCentersPerNode=t,this.subTrees=[],this.splatMesh=null}dispose(){this.diposeSplatTreeWorker(),this.disposed=!0}diposeSplatTreeWorker(){this.splatTreeWorker&&this.splatTreeWorker.terminate(),this.splatTreeWorker=null}countLeaves(){let e=0;return this.visitLeaves(()=>{e++}),e}visitLeaves(e){const t=(n,o)=>{n.children.length===0&&o(n);for(let a of n.children)t(a,o)};for(let n of this.subTrees)t(n.rootNode,e)}}function WebGLExtensions(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let o;switch(n){case"WEBGL_depth_texture":o=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":o=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":o=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":o=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:o=s.getExtension(n)}return e[n]=o,o}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?(t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance")):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const o=t(n);return o===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),o}}}function WebGLCapabilities(s,e,t){let n;function o(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const Q=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(Q.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function a(Q){if(Q==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";Q="mediump"}return Q==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const r=typeof WebGL2RenderingContext<"u"&&s.constructor.name==="WebGL2RenderingContext";let l=t.precision!==void 0?t.precision:"highp";const c=a(l);c!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",c,"instead."),l=c);const u=r||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),g=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=s.getParameter(s.MAX_TEXTURE_SIZE),b=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),B=s.getParameter(s.MAX_VERTEX_ATTRIBS),I=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),C=s.getParameter(s.MAX_VARYING_VECTORS),R=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),L=g>0,F=r||e.has("OES_texture_float"),N=L&&F,k=r?s.getParameter(s.MAX_SAMPLES):0;return{isWebGL2:r,drawBuffers:u,getMaxAnisotropy:o,getMaxPrecision:a,precision:l,logarithmicDepthBuffer:d,maxTextures:f,maxVertexTextures:g,maxTextureSize:_,maxCubemapSize:b,maxAttributes:B,maxVertexUniforms:I,maxVaryings:C,maxFragmentUniforms:R,vertexTextures:L,floatFragmentTextures:F,floatVertexTextures:N,maxSamples:k}}const SceneRevealMode={Default:0,Instant:2},LogLevel={None:0,Info:3},dummyGeometry=new BufferGeometry,dummyMaterial=new MeshBasicMaterial,COVARIANCES_ELEMENTS_PER_SPLAT=6,CENTER_COLORS_ELEMENTS_PER_SPLAT=4,COVARIANCES_ELEMENTS_PER_TEXEL_STORED=4,COVARIANCES_ELEMENTS_PER_TEXEL_ALLOCATED=4,COVARIANCES_ELEMENTS_PER_TEXEL_COMPRESSED_STORED=6,COVARIANCES_ELEMENTS_PER_TEXEL_COMPRESSED_ALLOCATED=8,SCALES_ROTATIONS_ELEMENTS_PER_TEXEL=4,CENTER_COLORS_ELEMENTS_PER_TEXEL=4,SCENE_INDEXES_ELEMENTS_PER_TEXEL=1,SCENE_FADEIN_RATE_FAST=.012,SCENE_FADEIN_RATE_GRADUAL=.003,VISIBLE_REGION_EXPANSION_DELTA=1,MAX_TEXTURE_TEXELS=16777216;let SplatMesh$1=class Pn extends Mesh{constructor(t=SplatRenderMode.ThreeD,n=!1,o=!1,a=!1,r=1,l=!0,c=!1,u=!1,d=1024,f=LogLevel.None,g=0,_=1,b=.3){super(dummyGeometry,dummyMaterial);At(this,"buildSplatTree",function(t=[],n,o){return new Promise(a=>{this.disposeSplatTree(),this.baseSplatTree=new SplatTree(8,1e3);const r=performance.now(),l=new Vector4;this.baseSplatTree.processSplatMesh(this,c=>{this.getSplatColor(c,l);const u=this.getSceneIndexForSplat(c),d=t[u]||1;return l.w>=d},n,o).then(()=>{const c=performance.now()-r;if(this.logLevel>=LogLevel.Info&&console.log("SplatTree build: "+c+" ms"),this.disposed)a();else{this.splatTree=this.baseSplatTree,this.baseSplatTree=null;let u=0,d=0,f=0;this.splatTree.visitLeaves(g=>{const _=g.data.indexes.length;_>0&&(d+=_,f++,u++)}),this.logLevel>=LogLevel.Info&&(console.log(`SplatTree leaves: ${this.splatTree.countLeaves()}`),console.log(`SplatTree leaves with splats:${u}`),d=d/f,console.log(`Avg splat count per node: ${d}`),console.log(`Total splat count: ${this.getSplatCount()}`)),a()}})})});At(this,"updateUniforms",function(){const t=new Vector2;return function(n,o,a,r,l,c){if(this.getSplatCount()>0){if(t.set(n.x*this.devicePixelRatio,n.y*this.devicePixelRatio),this.material.uniforms.viewport.value.copy(t),this.material.uniforms.basisViewport.value.set(1/t.x,1/t.y),this.material.uniforms.focal.value.set(o,a),this.material.uniforms.orthographicMode.value=r?1:0,this.material.uniforms.orthoZoom.value=l,this.material.uniforms.inverseFocalAdjustment.value=c,this.dynamicMode)for(let d=0;d<this.scenes.length;d++)this.material.uniforms.transforms.value[d].copy(this.getScene(d).transform);if(this.enableOptionalEffects)for(let d=0;d<this.scenes.length;d++)this.material.uniforms.sceneOpacity.value[d]=clamp(this.getScene(d).opacity,0,1),this.material.uniforms.sceneVisibility.value[d]=this.getScene(d).visible?1:0,this.material.uniformsNeedUpdate=!0;this.material.uniformsNeedUpdate=!0}}}());At(this,"setupDistancesComputationTransformFeedback",function(){let t;return function(){const n=this.getMaxSplatCount();if(!this.renderer)return;const o=this.lastRenderer!==this.renderer,a=t!==n;if(!o&&!a)return;o?this.disposeDistancesComputationGPUResources():a&&this.disposeDistancesComputationGPUBufferResources();const r=this.renderer.getContext(),l=(_,b,B)=>{const I=_.createShader(b);if(!I)return console.error("Fatal error: gl could not create a shader object."),null;if(_.shaderSource(I,B),_.compileShader(I),!_.getShaderParameter(I,_.COMPILE_STATUS)){let R="unknown";b===_.VERTEX_SHADER?R="vertex shader":b===_.FRAGMENT_SHADER&&(R="fragement shader");const L=_.getShaderInfoLog(I);return console.error("Failed to compile "+R+" with these errors:"+L),_.deleteShader(I),null}return I};let c;this.integerBasedDistancesComputation?(c=`#version 300 es
                in ivec4 center;
                flat out int distance;`,this.dynamicMode?c+=`
                        in uint sceneIndex;
                        uniform ivec4 transforms[${Constants.MaxScenes}];
                        void main(void) {
                            ivec4 transform = transforms[sceneIndex];
                            distance = center.x * transform.x + center.y * transform.y + center.z * transform.z + transform.w * center.w;
                        }
                    `:c+=`
                        uniform ivec3 modelViewProj;
                        void main(void) {
                            distance = center.x * modelViewProj.x + center.y * modelViewProj.y + center.z * modelViewProj.z;
                        }
                    `):(c=`#version 300 es
                in vec4 center;
                flat out float distance;`,this.dynamicMode?c+=`
                        in uint sceneIndex;
                        uniform mat4 transforms[${Constants.MaxScenes}];
                        void main(void) {
                            vec4 transformedCenter = transforms[sceneIndex] * vec4(center.xyz, 1.0);
                            distance = transformedCenter.z;
                        }
                    `:c+=`
                        uniform vec3 modelViewProj;
                        void main(void) {
                            distance = center.x * modelViewProj.x + center.y * modelViewProj.y + center.z * modelViewProj.z;
                        }
                    `);const u=`#version 300 es
                precision lowp float;
                out vec4 fragColor;
                void main(){}
            `,d=r.getParameter(r.VERTEX_ARRAY_BINDING),f=r.getParameter(r.CURRENT_PROGRAM),g=f?r.getProgramParameter(f,r.DELETE_STATUS):!1;if(o&&(this.distancesTransformFeedback.vao=r.createVertexArray()),r.bindVertexArray(this.distancesTransformFeedback.vao),o){const _=r.createProgram(),b=l(r,r.VERTEX_SHADER,c),B=l(r,r.FRAGMENT_SHADER,u);if(!b||!B)throw new Error("Could not compile shaders for distances computation on GPU.");if(r.attachShader(_,b),r.attachShader(_,B),r.transformFeedbackVaryings(_,["distance"],r.SEPARATE_ATTRIBS),r.linkProgram(_),!r.getProgramParameter(_,r.LINK_STATUS)){const C=r.getProgramInfoLog(_);throw console.error("Fatal error: Failed to link program: "+C),r.deleteProgram(_),r.deleteShader(B),r.deleteShader(b),new Error("Could not link shaders for distances computation on GPU.")}this.distancesTransformFeedback.program=_,this.distancesTransformFeedback.vertexShader=b,this.distancesTransformFeedback.vertexShader=B}if(r.useProgram(this.distancesTransformFeedback.program),this.distancesTransformFeedback.centersLoc=r.getAttribLocation(this.distancesTransformFeedback.program,"center"),this.dynamicMode){this.distancesTransformFeedback.sceneIndexesLoc=r.getAttribLocation(this.distancesTransformFeedback.program,"sceneIndex");for(let _=0;_<this.scenes.length;_++)this.distancesTransformFeedback.transformsLocs[_]=r.getUniformLocation(this.distancesTransformFeedback.program,`transforms[${_}]`)}else this.distancesTransformFeedback.modelViewProjLoc=r.getUniformLocation(this.distancesTransformFeedback.program,"modelViewProj");(o||a)&&(this.distancesTransformFeedback.centersBuffer=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.centersBuffer),r.enableVertexAttribArray(this.distancesTransformFeedback.centersLoc),this.integerBasedDistancesComputation?r.vertexAttribIPointer(this.distancesTransformFeedback.centersLoc,4,r.INT,0,0):r.vertexAttribPointer(this.distancesTransformFeedback.centersLoc,4,r.FLOAT,!1,0,0),this.dynamicMode&&(this.distancesTransformFeedback.sceneIndexesBuffer=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.sceneIndexesBuffer),r.enableVertexAttribArray(this.distancesTransformFeedback.sceneIndexesLoc),r.vertexAttribIPointer(this.distancesTransformFeedback.sceneIndexesLoc,1,r.UNSIGNED_INT,0,0))),(o||a)&&(this.distancesTransformFeedback.outDistancesBuffer=r.createBuffer()),r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.outDistancesBuffer),r.bufferData(r.ARRAY_BUFFER,n*4,r.STATIC_READ),o&&(this.distancesTransformFeedback.id=r.createTransformFeedback()),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,this.distancesTransformFeedback.id),r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,0,this.distancesTransformFeedback.outDistancesBuffer),f&&g!==!0&&r.useProgram(f),d&&r.bindVertexArray(d),this.lastRenderer=this.renderer,t=n}}());At(this,"fillTransformsArray",function(){const t=[];return function(n){t.length!==n.length&&(t.length=n.length);for(let o=0;o<this.scenes.length;o++){const r=this.getScene(o).transform.elements;for(let l=0;l<16;l++)t[o*16+l]=r[l]}n.set(t)}}());At(this,"computeDistancesOnGPU",function(){const t=new Matrix4;return function(n,o){if(!this.renderer)return;const a=this.renderer.getContext(),r=a.getParameter(a.VERTEX_ARRAY_BINDING),l=a.getParameter(a.CURRENT_PROGRAM),c=l?a.getProgramParameter(l,a.DELETE_STATUS):!1;if(a.bindVertexArray(this.distancesTransformFeedback.vao),a.useProgram(this.distancesTransformFeedback.program),a.enable(a.RASTERIZER_DISCARD),this.dynamicMode)for(let f=0;f<this.scenes.length;f++)if(t.copy(this.getScene(f).transform),t.premultiply(n),this.integerBasedDistancesComputation){const g=Pn.getIntegerMatrixArray(t),_=[g[2],g[6],g[10],g[14]];a.uniform4i(this.distancesTransformFeedback.transformsLocs[f],_[0],_[1],_[2],_[3])}else a.uniformMatrix4fv(this.distancesTransformFeedback.transformsLocs[f],!1,t.elements);else if(this.integerBasedDistancesComputation){const f=Pn.getIntegerMatrixArray(n),g=[f[2],f[6],f[10]];a.uniform3i(this.distancesTransformFeedback.modelViewProjLoc,g[0],g[1],g[2])}else{const f=[n.elements[2],n.elements[6],n.elements[10]];a.uniform3f(this.distancesTransformFeedback.modelViewProjLoc,f[0],f[1],f[2])}a.bindBuffer(a.ARRAY_BUFFER,this.distancesTransformFeedback.centersBuffer),a.enableVertexAttribArray(this.distancesTransformFeedback.centersLoc),this.integerBasedDistancesComputation?a.vertexAttribIPointer(this.distancesTransformFeedback.centersLoc,4,a.INT,0,0):a.vertexAttribPointer(this.distancesTransformFeedback.centersLoc,4,a.FLOAT,!1,0,0),this.dynamicMode&&(a.bindBuffer(a.ARRAY_BUFFER,this.distancesTransformFeedback.sceneIndexesBuffer),a.enableVertexAttribArray(this.distancesTransformFeedback.sceneIndexesLoc),a.vertexAttribIPointer(this.distancesTransformFeedback.sceneIndexesLoc,1,a.UNSIGNED_INT,0,0)),a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,this.distancesTransformFeedback.id),a.bindBufferBase(a.TRANSFORM_FEEDBACK_BUFFER,0,this.distancesTransformFeedback.outDistancesBuffer),a.beginTransformFeedback(a.POINTS),a.drawArrays(a.POINTS,0,this.getSplatCount()),a.endTransformFeedback(),a.bindBufferBase(a.TRANSFORM_FEEDBACK_BUFFER,0,null),a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,null),a.disable(a.RASTERIZER_DISCARD);const u=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);a.flush();const d=new Promise(f=>{const g=()=>{if(this.disposed)f();else switch(a.clientWaitSync(u,0,0)){case a.TIMEOUT_EXPIRED:return this.computeDistancesOnGPUSyncTimeout=setTimeout(g),this.computeDistancesOnGPUSyncTimeout;case a.WAIT_FAILED:throw new Error("should never get here");default:this.computeDistancesOnGPUSyncTimeout=null,a.deleteSync(u);const I=a.getParameter(a.VERTEX_ARRAY_BINDING);a.bindVertexArray(this.distancesTransformFeedback.vao),a.bindBuffer(a.ARRAY_BUFFER,this.distancesTransformFeedback.outDistancesBuffer),a.getBufferSubData(a.ARRAY_BUFFER,0,o),a.bindBuffer(a.ARRAY_BUFFER,null),I&&a.bindVertexArray(I),f()}};this.computeDistancesOnGPUSyncTimeout=setTimeout(g)});return l&&c!==!0&&a.useProgram(l),r&&a.bindVertexArray(r),d}}());At(this,"getSplatCenter",function(){const t={};return function(n,o,a){this.getLocalSplatParameters(n,t,a),t.splatBuffer.getSplatCenter(t.localIndex,o,t.sceneTransform)}}());At(this,"getSplatScaleAndRotation",function(){const t={},n=new Vector3;return function(o,a,r,l){this.getLocalSplatParameters(o,t,l),n.x=void 0,n.y=void 0,n.z=void 0,this.splatRenderMode===SplatRenderMode.TwoD&&(n.z=0),t.splatBuffer.getSplatScaleAndRotation(t.localIndex,a,r,t.sceneTransform,n)}}());At(this,"getSplatColor",function(){const t={};return function(n,o){this.getLocalSplatParameters(n,t),t.splatBuffer.getSplatColor(t.localIndex,o)}}());this.renderer=void 0,this.splatRenderMode=t,this.dynamicMode=n,this.enableOptionalEffects=o,this.halfPrecisionCovariancesOnGPU=a,this.devicePixelRatio=r,this.enableDistancesComputationOnGPU=l,this.integerBasedDistancesComputation=c,this.antialiased=u,this.kernel2DSize=b,this.maxScreenSpaceSplatSize=d,this.logLevel=f,this.sphericalHarmonicsDegree=g,this.minSphericalHarmonicsDegree=0,this.sceneFadeInRateMultiplier=_,this.scenes=[],this.splatTree=null,this.baseSplatTree=null,this.splatDataTextures={},this.distancesTransformFeedback={id:null,vertexShader:null,fragmentShader:null,program:null,centersBuffer:null,sceneIndexesBuffer:null,outDistancesBuffer:null,centersLoc:-1,modelViewProjLoc:-1,sceneIndexesLoc:-1,transformsLocs:[]},this.globalSplatIndexToLocalSplatIndexMap=[],this.globalSplatIndexToSceneIndexMap=[],this.lastBuildSplatCount=0,this.lastBuildScenes=[],this.lastBuildMaxSplatCount=0,this.lastBuildSceneCount=0,this.firstRenderTime=-1,this.finalBuild=!1,this.webGLUtils=null,this.boundingBox=new Box3,this.calculatedSceneCenter=new Vector3,this.maxSplatDistanceFromSceneCenter=0,this.visibleRegionBufferRadius=0,this.visibleRegionRadius=0,this.visibleRegionFadeStartRadius=0,this.visibleRegionChanging=!1,this.splatScale=1,this.pointCloudModeEnabled=!1,this.disposed=!1,this.lastRenderer=null,this.visible=!1}static buildScenes(t,n,o){const a=[];a.length=n.length;for(let r=0;r<n.length;r++){const l=n[r],c=o[r]||{};let u=c.position||[0,0,0],d=c.rotation||[0,0,0,1],f=c.scale||[1,1,1];const g=new Vector3().fromArray(u),_=new Quaternion().fromArray(d),b=new Vector3().fromArray(f),B=Pn.createScene(l,g,_,b,c.splatAlphaRemovalThreshold||1,c.opacity,c.visible);t.add(B),a[r]=B}return a}static createScene(t,n,o,a,r,l=1,c=!0){return new SplatScene(t,n,o,a,r,l,c)}static buildSplatIndexMaps(t){const n=[],o=[];let a=0;for(let r=0;r<t.length;r++){const c=t[r].getMaxSplatCount();for(let u=0;u<c;u++)n[a]=u,o[a]=r,a++}return{localSplatIndexMap:n,sceneIndexMap:o}}build(t,n,o=!0,a=!1,r,l,c=!0){this.sceneOptions=n,this.finalBuild=a;const u=Pn.getTotalMaxSplatCountForSplatBuffers(t),d=Pn.buildScenes(this,t,n);if(o)for(let I=0;I<this.scenes.length&&I<d.length;I++){const C=d[I],R=this.getScene(I);C.copyTransformData(R)}this.scenes=d;let f=3;for(let I of t){const C=I.getMinSphericalHarmonicsDegree();C<f&&(f=C)}this.minSphericalHarmonicsDegree=Math.min(f,this.sphericalHarmonicsDegree);let g=!1;if(t.length!==this.lastBuildScenes.length)g=!0;else for(let I=0;I<t.length;I++)if(t[I]!==this.lastBuildScenes[I].splatBuffer){g=!0;break}let _=!0;if((this.scenes.length!==1||this.lastBuildSceneCount!==this.scenes.length||this.lastBuildMaxSplatCount!==u||g)&&(_=!1),!_){this.boundingBox=new Box3,c||(this.maxSplatDistanceFromSceneCenter=0,this.visibleRegionBufferRadius=0,this.visibleRegionRadius=0,this.visibleRegionFadeStartRadius=0,this.firstRenderTime=-1),this.lastBuildScenes=[],this.lastBuildSplatCount=0,this.lastBuildMaxSplatCount=0,this.disposeMeshData(),this.geometry=SplatGeometry$1.build(u),this.splatRenderMode===SplatRenderMode.ThreeD?this.material=SplatMaterial3D.build(this.dynamicMode,this.enableOptionalEffects,this.antialiased,this.maxScreenSpaceSplatSize,this.splatScale,this.pointCloudModeEnabled,this.minSphericalHarmonicsDegree,this.kernel2DSize):this.material=SplatMaterial2D.build(this.dynamicMode,this.enableOptionalEffects,this.splatScale,this.pointCloudModeEnabled,this.minSphericalHarmonicsDegree);const I=Pn.buildSplatIndexMaps(t);this.globalSplatIndexToLocalSplatIndexMap=I.localSplatIndexMap,this.globalSplatIndexToSceneIndexMap=I.sceneIndexMap}const b=this.getSplatCount(!0);this.enableDistancesComputationOnGPU&&this.setupDistancesComputationTransformFeedback();const B=this.refreshGPUDataFromSplatBuffers(_);for(let I=0;I<this.scenes.length;I++)this.lastBuildScenes[I]=this.scenes[I];return this.lastBuildSplatCount=b,this.lastBuildMaxSplatCount=this.getMaxSplatCount(),this.lastBuildSceneCount=this.scenes.length,a&&this.scenes.length>0&&this.buildSplatTree(n.map(I=>I.splatAlphaRemovalThreshold||1),r,l).then(()=>{this.onSplatTreeReadyCallback&&this.onSplatTreeReadyCallback(this.splatTree),this.onSplatTreeReadyCallback=null}),this.visible=this.scenes.length>0,B}freeIntermediateSplatData(){const t=n=>{delete n.source.data,delete n.image,n.onUpdate=null};delete this.splatDataTextures.baseData.covariances,delete this.splatDataTextures.baseData.centers,delete this.splatDataTextures.baseData.colors,delete this.splatDataTextures.baseData.sphericalHarmonics,delete this.splatDataTextures.centerColors.data,delete this.splatDataTextures.covariances.data,this.splatDataTextures.sphericalHarmonics&&delete this.splatDataTextures.sphericalHarmonics.data,this.splatDataTextures.sceneIndexes&&delete this.splatDataTextures.sceneIndexes.data,this.splatDataTextures.centerColors.texture.needsUpdate=!0,this.splatDataTextures.centerColors.texture.onUpdate=()=>{t(this.splatDataTextures.centerColors.texture)},this.splatDataTextures.covariances.texture.needsUpdate=!0,this.splatDataTextures.covariances.texture.onUpdate=()=>{t(this.splatDataTextures.covariances.texture)},this.splatDataTextures.sphericalHarmonics&&(this.splatDataTextures.sphericalHarmonics.texture?(this.splatDataTextures.sphericalHarmonics.texture.needsUpdate=!0,this.splatDataTextures.sphericalHarmonics.texture.onUpdate=()=>{t(this.splatDataTextures.sphericalHarmonics.texture)}):this.splatDataTextures.sphericalHarmonics.textures.forEach(n=>{n.needsUpdate=!0,n.onUpdate=()=>{t(n)}})),this.splatDataTextures.sceneIndexes&&(this.splatDataTextures.sceneIndexes.texture.needsUpdate=!0,this.splatDataTextures.sceneIndexes.texture.onUpdate=()=>{t(this.splatDataTextures.sceneIndexes.texture)})}dispose(){this.disposeMeshData(),this.disposeTextures(),this.disposeSplatTree(),this.enableDistancesComputationOnGPU&&(this.computeDistancesOnGPUSyncTimeout&&(clearTimeout(this.computeDistancesOnGPUSyncTimeout),this.computeDistancesOnGPUSyncTimeout=null),this.disposeDistancesComputationGPUResources()),this.scenes=[],this.distancesTransformFeedback={id:null,vertexShader:null,fragmentShader:null,program:null,centersBuffer:null,sceneIndexesBuffer:null,outDistancesBuffer:null,centersLoc:-1,modelViewProjLoc:-1,sceneIndexesLoc:-1,transformsLocs:[]},this.renderer=null,this.globalSplatIndexToLocalSplatIndexMap=[],this.globalSplatIndexToSceneIndexMap=[],this.lastBuildSplatCount=0,this.lastBuildScenes=[],this.lastBuildMaxSplatCount=0,this.lastBuildSceneCount=0,this.firstRenderTime=-1,this.finalBuild=!1,this.webGLUtils=null,this.boundingBox=new Box3,this.calculatedSceneCenter=new Vector3,this.maxSplatDistanceFromSceneCenter=0,this.visibleRegionBufferRadius=0,this.visibleRegionRadius=0,this.visibleRegionFadeStartRadius=0,this.visibleRegionChanging=!1,this.splatScale=1,this.pointCloudModeEnabled=!1,this.disposed=!0,this.lastRenderer=null,this.visible=!1}disposeMeshData(){this.geometry&&this.geometry!==dummyGeometry&&(this.geometry.dispose(),this.geometry=null),this.material&&(this.material.dispose(),this.material=null)}disposeTextures(){for(let t in this.splatDataTextures)if(this.splatDataTextures.hasOwnProperty(t)){const n=this.splatDataTextures[t];n.texture&&(n.texture.dispose(),n.texture=null)}this.splatDataTextures=null}disposeSplatTree(){this.splatTree&&(this.splatTree.dispose(),this.splatTree=null),this.baseSplatTree&&(this.baseSplatTree.dispose(),this.baseSplatTree=null)}getSplatTree(){return this.splatTree}onSplatTreeReady(t){this.onSplatTreeReadyCallback=t}getDataForDistancesComputation(t,n){const o=this.integerBasedDistancesComputation?this.getIntegerCenters(t,n,!0):this.getFloatCenters(t,n,!0),a=this.getSceneIndexes(t,n);return{centers:o,sceneIndexes:a}}refreshGPUDataFromSplatBuffers(t){const n=this.getSplatCount(!0);this.refreshDataTexturesFromSplatBuffers(t);const o=t?this.lastBuildSplatCount:0,{centers:a,sceneIndexes:r}=this.getDataForDistancesComputation(o,n-1);return this.enableDistancesComputationOnGPU&&this.refreshGPUBuffersForDistancesComputation(a,r,t),{from:o,to:n-1,count:n-o,centers:a,sceneIndexes:r}}refreshGPUBuffersForDistancesComputation(t,n,o=!1){const a=o?this.lastBuildSplatCount:0;this.updateGPUCentersBufferForDistancesComputation(o,t,a),this.updateGPUTransformIndexesBufferForDistancesComputation(o,n,a)}refreshDataTexturesFromSplatBuffers(t){const n=this.getSplatCount(!0),o=this.lastBuildSplatCount,a=n-1;t?this.updateBaseDataFromSplatBuffers(o,a):(this.setupDataTextures(),this.updateBaseDataFromSplatBuffers()),this.updateDataTexturesFromBaseData(o,a),this.updateVisibleRegion(t)}setupDataTextures(){const t=this.getMaxSplatCount(),n=this.getSplatCount(!0);this.disposeTextures();const o=(z,G)=>{const O=new Vector2(4096,1024);for(;O.x*O.y*z<t*G;)O.y*=2;return O},a=z=>z>=1?COVARIANCES_ELEMENTS_PER_TEXEL_COMPRESSED_STORED:COVARIANCES_ELEMENTS_PER_TEXEL_STORED,r=z=>{const G=a(z),O=o(G,6);return{elementsPerTexelStored:G,texSize:O}};let l=this.getTargetCovarianceCompressionLevel();const c=0,u=this.getTargetSphericalHarmonicsCompressionLevel();let d,f,g;if(this.splatRenderMode===SplatRenderMode.ThreeD){const z=r(l);z.texSize.x*z.texSize.y>MAX_TEXTURE_TEXELS&&l===0&&(l=1),d=new Float32Array(t*COVARIANCES_ELEMENTS_PER_SPLAT)}else f=new Float32Array(t*3),g=new Float32Array(t*4);const _=new Float32Array(t*3),b=new Uint8Array(t*4);let B=Float32Array;u===1?B=Uint16Array:u===2&&(B=Uint8Array);const I=getSphericalHarmonicsComponentCountForDegree(this.minSphericalHarmonicsDegree),C=this.minSphericalHarmonicsDegree?new B(t*I):void 0,R=o(CENTER_COLORS_ELEMENTS_PER_TEXEL,4),L=new Uint32Array(R.x*R.y*CENTER_COLORS_ELEMENTS_PER_TEXEL);Pn.updateCenterColorsPaddedData(0,n-1,_,b,L);const F=new DataTexture(L,R.x,R.y,RGBAIntegerFormat,UnsignedIntType);if(F.internalFormat="RGBA32UI",F.needsUpdate=!0,this.material.uniforms.centersColorsTexture.value=F,this.material.uniforms.centersColorsTextureSize.value.copy(R),this.material.uniformsNeedUpdate=!0,this.splatDataTextures={baseData:{covariances:d,scales:f,rotations:g,centers:_,colors:b,sphericalHarmonics:C},centerColors:{data:L,texture:F,size:R}},this.splatRenderMode===SplatRenderMode.ThreeD){const z=r(l),G=z.elementsPerTexelStored,O=z.texSize;let q=l>=1?Uint32Array:Float32Array;const ce=l>=1?COVARIANCES_ELEMENTS_PER_TEXEL_COMPRESSED_ALLOCATED:COVARIANCES_ELEMENTS_PER_TEXEL_ALLOCATED,ne=new q(O.x*O.y*ce);l===0?ne.set(d):Pn.updatePaddedCompressedCovariancesTextureData(d,ne,0,0,d.length);let ue;if(l>=1)ue=new DataTexture(ne,O.x,O.y,RGBAIntegerFormat,UnsignedIntType),ue.internalFormat="RGBA32UI",this.material.uniforms.covariancesTextureHalfFloat.value=ue;else{ue=new DataTexture(ne,O.x,O.y,RGBAFormat,FloatType),this.material.uniforms.covariancesTexture.value=ue;const pe=new DataTexture(new Uint32Array(32),2,2,RGBAIntegerFormat,UnsignedIntType);pe.internalFormat="RGBA32UI",this.material.uniforms.covariancesTextureHalfFloat.value=pe,pe.needsUpdate=!0}ue.needsUpdate=!0,this.material.uniforms.covariancesAreHalfFloat.value=l>=1?1:0,this.material.uniforms.covariancesTextureSize.value.copy(O),this.splatDataTextures.covariances={data:ne,texture:ue,size:O,compressionLevel:l,elementsPerTexelStored:G,elementsPerTexelAllocated:ce}}else{const G=o(SCALES_ROTATIONS_ELEMENTS_PER_TEXEL,6);let O=Float32Array,q=FloatType;const ce=new O(G.x*G.y*SCALES_ROTATIONS_ELEMENTS_PER_TEXEL);Pn.updateScaleRotationsPaddedData(0,n-1,f,g,ce);const ne=new DataTexture(ce,G.x,G.y,RGBAFormat,q);ne.needsUpdate=!0,this.material.uniforms.scaleRotationsTexture.value=ne,this.material.uniforms.scaleRotationsTextureSize.value.copy(G),this.splatDataTextures.scaleRotations={data:ce,texture:ne,size:G,compressionLevel:c}}if(C){const z=u===2?UnsignedByteType:HalfFloatType;let G=I;G%2!==0&&G++;const O=4,q=RGBAFormat;let ce=o(O,G);if(ce.x*ce.y<=MAX_TEXTURE_TEXELS){const ne=ce.x*ce.y*O,ue=new B(ne);for(let fe=0;fe<n;fe++){const ee=I*fe,J=G*fe;for(let ye=0;ye<I;ye++)ue[J+ye]=C[ee+ye]}const pe=new DataTexture(ue,ce.x,ce.y,q,z);pe.needsUpdate=!0,this.material.uniforms.sphericalHarmonicsTexture.value=pe,this.splatDataTextures.sphericalHarmonics={componentCount:I,paddedComponentCount:G,data:ue,textureCount:1,texture:pe,size:ce,compressionLevel:u,elementsPerTexel:O}}else{const ne=I/3;G=ne,G%2!==0&&G++,ce=o(O,G);const ue=ce.x*ce.y*O,pe=[this.material.uniforms.sphericalHarmonicsTextureR,this.material.uniforms.sphericalHarmonicsTextureG,this.material.uniforms.sphericalHarmonicsTextureB],fe=[],ee=[];for(let J=0;J<3;J++){const ye=new B(ue);fe.push(ye);for(let xe=0;xe<n;xe++){const ve=I*xe,he=G*xe;if(ne>=3){for(let le=0;le<3;le++)ye[he+le]=C[ve+J*3+le];if(ne>=8)for(let le=0;le<5;le++)ye[he+3+le]=C[ve+9+J*5+le]}}const Te=new DataTexture(ye,ce.x,ce.y,q,z);ee.push(Te),Te.needsUpdate=!0,pe[J].value=Te}this.material.uniforms.sphericalHarmonicsMultiTextureMode.value=1,this.splatDataTextures.sphericalHarmonics={componentCount:I,componentCountPerChannel:ne,paddedComponentCount:G,data:fe,textureCount:3,textures:ee,size:ce,compressionLevel:u,elementsPerTexel:O}}this.material.uniforms.sphericalHarmonicsTextureSize.value.copy(ce),this.material.uniforms.sphericalHarmonics8BitMode.value=u===2?1:0;for(let ne=0;ne<this.scenes.length;ne++){const ue=this.scenes[ne].splatBuffer;this.material.uniforms.sphericalHarmonics8BitCompressionRangeMin.value[ne]=ue.minSphericalHarmonicsCoeff,this.material.uniforms.sphericalHarmonics8BitCompressionRangeMax.value[ne]=ue.maxSphericalHarmonicsCoeff}this.material.uniformsNeedUpdate=!0}const N=o(SCENE_INDEXES_ELEMENTS_PER_TEXEL,4),k=new Uint32Array(N.x*N.y*SCENE_INDEXES_ELEMENTS_PER_TEXEL);for(let z=0;z<n;z++)k[z]=this.globalSplatIndexToSceneIndexMap[z];const Q=new DataTexture(k,N.x,N.y,RedIntegerFormat,UnsignedIntType);Q.internalFormat="R32UI",Q.needsUpdate=!0,this.material.uniforms.sceneIndexesTexture.value=Q,this.material.uniforms.sceneIndexesTextureSize.value.copy(N),this.material.uniformsNeedUpdate=!0,this.splatDataTextures.sceneIndexes={data:k,texture:Q,size:N},this.material.uniforms.sceneCount.value=this.scenes.length}updateBaseDataFromSplatBuffers(t,n){const o=this.splatDataTextures.covariances,a=o?o.compressionLevel:void 0,r=this.splatDataTextures.scaleRotations,l=r?r.compressionLevel:void 0,c=this.splatDataTextures.sphericalHarmonics,u=c?c.compressionLevel:0;this.fillSplatDataArrays(this.splatDataTextures.baseData.covariances,this.splatDataTextures.baseData.scales,this.splatDataTextures.baseData.rotations,this.splatDataTextures.baseData.centers,this.splatDataTextures.baseData.colors,this.splatDataTextures.baseData.sphericalHarmonics,void 0,a,l,u,t,n,t)}updateDataTexturesFromBaseData(t,n){const o=this.splatDataTextures.covariances,a=o?o.compressionLevel:void 0,r=this.splatDataTextures.scaleRotations,l=r?r.compressionLevel:void 0,c=this.splatDataTextures.sphericalHarmonics,u=c?c.compressionLevel:0,d=this.splatDataTextures.centerColors,f=d.data,g=d.texture;Pn.updateCenterColorsPaddedData(t,n,this.splatDataTextures.baseData.centers,this.splatDataTextures.baseData.colors,f);const _=this.renderer?this.renderer.properties.get(g):null;if(!_||!_.__webglTexture?g.needsUpdate=!0:this.updateDataTexture(f,d.texture,d.size,_,CENTER_COLORS_ELEMENTS_PER_TEXEL,CENTER_COLORS_ELEMENTS_PER_SPLAT,4,t,n),o){const L=o.texture,F=t*COVARIANCES_ELEMENTS_PER_SPLAT,N=n*COVARIANCES_ELEMENTS_PER_SPLAT;if(a===0)for(let Q=F;Q<=N;Q++){const z=this.splatDataTextures.baseData.covariances[Q];o.data[Q]=z}else Pn.updatePaddedCompressedCovariancesTextureData(this.splatDataTextures.baseData.covariances,o.data,t*o.elementsPerTexelAllocated,F,N);const k=this.renderer?this.renderer.properties.get(L):null;!k||!k.__webglTexture?L.needsUpdate=!0:a===0?this.updateDataTexture(o.data,o.texture,o.size,k,o.elementsPerTexelStored,COVARIANCES_ELEMENTS_PER_SPLAT,4,t,n):this.updateDataTexture(o.data,o.texture,o.size,k,o.elementsPerTexelAllocated,o.elementsPerTexelAllocated,2,t,n)}if(r){const L=r.data,F=r.texture,N=6,k=l===0?4:2;Pn.updateScaleRotationsPaddedData(t,n,this.splatDataTextures.baseData.scales,this.splatDataTextures.baseData.rotations,L);const Q=this.renderer?this.renderer.properties.get(F):null;!Q||!Q.__webglTexture?F.needsUpdate=!0:this.updateDataTexture(L,r.texture,r.size,Q,SCALES_ROTATIONS_ELEMENTS_PER_TEXEL,N,k,t,n)}const b=this.splatDataTextures.baseData.sphericalHarmonics;if(b){let L=4;u===1?L=2:u===2&&(L=1);const F=(Q,z,G,O,q)=>{const ce=this.renderer?this.renderer.properties.get(Q):null;!ce||!ce.__webglTexture?Q.needsUpdate=!0:this.updateDataTexture(O,Q,z,ce,G,q,L,t,n)},N=c.componentCount,k=c.paddedComponentCount;if(c.textureCount===1){const Q=c.data;for(let z=t;z<=n;z++){const G=N*z,O=k*z;for(let q=0;q<N;q++)Q[O+q]=b[G+q]}F(c.texture,c.size,c.elementsPerTexel,Q,k)}else{const Q=c.componentCountPerChannel;for(let z=0;z<3;z++){const G=c.data[z];for(let O=t;O<=n;O++){const q=N*O,ce=k*O;if(Q>=3){for(let ne=0;ne<3;ne++)G[ce+ne]=b[q+z*3+ne];if(Q>=8)for(let ne=0;ne<5;ne++)G[ce+3+ne]=b[q+9+z*5+ne]}}F(c.textures[z],c.size,c.elementsPerTexel,G,k)}}}const B=this.splatDataTextures.sceneIndexes,I=B.data;for(let L=this.lastBuildSplatCount;L<=n;L++)I[L]=this.globalSplatIndexToSceneIndexMap[L];const C=B.texture,R=this.renderer?this.renderer.properties.get(C):null;!R||!R.__webglTexture?C.needsUpdate=!0:this.updateDataTexture(I,B.texture,B.size,R,1,1,1,this.lastBuildSplatCount,n)}getTargetCovarianceCompressionLevel(){return this.halfPrecisionCovariancesOnGPU?1:0}getTargetSphericalHarmonicsCompressionLevel(){return Math.max(1,this.getMaximumSplatBufferCompressionLevel())}getMaximumSplatBufferCompressionLevel(){let t;for(let n=0;n<this.scenes.length;n++){const a=this.getScene(n).splatBuffer;(n===0||a.compressionLevel>t)&&(t=a.compressionLevel)}return t}getMinimumSplatBufferCompressionLevel(){let t;for(let n=0;n<this.scenes.length;n++){const a=this.getScene(n).splatBuffer;(n===0||a.compressionLevel<t)&&(t=a.compressionLevel)}return t}static computeTextureUpdateRegion(t,n,o,a,r){const l=r/a,c=t*l,u=Math.floor(c/o),d=u*o*a,f=n*l,g=Math.floor(f/o),_=g*o*a+o*a;return{dataStart:d,dataEnd:_,startRow:u,endRow:g}}updateDataTexture(t,n,o,a,r,l,c,u,d){const f=this.renderer.getContext(),g=Pn.computeTextureUpdateRegion(u,d,o.x,r,l),_=g.dataEnd-g.dataStart,b=new t.constructor(t.buffer,g.dataStart*c,_),B=g.endRow-g.startRow+1,I=this.webGLUtils.convert(n.type),C=this.webGLUtils.convert(n.format,n.colorSpace),R=f.getParameter(f.TEXTURE_BINDING_2D);f.bindTexture(f.TEXTURE_2D,a.__webglTexture),f.texSubImage2D(f.TEXTURE_2D,0,0,g.startRow,o.x,B,C,I,b),f.bindTexture(f.TEXTURE_2D,R)}static updatePaddedCompressedCovariancesTextureData(t,n,o,a,r){let l=new DataView(n.buffer),c=o,u=0;for(let d=a;d<=r;d+=2)l.setUint16(c*2,t[d],!0),l.setUint16(c*2+2,t[d+1],!0),c+=2,u++,u>=3&&(c+=2,u=0)}static updateCenterColorsPaddedData(t,n,o,a,r){for(let l=t;l<=n;l++){const c=l*4,u=l*3,d=l*4;r[d]=rgbaArrayToInteger(a,c),r[d+1]=uintEncodedFloat(o[u]),r[d+2]=uintEncodedFloat(o[u+1]),r[d+3]=uintEncodedFloat(o[u+2])}}static updateScaleRotationsPaddedData(t,n,o,a,r){for(let c=t;c<=n;c++){const u=c*3,d=c*4,f=c*6;r[f]=o[u],r[f+1]=o[u+1],r[f+2]=o[u+2],r[f+3]=a[d],r[f+4]=a[d+1],r[f+5]=a[d+2]}}updateVisibleRegion(t){const n=this.getSplatCount(!0),o=new Vector3;if(!t){const r=new Vector3;this.scenes.forEach(l=>{r.add(l.splatBuffer.sceneCenter)}),r.multiplyScalar(1/this.scenes.length),this.calculatedSceneCenter.copy(r),this.material.uniforms.sceneCenter.value.copy(this.calculatedSceneCenter),this.material.uniformsNeedUpdate=!0}const a=t?this.lastBuildSplatCount:0;for(let r=a;r<n;r++){this.getSplatCenter(r,o,!0);const l=o.sub(this.calculatedSceneCenter).length();l>this.maxSplatDistanceFromSceneCenter&&(this.maxSplatDistanceFromSceneCenter=l)}this.maxSplatDistanceFromSceneCenter-this.visibleRegionBufferRadius>VISIBLE_REGION_EXPANSION_DELTA&&(this.visibleRegionBufferRadius=this.maxSplatDistanceFromSceneCenter,this.visibleRegionRadius=Math.max(this.visibleRegionBufferRadius-VISIBLE_REGION_EXPANSION_DELTA,0)),this.finalBuild&&(this.visibleRegionRadius=this.visibleRegionBufferRadius=this.maxSplatDistanceFromSceneCenter),this.updateVisibleRegionFadeDistance()}updateVisibleRegionFadeDistance(t=SceneRevealMode.Default){const n=SCENE_FADEIN_RATE_FAST*this.sceneFadeInRateMultiplier,o=SCENE_FADEIN_RATE_GRADUAL*this.sceneFadeInRateMultiplier,a=this.finalBuild?n:o,r=t===SceneRevealMode.Default?a:o;this.visibleRegionFadeStartRadius=(this.visibleRegionRadius-this.visibleRegionFadeStartRadius)*r+this.visibleRegionFadeStartRadius;const c=(this.visibleRegionBufferRadius>0?this.visibleRegionFadeStartRadius/this.visibleRegionBufferRadius:0)>.99,u=c||t===SceneRevealMode.Instant?1:0;this.material.uniforms.visibleRegionFadeStartRadius.value=this.visibleRegionFadeStartRadius,this.material.uniforms.visibleRegionRadius.value=this.visibleRegionRadius,this.material.uniforms.firstRenderTime.value=this.firstRenderTime,this.material.uniforms.currentTime.value=performance.now(),this.material.uniforms.fadeInComplete.value=u,this.material.uniformsNeedUpdate=!0,this.visibleRegionChanging=!c}updateRenderIndexes(t,n){const o=this.geometry;o.attributes.splatIndex.set(t),o.attributes.splatIndex.needsUpdate=!0,n>0&&this.firstRenderTime===-1&&(this.firstRenderTime=performance.now()),o.instanceCount=n,o.setDrawRange(0,n)}updateTransforms(){for(let t=0;t<this.scenes.length;t++)this.getScene(t).updateTransform(this.dynamicMode)}setSplatScale(t=1){this.splatScale=t,this.material.uniforms.splatScale.value=t,this.material.uniformsNeedUpdate=!0}getSplatScale(){return this.splatScale}setPointCloudModeEnabled(t){this.pointCloudModeEnabled=t,this.material.uniforms.pointCloudModeEnabled.value=t?1:0,this.material.uniformsNeedUpdate=!0}getPointCloudModeEnabled(){return this.pointCloudModeEnabled}getSplatDataTextures(){return this.splatDataTextures}getSplatCount(t=!1){return t?Pn.getTotalSplatCountForScenes(this.scenes):this.lastBuildSplatCount}static getTotalSplatCountForScenes(t){let n=0;for(let o of t)o&&o.splatBuffer&&(n+=o.splatBuffer.getSplatCount());return n}static getTotalSplatCountForSplatBuffers(t){let n=0;for(let o of t)n+=o.getSplatCount();return n}getMaxSplatCount(){return Pn.getTotalMaxSplatCountForScenes(this.scenes)}static getTotalMaxSplatCountForScenes(t){let n=0;for(let o of t)o&&o.splatBuffer&&(n+=o.splatBuffer.getMaxSplatCount());return n}static getTotalMaxSplatCountForSplatBuffers(t){let n=0;for(let o of t)n+=o.getMaxSplatCount();return n}disposeDistancesComputationGPUResources(){if(!this.renderer)return;const t=this.renderer.getContext();this.distancesTransformFeedback.vao&&(t.deleteVertexArray(this.distancesTransformFeedback.vao),this.distancesTransformFeedback.vao=null),this.distancesTransformFeedback.program&&(t.deleteProgram(this.distancesTransformFeedback.program),t.deleteShader(this.distancesTransformFeedback.vertexShader),t.deleteShader(this.distancesTransformFeedback.fragmentShader),this.distancesTransformFeedback.program=null,this.distancesTransformFeedback.vertexShader=null,this.distancesTransformFeedback.fragmentShader=null),this.disposeDistancesComputationGPUBufferResources(),this.distancesTransformFeedback.id&&(t.deleteTransformFeedback(this.distancesTransformFeedback.id),this.distancesTransformFeedback.id=null)}disposeDistancesComputationGPUBufferResources(){if(!this.renderer)return;const t=this.renderer.getContext();this.distancesTransformFeedback.centersBuffer&&(this.distancesTransformFeedback.centersBuffer=null,t.deleteBuffer(this.distancesTransformFeedback.centersBuffer)),this.distancesTransformFeedback.outDistancesBuffer&&(t.deleteBuffer(this.distancesTransformFeedback.outDistancesBuffer),this.distancesTransformFeedback.outDistancesBuffer=null)}setRenderer(t){if(t!==this.renderer){this.renderer=t;const n=this.renderer.getContext(),o=new WebGLExtensions(n),a=new WebGLCapabilities(n,o,{});if(o.init(a),this.webGLUtils=new WebGLUtils(n,o),this.enableDistancesComputationOnGPU&&this.getSplatCount()>0){this.setupDistancesComputationTransformFeedback();const{centers:r,sceneIndexes:l}=this.getDataForDistancesComputation(0,this.getSplatCount()-1);this.refreshGPUBuffersForDistancesComputation(r,l)}}}updateGPUCentersBufferForDistancesComputation(t,n,o){if(!this.renderer)return;const a=this.renderer.getContext(),r=a.getParameter(a.VERTEX_ARRAY_BINDING);a.bindVertexArray(this.distancesTransformFeedback.vao);const l=this.integerBasedDistancesComputation?Uint32Array:Float32Array,c=16,u=o*c;if(a.bindBuffer(a.ARRAY_BUFFER,this.distancesTransformFeedback.centersBuffer),t)a.bufferSubData(a.ARRAY_BUFFER,u,n);else{const d=new l(this.getMaxSplatCount()*c);d.set(n),a.bufferData(a.ARRAY_BUFFER,d,a.STATIC_DRAW)}a.bindBuffer(a.ARRAY_BUFFER,null),r&&a.bindVertexArray(r)}updateGPUTransformIndexesBufferForDistancesComputation(t,n,o){if(!this.renderer||!this.dynamicMode)return;const a=this.renderer.getContext(),r=a.getParameter(a.VERTEX_ARRAY_BINDING);a.bindVertexArray(this.distancesTransformFeedback.vao);const l=o*4;if(a.bindBuffer(a.ARRAY_BUFFER,this.distancesTransformFeedback.sceneIndexesBuffer),t)a.bufferSubData(a.ARRAY_BUFFER,l,n);else{const c=new Uint32Array(this.getMaxSplatCount()*4);c.set(n),a.bufferData(a.ARRAY_BUFFER,c,a.STATIC_DRAW)}a.bindBuffer(a.ARRAY_BUFFER,null),r&&a.bindVertexArray(r)}getSceneIndexes(t,n){let o;const a=n-t+1;o=new Uint32Array(a);for(let r=t;r<=n;r++)o[r]=this.globalSplatIndexToSceneIndexMap[r];return o}getLocalSplatParameters(t,n,o){o==null&&(o=!this.dynamicMode),n.splatBuffer=this.getSplatBufferForSplat(t),n.localIndex=this.getSplatLocalIndex(t),n.sceneTransform=o?this.getSceneTransformForSplat(t):null}fillSplatDataArrays(t,n,o,a,r,l,c,u=0,d=0,f=1,g,_,b=0,B){const I=new Vector3;I.x=void 0,I.y=void 0,this.splatRenderMode===SplatRenderMode.ThreeD?I.z=void 0:I.z=1;const C=new Matrix4;let R=0,L=this.scenes.length-1;B!=null&&B>=0&&B<=this.scenes.length&&(R=B,L=B);for(let F=R;F<=L;F++){c==null&&(c=!this.dynamicMode);const N=this.getScene(F),k=N.splatBuffer;let Q;if(c&&(this.getSceneTransform(F,C),Q=C),t&&k.fillSplatCovarianceArray(t,Q,g,_,b,u),n||o){if(!n||!o)throw new Error('SplatMesh::fillSplatDataArrays() -> "scales" and "rotations" must both be valid.');k.fillSplatScaleRotationArray(n,o,Q,g,_,b,d,I)}a&&k.fillSplatCenterArray(a,Q,g,_,b),r&&k.fillSplatColorArray(r,N.minimumAlpha,g,_,b),l&&k.fillSphericalHarmonicsArray(l,this.minSphericalHarmonicsDegree,Q,g,_,b,f),b+=k.getSplatCount()}}getIntegerCenters(t,n,o=!1){const a=n-t+1,r=new Float32Array(a*3);this.fillSplatDataArrays(null,null,null,r,null,null,void 0,void 0,void 0,void 0,t);let l,c=o?4:3;l=new Int32Array(a*c);for(let u=0;u<a;u++){for(let d=0;d<3;d++)l[u*c+d]=Math.round(r[u*3+d]*1e3);o&&(l[u*c+3]=1e3)}return l}getFloatCenters(t,n,o=!1){const a=n-t+1,r=new Float32Array(a*3);if(this.fillSplatDataArrays(null,null,null,r,null,null,void 0,void 0,void 0,void 0,t),!o)return r;let l=new Float32Array(a*4);for(let c=0;c<a;c++){for(let u=0;u<3;u++)l[c*4+u]=r[c*3+u];l[c*4+3]=1}return l}getSceneTransform(t,n){const o=this.getScene(t);o.updateTransform(this.dynamicMode),n.copy(o.transform)}getScene(t){if(t<0||t>=this.scenes.length)throw new Error("SplatMesh::getScene() -> Invalid scene index.");return this.scenes[t]}getSceneCount(){return this.scenes.length}getSplatBufferForSplat(t){return this.getScene(this.globalSplatIndexToSceneIndexMap[t]).splatBuffer}getSceneIndexForSplat(t){return this.globalSplatIndexToSceneIndexMap[t]}getSceneTransformForSplat(t){return this.getScene(this.globalSplatIndexToSceneIndexMap[t]).transform}getSplatLocalIndex(t){return this.globalSplatIndexToLocalSplatIndexMap[t]}static getIntegerMatrixArray(t){const n=t.elements,o=[];for(let a=0;a<16;a++)o[a]=Math.round(n[a]*1e3);return o}computeBoundingBox(t=!1,n){let o=this.getSplatCount();if(n!=null){if(n<0||n>=this.scenes.length)throw new Error("SplatMesh::computeBoundingBox() -> Invalid scene index.");o=this.scenes[n].splatBuffer.getSplatCount()}const a=new Float32Array(o*3);this.fillSplatDataArrays(null,null,null,a,null,null,t,void 0,void 0,void 0,void 0,n);const r=new Vector3,l=new Vector3;for(let c=0;c<o;c++){const u=c*3,d=a[u],f=a[u+1],g=a[u+2];(c===0||d<r.x)&&(r.x=d),(c===0||f<r.y)&&(r.y=f),(c===0||g<r.z)&&(r.z=g),(c===0||d>l.x)&&(l.x=d),(c===0||f>l.y)&&(l.y=f),(c===0||g>l.z)&&(l.z=g)}return new Box3(r,l)}};var SorterWasm="AGFzbQEAAAAADwhkeWxpbmsuMAEEAAAAAAEbA2AAAGAQf39/f39/f39/f39/f39/fwBgAAF/AhIBA2VudgZtZW1vcnkCAwCAgAQDBAMAAQIHVAQRX193YXNtX2NhbGxfY3RvcnMAABhfX3dhc21fYXBwbHlfZGF0YV9yZWxvY3MAAAtzb3J0SW5kZXhlcwABE2Vtc2NyaXB0ZW5fdGxzX2luaXQAAgqWEAMDAAELihAEAXwDewN/A30gCyAKayEMAkACQCAOBEAgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQMgDCEBA0AgAyABQQJ0IgVqIAIgACAFaigCAEECdGooAgAiBTYCACAFIAogBSAKSBshCiAFIA0gBSANShshDSABQQFqIgEgC0cNAAsMAwsgDwRAIAsgDE0NAkF/IQ9B+P///wchCkGIgICAeCENIAwhAgNAIA8gByAAIAJBAnQiFWooAgAiFkECdGooAgAiFEcEQAJ/IAX9CQI4IAggFEEGdGoiDv0JAgwgDioCHP0gASAOKgIs/SACIA4qAjz9IAP95gEgBf0JAiggDv0JAgggDioCGP0gASAOKgIo/SACIA4qAjj9IAP95gEgBf0JAgggDv0JAgAgDioCEP0gASAOKgIg/SACIA4qAjD9IAP95gEgBf0JAhggDv0JAgQgDioCFP0gASAOKgIk/SACIA4qAjT9IAP95gH95AH95AH95AEiEf1f/QwAAAAAAECPQAAAAAAAQI9AIhL98gEiE/0hASIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshDgJ/IBP9IQAiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgL/REgDv0cAQJ/IBEgEf0NCAkKCwwNDg8AAAAAAAAAAP1fIBL98gEiEf0hACIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAv9HAICfyAR/SEBIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4C/0cAyESIBQhDwsgAyAVaiABIBZBBHRq/QAAACAS/bUBIhH9GwAgEf0bAWogEf0bAmogEf0bA2oiDjYCACAOIAogCiAOShshCiAOIA0gDSAOSBshDSACQQFqIgIgC0cNAAsMAwsCfyAFKgIIu/0UIAUqAhi7/SIB/QwAAAAAAECPQAAAAAAAQI9A/fIBIhH9IQEiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIQ4CfyAR/SEAIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyECAn8gBSoCKLtEAAAAAABAj0CiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEFQfj///8HIQpBiICAgHghDSALIAxNDQIgAv0RIA79HAEgBf0cAiESIAwhBQNAIAMgBUECdCICaiABIAAgAmooAgBBBHRq/QAAACAS/bUBIhH9GwAgEf0bAWogEf0bAmoiAjYCACACIAogAiAKSBshCiACIA0gAiANShshDSAFQQFqIgUgC0cNAAsMAgsgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQIgDCEBA0AgAyABQQJ0IgVqAn8gAiAAIAVqKAIAQQJ0aioCALtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyIONgIAIAogDiAKIA5IGyEKIA0gDiANIA5KGyENIAFBAWoiASALRw0ACwwCCyAPRQRAIAsgDE0NASAFKgIoIRcgBSoCGCEYIAUqAgghGUH4////ByEKQYiAgIB4IQ0gDCEFA0ACfyAXIAEgACAFQQJ0IgdqKAIAQQR0aiICKgIIlCAZIAIqAgCUIBggAioCBJSSkrtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEOIAMgB2ogDjYCACAKIA4gCiAOSBshCiANIA4gDSAOShshDSAFQQFqIgUgC0cNAAsMAgsgCyAMTQ0AQX8hD0H4////ByEKQYiAgIB4IQ0gDCECA0AgDyAHIAAgAkECdCIUaigCAEECdCIVaigCACIORwRAIAX9CQI4IAggDkEGdGoiD/0JAgwgDyoCHP0gASAPKgIs/SACIA8qAjz9IAP95gEgBf0JAiggD/0JAgggDyoCGP0gASAPKgIo/SACIA8qAjj9IAP95gEgBf0JAgggD/0JAgAgDyoCEP0gASAPKgIg/SACIA8qAjD9IAP95gEgBf0JAhggD/0JAgQgDyoCFP0gASAPKgIk/SACIA8qAjT9IAP95gH95AH95AH95AEhESAOIQ8LIAMgFGoCfyAR/R8DIAEgFUECdCIOQQxyaioCAJQgEf0fAiABIA5BCHJqKgIAlCAR/R8AIAEgDmoqAgCUIBH9HwEgASAOQQRyaioCAJSSkpK7RAAAAAAAALBAoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAsiDjYCACAKIA4gCiAOSBshCiANIA4gDSAOShshDSACQQFqIgIgC0cNAAsMAQtBiICAgHghDUH4////ByEKCyALIAxLBEAgCUEBa7MgDbIgCrKTlSEXIAwhDQNAAn8gFyADIA1BAnRqIgEoAgAgCmuylCIYi0MAAABPXQRAIBioDAELQYCAgIB4CyEOIAEgDjYCACAEIA5BAnRqIgEgASgCAEEBajYCACANQQFqIg0gC0cNAAsLIAlBAk8EQCAEKAIAIQ1BASEKA0AgBCAKQQJ0aiIBIAEoAgAgDWoiDTYCACAKQQFqIgogCUcNAAsLIAxBAEoEQCAMIQoDQCAGIApBAWsiAUECdCICaiAAIAJqKAIANgIAIApBAUshAiABIQogAg0ACwsgCyAMSgRAIAshCgNAIAYgCyAEIAMgCkEBayIKQQJ0IgFqKAIAQQJ0aiICKAIAIgVrQQJ0aiAAIAFqKAIANgIAIAIgBUEBazYCACAKIAxKDQALCwsEAEEACw==",SorterWasmNoSIMD="AGFzbQEAAAAADwhkeWxpbmsuMAEEAAAAAAEXAmAAAGAQf39/f39/f39/f39/f39/fwACEgEDZW52Bm1lbW9yeQIDAICABAMDAgABBz4DEV9fd2FzbV9jYWxsX2N0b3JzAAAYX193YXNtX2FwcGx5X2RhdGFfcmVsb2NzAAALc29ydEluZGV4ZXMAAQqiDwICAAucDwMBfAd9Bn8gCyAKayEMAkACQCAOBEAgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQMgDCEFA0AgAyAFQQJ0IgFqIAIgACABaigCAEECdGooAgAiATYCACABIAogASAKSBshCiABIA0gASANShshDSAFQQFqIgUgC0cNAAsMAwsgDwRAIAsgDE0NAkF/IQ9B+P///wchCkGIgICAeCENIAwhAgNAIA8gByAAIAJBAnQiGmooAgBBAnQiG2ooAgAiDkcEQAJ/IAUqAjgiESAIIA5BBnRqIg8qAjyUIAUqAigiEiAPKgI4lCAFKgIIIhMgDyoCMJQgBSoCGCIUIA8qAjSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRgCfyARIA8qAiyUIBIgDyoCKJQgEyAPKgIglCAUIA8qAiSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRkCfyARIA8qAhyUIBIgDyoCGJQgEyAPKgIQlCAUIA8qAhSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRwCfyARIA8qAgyUIBIgDyoCCJQgEyAPKgIAlCAUIA8qAgSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIR0gDiEPCyADIBpqIAEgG0ECdGoiDigCBCAcbCAOKAIAIB1saiAOKAIIIBlsaiAOKAIMIBhsaiIONgIAIA4gCiAKIA5KGyEKIA4gDSANIA5IGyENIAJBAWoiAiALRw0ACwwDCwJ/IAUqAii7RAAAAAAAQI9AoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshAgJ/IAUqAhi7RAAAAAAAQI9AoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshByALIAxNAn8gBSoCCLtEAAAAAABAj0CiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEPQfj///8HIQpBiICAgHghDQ0CIAwhBQNAIAMgBUECdCIIaiABIAAgCGooAgBBBHRqIggoAgQgB2wgCCgCACAPbGogCCgCCCACbGoiCDYCACAIIAogCCAKSBshCiAIIA0gCCANShshDSAFQQFqIgUgC0cNAAsMAgsgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQIgDCEFA0AgAyAFQQJ0IgFqAn8gAiAAIAFqKAIAQQJ0aioCALtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyIONgIAIAogDiAKIA5IGyEKIA0gDiANIA5KGyENIAVBAWoiBSALRw0ACwwCCyAPRQRAIAsgDE0NASAFKgIoIREgBSoCGCESIAUqAgghE0H4////ByEKQYiAgIB4IQ0gDCEFA0ACfyARIAEgACAFQQJ0IgdqKAIAQQR0aiICKgIIlCATIAIqAgCUIBIgAioCBJSSkrtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEOIAMgB2ogDjYCACAKIA4gCiAOSBshCiANIA4gDSAOShshDSAFQQFqIgUgC0cNAAsMAgsgCyAMTQ0AQX8hD0H4////ByEKQYiAgIB4IQ0gDCECA0AgDyAHIAAgAkECdCIYaigCAEECdCIZaigCACIORwRAIAUqAjgiESAIIA5BBnRqIg8qAjyUIAUqAigiEiAPKgI4lCAFKgIIIhMgDyoCMJQgBSoCGCIUIA8qAjSUkpKSIRUgESAPKgIslCASIA8qAiiUIBMgDyoCIJQgFCAPKgIklJKSkiEWIBEgDyoCHJQgEiAPKgIYlCATIA8qAhCUIBQgDyoCFJSSkpIhFyARIA8qAgyUIBIgDyoCCJQgEyAPKgIAlCAUIA8qAgSUkpKSIREgDiEPCyADIBhqAn8gFSABIBlBAnRqIg4qAgyUIBYgDioCCJQgESAOKgIAlCAXIA4qAgSUkpKSu0QAAAAAAACwQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIg42AgAgCiAOIAogDkgbIQogDSAOIA0gDkobIQ0gAkEBaiICIAtHDQALDAELQYiAgIB4IQ1B+P///wchCgsgCyAMSwRAIAlBAWuzIA2yIAqyk5UhESAMIQ0DQAJ/IBEgAyANQQJ0aiIBKAIAIAprspQiEotDAAAAT10EQCASqAwBC0GAgICAeAshDiABIA42AgAgBCAOQQJ0aiIBIAEoAgBBAWo2AgAgDUEBaiINIAtHDQALCyAJQQJPBEAgBCgCACENQQEhCgNAIAQgCkECdGoiASABKAIAIA1qIg02AgAgCkEBaiIKIAlHDQALCyAMQQBKBEAgDCEKA0AgBiAKQQFrIgFBAnQiAmogACACaigCADYCACAKQQFLIAEhCg0ACwsgCyAMSgRAIAshCgNAIAYgCyAEIAMgCkEBayIKQQJ0IgFqKAIAQQJ0aiICKAIAIgVrQQJ0aiAAIAFqKAIANgIAIAIgBUEBazYCACAKIAxKDQALCws=",SorterWasmNonShared="AGFzbQEAAAAADwhkeWxpbmsuMAEEAAAAAAEXAmAAAGAQf39/f39/f39/f39/f39/fwACDwEDZW52Bm1lbW9yeQIAAAMDAgABBz4DEV9fd2FzbV9jYWxsX2N0b3JzAAAYX193YXNtX2FwcGx5X2RhdGFfcmVsb2NzAAALc29ydEluZGV4ZXMAAQrrDwICAAvlDwQBfAN7B30DfyALIAprIQwCQAJAIA4EQCANBEBB+P///wchCkGIgICAeCENIAsgDE0NAyAMIQUDQCADIAVBAnQiAWogAiAAIAFqKAIAQQJ0aigCACIBNgIAIAEgCiABIApIGyEKIAEgDSABIA1KGyENIAVBAWoiBSALRw0ACwwDCyAPBEAgCyAMTQ0CQX8hD0H4////ByEKQYiAgIB4IQ0gDCECA0AgDyAHIAAgAkECdCIcaigCACIdQQJ0aigCACIbRwRAAn8gBf0JAjggCCAbQQZ0aiIO/QkCDCAOKgIc/SABIA4qAiz9IAIgDioCPP0gA/3mASAF/QkCKCAO/QkCCCAOKgIY/SABIA4qAij9IAIgDioCOP0gA/3mASAF/QkCCCAO/QkCACAOKgIQ/SABIA4qAiD9IAIgDioCMP0gA/3mASAF/QkCGCAO/QkCBCAOKgIU/SABIA4qAiT9IAIgDioCNP0gA/3mAf3kAf3kAf3kASIR/V/9DAAAAAAAQI9AAAAAAABAj0AiEv3yASIT/SEBIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEOAn8gE/0hACIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAv9ESAO/RwBAn8gESAR/Q0ICQoLDA0ODwABAgMAAQID/V8gEv3yASIR/SEAIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4C/0cAgJ/IBH9IQEiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgL/RwDIRIgGyEPCyADIBxqIAEgHUEEdGr9AAAAIBL9tQEiEf0bACAR/RsBaiAR/RsCaiAR/RsDaiIONgIAIA4gCiAKIA5KGyEKIA4gDSANIA5IGyENIAJBAWoiAiALRw0ACwwDCwJ/IAUqAgi7/RQgBSoCGLv9IgH9DAAAAAAAQI9AAAAAAABAj0D98gEiEf0hASIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshDgJ/IBH9IQAiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLAn8gBSoCKLtEAAAAAABAj0CiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEFQfj///8HIQpBiICAgHghDSALIAxNDQL9ESAO/RwBIAX9HAIhEiAMIQUDQCADIAVBAnQiAmogASAAIAJqKAIAQQR0av0AAAAgEv21ASIR/RsAIBH9GwFqIBH9GwJqIgI2AgAgAiAKIAIgCkgbIQogAiANIAIgDUobIQ0gBUEBaiIFIAtHDQALDAILIA0EQEH4////ByEKQYiAgIB4IQ0gCyAMTQ0CIAwhBQNAIAMgBUECdCIBagJ/IAIgACABaigCAEECdGoqAgC7RAAAAAAAALBAoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAsiDjYCACAKIA4gCiAOSBshCiANIA4gDSAOShshDSAFQQFqIgUgC0cNAAsMAgsgD0UEQCALIAxNDQEgBSoCKCEUIAUqAhghFSAFKgIIIRZB+P///wchCkGIgICAeCENIAwhBQNAAn8gFCABIAAgBUECdCIHaigCAEEEdGoiAioCCJQgFiACKgIAlCAVIAIqAgSUkpK7RAAAAAAAALBAoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshDiADIAdqIA42AgAgCiAOIAogDkgbIQogDSAOIA0gDkobIQ0gBUEBaiIFIAtHDQALDAILIAsgDE0NAEF/IQ9B+P///wchCkGIgICAeCENIAwhAgNAIA8gByAAIAJBAnQiG2ooAgBBAnQiHGooAgAiDkcEQCAFKgI4IhQgCCAOQQZ0aiIPKgI8lCAFKgIoIhUgDyoCOJQgBSoCCCIWIA8qAjCUIAUqAhgiFyAPKgI0lJKSkiEYIBQgDyoCLJQgFSAPKgIolCAWIA8qAiCUIBcgDyoCJJSSkpIhGSAUIA8qAhyUIBUgDyoCGJQgFiAPKgIQlCAXIA8qAhSUkpKSIRogFCAPKgIMlCAVIA8qAgiUIBYgDyoCAJQgFyAPKgIElJKSkiEUIA4hDwsgAyAbagJ/IBggASAcQQJ0aiIOKgIMlCAZIA4qAgiUIBQgDioCAJQgGiAOKgIElJKSkrtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyIONgIAIAogDiAKIA5IGyEKIA0gDiANIA5KGyENIAJBAWoiAiALRw0ACwwBC0GIgICAeCENQfj///8HIQoLIAsgDEsEQCAJQQFrsyANsiAKspOVIRQgDCENA0ACfyAUIAMgDUECdGoiASgCACAKa7KUIhWLQwAAAE9dBEAgFagMAQtBgICAgHgLIQ4gASAONgIAIAQgDkECdGoiASABKAIAQQFqNgIAIA1BAWoiDSALRw0ACwsgCUECTwRAIAQoAgAhDUEBIQoDQCAEIApBAnRqIgEgASgCACANaiINNgIAIApBAWoiCiAJRw0ACwsgDEEASgRAIAwhCgNAIAYgCkEBayIBQQJ0IgJqIAAgAmooAgA2AgAgCkEBSyABIQoNAAsLIAsgDEoEQCALIQoDQCAGIAsgBCADIApBAWsiCkECdCIBaigCAEECdGoiAigCACIFa0ECdGogACABaigCADYCACACIAVBAWs2AgAgCiAMSg0ACwsL",SorterWasmNoSIMDNonShared="AGFzbQEAAAAADwhkeWxpbmsuMAEEAAAAAAEXAmAAAGAQf39/f39/f39/f39/f39/fwACDwEDZW52Bm1lbW9yeQIAAAMDAgABBz4DEV9fd2FzbV9jYWxsX2N0b3JzAAAYX193YXNtX2FwcGx5X2RhdGFfcmVsb2NzAAALc29ydEluZGV4ZXMAAQqiDwICAAucDwMBfAd9Bn8gCyAKayEMAkACQCAOBEAgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQMgDCEFA0AgAyAFQQJ0IgFqIAIgACABaigCAEECdGooAgAiATYCACABIAogASAKSBshCiABIA0gASANShshDSAFQQFqIgUgC0cNAAsMAwsgDwRAIAsgDE0NAkF/IQ9B+P///wchCkGIgICAeCENIAwhAgNAIA8gByAAIAJBAnQiGmooAgBBAnQiG2ooAgAiDkcEQAJ/IAUqAjgiESAIIA5BBnRqIg8qAjyUIAUqAigiEiAPKgI4lCAFKgIIIhMgDyoCMJQgBSoCGCIUIA8qAjSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRgCfyARIA8qAiyUIBIgDyoCKJQgEyAPKgIglCAUIA8qAiSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRkCfyARIA8qAhyUIBIgDyoCGJQgEyAPKgIQlCAUIA8qAhSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIRwCfyARIA8qAgyUIBIgDyoCCJQgEyAPKgIAlCAUIA8qAgSUkpKSu0QAAAAAAECPQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIR0gDiEPCyADIBpqIAEgG0ECdGoiDigCBCAcbCAOKAIAIB1saiAOKAIIIBlsaiAOKAIMIBhsaiIONgIAIA4gCiAKIA5KGyEKIA4gDSANIA5IGyENIAJBAWoiAiALRw0ACwwDCwJ/IAUqAii7RAAAAAAAQI9AoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshAgJ/IAUqAhi7RAAAAAAAQI9AoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshByALIAxNAn8gBSoCCLtEAAAAAABAj0CiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEPQfj///8HIQpBiICAgHghDQ0CIAwhBQNAIAMgBUECdCIIaiABIAAgCGooAgBBBHRqIggoAgQgB2wgCCgCACAPbGogCCgCCCACbGoiCDYCACAIIAogCCAKSBshCiAIIA0gCCANShshDSAFQQFqIgUgC0cNAAsMAgsgDQRAQfj///8HIQpBiICAgHghDSALIAxNDQIgDCEFA0AgAyAFQQJ0IgFqAn8gAiAAIAFqKAIAQQJ0aioCALtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyIONgIAIAogDiAKIA5IGyEKIA0gDiANIA5KGyENIAVBAWoiBSALRw0ACwwCCyAPRQRAIAsgDE0NASAFKgIoIREgBSoCGCESIAUqAgghE0H4////ByEKQYiAgIB4IQ0gDCEFA0ACfyARIAEgACAFQQJ0IgdqKAIAQQR0aiICKgIIlCATIAIqAgCUIBIgAioCBJSSkrtEAAAAAAAAsECiIhCZRAAAAAAAAOBBYwRAIBCqDAELQYCAgIB4CyEOIAMgB2ogDjYCACAKIA4gCiAOSBshCiANIA4gDSAOShshDSAFQQFqIgUgC0cNAAsMAgsgCyAMTQ0AQX8hD0H4////ByEKQYiAgIB4IQ0gDCECA0AgDyAHIAAgAkECdCIYaigCAEECdCIZaigCACIORwRAIAUqAjgiESAIIA5BBnRqIg8qAjyUIAUqAigiEiAPKgI4lCAFKgIIIhMgDyoCMJQgBSoCGCIUIA8qAjSUkpKSIRUgESAPKgIslCASIA8qAiiUIBMgDyoCIJQgFCAPKgIklJKSkiEWIBEgDyoCHJQgEiAPKgIYlCATIA8qAhCUIBQgDyoCFJSSkpIhFyARIA8qAgyUIBIgDyoCCJQgEyAPKgIAlCAUIA8qAgSUkpKSIREgDiEPCyADIBhqAn8gFSABIBlBAnRqIg4qAgyUIBYgDioCCJQgESAOKgIAlCAXIA4qAgSUkpKSu0QAAAAAAACwQKIiEJlEAAAAAAAA4EFjBEAgEKoMAQtBgICAgHgLIg42AgAgCiAOIAogDkgbIQogDSAOIA0gDkobIQ0gAkEBaiICIAtHDQALDAELQYiAgIB4IQ1B+P///wchCgsgCyAMSwRAIAlBAWuzIA2yIAqyk5UhESAMIQ0DQAJ/IBEgAyANQQJ0aiIBKAIAIAprspQiEotDAAAAT10EQCASqAwBC0GAgICAeAshDiABIA42AgAgBCAOQQJ0aiIBIAEoAgBBAWo2AgAgDUEBaiINIAtHDQALCyAJQQJPBEAgBCgCACENQQEhCgNAIAQgCkECdGoiASABKAIAIA1qIg02AgAgCkEBaiIKIAlHDQALCyAMQQBKBEAgDCEKA0AgBiAKQQFrIgFBAnQiAmogACACaigCADYCACAKQQFLIAEhCg0ACwsgCyAMSgRAIAshCgNAIAYgCyAEIAMgCkEBayIKQQJ0IgFqKAIAQQJ0aiICKAIAIgVrQQJ0aiAAIAFqKAIANgIAIAIgBUEBazYCACAKIAxKDQALCws=";function sortWorker(s){let e,t,n,o,a,r,l,c,u,d,f,g,_,b,B,I,C,R,L,F;function N(k,Q,z,G,O,q,ce){const ne=performance.now();if(!n&&(new Uint32Array(t,l,O.byteLength/F.BytesPerInt).set(O),new Float32Array(t,d,ce.byteLength/F.BytesPerFloat).set(ce),G)){let J;o?J=new Int32Array(t,f,q.byteLength/F.BytesPerInt):J=new Float32Array(t,f,q.byteLength/F.BytesPerFloat),J.set(q)}I||(I=new Uint32Array(R)),new Float32Array(t,B,16).set(z),new Uint32Array(t,_,R).set(I),e.exports.sortIndexes(l,b,f,g,_,B,c,u,d,R,k,Q,r,G,o,a);const ue={sortDone:!0,splatSortCount:k,splatRenderCount:Q,sortTime:0};if(!n){const fe=new Uint32Array(t,c,Q);(!C||C.length<Q)&&(C=new Uint32Array(Q)),C.set(fe),ue.sortedIndexes=C}const pe=performance.now();ue.sortTime=pe-ne,s.postMessage(ue)}s.onmessage=k=>{if(k.data.centers)centers=k.data.centers,sceneIndexes=k.data.sceneIndexes,o?new Int32Array(t,b+k.data.range.from*F.BytesPerInt*4,k.data.range.count*4).set(new Int32Array(centers)):new Float32Array(t,b+k.data.range.from*F.BytesPerFloat*4,k.data.range.count*4).set(new Float32Array(centers)),a&&new Uint32Array(t,u+k.data.range.from*4,k.data.range.count).set(new Uint32Array(sceneIndexes)),L=k.data.range.from+k.data.range.count;else if(k.data.sort){const Q=Math.min(k.data.sort.splatRenderCount||0,L),z=Math.min(k.data.sort.splatSortCount||0,L),G=k.data.sort.usePrecomputedDistances;let O,q,ce;n||(O=k.data.sort.indexesToSort,ce=k.data.sort.transforms,G&&(q=k.data.sort.precomputedDistances)),N(z,Q,k.data.sort.modelViewProj,G,O,q,ce)}else if(k.data.init){F=k.data.init.Constants,r=k.data.init.splatCount,n=k.data.init.useSharedMemory,o=k.data.init.integerBasedSort,a=k.data.init.dynamicMode,R=k.data.init.distanceMapRange,L=0;const Q=o?F.BytesPerInt*4:F.BytesPerFloat*4,z=new Uint8Array(k.data.init.sorterWasmBytes),G=16*F.BytesPerFloat,O=r*F.BytesPerInt,q=r*Q,ce=G,ne=o?r*F.BytesPerInt:r*F.BytesPerFloat,ue=r*F.BytesPerInt,pe=r*F.BytesPerInt,fe=o?R*F.BytesPerInt*2:R*F.BytesPerFloat*2,ee=a?r*F.BytesPerInt:0,J=a?F.MaxScenes*G:0,ye=F.MemoryPageSize*32,Te=O+q+ce+ne+ue+fe+pe+ee+J+ye,xe=Math.floor(Te/F.MemoryPageSize)+1,ve={module:{},env:{memory:new WebAssembly.Memory({initial:xe,maximum:xe,shared:!0})}};WebAssembly.compile(z).then(he=>WebAssembly.instantiate(he,ve)).then(he=>{e=he,l=0,b=l+O,B=b+q,f=B+ce,g=f+ne,_=g+ue,c=_+fe,u=c+pe,d=u+ee,t=ve.env.memory.buffer,n?s.postMessage({sortSetupPhase1Complete:!0,indexesToSortBuffer:t,indexesToSortOffset:l,sortedIndexesBuffer:t,sortedIndexesOffset:c,precomputedDistancesBuffer:t,precomputedDistancesOffset:f,transformsBuffer:t,transformsOffset:d}):s.postMessage({sortSetupPhase1Complete:!0})})}}}function createSortWorker(s,e,t,n,o,a=Constants.DefaultSplatSortDistanceMapPrecision){const r=new Worker(URL.createObjectURL(new Blob(["(",sortWorker.toString(),")(self)"],{type:"application/javascript"})));let l=SorterWasm;const c=isIOS()?getIOSSemever():null;!t&&!e?(l=SorterWasmNoSIMD,c&&c.major<=16&&c.minor<4&&(l=SorterWasmNoSIMDNonShared)):t?e||c&&c.major<=16&&c.minor<4&&(l=SorterWasmNonShared):l=SorterWasmNoSIMD;const u=atob(l),d=new Uint8Array(u.length);for(let f=0;f<u.length;f++)d[f]=u.charCodeAt(f);return r.postMessage({init:{sorterWasmBytes:d.buffer,splatCount:s,useSharedMemory:e,integerBasedSort:n,dynamicMode:o,distanceMapRange:1<<a,Constants:{BytesPerFloat:Constants.BytesPerFloat,BytesPerInt:Constants.BytesPerInt,MemoryPageSize:Constants.MemoryPageSize,MaxScenes:Constants.MaxScenes}}}),r}const WebXRMode={None:0,VR:1,AR:2};let VRButton$1=class Cr{static createButton(e,t={}){const n=document.createElement("button");function o(){let u=null;async function d(_){_.addEventListener("end",f),await e.xr.setSession(_),n.textContent="EXIT VR",u=_}function f(){u.removeEventListener("end",f),n.textContent="ENTER VR",u=null}n.style.display="",n.style.cursor="pointer",n.style.left="calc(50% - 50px)",n.style.width="100px",n.textContent="ENTER VR";const g={...t,optionalFeatures:["local-floor","bounded-floor","layers",...t.optionalFeatures||[]]};n.onmouseenter=function(){n.style.opacity="1.0"},n.onmouseleave=function(){n.style.opacity="0.5"},n.onclick=function(){u===null?navigator.xr.requestSession("immersive-vr",g).then(d):(u.end(),navigator.xr.offerSession!==void 0&&navigator.xr.offerSession("immersive-vr",g).then(d).catch(_=>{console.warn(_)}))},navigator.xr.offerSession!==void 0&&navigator.xr.offerSession("immersive-vr",g).then(d).catch(_=>{console.warn(_)})}function a(){n.style.display="",n.style.cursor="auto",n.style.left="calc(50% - 75px)",n.style.width="150px",n.onmouseenter=null,n.onmouseleave=null,n.onclick=null}function r(){a(),n.textContent="VR NOT SUPPORTED"}function l(u){a(),console.warn("Exception when trying to call xr.isSessionSupported",u),n.textContent="VR NOT ALLOWED"}function c(u){u.style.position="absolute",u.style.bottom="20px",u.style.padding="12px 6px",u.style.border="1px solid #fff",u.style.borderRadius="4px",u.style.background="rgba(0,0,0,0.1)",u.style.color="#fff",u.style.font="normal 13px sans-serif",u.style.textAlign="center",u.style.opacity="0.5",u.style.outline="none",u.style.zIndex="999"}if("xr"in navigator)return n.id="VRButton",n.style.display="none",c(n),navigator.xr.isSessionSupported("immersive-vr").then(function(u){u?o():r(),u&&Cr.xrSessionIsGranted&&n.click()}).catch(l),n;{const u=document.createElement("a");return window.isSecureContext===!1?(u.href=document.location.href.replace(/^http:/,"https:"),u.innerHTML="WEBXR NEEDS HTTPS"):(u.href="https://immersiveweb.dev/",u.innerHTML="WEBXR NOT AVAILABLE"),u.style.left="calc(50% - 90px)",u.style.width="180px",u.style.textDecoration="none",c(u),u}}static registerSessionGrantedListener(){if(typeof navigator<"u"&&"xr"in navigator){if(/WebXRViewer\//i.test(navigator.userAgent))return;navigator.xr.addEventListener("sessiongranted",()=>{Cr.xrSessionIsGranted=!0})}}};VRButton$1.xrSessionIsGranted=!1;VRButton$1.registerSessionGrantedListener();class ARButton{static createButton(e,t={}){const n=document.createElement("button");function o(){if(t.domOverlay===void 0){const g=document.createElement("div");g.style.display="none",document.body.appendChild(g);const _=document.createElementNS("http://www.w3.org/2000/svg","svg");_.setAttribute("width",38),_.setAttribute("height",38),_.style.position="absolute",_.style.right="20px",_.style.top="20px",_.addEventListener("click",function(){u.end()}),g.appendChild(_);const b=document.createElementNS("http://www.w3.org/2000/svg","path");b.setAttribute("d","M 12,12 L 28,28 M 28,12 12,28"),b.setAttribute("stroke","#fff"),b.setAttribute("stroke-width",2),_.appendChild(b),t.optionalFeatures===void 0&&(t.optionalFeatures=[]),t.optionalFeatures.push("dom-overlay"),t.domOverlay={root:g}}let u=null;async function d(g){g.addEventListener("end",f),e.xr.setReferenceSpaceType("local"),await e.xr.setSession(g),n.textContent="STOP AR",t.domOverlay.root.style.display="",u=g}function f(){u.removeEventListener("end",f),n.textContent="START AR",t.domOverlay.root.style.display="none",u=null}n.style.display="",n.style.cursor="pointer",n.style.left="calc(50% - 50px)",n.style.width="100px",n.textContent="START AR",n.onmouseenter=function(){n.style.opacity="1.0"},n.onmouseleave=function(){n.style.opacity="0.5"},n.onclick=function(){u===null?navigator.xr.requestSession("immersive-ar",t).then(d):(u.end(),navigator.xr.offerSession!==void 0&&navigator.xr.offerSession("immersive-ar",t).then(d).catch(g=>{console.warn(g)}))},navigator.xr.offerSession!==void 0&&navigator.xr.offerSession("immersive-ar",t).then(d).catch(g=>{console.warn(g)})}function a(){n.style.display="",n.style.cursor="auto",n.style.left="calc(50% - 75px)",n.style.width="150px",n.onmouseenter=null,n.onmouseleave=null,n.onclick=null}function r(){a(),n.textContent="AR NOT SUPPORTED"}function l(u){a(),console.warn("Exception when trying to call xr.isSessionSupported",u),n.textContent="AR NOT ALLOWED"}function c(u){u.style.position="absolute",u.style.bottom="20px",u.style.padding="12px 6px",u.style.border="1px solid #fff",u.style.borderRadius="4px",u.style.background="rgba(0,0,0,0.1)",u.style.color="#fff",u.style.font="normal 13px sans-serif",u.style.textAlign="center",u.style.opacity="0.5",u.style.outline="none",u.style.zIndex="999"}if("xr"in navigator)return n.id="ARButton",n.style.display="none",c(n),navigator.xr.isSessionSupported("immersive-ar").then(function(u){u?o():r()}).catch(l),n;{const u=document.createElement("a");return window.isSecureContext===!1?(u.href=document.location.href.replace(/^http:/,"https:"),u.innerHTML="WEBXR NEEDS HTTPS"):(u.href="https://immersiveweb.dev/",u.innerHTML="WEBXR NOT AVAILABLE"),u.style.left="calc(50% - 90px)",u.style.width="180px",u.style.textDecoration="none",c(u),u}}}const RenderMode={Always:0,Never:2},THREE_CAMERA_FOV=50,MINIMUM_DISTANCE_TO_NEW_FOCAL_POINT=.75,MIN_SPLAT_COUNT_TO_SHOW_SPLAT_TREE_LOADING_SPINNER=15e5,FOCUS_MARKER_FADE_IN_SPEED=10,FOCUS_MARKER_FADE_OUT_SPEED=2.5,CONSECUTIVE_RENDERED_FRAMES_FOR_FPS_CALCULATION=60,_i=class _i{constructor(e={}){At(this,"onKeyDown",function(){const e=new Vector3,t=new Matrix4,n=new Matrix4;return function(o){switch(e.set(0,0,-1),e.transformDirection(this.camera.matrixWorld),t.makeRotationAxis(e,Math.PI/128),n.makeRotationAxis(e,-Math.PI/128),o.code){case"KeyG":this.focalAdjustment+=.02,this.forceRenderNextFrame();break;case"KeyF":this.focalAdjustment-=.02,this.forceRenderNextFrame();break;case"ArrowLeft":this.camera.up.transformDirection(t);break;case"ArrowRight":this.camera.up.transformDirection(n);break;case"KeyC":this.showMeshCursor=!this.showMeshCursor;break;case"KeyU":this.showControlPlane=!this.showControlPlane;break;case"KeyI":this.showInfo=!this.showInfo,this.showInfo?this.infoPanel.show():this.infoPanel.hide();break;case"KeyO":this.usingExternalCamera||this.setOrthographicMode(!this.camera.isOrthographicCamera);break;case"KeyP":this.usingExternalCamera||this.splatMesh.setPointCloudModeEnabled(!this.splatMesh.getPointCloudModeEnabled());break;case"Equal":this.usingExternalCamera||this.splatMesh.setSplatScale(this.splatMesh.getSplatScale()+.05);break;case"Minus":this.usingExternalCamera||this.splatMesh.setSplatScale(Math.max(this.splatMesh.getSplatScale()-.05,0));break}}}());At(this,"onMouseUp",function(){const e=new Vector2;return function(t){e.copy(this.mousePosition).sub(this.mouseDownPosition),getCurrentTime()-this.mouseDownTime<.5&&e.length()<2&&this.onMouseClick(t)}}());At(this,"checkForFocalPointChange",function(){const e=new Vector2,t=new Vector3,n=[];return function(){if(!this.transitioningCameraTarget&&(this.getRenderDimensions(e),n.length=0,this.raycaster.setFromCameraAndScreenPosition(this.camera,this.mousePosition,e),this.raycaster.intersectSplatMesh(this.splatMesh,n),n.length>0)){const a=n[0].origin;t.copy(a).sub(this.camera.position),t.length()>MINIMUM_DISTANCE_TO_NEW_FOCAL_POINT&&(this.previousCameraTarget.copy(this.controls.target),this.nextCameraTarget.copy(a),this.transitioningCameraTarget=!0,this.transitioningCameraTargetStartTime=getCurrentTime())}}}());At(this,"updateSplatMesh",function(){const e=new Vector2;return function(){if(!this.splatMesh)return;if(this.splatMesh.getSplatCount()>0){this.splatMesh.updateVisibleRegionFadeDistance(this.sceneRevealMode),this.splatMesh.updateTransforms(),this.getRenderDimensions(e);const n=this.camera.projectionMatrix.elements[0]*.5*this.devicePixelRatio*e.x,o=this.camera.projectionMatrix.elements[5]*.5*this.devicePixelRatio*e.y,a=this.camera.isOrthographicCamera?1/this.devicePixelRatio:1,r=this.focalAdjustment*a,l=1/r;this.adjustForWebXRStereo(e),this.splatMesh.updateUniforms(e,n*r,o*r,this.camera.isOrthographicCamera,this.camera.zoom||1,l)}}}());At(this,"addSplatBuffers",function(){return function(e,t=[],n=!0,o=!0,a=!0,r=!1,l=!1,c=!0){if(this.isDisposingOrDisposed())return Promise.resolve();let u=null;const d=()=>{u!==null&&(this.loadingSpinner.removeTask(u),u=null)};return this.splatRenderReady=!1,new Promise(f=>{o&&(u=this.loadingSpinner.addTask("Processing splats...")),delayedExecute(()=>{if(this.isDisposingOrDisposed())f();else{const g=this.addSplatBuffersToMesh(e,t,n,a,r,c),_=this.splatMesh.getMaxSplatCount();this.sortWorker&&this.sortWorker.maxSplatCount!==_&&this.disposeSortWorker(),this.gpuAcceleratedSort||this.preSortMessages.push({centers:g.centers.buffer,sceneIndexes:g.sceneIndexes.buffer,range:{from:g.from,to:g.to,count:g.count}}),(!this.sortWorker&&_>0?this.setupSortWorker(this.splatMesh):Promise.resolve()).then(()=>{this.isDisposingOrDisposed()||this.runSplatSort(!0,!0).then(B=>{!this.sortWorker||!B?(this.splatRenderReady=!0,d(),f()):(l?this.splatRenderReady=!0:this.runAfterNextSort.push(()=>{this.splatRenderReady=!0}),this.runAfterNextSort.push(()=>{d(),f()}))})})}},!0)})}}());At(this,"addSplatBuffersToMesh",function(){let e;return function(t,n,o=!0,a=!1,r=!1,l=!0){if(this.isDisposingOrDisposed())return;let c=[],u=[];r||(c=this.splatMesh.scenes.map(_=>_.splatBuffer)||[],u=this.splatMesh.sceneOptions?this.splatMesh.sceneOptions.map(_=>_):[]),c.push(...t),u.push(...n),this.renderer&&this.splatMesh.setRenderer(this.renderer);const d=_=>{if(this.isDisposingOrDisposed())return;const b=this.splatMesh.getSplatCount();a&&b>=MIN_SPLAT_COUNT_TO_SHOW_SPLAT_TREE_LOADING_SPINNER&&!_&&!e&&(this.loadingSpinner.setMinimized(!0,!0),e=this.loadingSpinner.addTask("Optimizing data structures..."))},f=_=>{this.isDisposingOrDisposed()||_&&e&&(this.loadingSpinner.removeTask(e),e=null)},g=this.splatMesh.build(c,u,!0,o,d,f,l);return o&&this.freeIntermediateSplatData&&this.splatMesh.freeIntermediateSplatData(),g}}());At(this,"shouldRender",function(){let e=0;const t=new Vector3,n=new Quaternion,o=1e-4;return function(){if(!this.initialized||!this.splatRenderReady||this.isDisposingOrDisposed())return!1;let a=!1,r=!1;if(this.camera){const l=this.camera.position,c=this.camera.quaternion;r=Math.abs(l.x-t.x)>o||Math.abs(l.y-t.y)>o||Math.abs(l.z-t.z)>o||Math.abs(c.x-n.x)>o||Math.abs(c.y-n.y)>o||Math.abs(c.z-n.z)>o||Math.abs(c.w-n.w)>o}return a=this.renderMode!==RenderMode.Never&&(e===0||this.splatMesh.visibleRegionChanging||r||this.renderMode===RenderMode.Always||this.dynamicMode===!0||this.renderNextFrame),this.camera&&(t.copy(this.camera.position),n.copy(this.camera.quaternion)),e++,a}}());At(this,"render",function(){return function(){if(!this.initialized||!this.splatRenderReady||this.isDisposingOrDisposed())return;const e=n=>{for(let o of n.children)if(o.visible)return!0;return!1},t=this.renderer.autoClear;e(this.threeScene)&&(this.renderer.render(this.threeScene,this.camera),this.renderer.autoClear=!1),this.renderer.render(this.splatMesh,this.camera),this.renderer.autoClear=!1,this.sceneHelper.getFocusMarkerOpacity()>0&&this.renderer.render(this.sceneHelper.focusMarker,this.camera),this.showControlPlane&&this.renderer.render(this.sceneHelper.controlPlane,this.camera),this.renderer.autoClear=t}}());At(this,"updateFPS",function(){let e=getCurrentTime(),t=0;return function(){if(this.consecutiveRenderFrames>CONSECUTIVE_RENDERED_FRAMES_FOR_FPS_CALCULATION){const n=getCurrentTime();n-e>=1?(this.currentFPS=t,t=0,e=n):t++}else this.currentFPS=null}}());At(this,"updateForRendererSizeChanges",function(){const e=new Vector2,t=new Vector2;let n;return function(){this.usingExternalCamera||(this.renderer.getSize(t),(n===void 0||n!==this.camera.isOrthographicCamera||t.x!==e.x||t.y!==e.y)&&(this.camera.isOrthographicCamera?(this.camera.left=-t.x/2,this.camera.right=t.x/2,this.camera.top=t.y/2,this.camera.bottom=-t.y/2):this.camera.aspect=t.x/t.y,this.camera.updateProjectionMatrix(),e.copy(t),n=this.camera.isOrthographicCamera))}}());At(this,"timingSensitiveUpdates",function(){let e;return function(){const t=getCurrentTime();e||(e=t);const n=t-e;this.updateCameraTransition(t),this.updateFocusMarker(n),e=t}}());At(this,"updateCameraTransition",function(){let e=new Vector3,t=new Vector3,n=new Vector3;return function(o){if(this.transitioningCameraTarget){t.copy(this.previousCameraTarget).sub(this.camera.position).normalize(),n.copy(this.nextCameraTarget).sub(this.camera.position).normalize();const a=Math.acos(t.dot(n)),l=(a/(Math.PI/3)*.65+.3)/a*(o-this.transitioningCameraTargetStartTime);e.copy(this.previousCameraTarget).lerp(this.nextCameraTarget,l),this.camera.lookAt(e),this.controls.target.copy(e),l>=1&&(this.transitioningCameraTarget=!1)}}}());At(this,"updateFocusMarker",function(){const e=new Vector2;let t=!1;return function(n){if(this.getRenderDimensions(e),this.transitioningCameraTarget){this.sceneHelper.setFocusMarkerVisibility(!0);const o=Math.max(this.sceneHelper.getFocusMarkerOpacity(),0);let a=Math.min(o+FOCUS_MARKER_FADE_IN_SPEED*n,1);this.sceneHelper.setFocusMarkerOpacity(a),this.sceneHelper.updateFocusMarker(this.nextCameraTarget,this.camera,e),t=!0,this.forceRenderNextFrame()}else{let o;if(t?o=1:o=Math.min(this.sceneHelper.getFocusMarkerOpacity(),1),o>0){this.sceneHelper.updateFocusMarker(this.nextCameraTarget,this.camera,e);let a=Math.max(o-FOCUS_MARKER_FADE_OUT_SPEED*n,0);this.sceneHelper.setFocusMarkerOpacity(a),a===0&&this.sceneHelper.setFocusMarkerVisibility(!1)}o>0&&this.forceRenderNextFrame(),t=!1}}}());At(this,"updateMeshCursor",function(){const e=[],t=new Vector2;return function(){this.showMeshCursor?(this.forceRenderNextFrame(),this.getRenderDimensions(t),e.length=0,this.raycaster.setFromCameraAndScreenPosition(this.camera,this.mousePosition,t),this.raycaster.intersectSplatMesh(this.splatMesh,e),e.length>0?(this.sceneHelper.setMeshCursorVisibility(!0),this.sceneHelper.positionAndOrientMeshCursor(e[0].origin,this.camera)):this.sceneHelper.setMeshCursorVisibility(!1)):(this.sceneHelper.getMeschCursorVisibility()&&this.forceRenderNextFrame(),this.sceneHelper.setMeshCursorVisibility(!1))}}());At(this,"updateInfoPanel",function(){const e=new Vector2;return function(){if(!this.showInfo)return;const t=this.splatMesh.getSplatCount();this.getRenderDimensions(e);const n=this.controls?this.controls.target:null,o=this.showMeshCursor?this.sceneHelper.meshCursor.position:null,a=t>0?this.splatRenderCount/t*100:0;this.infoPanel.update(e,this.camera.position,n,this.camera.up,this.camera.isOrthographicCamera,o,this.currentFPS||"N/A",t,this.splatRenderCount,a,this.lastSortTime,this.focalAdjustment,this.splatMesh.getSplatScale(),this.splatMesh.getPointCloudModeEnabled())}}());At(this,"runSplatSort",function(){const e=new Matrix4,t=[],n=new Vector3(0,0,-1),o=new Vector3(0,0,-1),a=new Vector3,r=new Vector3,l=[],c=[{angleThreshold:.55,sortFractions:[.125,.33333,.75]},{angleThreshold:.65,sortFractions:[.33333,.66667]},{angleThreshold:.8,sortFractions:[.5]}];return function(u=!1,d=!1){if(!this.initialized)return Promise.resolve(!1);if(this.sortRunning)return Promise.resolve(!0);if(this.splatMesh.getSplatCount()<=0)return this.splatRenderCount=0,Promise.resolve(!1);let f=0,g=0,_=!1,b=!1;if(o.set(0,0,-1).applyQuaternion(this.camera.quaternion),f=o.dot(n),g=r.copy(this.camera.position).sub(a).length(),!u&&!this.splatMesh.dynamicMode&&l.length===0&&(f<=.99&&(_=!0),g>=1&&(b=!0),!_&&!b))return Promise.resolve(!1);this.sortRunning=!0;let{splatRenderCount:B,shouldSortAll:I}=this.gatherSceneNodesForSort();I=I||d,this.splatRenderCount=B,e.copy(this.camera.matrixWorld).invert();const C=this.perspectiveCamera||this.camera;e.premultiply(C.projectionMatrix),this.splatMesh.dynamicMode||e.multiply(this.splatMesh.matrixWorld);let R=Promise.resolve(!0);return this.gpuAcceleratedSort&&(l.length<=1||l.length%2===0)&&(R=this.splatMesh.computeDistancesOnGPU(e,this.sortWorkerPrecomputedDistances)),R.then(()=>{if(l.length===0)if(this.splatMesh.dynamicMode||I)l.push(this.splatRenderCount);else{for(let N of c)if(f<N.angleThreshold){for(let k of N.sortFractions)l.push(Math.floor(this.splatRenderCount*k));break}l.push(this.splatRenderCount)}let L=Math.min(l.shift(),this.splatRenderCount);this.splatSortCount=L,t[0]=this.camera.position.x,t[1]=this.camera.position.y,t[2]=this.camera.position.z;const F={modelViewProj:e.elements,cameraPosition:t,splatRenderCount:this.splatRenderCount,splatSortCount:L,usePrecomputedDistances:this.gpuAcceleratedSort};return this.splatMesh.dynamicMode&&this.splatMesh.fillTransformsArray(this.sortWorkerTransforms),this.sharedMemoryForWorkers||(F.indexesToSort=this.sortWorkerIndexesToSort,F.transforms=this.sortWorkerTransforms,this.gpuAcceleratedSort&&(F.precomputedDistances=this.sortWorkerPrecomputedDistances)),this.sortPromise=new Promise(N=>{this.sortPromiseResolver=N}),this.preSortMessages.length>0&&(this.preSortMessages.forEach(N=>{this.sortWorker.postMessage(N)}),this.preSortMessages=[]),this.sortWorker.postMessage({sort:F}),l.length===0&&(a.copy(this.camera.position),n.copy(o)),!0}),R}}());At(this,"gatherSceneNodesForSort",function(){const e=[];let t=null;const n=new Vector3,o=new Vector3,a=new Vector3,r=new Matrix4,l=new Matrix4,c=new Matrix4,u=new Vector3,d=new Vector3(0,0,-1),f=new Vector3,g=_=>f.copy(_.max).sub(_.min).length();return function(_=!1){this.getRenderDimensions(u);const b=u.y/2/Math.tan(this.camera.fov/2*MathUtils.DEG2RAD),B=Math.atan(u.x/2/b),I=Math.atan(u.y/2/b),C=Math.cos(B),R=Math.cos(I),L=this.splatMesh.getSplatTree();if(L){l.copy(this.camera.matrixWorld).invert(),this.splatMesh.dynamicMode||l.multiply(this.splatMesh.matrixWorld);let F=0,N=0;for(let Q=0;Q<L.subTrees.length;Q++){const z=L.subTrees[Q];r.copy(l),this.splatMesh.dynamicMode&&(this.splatMesh.getSceneTransform(Q,c),r.multiply(c));const G=z.nodesWithIndexes.length;for(let O=0;O<G;O++){const q=z.nodesWithIndexes[O];if(!q.data||!q.data.indexes||q.data.indexes.length===0)continue;a.copy(q.center).applyMatrix4(r);const ce=a.length();a.normalize(),n.copy(a).setX(0).normalize(),o.copy(a).setY(0).normalize();const ne=d.dot(o),ue=d.dot(n),pe=g(q),fe=ue<R-.6,ee=ne<C-.6;!_&&(ee||fe)&&ce>pe||(N+=q.data.indexes.length,e[F]=q,q.data.distanceToNode=ce,F++)}}e.length=F,e.sort((Q,z)=>Q.data.distanceToNode<z.data.distanceToNode?-1:1);let k=N*Constants.BytesPerInt;for(let Q=0;Q<F;Q++){const z=e[Q],G=z.data.indexes.length,O=G*Constants.BytesPerInt;new Uint32Array(this.sortWorkerIndexesToSort.buffer,k-O,G).set(z.data.indexes),k-=O}return{splatRenderCount:N,shouldSortAll:!1}}else{const F=this.splatMesh.getSplatCount();if(!t||t.length!==F){t=new Uint32Array(F);for(let N=0;N<F;N++)t[N]=N}return this.sortWorkerIndexesToSort.set(t),{splatRenderCount:F,shouldSortAll:!0}}}}());if(e.cameraUp||(e.cameraUp=[0,1,0]),this.cameraUp=new Vector3().fromArray(e.cameraUp),e.initialCameraPosition||(e.initialCameraPosition=[0,10,15]),this.initialCameraPosition=new Vector3().fromArray(e.initialCameraPosition),e.initialCameraLookAt||(e.initialCameraLookAt=[0,0,0]),this.initialCameraLookAt=new Vector3().fromArray(e.initialCameraLookAt),this.dropInMode=e.dropInMode||!1,(e.selfDrivenMode===void 0||e.selfDrivenMode===null)&&(e.selfDrivenMode=!0),this.selfDrivenMode=e.selfDrivenMode&&!this.dropInMode,this.selfDrivenUpdateFunc=this.selfDrivenUpdate.bind(this),e.useBuiltInControls===void 0&&(e.useBuiltInControls=!0),this.useBuiltInControls=e.useBuiltInControls,this.rootElement=e.rootElement,this.ignoreDevicePixelRatio=e.ignoreDevicePixelRatio||!1,this.devicePixelRatio=this.ignoreDevicePixelRatio?1:window.devicePixelRatio||1,this.halfPrecisionCovariancesOnGPU=e.halfPrecisionCovariancesOnGPU||!1,this.threeScene=e.threeScene,this.renderer=e.renderer,this.camera=e.camera,this.gpuAcceleratedSort=e.gpuAcceleratedSort||!1,(e.integerBasedSort===void 0||e.integerBasedSort===null)&&(e.integerBasedSort=!0),this.integerBasedSort=e.integerBasedSort,(e.sharedMemoryForWorkers===void 0||e.sharedMemoryForWorkers===null)&&(e.sharedMemoryForWorkers=!0),this.sharedMemoryForWorkers=e.sharedMemoryForWorkers,this.dynamicScene=!!e.dynamicScene,this.antialiased=e.antialiased||!1,this.kernel2DSize=e.kernel2DSize===void 0?.3:e.kernel2DSize,this.webXRMode=e.webXRMode||WebXRMode.None,this.webXRMode!==WebXRMode.None&&(this.gpuAcceleratedSort=!1),this.webXRActive=!1,this.webXRSessionInit=e.webXRSessionInit||{},this.renderMode=e.renderMode||RenderMode.Always,this.sceneRevealMode=e.sceneRevealMode||SceneRevealMode.Default,this.focalAdjustment=e.focalAdjustment||1,this.maxScreenSpaceSplatSize=e.maxScreenSpaceSplatSize||1024,this.logLevel=e.logLevel||LogLevel.None,this.sphericalHarmonicsDegree=e.sphericalHarmonicsDegree||0,this.enableOptionalEffects=e.enableOptionalEffects||!1,(e.enableSIMDInSort===void 0||e.enableSIMDInSort===null)&&(e.enableSIMDInSort=!0),this.enableSIMDInSort=e.enableSIMDInSort,(e.inMemoryCompressionLevel===void 0||e.inMemoryCompressionLevel===null)&&(e.inMemoryCompressionLevel=0),this.inMemoryCompressionLevel=e.inMemoryCompressionLevel,(e.optimizeSplatData===void 0||e.optimizeSplatData===null)&&(e.optimizeSplatData=!0),this.optimizeSplatData=e.optimizeSplatData,(e.freeIntermediateSplatData===void 0||e.freeIntermediateSplatData===null)&&(e.freeIntermediateSplatData=!1),this.freeIntermediateSplatData=e.freeIntermediateSplatData,isIOS()){const n=getIOSSemever();n.major<17&&(this.enableSIMDInSort=!1),n.major<16&&(this.sharedMemoryForWorkers=!1)}(e.splatRenderMode===void 0||e.splatRenderMode===null)&&(e.splatRenderMode=SplatRenderMode.ThreeD),this.splatRenderMode=e.splatRenderMode,this.sceneFadeInRateMultiplier=e.sceneFadeInRateMultiplier||1,this.splatSortDistanceMapPrecision=e.splatSortDistanceMapPrecision||Constants.DefaultSplatSortDistanceMapPrecision;const t=this.integerBasedSort?20:24;this.splatSortDistanceMapPrecision=clamp(this.splatSortDistanceMapPrecision,10,t),this.onSplatMeshChangedCallback=null,this.createSplatMesh(),this.controls=null,this.perspectiveControls=null,this.orthographicControls=null,this.orthographicCamera=null,this.perspectiveCamera=null,this.showMeshCursor=!1,this.showControlPlane=!1,this.showInfo=!1,this.sceneHelper=null,this.sortWorker=null,this.sortRunning=!1,this.splatRenderCount=0,this.splatSortCount=0,this.lastSplatSortCount=0,this.sortWorkerIndexesToSort=null,this.sortWorkerSortedIndexes=null,this.sortWorkerPrecomputedDistances=null,this.sortWorkerTransforms=null,this.preSortMessages=[],this.runAfterNextSort=[],this.selfDrivenModeRunning=!1,this.splatRenderReady=!1,this.raycaster=new Raycaster,this.infoPanel=null,this.startInOrthographicMode=!1,this.currentFPS=0,this.lastSortTime=0,this.consecutiveRenderFrames=0,this.previousCameraTarget=new Vector3,this.nextCameraTarget=new Vector3,this.mousePosition=new Vector2,this.mouseDownPosition=new Vector2,this.mouseDownTime=null,this.resizeObserver=null,this.mouseMoveListener=null,this.mouseDownListener=null,this.mouseUpListener=null,this.keyDownListener=null,this.sortPromise=null,this.sortPromiseResolver=null,this.splatSceneDownloadPromises={},this.splatSceneDownloadAndBuildPromise=null,this.splatSceneRemovalPromise=null,this.loadingSpinner=new LoadingSpinner(null,this.rootElement||document.body),this.loadingSpinner.hide(),this.loadingProgressBar=new LoadingProgressBar(this.rootElement||document.body),this.loadingProgressBar.hide(),this.infoPanel=new InfoPanel(this.rootElement||document.body),this.infoPanel.hide(),this.usingExternalCamera=!!(this.dropInMode||this.camera),this.usingExternalRenderer=!!(this.dropInMode||this.renderer),this.initialized=!1,this.disposing=!1,this.disposed=!1,this.disposePromise=null,this.dropInMode||this.init()}createSplatMesh(){this.splatMesh=new SplatMesh$1(this.splatRenderMode,this.dynamicScene,this.enableOptionalEffects,this.halfPrecisionCovariancesOnGPU,this.devicePixelRatio,this.gpuAcceleratedSort,this.integerBasedSort,this.antialiased,this.maxScreenSpaceSplatSize,this.logLevel,this.sphericalHarmonicsDegree,this.sceneFadeInRateMultiplier,this.kernel2DSize),this.splatMesh.frustumCulled=!1,this.onSplatMeshChangedCallback&&this.onSplatMeshChangedCallback()}init(){this.initialized||(this.rootElement||(this.usingExternalRenderer?this.rootElement=this.renderer.domElement||document.body:(this.rootElement=document.createElement("div"),this.rootElement.style.width="100%",this.rootElement.style.height="100%",this.rootElement.style.position="absolute",document.body.appendChild(this.rootElement))),this.setupCamera(),this.setupRenderer(),this.setupWebXR(this.webXRSessionInit),this.setupControls(),this.setupEventHandlers(),this.threeScene=this.threeScene||new Scene,this.sceneHelper=new SceneHelper(this.threeScene),this.sceneHelper.setupMeshCursor(),this.sceneHelper.setupFocusMarker(),this.sceneHelper.setupControlPlane(),this.loadingProgressBar.setContainer(this.rootElement),this.loadingSpinner.setContainer(this.rootElement),this.infoPanel.setContainer(this.rootElement),this.initialized=!0)}setupCamera(){if(!this.usingExternalCamera){const e=new Vector2;this.getRenderDimensions(e),this.perspectiveCamera=new PerspectiveCamera(THREE_CAMERA_FOV,e.x/e.y,.1,1e3),this.orthographicCamera=new OrthographicCamera(e.x/-2,e.x/2,e.y/2,e.y/-2,.1,1e3),this.camera=this.startInOrthographicMode?this.orthographicCamera:this.perspectiveCamera,this.camera.position.copy(this.initialCameraPosition),this.camera.up.copy(this.cameraUp).normalize(),this.camera.lookAt(this.initialCameraLookAt)}}setupRenderer(){if(!this.usingExternalRenderer){const e=new Vector2;this.getRenderDimensions(e),this.renderer=new WebGLRenderer({antialias:!1,precision:"highp"}),this.renderer.setPixelRatio(this.devicePixelRatio),this.renderer.autoClear=!0,this.renderer.setClearColor(new Color(0),0),this.renderer.setSize(e.x,e.y),this.resizeObserver=new ResizeObserver(()=>{this.getRenderDimensions(e),this.renderer.setSize(e.x,e.y),this.forceRenderNextFrame()}),this.resizeObserver.observe(this.rootElement),this.rootElement.appendChild(this.renderer.domElement)}}setupWebXR(e){this.webXRMode&&(this.webXRMode===WebXRMode.VR?this.rootElement.appendChild(VRButton$1.createButton(this.renderer,e)):this.webXRMode===WebXRMode.AR&&this.rootElement.appendChild(ARButton.createButton(this.renderer,e)),this.renderer.xr.addEventListener("sessionstart",t=>{this.webXRActive=!0}),this.renderer.xr.addEventListener("sessionend",t=>{this.webXRActive=!1}),this.renderer.xr.enabled=!0,this.camera.position.copy(this.initialCameraPosition),this.camera.up.copy(this.cameraUp).normalize(),this.camera.lookAt(this.initialCameraLookAt))}setupControls(){if(this.useBuiltInControls&&this.webXRMode===WebXRMode.None){this.usingExternalCamera?this.camera.isOrthographicCamera?this.orthographicControls=new OrbitControls$1(this.camera,this.renderer.domElement):this.perspectiveControls=new OrbitControls$1(this.camera,this.renderer.domElement):(this.perspectiveControls=new OrbitControls$1(this.perspectiveCamera,this.renderer.domElement),this.orthographicControls=new OrbitControls$1(this.orthographicCamera,this.renderer.domElement));for(let e of[this.orthographicControls,this.perspectiveControls])e&&(e.listenToKeyEvents(window),e.rotateSpeed=.5,e.maxPolarAngle=Math.PI*.75,e.minPolarAngle=.1,e.enableDamping=!0,e.dampingFactor=.05,e.target.copy(this.initialCameraLookAt),e.update());this.controls=this.camera.isOrthographicCamera?this.orthographicControls:this.perspectiveControls,this.controls.update()}}setupEventHandlers(){this.useBuiltInControls&&this.webXRMode===WebXRMode.None&&(this.mouseMoveListener=this.onMouseMove.bind(this),this.renderer.domElement.addEventListener("pointermove",this.mouseMoveListener,!1),this.mouseDownListener=this.onMouseDown.bind(this),this.renderer.domElement.addEventListener("pointerdown",this.mouseDownListener,!1),this.mouseUpListener=this.onMouseUp.bind(this),this.renderer.domElement.addEventListener("pointerup",this.mouseUpListener,!1),this.keyDownListener=this.onKeyDown.bind(this),window.addEventListener("keydown",this.keyDownListener,!1))}removeEventHandlers(){this.useBuiltInControls&&(this.renderer.domElement.removeEventListener("pointermove",this.mouseMoveListener),this.mouseMoveListener=null,this.renderer.domElement.removeEventListener("pointerdown",this.mouseDownListener),this.mouseDownListener=null,this.renderer.domElement.removeEventListener("pointerup",this.mouseUpListener),this.mouseUpListener=null,window.removeEventListener("keydown",this.keyDownListener),this.keyDownListener=null)}setRenderMode(e){this.renderMode=e}setActiveSphericalHarmonicsDegrees(e){this.splatMesh.material.uniforms.sphericalHarmonicsDegree.value=e,this.splatMesh.material.uniformsNeedUpdate=!0}onSplatMeshChanged(e){this.onSplatMeshChangedCallback=e}onMouseMove(e){this.mousePosition.set(e.offsetX,e.offsetY)}onMouseDown(){this.mouseDownPosition.copy(this.mousePosition),this.mouseDownTime=getCurrentTime()}onMouseClick(e){this.mousePosition.set(e.offsetX,e.offsetY),this.checkForFocalPointChange()}getRenderDimensions(e){this.rootElement?(e.x=this.rootElement.offsetWidth,e.y=this.rootElement.offsetHeight):this.renderer.getSize(e)}setOrthographicMode(e){if(e===this.camera.isOrthographicCamera)return;const t=this.camera,n=e?this.orthographicCamera:this.perspectiveCamera;if(n.position.copy(t.position),n.up.copy(t.up),n.rotation.copy(t.rotation),n.quaternion.copy(t.quaternion),n.matrix.copy(t.matrix),this.camera=n,this.controls){const o=l=>{l.saveState(),l.reset()},a=this.controls,r=e?this.orthographicControls:this.perspectiveControls;o(r),o(a),r.target.copy(a.target),e?_i.setCameraZoomFromPosition(n,t,a):_i.setCameraPositionFromZoom(n,t,r),this.controls=r,this.camera.lookAt(this.controls.target)}}adjustForWebXRStereo(e){if(this.camera&&this.webXRActive){const n=this.renderer.xr.getCamera().projectionMatrix.elements[0],o=this.camera.projectionMatrix.elements[0];e.x*=o/n}}isLoadingOrUnloading(){return Object.keys(this.splatSceneDownloadPromises).length>0||this.splatSceneDownloadAndBuildPromise!==null||this.splatSceneRemovalPromise!==null}isDisposingOrDisposed(){return this.disposing||this.disposed}addSplatSceneDownloadPromise(e){this.splatSceneDownloadPromises[e.id]=e}removeSplatSceneDownloadPromise(e){delete this.splatSceneDownloadPromises[e.id]}setSplatSceneDownloadAndBuildPromise(e){this.splatSceneDownloadAndBuildPromise=e}clearSplatSceneDownloadAndBuildPromise(){this.splatSceneDownloadAndBuildPromise=null}addSplatScene(e,t={}){if(this.isLoadingOrUnloading())throw new Error("Cannot add splat scene while another load or unload is already in progress.");if(this.isDisposingOrDisposed())throw new Error("Cannot add splat scene after dispose() is called.");t.progressiveLoad&&this.splatMesh.scenes&&this.splatMesh.scenes.length>0&&(console.log('addSplatScene(): "progressiveLoad" option ignore because there are multiple splat scenes'),t.progressiveLoad=!1);const n=t.format!==void 0&&t.format!==null?t.format:sceneFormatFromPath(e),o=_i.isProgressivelyLoadable(n)&&t.progressiveLoad,a=t.showLoadingUI!==void 0&&t.showLoadingUI!==null?t.showLoadingUI:!0;let r=null;a&&(this.loadingSpinner.removeAllTasks(),r=this.loadingSpinner.addTask("Downloading..."));const l=()=>{this.loadingProgressBar.hide(),this.loadingSpinner.removeAllTasks()},c=(B,I,C)=>{if(a)if(C===LoaderStatus.Downloading)if(B==100)this.loadingSpinner.setMessageForTask(r,"Download complete!");else if(o)this.loadingSpinner.setMessageForTask(r,"Downloading splats...");else{const R=I?`: ${I}`:"...";this.loadingSpinner.setMessageForTask(r,`Downloading${R}`)}else C===LoaderStatus.Processing&&this.loadingSpinner.setMessageForTask(r,"Processing splats...")};let u=!1,d=0;const f=(B,I)=>{a&&((B&&o||I&&!o)&&(this.loadingSpinner.removeTask(r),!I&&!u&&this.loadingProgressBar.show()),o&&(I?(u=!0,this.loadingProgressBar.hide()):this.loadingProgressBar.setProgress(d)))},g=(B,I,C)=>{d=B,c(B,I,C),t.onProgress&&t.onProgress(B,I,C)},_=(B,I,C)=>{!o&&t.onProgress&&t.onProgress(0,"0%",LoaderStatus.Processing);const R={rotation:t.rotation||t.orientation,position:t.position,scale:t.scale,splatAlphaRemovalThreshold:t.splatAlphaRemovalThreshold};return this.addSplatBuffers([B],[R],C,I&&a,a,o,o).then(()=>{!o&&t.onProgress&&t.onProgress(100,"100%",LoaderStatus.Processing),f(I,C)})};return(o?this.downloadAndBuildSingleSplatSceneProgressiveLoad.bind(this):this.downloadAndBuildSingleSplatSceneStandardLoad.bind(this))(e,n,t.splatAlphaRemovalThreshold,_.bind(this),g,l.bind(this),t.headers)}downloadAndBuildSingleSplatSceneStandardLoad(e,t,n,o,a,r,l){const c=this.downloadSplatSceneToSplatBuffer(e,n,a,!1,void 0,t,l),u=abortablePromiseWithExtractedComponents(c.abortHandler);return c.then(d=>(this.removeSplatSceneDownloadPromise(c),o(d,!0,!0).then(()=>{u.resolve(),this.clearSplatSceneDownloadAndBuildPromise()}))).catch(d=>{r&&r(),this.clearSplatSceneDownloadAndBuildPromise(),this.removeSplatSceneDownloadPromise(c),u.reject(this.updateError(d,`Viewer::addSplatScene -> Could not load file ${e}`))}),this.addSplatSceneDownloadPromise(c),this.setSplatSceneDownloadAndBuildPromise(u.promise),u.promise}downloadAndBuildSingleSplatSceneProgressiveLoad(e,t,n,o,a,r,l){let c=0,u=!1;const d=[],f=()=>{if(d.length>0&&!u&&!this.isDisposingOrDisposed()){u=!0;const I=d.shift();o(I.splatBuffer,I.firstBuild,I.finalBuild).then(()=>{u=!1,I.firstBuild?b.resolve():I.finalBuild&&(B.resolve(),this.clearSplatSceneDownloadAndBuildPromise()),d.length>0&&delayedExecute(()=>f())})}},g=(I,C)=>{this.isDisposingOrDisposed()||(C||d.length===0||I.getSplatCount()>d[0].splatBuffer.getSplatCount())&&(d.push({splatBuffer:I,firstBuild:c===0,finalBuild:C}),c++,f())},_=this.downloadSplatSceneToSplatBuffer(e,n,a,!0,g,t,l),b=abortablePromiseWithExtractedComponents(_.abortHandler),B=abortablePromiseWithExtractedComponents();return this.addSplatSceneDownloadPromise(_),this.setSplatSceneDownloadAndBuildPromise(B.promise),_.then(()=>{this.removeSplatSceneDownloadPromise(_)}).catch(I=>{this.clearSplatSceneDownloadAndBuildPromise(),this.removeSplatSceneDownloadPromise(_);const C=this.updateError(I,"Viewer::addSplatScene -> Could not load one or more scenes");b.reject(C),r&&r(C)}),b.promise}addSplatScenes(e,t=!0,n=void 0){if(this.isLoadingOrUnloading())throw new Error("Cannot add splat scene while another load or unload is already in progress.");if(this.isDisposingOrDisposed())throw new Error("Cannot add splat scene after dispose() is called.");const o=e.length,a=[];let r;t&&(this.loadingSpinner.removeAllTasks(),r=this.loadingSpinner.addTask("Downloading..."));const l=(f,g,_,b)=>{a[f]=g;let B=0;for(let I=0;I<o;I++)B+=a[I]||0;B=B/o,_=`${B.toFixed(2)}%`,t&&b===LoaderStatus.Downloading&&this.loadingSpinner.setMessageForTask(r,B==100?"Download complete!":`Downloading: ${_}`),n&&n(B,_,b)},c=[],u=[];for(let f=0;f<e.length;f++){const g=e[f],_=g.format!==void 0&&g.format!==null?g.format:sceneFormatFromPath(g.path),b=this.downloadSplatSceneToSplatBuffer(g.path,g.splatAlphaRemovalThreshold,l.bind(this,f),!1,void 0,_,g.headers);c.push(b),u.push(b.promise)}const d=new AbortablePromise((f,g)=>{Promise.all(u).then(_=>{t&&this.loadingSpinner.removeTask(r),n&&n(0,"0%",LoaderStatus.Processing),this.addSplatBuffers(_,e,!0,t,t,!1,!1).then(()=>{n&&n(100,"100%",LoaderStatus.Processing),this.clearSplatSceneDownloadAndBuildPromise(),f()})}).catch(_=>{t&&this.loadingSpinner.removeTask(r),this.clearSplatSceneDownloadAndBuildPromise(),g(this.updateError(_,"Viewer::addSplatScenes -> Could not load one or more splat scenes."))}).finally(()=>{this.removeSplatSceneDownloadPromise(d)})},f=>{for(let g of c)g.abort(f)});return this.addSplatSceneDownloadPromise(d),this.setSplatSceneDownloadAndBuildPromise(d),d}downloadSplatSceneToSplatBuffer(e,t=1,n=void 0,o=!1,a=void 0,r,l){try{if(r===SceneFormat.Splat||r===SceneFormat.KSplat||r===SceneFormat.Ply){const c=o?!1:this.optimizeSplatData;if(r===SceneFormat.Splat)return SplatLoader$1.loadFromURL(e,n,o,a,t,this.inMemoryCompressionLevel,c,l);if(r===SceneFormat.KSplat)return KSplatLoader.loadFromURL(e,n,o,a,l);if(r===SceneFormat.Ply)return PlyLoader.loadFromURL(e,n,o,a,t,this.inMemoryCompressionLevel,c,this.sphericalHarmonicsDegree,l)}else if(r===SceneFormat.Spz)return SpzLoader.loadFromURL(e,n,t,this.inMemoryCompressionLevel,this.optimizeSplatData,this.sphericalHarmonicsDegree,l)}catch(c){throw this.updateError(c,null)}throw new Error(`Viewer::downloadSplatSceneToSplatBuffer -> File format not supported: ${e}`)}static isProgressivelyLoadable(e){return e===SceneFormat.Splat||e===SceneFormat.KSplat||e===SceneFormat.Ply}setupSortWorker(e){if(!this.isDisposingOrDisposed())return new Promise(t=>{const n=this.integerBasedSort?Int32Array:Float32Array,o=e.getSplatCount(),a=e.getMaxSplatCount();this.sortWorker=createSortWorker(a,this.sharedMemoryForWorkers,this.enableSIMDInSort,this.integerBasedSort,this.splatMesh.dynamicMode,this.splatSortDistanceMapPrecision),this.sortWorker.onmessage=r=>{if(r.data.sortDone){if(this.sortRunning=!1,this.sharedMemoryForWorkers)this.splatMesh.updateRenderIndexes(this.sortWorkerSortedIndexes,r.data.splatRenderCount);else{const l=new Uint32Array(r.data.sortedIndexes.buffer,0,r.data.splatRenderCount);this.splatMesh.updateRenderIndexes(l,r.data.splatRenderCount)}this.lastSplatSortCount=this.splatSortCount,this.lastSortTime=r.data.sortTime,this.sortPromiseResolver(),this.sortPromiseResolver=null,this.forceRenderNextFrame(),this.runAfterNextSort.length>0&&(this.runAfterNextSort.forEach(l=>{l()}),this.runAfterNextSort.length=0)}else if(r.data.sortCanceled)this.sortRunning=!1;else if(r.data.sortSetupPhase1Complete){this.logLevel>=LogLevel.Info&&console.log("Sorting web worker WASM setup complete."),this.sharedMemoryForWorkers?(this.sortWorkerSortedIndexes=new Uint32Array(r.data.sortedIndexesBuffer,r.data.sortedIndexesOffset,a),this.sortWorkerIndexesToSort=new Uint32Array(r.data.indexesToSortBuffer,r.data.indexesToSortOffset,a),this.sortWorkerPrecomputedDistances=new n(r.data.precomputedDistancesBuffer,r.data.precomputedDistancesOffset,a),this.sortWorkerTransforms=new Float32Array(r.data.transformsBuffer,r.data.transformsOffset,Constants.MaxScenes*16)):(this.sortWorkerIndexesToSort=new Uint32Array(a),this.sortWorkerPrecomputedDistances=new n(a),this.sortWorkerTransforms=new Float32Array(Constants.MaxScenes*16));for(let l=0;l<o;l++)this.sortWorkerIndexesToSort[l]=l;if(this.sortWorker.maxSplatCount=a,this.logLevel>=LogLevel.Info){console.log("Sorting web worker ready.");const l=this.splatMesh.getSplatDataTextures(),c=l.covariances.size,u=l.centerColors.size;console.log("Covariances texture size: "+c.x+" x "+c.y),console.log("Centers/colors texture size: "+u.x+" x "+u.y)}t()}}})}updateError(e,t){return e instanceof AbortedPromiseError?e:e instanceof DirectLoadError?new Error("File type or server does not support progressive loading."):t?new Error(t):e}disposeSortWorker(){this.sortWorker&&this.sortWorker.terminate(),this.sortWorker=null,this.sortPromise=null,this.sortPromiseResolver&&(this.sortPromiseResolver(),this.sortPromiseResolver=null),this.preSortMessages=[],this.sortRunning=!1}removeSplatScene(e,t=!0){return this.removeSplatScenes([e],t)}removeSplatScenes(e,t=!0){if(this.isLoadingOrUnloading())throw new Error("Cannot remove splat scene while another load or unload is already in progress.");if(this.isDisposingOrDisposed())throw new Error("Cannot remove splat scene after dispose() is called.");let n;return this.splatSceneRemovalPromise=new Promise((o,a)=>{let r;t&&(this.loadingSpinner.removeAllTasks(),this.loadingSpinner.show(),r=this.loadingSpinner.addTask("Removing splat scene..."));const l=()=>{t&&(this.loadingSpinner.hide(),this.loadingSpinner.removeTask(r))},c=d=>{l(),this.splatSceneRemovalPromise=null,d?a(d):o()},u=()=>this.isDisposingOrDisposed()?(c(),!0):!1;n=this.sortPromise||Promise.resolve(),n.then(()=>{if(u())return;const d=[],f=[],g=[];for(let _=0;_<this.splatMesh.scenes.length;_++){let b=!1;for(let B of e)if(B===_){b=!0;break}if(!b){const B=this.splatMesh.scenes[_];d.push(B.splatBuffer),f.push(this.splatMesh.sceneOptions[_]),g.push({position:B.position.clone(),quaternion:B.quaternion.clone(),scale:B.scale.clone()})}}this.disposeSortWorker(),this.splatMesh.dispose(),this.sceneRevealMode=SceneRevealMode.Instant,this.createSplatMesh(),this.addSplatBuffers(d,f,!0,!1,!0).then(()=>{u()||(l(),this.splatMesh.scenes.forEach((_,b)=>{_.position.copy(g[b].position),_.quaternion.copy(g[b].quaternion),_.scale.copy(g[b].scale)}),this.splatMesh.updateTransforms(),this.splatRenderReady=!1,this.runSplatSort(!0).then(()=>{if(u()){this.splatRenderReady=!0;return}n=this.sortPromise||Promise.resolve(),n.then(()=>{this.splatRenderReady=!0,c()})}))}).catch(_=>{c(_)})})}),this.splatSceneRemovalPromise}start(){if(this.selfDrivenMode)this.webXRMode?this.renderer.setAnimationLoop(this.selfDrivenUpdateFunc):this.requestFrameId=requestAnimationFrame(this.selfDrivenUpdateFunc),this.selfDrivenModeRunning=!0;else throw new Error("Cannot start viewer unless it is in self driven mode.")}stop(){this.selfDrivenMode&&this.selfDrivenModeRunning&&(this.webXRMode?this.renderer.setAnimationLoop(null):cancelAnimationFrame(this.requestFrameId),this.selfDrivenModeRunning=!1)}async dispose(){if(this.isDisposingOrDisposed())return this.disposePromise;let e=[],t=[];for(let n in this.splatSceneDownloadPromises)if(this.splatSceneDownloadPromises.hasOwnProperty(n)){const o=this.splatSceneDownloadPromises[n];t.push(o),e.push(o.promise)}return this.sortPromise&&e.push(this.sortPromise),this.disposing=!0,this.disposePromise=Promise.all(e).finally(()=>{this.stop(),this.orthographicControls&&(this.orthographicControls.dispose(),this.orthographicControls=null),this.perspectiveControls&&(this.perspectiveControls.dispose(),this.perspectiveControls=null),this.controls=null,this.splatMesh&&(this.splatMesh.dispose(),this.splatMesh=null),this.sceneHelper&&(this.sceneHelper.dispose(),this.sceneHelper=null),this.resizeObserver&&(this.resizeObserver.unobserve(this.rootElement),this.resizeObserver=null),this.disposeSortWorker(),this.removeEventHandlers(),this.loadingSpinner.removeAllTasks(),this.loadingSpinner.setContainer(null),this.loadingProgressBar.hide(),this.loadingProgressBar.setContainer(null),this.infoPanel.setContainer(null),this.camera=null,this.threeScene=null,this.splatRenderReady=!1,this.initialized=!1,this.renderer&&(this.usingExternalRenderer||(this.rootElement.removeChild(this.renderer.domElement),this.renderer.dispose()),this.renderer=null),this.usingExternalRenderer||document.body.removeChild(this.rootElement),this.sortWorkerSortedIndexes=null,this.sortWorkerIndexesToSort=null,this.sortWorkerPrecomputedDistances=null,this.sortWorkerTransforms=null,this.disposed=!0,this.disposing=!1,this.disposePromise=null}),t.forEach(n=>{n.abort("Scene disposed")}),this.disposePromise}selfDrivenUpdate(){this.selfDrivenMode&&!this.webXRMode&&(this.requestFrameId=requestAnimationFrame(this.selfDrivenUpdateFunc)),this.update(),this.shouldRender()?(this.render(),this.consecutiveRenderFrames++):this.consecutiveRenderFrames=0,this.renderNextFrame=!1}forceRenderNextFrame(){this.renderNextFrame=!0}update(e,t){this.dropInMode&&this.updateForDropInMode(e,t),!(!this.initialized||!this.splatRenderReady||this.isDisposingOrDisposed())&&(this.controls&&(this.controls.update(),this.camera.isOrthographicCamera&&!this.usingExternalCamera&&_i.setCameraPositionFromZoom(this.camera,this.camera,this.controls)),this.runSplatSort(),this.updateForRendererSizeChanges(),this.updateSplatMesh(),this.updateMeshCursor(),this.updateFPS(),this.timingSensitiveUpdates(),this.updateInfoPanel(),this.updateControlPlane())}updateForDropInMode(e,t){this.renderer=e,this.splatMesh&&this.splatMesh.setRenderer(this.renderer),this.camera=t,this.controls&&(this.controls.object=t),this.init()}updateControlPlane(){this.showControlPlane?(this.sceneHelper.setControlPlaneVisibility(!0),this.sceneHelper.positionAndOrientControlPlane(this.controls.target,this.camera.up)):this.sceneHelper.setControlPlaneVisibility(!1)}getSplatMesh(){return this.splatMesh}getSplatScene(e){return this.splatMesh.getScene(e)}getSceneCount(){return this.splatMesh.getSceneCount()}isMobile(){return navigator.userAgent.includes("Mobi")}};At(_i,"setCameraPositionFromZoom",function(){const e=new Vector3;return function(t,n,o){const a=1/(n.zoom*.001);e.copy(o.target).sub(t.position).normalize().multiplyScalar(a).negate(),t.position.copy(o.target).add(e)}}()),At(_i,"setCameraZoomFromPosition",function(){const e=new Vector3;return function(t,n,o){const a=e.copy(o.target).sub(n.position).length();t.zoom=1/(a*.001)}}());let Viewer=_i;var Stats=function(){var s=0,e=document.createElement("div");e.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",e.addEventListener("click",function(d){d.preventDefault(),n(++s%e.children.length)},!1);function t(d){return e.appendChild(d.dom),d}function n(d){for(var f=0;f<e.children.length;f++)e.children[f].style.display=f===d?"block":"none";s=d}var o=(performance||Date).now(),a=o,r=0,l=t(new Stats.Panel("FPS","#0ff","#002")),c=t(new Stats.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var u=t(new Stats.Panel("MB","#f08","#201"));return n(0),{REVISION:16,dom:e,addPanel:t,showPanel:n,begin:function(){o=(performance||Date).now()},end:function(){r++;var d=(performance||Date).now();if(c.update(d-o,200),d>=a+1e3&&(l.update(r*1e3/(d-a),100),a=d,r=0,u)){var f=performance.memory;u.update(f.usedJSHeapSize/1048576,f.jsHeapSizeLimit/1048576)}return d},update:function(){o=this.end()},domElement:e,setMode:n}};Stats.Panel=function(s,e,t){var n=1/0,o=0,a=Math.round,r=a(window.devicePixelRatio||1),l=80*r,c=48*r,u=3*r,d=2*r,f=3*r,g=15*r,_=74*r,b=30*r,B=document.createElement("canvas");B.width=l,B.height=c,B.style.cssText="width:80px;height:48px";var I=B.getContext("2d");return I.font="bold "+9*r+"px Helvetica,Arial,sans-serif",I.textBaseline="top",I.fillStyle=t,I.fillRect(0,0,l,c),I.fillStyle=e,I.fillText(s,u,d),I.fillRect(f,g,_,b),I.fillStyle=t,I.globalAlpha=.9,I.fillRect(f,g,_,b),{dom:B,update:function(C,R){n=Math.min(n,C),o=Math.max(o,C),I.fillStyle=t,I.globalAlpha=1,I.fillRect(0,0,l,g),I.fillStyle=e,I.fillText(a(C)+" "+s+" ("+a(n)+"-"+a(o)+")",u,d),I.drawImage(B,f+r,g,_-r,b,f,g,_-r,b),I.fillRect(f+_-r,g,r,b),I.fillStyle=t,I.globalAlpha=.9,I.fillRect(f+_-r,g,r,a((1-C/R)*b))}}};class StatsModule{constructor(e){if(!(e!=null&&e.containerId))throw new Error("containerId is required");this.init(e)}init(e){var n,o,a,r,l,c,u,d,f,g;const t=document.getElementById(e.containerId);this.stats=new Stats,this.stats.showPanel((e==null?void 0:e.type)||0),(n=e==null?void 0:e.style)!=null&&n.position&&(this.stats.dom.style.position=((o=e==null?void 0:e.style)==null?void 0:o.position)||"absolute"),(a=e==null?void 0:e.style)!=null&&a.top&&(this.stats.dom.style.top=(r=e==null?void 0:e.style)==null?void 0:r.top),(l=e==null?void 0:e.style)!=null&&l.left&&(this.stats.dom.style.left=(c=e==null?void 0:e.style)==null?void 0:c.left),(u=e==null?void 0:e.style)!=null&&u.right&&(this.stats.dom.style.right=(d=e==null?void 0:e.style)==null?void 0:d.right),(f=e==null?void 0:e.style)!=null&&f.bottom&&(this.stats.dom.style.bottom=(g=e==null?void 0:e.style)==null?void 0:g.bottom),t.appendChild(this.stats.dom),this.stats.dom.style.display="none",console.log(this.stats.dom,e)}hide(){this.stats.dom.style.display="none"}show(){this.stats.dom.style.display="block"}}function getRotationMatrix(s){if((s==null?void 0:s.length)!==3)return;const[e,t,n]=s,o=new Euler(MathUtils.degToRad(e),MathUtils.degToRad(t),MathUtils.degToRad(n),"XYZ"),a=new Quaternion;return a.setFromEuler(o),[a.x,a.y,a.z,a.w]}function getGSFileExt(s){if(typeof s!="string")return null;const e=s.toLowerCase();return e.endsWith(".splat")?SceneFormat.Splat:e.endsWith(".ply")?SceneFormat.Ply:e.endsWith(".ksplat")?SceneFormat.KSplat:null}function getWindowSize(){return{width:window.innerWidth,height:window.innerHeight}}function getElementSize(s){return{width:s.clientWidth,height:s.clientHeight}}class SimpleViewer{constructor(e=null,t=!1){this.container=e,this.scaleRenderer=t,this.viewer=null,this.urls=[],this.stats=new StatsModule({containerId:"js-simple-viewer",type:0,style:{position:"absolute",top:"0"}})}async init(e){var t,n,o,a,r,l;try{if(e===""||!e)return;const c=e,u=await this.getSceneMataFile(c);let d=null;const f=null;this.container&&(d=document.querySelector(this.container));const g={rootElement:d,cameraUp:((t=u==null?void 0:u.cameraInfo)==null?void 0:t.lookUp)||(u==null?void 0:u.lookUp),initialCameraPosition:((n=u==null?void 0:u.cameraInfo)==null?void 0:n.position)||(u==null?void 0:u.position),initialCameraLookAt:((o=u==null?void 0:u.cameraInfo)==null?void 0:o.lookAt)||(u==null?void 0:u.lookAt),sphericalHarmonicsDegree:(u==null?void 0:u.sphericalHarmonicsDegree)>=0?u.sphericalHarmonicsDegree:2,sharedMemoryForWorkers:!0,renderer:f,showInfo:!0,showLoadingUI:!1,...u==null?void 0:u.gaussianSplats3DOption};console.log("viewerOptions",g),this.viewer=new Viewer(g),u.url instanceof Array?this.urls=u.url.map(b=>({url:b.path,show:!1,position:b==null?void 0:b.position,rotation:getRotationMatrix(b==null?void 0:b.rotation),scale:b==null?void 0:b.scale})):this.urls=[{url:u.url,show:!1,position:(a=u==null?void 0:u.splashInfo)==null?void 0:a.position,rotation:getRotationMatrix((r=u==null?void 0:u.splashInfo)==null?void 0:r.rotation),scale:(l=u==null?void 0:u.splashInfo)==null?void 0:l.scale}];const _=new Date().getTime();await this.viewer.addSplatScene(this.urls[0].url,{format:getGSFileExt(this.urls[0].url),progressiveLoad:!0,showLoadingUI:!1,position:this.urls[0].position,rotation:this.urls[0].rotation,scale:this.urls[0].scale}),console.log("init time",new Date().getTime()-_),this.changeUrlState(this.urls[0].url,!0),this.viewer.start(),this.initThreeAxesHelper(),this.update()}catch(c){console.error("Failed to initialize GSViewer:",c)}}initThreeAxesHelper(){console.log("initThreeAxesHelper",this.viewer.threeScene);const e=new AxesHelper(50);this.viewer.threeScene.add(e)}initRenderer(e){if(!this.scaleRenderer)return null;e.style.transform="scale(2)",e.style.transformOrigin="0 0";const t=new WebGLRenderer({antialias:!1,precision:"highp"});t.autoClear=!0,t.setClearColor(new Color(0),0);const n=e?getElementSize(e):getWindowSize();return console.log("size",n),t.setSize(n.width/2,n.height/2),t}showInfoPanel(e){this.viewer.showInfo=e,e?this.viewer.infoPanel.show():this.viewer.infoPanel.hide()}getUrls(){return this.urls}update(){requestAnimationFrame(this.update.bind(this)),this.stats.stats.update()}async add(e){const t=new Date().getTime();return await this.viewer.addSplatScene(this.urls[e].url,{format:getGSFileExt(this.urls[e].url),progressiveLoad:!0,showLoadingUI:!1,position:this.urls[e].position,rotation:this.urls[e].rotation,scale:this.urls[e].scale}),console.log("add time",new Date().getTime()-t),console.log("add",this.viewer),this.changeUrlState(this.urls[e].url,!0),this.urls}remove(e){let t=-1;for(let n=0;n<=e&&n<this.urls.length;n++)this.urls[n].show===!0&&(t+=1);this.viewer.removeSplatScene(t,!1),this.changeUrlState(this.urls[e].url,!1)}changeUrlState(e,t){const n=this.urls.find(o=>o.url===e);n.show=t}resetCamera(){this.viewer&&this.viewer.resetCamera&&this.viewer.resetCamera()}dispose(){this.viewer&&(this.viewer=null)}async getSceneMataFile(e){const t=await fetch(e,{mode:"cors",credentials:"omit",cache:"reload"});if(t.status===200){const n=await t.json();return console.log("content",n),n}}}const _hoisted_1$2={class:"model-detail"},_hoisted_2$2={class:"detail-header"},_hoisted_3$1={class:"detail-header-container"},_hoisted_4={key:1},_hoisted_5=["onClick"],_sfc_main$2={__name:"ChunkedLoading",setup(s){const e=useRouter(),t=useRoute(),n=ref(null),o=ref(t.query.modelName),a=ref(t.query.modelUrl),r=ref(t.query.hideBackBtn==="true"),l=ref(!1),c=ref([]);let u=null;const d=B=>{var I;return B.indexOf("http")>=0?"模型":((I=ModelList$1[B])==null?void 0:I.name)||B},f=()=>{e.push("/")},g=async B=>{await u.add(B),c.value=u.getUrls().map(I=>({url:I.url,show:I.show}))},_=async B=>{await u.remove(B),c.value=u.getUrls().map(I=>({url:I.url,show:I.show}))},b=()=>{u.showInfoPanel(!l.value),l.value=!l.value};return onMounted(async()=>{try{let B="";a.value&&a.value!==""?B=decodeURIComponent(a.value):o.value&&o.value!==""&&(B=`/models/${o.value}/model.meta.json`),u=new SimpleViewer("#scene"),await u.init(B),c.value=u.getUrls(),console.log("urlList",u.getUrls(),c.value),b()}catch(B){console.error("Failed to initialize 3D viewer:",B)}}),onUnmounted(()=>{u&&u.dispose&&u.dispose()}),(B,I)=>(openBlock(),createElementBlock("div",_hoisted_1$2,[createBaseVNode("header",_hoisted_2$2,[createBaseVNode("div",_hoisted_3$1,[r.value?createCommentVNode("",!0):(openBlock(),createElementBlock("button",{key:0,class:"back-button",onClick:f}," ← 返回列表 ")),createBaseVNode("h1",null,toDisplayString(d(o.value||a.value)),1),c.value.length?(openBlock(),createElementBlock("div",_hoisted_4,[(openBlock(!0),createElementBlock(Fragment,null,renderList(c.value,(C,R)=>(openBlock(),createElementBlock("button",{key:R,class:normalizeClass(["model-item",{current:C.show}]),onClick:L=>C.show?_(R):g(R)},toDisplayString(R+1),11,_hoisted_5))),128))])):createCommentVNode("",!0)]),createBaseVNode("button",{class:normalizeClass(["info-panel-btn",{current:l.value}]),onClick:I[0]||(I[0]=C=>b())},"信息面板",2)]),createBaseVNode("div",{class:"model-viewer",ref_key:"sceneContainer",ref:n,id:"js-simple-viewer"},I[1]||(I[1]=[createBaseVNode("div",{id:"scene"},null,-1)]),512)]))}},ChunkedLoading=_export_sfc(_sfc_main$2,[["__scopeId","data-v-e886461e"]]);function toTrianglesDrawMode(s,e){if(e===TrianglesDrawMode)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),s;if(e===TriangleFanDrawMode||e===TriangleStripDrawMode){let t=s.getIndex();if(t===null){const r=[],l=s.getAttribute("position");if(l!==void 0){for(let c=0;c<l.count;c++)r.push(c);s.setIndex(r),t=s.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),s}const n=t.count-2,o=[];if(e===TriangleFanDrawMode)for(let r=1;r<=n;r++)o.push(t.getX(0)),o.push(t.getX(r)),o.push(t.getX(r+1));else for(let r=0;r<n;r++)r%2===0?(o.push(t.getX(r)),o.push(t.getX(r+1)),o.push(t.getX(r+2))):(o.push(t.getX(r+2)),o.push(t.getX(r+1)),o.push(t.getX(r)));o.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const a=s.clone();return a.setIndex(o),a.clearGroups(),a}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),s}class GLTFLoader extends Loader{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new GLTFMaterialsClearcoatExtension(t)}),this.register(function(t){return new GLTFMaterialsDispersionExtension(t)}),this.register(function(t){return new GLTFTextureBasisUExtension(t)}),this.register(function(t){return new GLTFTextureWebPExtension(t)}),this.register(function(t){return new GLTFTextureAVIFExtension(t)}),this.register(function(t){return new GLTFMaterialsSheenExtension(t)}),this.register(function(t){return new GLTFMaterialsTransmissionExtension(t)}),this.register(function(t){return new GLTFMaterialsVolumeExtension(t)}),this.register(function(t){return new GLTFMaterialsIorExtension(t)}),this.register(function(t){return new GLTFMaterialsEmissiveStrengthExtension(t)}),this.register(function(t){return new GLTFMaterialsSpecularExtension(t)}),this.register(function(t){return new GLTFMaterialsIridescenceExtension(t)}),this.register(function(t){return new GLTFMaterialsAnisotropyExtension(t)}),this.register(function(t){return new GLTFMaterialsBumpExtension(t)}),this.register(function(t){return new GLTFLightsExtension(t)}),this.register(function(t){return new GLTFMeshoptCompression(t)}),this.register(function(t){return new GLTFMeshGpuInstancing(t)})}load(e,t,n,o){const a=this;let r;if(this.resourcePath!=="")r=this.resourcePath;else if(this.path!==""){const u=LoaderUtils.extractUrlBase(e);r=LoaderUtils.resolveURL(u,this.path)}else r=LoaderUtils.extractUrlBase(e);this.manager.itemStart(e);const l=function(u){o?o(u):console.error(u),a.manager.itemError(e),a.manager.itemEnd(e)},c=new FileLoader(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){try{a.parse(u,r,function(d){t(d),a.manager.itemEnd(e)},l)}catch(d){l(d)}},n,l)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,o){let a;const r={},l={},c=new TextDecoder;if(typeof e=="string")a=JSON.parse(e);else if(e instanceof ArrayBuffer)if(c.decode(new Uint8Array(e,0,4))===BINARY_EXTENSION_HEADER_MAGIC){try{r[EXTENSIONS.KHR_BINARY_GLTF]=new GLTFBinaryExtension(e)}catch(f){o&&o(f);return}a=JSON.parse(r[EXTENSIONS.KHR_BINARY_GLTF].content)}else a=JSON.parse(c.decode(e));else a=e;if(a.asset===void 0||a.asset.version[0]<2){o&&o(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const u=new GLTFParser(a,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});u.fileLoader.setRequestHeader(this.requestHeader);for(let d=0;d<this.pluginCallbacks.length;d++){const f=this.pluginCallbacks[d](u);f.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),l[f.name]=f,r[f.name]=!0}if(a.extensionsUsed)for(let d=0;d<a.extensionsUsed.length;++d){const f=a.extensionsUsed[d],g=a.extensionsRequired||[];switch(f){case EXTENSIONS.KHR_MATERIALS_UNLIT:r[f]=new GLTFMaterialsUnlitExtension;break;case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:r[f]=new GLTFDracoMeshCompressionExtension(a,this.dracoLoader);break;case EXTENSIONS.KHR_TEXTURE_TRANSFORM:r[f]=new GLTFTextureTransformExtension;break;case EXTENSIONS.KHR_MESH_QUANTIZATION:r[f]=new GLTFMeshQuantizationExtension;break;default:g.indexOf(f)>=0&&l[f]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+f+'".')}}u.setExtensions(r),u.setPlugins(l),u.parse(n,o)}parseAsync(e,t){const n=this;return new Promise(function(o,a){n.parse(e,t,o,a)})}}function GLTFRegistry(){let s={};return{get:function(e){return s[e]},add:function(e,t){s[e]=t},remove:function(e){delete s[e]},removeAll:function(){s={}}}}const EXTENSIONS={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class GLTFLightsExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let n=0,o=t.length;n<o;n++){const a=t[n];a.extensions&&a.extensions[this.name]&&a.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,a.extensions[this.name].light)}}_loadLight(e){const t=this.parser,n="light:"+e;let o=t.cache.get(n);if(o)return o;const a=t.json,c=((a.extensions&&a.extensions[this.name]||{}).lights||[])[e];let u;const d=new Color(16777215);c.color!==void 0&&d.setRGB(c.color[0],c.color[1],c.color[2],LinearSRGBColorSpace);const f=c.range!==void 0?c.range:0;switch(c.type){case"directional":u=new DirectionalLight(d),u.target.position.set(0,0,-1),u.add(u.target);break;case"point":u=new PointLight(d),u.distance=f;break;case"spot":u=new SpotLight(d),u.distance=f,c.spot=c.spot||{},c.spot.innerConeAngle=c.spot.innerConeAngle!==void 0?c.spot.innerConeAngle:0,c.spot.outerConeAngle=c.spot.outerConeAngle!==void 0?c.spot.outerConeAngle:Math.PI/4,u.angle=c.spot.outerConeAngle,u.penumbra=1-c.spot.innerConeAngle/c.spot.outerConeAngle,u.target.position.set(0,0,-1),u.add(u.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+c.type)}return u.position.set(0,0,0),assignExtrasToUserData(u,c),c.intensity!==void 0&&(u.intensity=c.intensity),u.name=t.createUniqueName(c.name||"light_"+e),o=Promise.resolve(u),t.cache.add(n,o),o}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,n=this.parser,a=n.json.nodes[e],l=(a.extensions&&a.extensions[this.name]||{}).light;return l===void 0?null:this._loadLight(l).then(function(c){return n._getNodeRef(t.cache,l,c)})}}class GLTFMaterialsUnlitExtension{constructor(){this.name=EXTENSIONS.KHR_MATERIALS_UNLIT}getMaterialType(){return MeshBasicMaterial}extendParams(e,t,n){const o=[];e.color=new Color(1,1,1),e.opacity=1;const a=t.pbrMetallicRoughness;if(a){if(Array.isArray(a.baseColorFactor)){const r=a.baseColorFactor;e.color.setRGB(r[0],r[1],r[2],LinearSRGBColorSpace),e.opacity=r[3]}a.baseColorTexture!==void 0&&o.push(n.assignTexture(e,"map",a.baseColorTexture,SRGBColorSpace))}return Promise.all(o)}}class GLTFMaterialsEmissiveStrengthExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const o=this.parser.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=o.extensions[this.name].emissiveStrength;return a!==void 0&&(t.emissiveIntensity=a),Promise.resolve()}}class GLTFMaterialsClearcoatExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:MeshPhysicalMaterial}extendMaterialParams(e,t){const n=this.parser,o=n.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=[],r=o.extensions[this.name];if(r.clearcoatFactor!==void 0&&(t.clearcoat=r.clearcoatFactor),r.clearcoatTexture!==void 0&&a.push(n.assignTexture(t,"clearcoatMap",r.clearcoatTexture)),r.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=r.clearcoatRoughnessFactor),r.clearcoatRoughnessTexture!==void 0&&a.push(n.assignTexture(t,"clearcoatRoughnessMap",r.clearcoatRoughnessTexture)),r.clearcoatNormalTexture!==void 0&&(a.push(n.assignTexture(t,"clearcoatNormalMap",r.clearcoatNormalTexture)),r.clearcoatNormalTexture.scale!==void 0)){const l=r.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new Vector2(l,l)}return Promise.all(a)}}class GLTFMaterialsDispersionExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_MATERIALS_DISPERSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:MeshPhysicalMaterial}extendMaterialParams(e,t){const o=this.parser.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=o.extensions[this.name];return t.dispersion=a.dispersion!==void 0?a.dispersion:0,Promise.resolve()}}class GLTFMaterialsIridescenceExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:MeshPhysicalMaterial}extendMaterialParams(e,t){const n=this.parser,o=n.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=[],r=o.extensions[this.name];return r.iridescenceFactor!==void 0&&(t.iridescence=r.iridescenceFactor),r.iridescenceTexture!==void 0&&a.push(n.assignTexture(t,"iridescenceMap",r.iridescenceTexture)),r.iridescenceIor!==void 0&&(t.iridescenceIOR=r.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),r.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=r.iridescenceThicknessMinimum),r.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=r.iridescenceThicknessMaximum),r.iridescenceThicknessTexture!==void 0&&a.push(n.assignTexture(t,"iridescenceThicknessMap",r.iridescenceThicknessTexture)),Promise.all(a)}}class GLTFMaterialsSheenExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_MATERIALS_SHEEN}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:MeshPhysicalMaterial}extendMaterialParams(e,t){const n=this.parser,o=n.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=[];t.sheenColor=new Color(0,0,0),t.sheenRoughness=0,t.sheen=1;const r=o.extensions[this.name];if(r.sheenColorFactor!==void 0){const l=r.sheenColorFactor;t.sheenColor.setRGB(l[0],l[1],l[2],LinearSRGBColorSpace)}return r.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=r.sheenRoughnessFactor),r.sheenColorTexture!==void 0&&a.push(n.assignTexture(t,"sheenColorMap",r.sheenColorTexture,SRGBColorSpace)),r.sheenRoughnessTexture!==void 0&&a.push(n.assignTexture(t,"sheenRoughnessMap",r.sheenRoughnessTexture)),Promise.all(a)}}class GLTFMaterialsTransmissionExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:MeshPhysicalMaterial}extendMaterialParams(e,t){const n=this.parser,o=n.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=[],r=o.extensions[this.name];return r.transmissionFactor!==void 0&&(t.transmission=r.transmissionFactor),r.transmissionTexture!==void 0&&a.push(n.assignTexture(t,"transmissionMap",r.transmissionTexture)),Promise.all(a)}}class GLTFMaterialsVolumeExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_MATERIALS_VOLUME}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:MeshPhysicalMaterial}extendMaterialParams(e,t){const n=this.parser,o=n.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=[],r=o.extensions[this.name];t.thickness=r.thicknessFactor!==void 0?r.thicknessFactor:0,r.thicknessTexture!==void 0&&a.push(n.assignTexture(t,"thicknessMap",r.thicknessTexture)),t.attenuationDistance=r.attenuationDistance||1/0;const l=r.attenuationColor||[1,1,1];return t.attenuationColor=new Color().setRGB(l[0],l[1],l[2],LinearSRGBColorSpace),Promise.all(a)}}class GLTFMaterialsIorExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_MATERIALS_IOR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:MeshPhysicalMaterial}extendMaterialParams(e,t){const o=this.parser.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=o.extensions[this.name];return t.ior=a.ior!==void 0?a.ior:1.5,Promise.resolve()}}class GLTFMaterialsSpecularExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_MATERIALS_SPECULAR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:MeshPhysicalMaterial}extendMaterialParams(e,t){const n=this.parser,o=n.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=[],r=o.extensions[this.name];t.specularIntensity=r.specularFactor!==void 0?r.specularFactor:1,r.specularTexture!==void 0&&a.push(n.assignTexture(t,"specularIntensityMap",r.specularTexture));const l=r.specularColorFactor||[1,1,1];return t.specularColor=new Color().setRGB(l[0],l[1],l[2],LinearSRGBColorSpace),r.specularColorTexture!==void 0&&a.push(n.assignTexture(t,"specularColorMap",r.specularColorTexture,SRGBColorSpace)),Promise.all(a)}}class GLTFMaterialsBumpExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.EXT_MATERIALS_BUMP}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:MeshPhysicalMaterial}extendMaterialParams(e,t){const n=this.parser,o=n.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=[],r=o.extensions[this.name];return t.bumpScale=r.bumpFactor!==void 0?r.bumpFactor:1,r.bumpTexture!==void 0&&a.push(n.assignTexture(t,"bumpMap",r.bumpTexture)),Promise.all(a)}}class GLTFMaterialsAnisotropyExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:MeshPhysicalMaterial}extendMaterialParams(e,t){const n=this.parser,o=n.json.materials[e];if(!o.extensions||!o.extensions[this.name])return Promise.resolve();const a=[],r=o.extensions[this.name];return r.anisotropyStrength!==void 0&&(t.anisotropy=r.anisotropyStrength),r.anisotropyRotation!==void 0&&(t.anisotropyRotation=r.anisotropyRotation),r.anisotropyTexture!==void 0&&a.push(n.assignTexture(t,"anisotropyMap",r.anisotropyTexture)),Promise.all(a)}}class GLTFTextureBasisUExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,n=t.json,o=n.textures[e];if(!o.extensions||!o.extensions[this.name])return null;const a=o.extensions[this.name],r=t.options.ktx2Loader;if(!r){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,a.source,r)}}class GLTFTextureWebPExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,n=this.parser,o=n.json,a=o.textures[e];if(!a.extensions||!a.extensions[t])return null;const r=a.extensions[t],l=o.images[r.source];let c=n.textureLoader;if(l.uri){const u=n.options.manager.getHandler(l.uri);u!==null&&(c=u)}return n.loadTextureImage(e,r.source,c)}}class GLTFTextureAVIFExtension{constructor(e){this.parser=e,this.name=EXTENSIONS.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,n=this.parser,o=n.json,a=o.textures[e];if(!a.extensions||!a.extensions[t])return null;const r=a.extensions[t],l=o.images[r.source];let c=n.textureLoader;if(l.uri){const u=n.options.manager.getHandler(l.uri);u!==null&&(c=u)}return n.loadTextureImage(e,r.source,c)}}class GLTFMeshoptCompression{constructor(e){this.name=EXTENSIONS.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,n=t.bufferViews[e];if(n.extensions&&n.extensions[this.name]){const o=n.extensions[this.name],a=this.parser.getDependency("buffer",o.buffer),r=this.parser.options.meshoptDecoder;if(!r||!r.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return a.then(function(l){const c=o.byteOffset||0,u=o.byteLength||0,d=o.count,f=o.byteStride,g=new Uint8Array(l,c,u);return r.decodeGltfBufferAsync?r.decodeGltfBufferAsync(d,f,g,o.mode,o.filter).then(function(_){return _.buffer}):r.ready.then(function(){const _=new ArrayBuffer(d*f);return r.decodeGltfBuffer(new Uint8Array(_),d,f,g,o.mode,o.filter),_})})}else return null}}class GLTFMeshGpuInstancing{constructor(e){this.name=EXTENSIONS.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||n.mesh===void 0)return null;const o=t.meshes[n.mesh];for(const u of o.primitives)if(u.mode!==WEBGL_CONSTANTS.TRIANGLES&&u.mode!==WEBGL_CONSTANTS.TRIANGLE_STRIP&&u.mode!==WEBGL_CONSTANTS.TRIANGLE_FAN&&u.mode!==void 0)return null;const r=n.extensions[this.name].attributes,l=[],c={};for(const u in r)l.push(this.parser.getDependency("accessor",r[u]).then(d=>(c[u]=d,c[u])));return l.length<1?null:(l.push(this.parser.createNodeMesh(e)),Promise.all(l).then(u=>{const d=u.pop(),f=d.isGroup?d.children:[d],g=u[0].count,_=[];for(const b of f){const B=new Matrix4,I=new Vector3,C=new Quaternion,R=new Vector3(1,1,1),L=new InstancedMesh(b.geometry,b.material,g);for(let F=0;F<g;F++)c.TRANSLATION&&I.fromBufferAttribute(c.TRANSLATION,F),c.ROTATION&&C.fromBufferAttribute(c.ROTATION,F),c.SCALE&&R.fromBufferAttribute(c.SCALE,F),L.setMatrixAt(F,B.compose(I,C,R));for(const F in c)if(F==="_COLOR_0"){const N=c[F];L.instanceColor=new InstancedBufferAttribute(N.array,N.itemSize,N.normalized)}else F!=="TRANSLATION"&&F!=="ROTATION"&&F!=="SCALE"&&b.geometry.setAttribute(F,c[F]);Object3D.prototype.copy.call(L,b),this.parser.assignFinalMaterial(L),_.push(L)}return d.isGroup?(d.clear(),d.add(..._),d):_[0]}))}}const BINARY_EXTENSION_HEADER_MAGIC="glTF",BINARY_EXTENSION_HEADER_LENGTH=12,BINARY_EXTENSION_CHUNK_TYPES={JSON:1313821514,BIN:5130562};class GLTFBinaryExtension{constructor(e){this.name=EXTENSIONS.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,BINARY_EXTENSION_HEADER_LENGTH),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==BINARY_EXTENSION_HEADER_MAGIC)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const o=this.header.length-BINARY_EXTENSION_HEADER_LENGTH,a=new DataView(e,BINARY_EXTENSION_HEADER_LENGTH);let r=0;for(;r<o;){const l=a.getUint32(r,!0);r+=4;const c=a.getUint32(r,!0);if(r+=4,c===BINARY_EXTENSION_CHUNK_TYPES.JSON){const u=new Uint8Array(e,BINARY_EXTENSION_HEADER_LENGTH+r,l);this.content=n.decode(u)}else if(c===BINARY_EXTENSION_CHUNK_TYPES.BIN){const u=BINARY_EXTENSION_HEADER_LENGTH+r;this.body=e.slice(u,u+l)}r+=l}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class GLTFDracoMeshCompressionExtension{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=EXTENSIONS.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const n=this.json,o=this.dracoLoader,a=e.extensions[this.name].bufferView,r=e.extensions[this.name].attributes,l={},c={},u={};for(const d in r){const f=ATTRIBUTES[d]||d.toLowerCase();l[f]=r[d]}for(const d in e.attributes){const f=ATTRIBUTES[d]||d.toLowerCase();if(r[d]!==void 0){const g=n.accessors[e.attributes[d]],_=WEBGL_COMPONENT_TYPES[g.componentType];u[f]=_.name,c[f]=g.normalized===!0}}return t.getDependency("bufferView",a).then(function(d){return new Promise(function(f,g){o.decodeDracoFile(d,function(_){for(const b in _.attributes){const B=_.attributes[b],I=c[b];I!==void 0&&(B.normalized=I)}f(_)},l,u,LinearSRGBColorSpace,g)})})}}class GLTFTextureTransformExtension{constructor(){this.name=EXTENSIONS.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class GLTFMeshQuantizationExtension{constructor(){this.name=EXTENSIONS.KHR_MESH_QUANTIZATION}}class GLTFCubicSplineInterpolant extends Interpolant{constructor(e,t,n,o){super(e,t,n,o)}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,o=this.valueSize,a=e*o*3+o;for(let r=0;r!==o;r++)t[r]=n[a+r];return t}interpolate_(e,t,n,o){const a=this.resultBuffer,r=this.sampleValues,l=this.valueSize,c=l*2,u=l*3,d=o-t,f=(n-t)/d,g=f*f,_=g*f,b=e*u,B=b-u,I=-2*_+3*g,C=_-g,R=1-I,L=C-g+f;for(let F=0;F!==l;F++){const N=r[B+F+l],k=r[B+F+c]*d,Q=r[b+F+l],z=r[b+F]*d;a[F]=R*N+L*k+I*Q+C*z}return a}}const _quaternion=new Quaternion;class GLTFCubicSplineQuaternionInterpolant extends GLTFCubicSplineInterpolant{interpolate_(e,t,n,o){const a=super.interpolate_(e,t,n,o);return _quaternion.fromArray(a).normalize().toArray(a),a}}const WEBGL_CONSTANTS={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},WEBGL_COMPONENT_TYPES={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},WEBGL_FILTERS={9728:NearestFilter,9729:LinearFilter,9984:NearestMipmapNearestFilter,9985:LinearMipmapNearestFilter,9986:NearestMipmapLinearFilter,9987:LinearMipmapLinearFilter},WEBGL_WRAPPINGS={33071:ClampToEdgeWrapping,33648:MirroredRepeatWrapping,10497:RepeatWrapping},WEBGL_TYPE_SIZES={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},ATTRIBUTES={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},PATH_PROPERTIES={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},INTERPOLATION={CUBICSPLINE:void 0,LINEAR:InterpolateLinear,STEP:InterpolateDiscrete},ALPHA_MODES={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function createDefaultMaterial(s){return s.DefaultMaterial===void 0&&(s.DefaultMaterial=new MeshStandardMaterial({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:FrontSide})),s.DefaultMaterial}function addUnknownExtensionsToUserData(s,e,t){for(const n in t.extensions)s[n]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[n]=t.extensions[n])}function assignExtrasToUserData(s,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(s.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function addMorphTargets(s,e,t){let n=!1,o=!1,a=!1;for(let u=0,d=e.length;u<d;u++){const f=e[u];if(f.POSITION!==void 0&&(n=!0),f.NORMAL!==void 0&&(o=!0),f.COLOR_0!==void 0&&(a=!0),n&&o&&a)break}if(!n&&!o&&!a)return Promise.resolve(s);const r=[],l=[],c=[];for(let u=0,d=e.length;u<d;u++){const f=e[u];if(n){const g=f.POSITION!==void 0?t.getDependency("accessor",f.POSITION):s.attributes.position;r.push(g)}if(o){const g=f.NORMAL!==void 0?t.getDependency("accessor",f.NORMAL):s.attributes.normal;l.push(g)}if(a){const g=f.COLOR_0!==void 0?t.getDependency("accessor",f.COLOR_0):s.attributes.color;c.push(g)}}return Promise.all([Promise.all(r),Promise.all(l),Promise.all(c)]).then(function(u){const d=u[0],f=u[1],g=u[2];return n&&(s.morphAttributes.position=d),o&&(s.morphAttributes.normal=f),a&&(s.morphAttributes.color=g),s.morphTargetsRelative=!0,s})}function updateMorphTargets(s,e){if(s.updateMorphTargets(),e.weights!==void 0)for(let t=0,n=e.weights.length;t<n;t++)s.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(s.morphTargetInfluences.length===t.length){s.morphTargetDictionary={};for(let n=0,o=t.length;n<o;n++)s.morphTargetDictionary[t[n]]=n}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function createPrimitiveKey(s){let e;const t=s.extensions&&s.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+createAttributesKey(t.attributes):e=s.indices+":"+createAttributesKey(s.attributes)+":"+s.mode,s.targets!==void 0)for(let n=0,o=s.targets.length;n<o;n++)e+=":"+createAttributesKey(s.targets[n]);return e}function createAttributesKey(s){let e="";const t=Object.keys(s).sort();for(let n=0,o=t.length;n<o;n++)e+=t[n]+":"+s[t[n]]+";";return e}function getNormalizedComponentScale(s){switch(s){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function getImageURIMimeType(s){return s.search(/\.jpe?g($|\?)/i)>0||s.search(/^data\:image\/jpeg/)===0?"image/jpeg":s.search(/\.webp($|\?)/i)>0||s.search(/^data\:image\/webp/)===0?"image/webp":s.search(/\.ktx2($|\?)/i)>0||s.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const _identityMatrix=new Matrix4;class GLTFParser{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new GLTFRegistry,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,o=-1,a=!1,r=-1;if(typeof navigator<"u"){const l=navigator.userAgent;n=/^((?!chrome|android).)*safari/i.test(l)===!0;const c=l.match(/Version\/(\d+)/);o=n&&c?parseInt(c[1],10):-1,a=l.indexOf("Firefox")>-1,r=a?l.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||n&&o<17||a&&r<98?this.textureLoader=new TextureLoader(this.options.manager):this.textureLoader=new ImageBitmapLoader(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new FileLoader(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const n=this,o=this.json,a=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(r){return r._markDefs&&r._markDefs()}),Promise.all(this._invokeAll(function(r){return r.beforeRoot&&r.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(r){const l={scene:r[0][o.scene||0],scenes:r[0],animations:r[1],cameras:r[2],asset:o.asset,parser:n,userData:{}};return addUnknownExtensionsToUserData(a,l,o),assignExtrasToUserData(l,o),Promise.all(n._invokeAll(function(c){return c.afterRoot&&c.afterRoot(l)})).then(function(){for(const c of l.scenes)c.updateMatrixWorld();e(l)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let o=0,a=t.length;o<a;o++){const r=t[o].joints;for(let l=0,c=r.length;l<c;l++)e[r[l]].isBone=!0}for(let o=0,a=e.length;o<a;o++){const r=e[o];r.mesh!==void 0&&(this._addNodeRef(this.meshCache,r.mesh),r.skin!==void 0&&(n[r.mesh].isSkinnedMesh=!0)),r.camera!==void 0&&this._addNodeRef(this.cameraCache,r.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;const o=n.clone(),a=(r,l)=>{const c=this.associations.get(r);c!=null&&this.associations.set(l,c);for(const[u,d]of r.children.entries())a(d,l.children[u])};return a(n,o),o.name+="_instance_"+e.uses[t]++,o}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){const o=e(t[n]);if(o)return o}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const n=[];for(let o=0;o<t.length;o++){const a=e(t[o]);a&&n.push(a)}return n}getDependency(e,t){const n=e+":"+t;let o=this.cache.get(n);if(!o){switch(e){case"scene":o=this.loadScene(t);break;case"node":o=this._invokeOne(function(a){return a.loadNode&&a.loadNode(t)});break;case"mesh":o=this._invokeOne(function(a){return a.loadMesh&&a.loadMesh(t)});break;case"accessor":o=this.loadAccessor(t);break;case"bufferView":o=this._invokeOne(function(a){return a.loadBufferView&&a.loadBufferView(t)});break;case"buffer":o=this.loadBuffer(t);break;case"material":o=this._invokeOne(function(a){return a.loadMaterial&&a.loadMaterial(t)});break;case"texture":o=this._invokeOne(function(a){return a.loadTexture&&a.loadTexture(t)});break;case"skin":o=this.loadSkin(t);break;case"animation":o=this._invokeOne(function(a){return a.loadAnimation&&a.loadAnimation(t)});break;case"camera":o=this.loadCamera(t);break;default:if(o=this._invokeOne(function(a){return a!=this&&a.getDependency&&a.getDependency(e,t)}),!o)throw new Error("Unknown type: "+e);break}this.cache.add(n,o)}return o}getDependencies(e){let t=this.cache.get(e);if(!t){const n=this,o=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(o.map(function(a,r){return n.getDependency(e,r)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],n=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);const o=this.options;return new Promise(function(a,r){n.load(LoaderUtils.resolveURL(t.uri,o.path),a,void 0,function(){r(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(n){const o=t.byteLength||0,a=t.byteOffset||0;return n.slice(a,a+o)})}loadAccessor(e){const t=this,n=this.json,o=this.json.accessors[e];if(o.bufferView===void 0&&o.sparse===void 0){const r=WEBGL_TYPE_SIZES[o.type],l=WEBGL_COMPONENT_TYPES[o.componentType],c=o.normalized===!0,u=new l(o.count*r);return Promise.resolve(new BufferAttribute(u,r,c))}const a=[];return o.bufferView!==void 0?a.push(this.getDependency("bufferView",o.bufferView)):a.push(null),o.sparse!==void 0&&(a.push(this.getDependency("bufferView",o.sparse.indices.bufferView)),a.push(this.getDependency("bufferView",o.sparse.values.bufferView))),Promise.all(a).then(function(r){const l=r[0],c=WEBGL_TYPE_SIZES[o.type],u=WEBGL_COMPONENT_TYPES[o.componentType],d=u.BYTES_PER_ELEMENT,f=d*c,g=o.byteOffset||0,_=o.bufferView!==void 0?n.bufferViews[o.bufferView].byteStride:void 0,b=o.normalized===!0;let B,I;if(_&&_!==f){const C=Math.floor(g/_),R="InterleavedBuffer:"+o.bufferView+":"+o.componentType+":"+C+":"+o.count;let L=t.cache.get(R);L||(B=new u(l,C*_,o.count*_/d),L=new InterleavedBuffer(B,_/d),t.cache.add(R,L)),I=new InterleavedBufferAttribute(L,c,g%_/d,b)}else l===null?B=new u(o.count*c):B=new u(l,g,o.count*c),I=new BufferAttribute(B,c,b);if(o.sparse!==void 0){const C=WEBGL_TYPE_SIZES.SCALAR,R=WEBGL_COMPONENT_TYPES[o.sparse.indices.componentType],L=o.sparse.indices.byteOffset||0,F=o.sparse.values.byteOffset||0,N=new R(r[1],L,o.sparse.count*C),k=new u(r[2],F,o.sparse.count*c);l!==null&&(I=new BufferAttribute(I.array.slice(),I.itemSize,I.normalized)),I.normalized=!1;for(let Q=0,z=N.length;Q<z;Q++){const G=N[Q];if(I.setX(G,k[Q*c]),c>=2&&I.setY(G,k[Q*c+1]),c>=3&&I.setZ(G,k[Q*c+2]),c>=4&&I.setW(G,k[Q*c+3]),c>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}I.normalized=b}return I})}loadTexture(e){const t=this.json,n=this.options,a=t.textures[e].source,r=t.images[a];let l=this.textureLoader;if(r.uri){const c=n.manager.getHandler(r.uri);c!==null&&(l=c)}return this.loadTextureImage(e,a,l)}loadTextureImage(e,t,n){const o=this,a=this.json,r=a.textures[e],l=a.images[t],c=(l.uri||l.bufferView)+":"+r.sampler;if(this.textureCache[c])return this.textureCache[c];const u=this.loadImageSource(t,n).then(function(d){d.flipY=!1,d.name=r.name||l.name||"",d.name===""&&typeof l.uri=="string"&&l.uri.startsWith("data:image/")===!1&&(d.name=l.uri);const g=(a.samplers||{})[r.sampler]||{};return d.magFilter=WEBGL_FILTERS[g.magFilter]||LinearFilter,d.minFilter=WEBGL_FILTERS[g.minFilter]||LinearMipmapLinearFilter,d.wrapS=WEBGL_WRAPPINGS[g.wrapS]||RepeatWrapping,d.wrapT=WEBGL_WRAPPINGS[g.wrapT]||RepeatWrapping,d.generateMipmaps=!d.isCompressedTexture&&d.minFilter!==NearestFilter&&d.minFilter!==LinearFilter,o.associations.set(d,{textures:e}),d}).catch(function(){return null});return this.textureCache[c]=u,u}loadImageSource(e,t){const n=this,o=this.json,a=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(f=>f.clone());const r=o.images[e],l=self.URL||self.webkitURL;let c=r.uri||"",u=!1;if(r.bufferView!==void 0)c=n.getDependency("bufferView",r.bufferView).then(function(f){u=!0;const g=new Blob([f],{type:r.mimeType});return c=l.createObjectURL(g),c});else if(r.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const d=Promise.resolve(c).then(function(f){return new Promise(function(g,_){let b=g;t.isImageBitmapLoader===!0&&(b=function(B){const I=new Texture(B);I.needsUpdate=!0,g(I)}),t.load(LoaderUtils.resolveURL(f,a.path),b,void 0,_)})}).then(function(f){return u===!0&&l.revokeObjectURL(c),assignExtrasToUserData(f,r),f.userData.mimeType=r.mimeType||getImageURIMimeType(r.uri),f}).catch(function(f){throw console.error("THREE.GLTFLoader: Couldn't load texture",c),f});return this.sourceCache[e]=d,d}assignTexture(e,t,n,o){const a=this;return this.getDependency("texture",n.index).then(function(r){if(!r)return null;if(n.texCoord!==void 0&&n.texCoord>0&&(r=r.clone(),r.channel=n.texCoord),a.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]){const l=n.extensions!==void 0?n.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]:void 0;if(l){const c=a.associations.get(r);r=a.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(r,l),a.associations.set(r,c)}}return o!==void 0&&(r.colorSpace=o),e[t]=r,r})}assignFinalMaterial(e){const t=e.geometry;let n=e.material;const o=t.attributes.tangent===void 0,a=t.attributes.color!==void 0,r=t.attributes.normal===void 0;if(e.isPoints){const l="PointsMaterial:"+n.uuid;let c=this.cache.get(l);c||(c=new PointsMaterial,Material.prototype.copy.call(c,n),c.color.copy(n.color),c.map=n.map,c.sizeAttenuation=!1,this.cache.add(l,c)),n=c}else if(e.isLine){const l="LineBasicMaterial:"+n.uuid;let c=this.cache.get(l);c||(c=new LineBasicMaterial,Material.prototype.copy.call(c,n),c.color.copy(n.color),c.map=n.map,this.cache.add(l,c)),n=c}if(o||a||r){let l="ClonedMaterial:"+n.uuid+":";o&&(l+="derivative-tangents:"),a&&(l+="vertex-colors:"),r&&(l+="flat-shading:");let c=this.cache.get(l);c||(c=n.clone(),a&&(c.vertexColors=!0),r&&(c.flatShading=!0),o&&(c.normalScale&&(c.normalScale.y*=-1),c.clearcoatNormalScale&&(c.clearcoatNormalScale.y*=-1)),this.cache.add(l,c),this.associations.set(c,this.associations.get(n))),n=c}e.material=n}getMaterialType(){return MeshStandardMaterial}loadMaterial(e){const t=this,n=this.json,o=this.extensions,a=n.materials[e];let r;const l={},c=a.extensions||{},u=[];if(c[EXTENSIONS.KHR_MATERIALS_UNLIT]){const f=o[EXTENSIONS.KHR_MATERIALS_UNLIT];r=f.getMaterialType(),u.push(f.extendParams(l,a,t))}else{const f=a.pbrMetallicRoughness||{};if(l.color=new Color(1,1,1),l.opacity=1,Array.isArray(f.baseColorFactor)){const g=f.baseColorFactor;l.color.setRGB(g[0],g[1],g[2],LinearSRGBColorSpace),l.opacity=g[3]}f.baseColorTexture!==void 0&&u.push(t.assignTexture(l,"map",f.baseColorTexture,SRGBColorSpace)),l.metalness=f.metallicFactor!==void 0?f.metallicFactor:1,l.roughness=f.roughnessFactor!==void 0?f.roughnessFactor:1,f.metallicRoughnessTexture!==void 0&&(u.push(t.assignTexture(l,"metalnessMap",f.metallicRoughnessTexture)),u.push(t.assignTexture(l,"roughnessMap",f.metallicRoughnessTexture))),r=this._invokeOne(function(g){return g.getMaterialType&&g.getMaterialType(e)}),u.push(Promise.all(this._invokeAll(function(g){return g.extendMaterialParams&&g.extendMaterialParams(e,l)})))}a.doubleSided===!0&&(l.side=DoubleSide);const d=a.alphaMode||ALPHA_MODES.OPAQUE;if(d===ALPHA_MODES.BLEND?(l.transparent=!0,l.depthWrite=!1):(l.transparent=!1,d===ALPHA_MODES.MASK&&(l.alphaTest=a.alphaCutoff!==void 0?a.alphaCutoff:.5)),a.normalTexture!==void 0&&r!==MeshBasicMaterial&&(u.push(t.assignTexture(l,"normalMap",a.normalTexture)),l.normalScale=new Vector2(1,1),a.normalTexture.scale!==void 0)){const f=a.normalTexture.scale;l.normalScale.set(f,f)}if(a.occlusionTexture!==void 0&&r!==MeshBasicMaterial&&(u.push(t.assignTexture(l,"aoMap",a.occlusionTexture)),a.occlusionTexture.strength!==void 0&&(l.aoMapIntensity=a.occlusionTexture.strength)),a.emissiveFactor!==void 0&&r!==MeshBasicMaterial){const f=a.emissiveFactor;l.emissive=new Color().setRGB(f[0],f[1],f[2],LinearSRGBColorSpace)}return a.emissiveTexture!==void 0&&r!==MeshBasicMaterial&&u.push(t.assignTexture(l,"emissiveMap",a.emissiveTexture,SRGBColorSpace)),Promise.all(u).then(function(){const f=new r(l);return a.name&&(f.name=a.name),assignExtrasToUserData(f,a),t.associations.set(f,{materials:e}),a.extensions&&addUnknownExtensionsToUserData(o,f,a),f})}createUniqueName(e){const t=PropertyBinding.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,n=this.extensions,o=this.primitiveCache;function a(l){return n[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(l,t).then(function(c){return addPrimitiveAttributes(c,l,t)})}const r=[];for(let l=0,c=e.length;l<c;l++){const u=e[l],d=createPrimitiveKey(u),f=o[d];if(f)r.push(f.promise);else{let g;u.extensions&&u.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]?g=a(u):g=addPrimitiveAttributes(new BufferGeometry,u,t),o[d]={primitive:u,promise:g},r.push(g)}}return Promise.all(r)}loadMesh(e){const t=this,n=this.json,o=this.extensions,a=n.meshes[e],r=a.primitives,l=[];for(let c=0,u=r.length;c<u;c++){const d=r[c].material===void 0?createDefaultMaterial(this.cache):this.getDependency("material",r[c].material);l.push(d)}return l.push(t.loadGeometries(r)),Promise.all(l).then(function(c){const u=c.slice(0,c.length-1),d=c[c.length-1],f=[];for(let _=0,b=d.length;_<b;_++){const B=d[_],I=r[_];let C;const R=u[_];if(I.mode===WEBGL_CONSTANTS.TRIANGLES||I.mode===WEBGL_CONSTANTS.TRIANGLE_STRIP||I.mode===WEBGL_CONSTANTS.TRIANGLE_FAN||I.mode===void 0)C=a.isSkinnedMesh===!0?new SkinnedMesh(B,R):new Mesh(B,R),C.isSkinnedMesh===!0&&C.normalizeSkinWeights(),I.mode===WEBGL_CONSTANTS.TRIANGLE_STRIP?C.geometry=toTrianglesDrawMode(C.geometry,TriangleStripDrawMode):I.mode===WEBGL_CONSTANTS.TRIANGLE_FAN&&(C.geometry=toTrianglesDrawMode(C.geometry,TriangleFanDrawMode));else if(I.mode===WEBGL_CONSTANTS.LINES)C=new LineSegments(B,R);else if(I.mode===WEBGL_CONSTANTS.LINE_STRIP)C=new Line(B,R);else if(I.mode===WEBGL_CONSTANTS.LINE_LOOP)C=new LineLoop(B,R);else if(I.mode===WEBGL_CONSTANTS.POINTS)C=new Points(B,R);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+I.mode);Object.keys(C.geometry.morphAttributes).length>0&&updateMorphTargets(C,a),C.name=t.createUniqueName(a.name||"mesh_"+e),assignExtrasToUserData(C,a),I.extensions&&addUnknownExtensionsToUserData(o,C,I),t.assignFinalMaterial(C),f.push(C)}for(let _=0,b=f.length;_<b;_++)t.associations.set(f[_],{meshes:e,primitives:_});if(f.length===1)return a.extensions&&addUnknownExtensionsToUserData(o,f[0],a),f[0];const g=new Group;a.extensions&&addUnknownExtensionsToUserData(o,g,a),t.associations.set(g,{meshes:e});for(let _=0,b=f.length;_<b;_++)g.add(f[_]);return g})}loadCamera(e){let t;const n=this.json.cameras[e],o=n[n.type];if(!o){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return n.type==="perspective"?t=new PerspectiveCamera(MathUtils.radToDeg(o.yfov),o.aspectRatio||1,o.znear||1,o.zfar||2e6):n.type==="orthographic"&&(t=new OrthographicCamera(-o.xmag,o.xmag,o.ymag,-o.ymag,o.znear,o.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),assignExtrasToUserData(t,n),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],n=[];for(let o=0,a=t.joints.length;o<a;o++)n.push(this._loadNodeShallow(t.joints[o]));return t.inverseBindMatrices!==void 0?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(o){const a=o.pop(),r=o,l=[],c=[];for(let u=0,d=r.length;u<d;u++){const f=r[u];if(f){l.push(f);const g=new Matrix4;a!==null&&g.fromArray(a.array,u*16),c.push(g)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[u])}return new Skeleton(l,c)})}loadAnimation(e){const t=this.json,n=this,o=t.animations[e],a=o.name?o.name:"animation_"+e,r=[],l=[],c=[],u=[],d=[];for(let f=0,g=o.channels.length;f<g;f++){const _=o.channels[f],b=o.samplers[_.sampler],B=_.target,I=B.node,C=o.parameters!==void 0?o.parameters[b.input]:b.input,R=o.parameters!==void 0?o.parameters[b.output]:b.output;B.node!==void 0&&(r.push(this.getDependency("node",I)),l.push(this.getDependency("accessor",C)),c.push(this.getDependency("accessor",R)),u.push(b),d.push(B))}return Promise.all([Promise.all(r),Promise.all(l),Promise.all(c),Promise.all(u),Promise.all(d)]).then(function(f){const g=f[0],_=f[1],b=f[2],B=f[3],I=f[4],C=[];for(let R=0,L=g.length;R<L;R++){const F=g[R],N=_[R],k=b[R],Q=B[R],z=I[R];if(F===void 0)continue;F.updateMatrix&&F.updateMatrix();const G=n._createAnimationTracks(F,N,k,Q,z);if(G)for(let O=0;O<G.length;O++)C.push(G[O])}return new AnimationClip(a,void 0,C)})}createNodeMesh(e){const t=this.json,n=this,o=t.nodes[e];return o.mesh===void 0?null:n.getDependency("mesh",o.mesh).then(function(a){const r=n._getNodeRef(n.meshCache,o.mesh,a);return o.weights!==void 0&&r.traverse(function(l){if(l.isMesh)for(let c=0,u=o.weights.length;c<u;c++)l.morphTargetInfluences[c]=o.weights[c]}),r})}loadNode(e){const t=this.json,n=this,o=t.nodes[e],a=n._loadNodeShallow(e),r=[],l=o.children||[];for(let u=0,d=l.length;u<d;u++)r.push(n.getDependency("node",l[u]));const c=o.skin===void 0?Promise.resolve(null):n.getDependency("skin",o.skin);return Promise.all([a,Promise.all(r),c]).then(function(u){const d=u[0],f=u[1],g=u[2];g!==null&&d.traverse(function(_){_.isSkinnedMesh&&_.bind(g,_identityMatrix)});for(let _=0,b=f.length;_<b;_++)d.add(f[_]);return d})}_loadNodeShallow(e){const t=this.json,n=this.extensions,o=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const a=t.nodes[e],r=a.name?o.createUniqueName(a.name):"",l=[],c=o._invokeOne(function(u){return u.createNodeMesh&&u.createNodeMesh(e)});return c&&l.push(c),a.camera!==void 0&&l.push(o.getDependency("camera",a.camera).then(function(u){return o._getNodeRef(o.cameraCache,a.camera,u)})),o._invokeAll(function(u){return u.createNodeAttachment&&u.createNodeAttachment(e)}).forEach(function(u){l.push(u)}),this.nodeCache[e]=Promise.all(l).then(function(u){let d;if(a.isBone===!0?d=new Bone:u.length>1?d=new Group:u.length===1?d=u[0]:d=new Object3D,d!==u[0])for(let f=0,g=u.length;f<g;f++)d.add(u[f]);if(a.name&&(d.userData.name=a.name,d.name=r),assignExtrasToUserData(d,a),a.extensions&&addUnknownExtensionsToUserData(n,d,a),a.matrix!==void 0){const f=new Matrix4;f.fromArray(a.matrix),d.applyMatrix4(f)}else a.translation!==void 0&&d.position.fromArray(a.translation),a.rotation!==void 0&&d.quaternion.fromArray(a.rotation),a.scale!==void 0&&d.scale.fromArray(a.scale);if(!o.associations.has(d))o.associations.set(d,{});else if(a.mesh!==void 0&&o.meshCache.refs[a.mesh]>1){const f=o.associations.get(d);o.associations.set(d,{...f})}return o.associations.get(d).nodes=e,d}),this.nodeCache[e]}loadScene(e){const t=this.extensions,n=this.json.scenes[e],o=this,a=new Group;n.name&&(a.name=o.createUniqueName(n.name)),assignExtrasToUserData(a,n),n.extensions&&addUnknownExtensionsToUserData(t,a,n);const r=n.nodes||[],l=[];for(let c=0,u=r.length;c<u;c++)l.push(o.getDependency("node",r[c]));return Promise.all(l).then(function(c){for(let d=0,f=c.length;d<f;d++)a.add(c[d]);const u=d=>{const f=new Map;for(const[g,_]of o.associations)(g instanceof Material||g instanceof Texture)&&f.set(g,_);return d.traverse(g=>{const _=o.associations.get(g);_!=null&&f.set(g,_)}),f};return o.associations=u(a),a})}_createAnimationTracks(e,t,n,o,a){const r=[],l=e.name?e.name:e.uuid,c=[];PATH_PROPERTIES[a.path]===PATH_PROPERTIES.weights?e.traverse(function(g){g.morphTargetInfluences&&c.push(g.name?g.name:g.uuid)}):c.push(l);let u;switch(PATH_PROPERTIES[a.path]){case PATH_PROPERTIES.weights:u=NumberKeyframeTrack;break;case PATH_PROPERTIES.rotation:u=QuaternionKeyframeTrack;break;case PATH_PROPERTIES.translation:case PATH_PROPERTIES.scale:u=VectorKeyframeTrack;break;default:switch(n.itemSize){case 1:u=NumberKeyframeTrack;break;case 2:case 3:default:u=VectorKeyframeTrack;break}break}const d=o.interpolation!==void 0?INTERPOLATION[o.interpolation]:InterpolateLinear,f=this._getArrayFromAccessor(n);for(let g=0,_=c.length;g<_;g++){const b=new u(c[g]+"."+PATH_PROPERTIES[a.path],t.array,f,d);o.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(b),r.push(b)}return r}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const n=getNormalizedComponentScale(t.constructor),o=new Float32Array(t.length);for(let a=0,r=t.length;a<r;a++)o[a]=t[a]*n;t=o}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(n){const o=this instanceof QuaternionKeyframeTrack?GLTFCubicSplineQuaternionInterpolant:GLTFCubicSplineInterpolant;return new o(this.times,this.values,this.getValueSize()/3,n)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function computeBounds(s,e,t){const n=e.attributes,o=new Box3;if(n.POSITION!==void 0){const l=t.json.accessors[n.POSITION],c=l.min,u=l.max;if(c!==void 0&&u!==void 0){if(o.set(new Vector3(c[0],c[1],c[2]),new Vector3(u[0],u[1],u[2])),l.normalized){const d=getNormalizedComponentScale(WEBGL_COMPONENT_TYPES[l.componentType]);o.min.multiplyScalar(d),o.max.multiplyScalar(d)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const a=e.targets;if(a!==void 0){const l=new Vector3,c=new Vector3;for(let u=0,d=a.length;u<d;u++){const f=a[u];if(f.POSITION!==void 0){const g=t.json.accessors[f.POSITION],_=g.min,b=g.max;if(_!==void 0&&b!==void 0){if(c.setX(Math.max(Math.abs(_[0]),Math.abs(b[0]))),c.setY(Math.max(Math.abs(_[1]),Math.abs(b[1]))),c.setZ(Math.max(Math.abs(_[2]),Math.abs(b[2]))),g.normalized){const B=getNormalizedComponentScale(WEBGL_COMPONENT_TYPES[g.componentType]);c.multiplyScalar(B)}l.max(c)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}o.expandByVector(l)}s.boundingBox=o;const r=new Sphere;o.getCenter(r.center),r.radius=o.min.distanceTo(o.max)/2,s.boundingSphere=r}function addPrimitiveAttributes(s,e,t){const n=e.attributes,o=[];function a(r,l){return t.getDependency("accessor",r).then(function(c){s.setAttribute(l,c)})}for(const r in n){const l=ATTRIBUTES[r]||r.toLowerCase();l in s.attributes||o.push(a(n[r],l))}if(e.indices!==void 0&&!s.index){const r=t.getDependency("accessor",e.indices).then(function(l){s.setIndex(l)});o.push(r)}return ColorManagement.workingColorSpace!==LinearSRGBColorSpace&&"COLOR_0"in n&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${ColorManagement.workingColorSpace}" not supported.`),assignExtrasToUserData(s,e),computeBounds(s,e,t),Promise.all(o).then(function(){return e.targets!==void 0?addMorphTargets(s,e.targets,t):s})}function isMobile(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||navigator.maxTouchPoints&&navigator.maxTouchPoints>2}class MobileController{constructor(e){this.container=e.parentNode,this.joystick=null,this.runButton=null,this.touchAreas=null,this.isRunning=!0,this.joystickData={x:0,y:0},this.isMobile=isMobile(),this.isPortrait=window.innerHeight>window.innerWidth,this.isMobile&&(this.createMobileControls(),this.bindOrientationChange())}createMobileControls(){this.createJoystick(),this.createTouchAreas()}createTouchAreas(){const e=document.createElement("div"),t=document.createElement("div"),n=document.createElement("div");this.container.appendChild(e),this.container.appendChild(t),this.container.appendChild(n),this.touchAreas={left:e,right:t,top:n},this.updateTouchAreasLayout(),this.addTouchAreaEvents()}updateTouchAreasLayout(){this.isPortrait?(this.touchAreas.left.style.cssText=`
        position: fixed;
        top: 50%;
        left: 0;
        width: 40%;
        height: 50vh;
        z-index: 999;
        touch-action: none;
        pointer-events: auto;
      `,this.touchAreas.right.style.cssText=`
        position: fixed;
        top: 0;
        right: 0;
        width: 60%;
        height: 100vh;
        z-index: 999;
        touch-action: none;
        pointer-events: none;
      `,this.touchAreas.top.style.cssText=`
        position: fixed;
        top: 0;
        left: 0;
        width: 40%;
        height: 50vh;
        z-index: 999;
        touch-action: none;
        pointer-events: none;
      `):(this.touchAreas.left.style.cssText=`
        position: fixed;
        top: 0;
        left: 0;
        width: 40%;
        height: 100vh;
        z-index: 999;
        touch-action: none;
        pointer-events: auto;
      `,this.touchAreas.right.style.cssText=`
        position: fixed;
        top: 0;
        right: 0;
        width: 60%;
        height: 100vh;
        z-index: 999;
        touch-action: none;
        pointer-events: none;
      `,this.touchAreas.top.style.cssText=`
        position: fixed;
        top: 0;
        left: 0;
        width: 0;
        height: 0;
        z-index: 999;
        touch-action: none;
        pointer-events: none;
        display: none;
      `)}bindOrientationChange(){const e=()=>{const t=this.isPortrait;this.isPortrait=window.innerHeight>window.innerWidth,t!==this.isPortrait&&this.updateTouchAreasLayout()};window.addEventListener("resize",e),window.addEventListener("orientationchange",e)}createJoystick(){const e=document.createElement("div");e.style.cssText=`
            position: fixed;
            bottom: 50px;
            left: 50px;
            width: 120px;
            height: 120px;
            background: rgba(255, 255, 255, 0.15);
            border: 2px solid rgba(255, 255, 255, 0.25);
            border-radius: 50%;
            z-index: 1001;
            touch-action: none;
            display: block;
            pointer-events: none;
            opacity: 0.4;
        `;const t=document.createElement("div");t.style.cssText=`
            position: absolute;
            top: 50%;
            left: 50%;
            width: 40px;
            height: 40px;
            background: rgba(255, 255, 255, 0.4);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: none;
        `,e.appendChild(t),this.container.appendChild(e),this.joystick={container:e,handle:t,centerX:60,centerY:60,maxDistance:40,isVisible:!1,isActive:!1,defaultLeft:50,defaultBottom:50}}createRunButton(){const e=document.createElement("div");e.innerHTML="走",e.style.cssText=`
            position: fixed;
            bottom: 50px;
            right: 50px;
            width: 80px;
            height: 80px;
            background: rgba(255, 255, 255, 0.3);
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            font-weight: bold;
            color: white;
            z-index: 1000;
            touch-action: none;
            user-select: none;
        `,this.container.appendChild(e),this.runButton=e,this.addRunButtonEvents()}addTouchAreaEvents(){let e=!1,t=null;const n=r=>{for(let l=0;l<r.touches.length;l++){const c=r.touches[l],u=this.touchAreas.left.getBoundingClientRect();if(c.clientX>=u.left&&c.clientX<=u.right&&c.clientY>=u.top&&c.clientY<=u.bottom){if(e&&t!==null)continue;r.preventDefault(),t=c.identifier,this.activateJoystickAt(c.clientX,c.clientY),e=!0;break}}},o=r=>{if(!e||!this.joystick.isActive||t===null)return;let l=null;for(let c=0;c<r.touches.length;c++)if(r.touches[c].identifier===t){l=r.touches[c];break}l&&(r.preventDefault(),this.updateJoystickPosition(l.clientX,l.clientY))},a=r=>{if(!e||t===null)return;let l=!0;for(let c=0;c<r.touches.length;c++)if(r.touches[c].identifier===t){l=!1;break}l&&(r.preventDefault(),this.deactivateJoystick(),e=!1,t=null)};document.addEventListener("touchstart",n,{passive:!1}),document.addEventListener("touchmove",o,{passive:!1}),document.addEventListener("touchend",a,{passive:!1})}activateJoystickAt(e,t){this.joystick.isActive=!0,this.joystick.isVisible=!0,this.joystick.container.style.background="rgba(255, 255, 255, 0.3)",this.joystick.container.style.border="2px solid rgba(255, 255, 255, 0.5)",this.joystick.container.style.opacity="1",this.joystick.container.style.pointerEvents="auto",this.joystick.handle.style.background="rgba(255, 255, 255, 0.8)",this.joystick.container.style.left=`${e}px`,this.joystick.container.style.top=`${t}px`,this.joystick.container.style.bottom="auto",this.joystick.container.style.transform="translate(-50%, -50%)",this.joystick.handle.style.transform="translate(-50%, -50%)",this.joystickData.x=0,this.joystickData.y=0}updateJoystickPosition(e,t){if(!this.joystick.isVisible||!this.joystick.isActive)return;const n=this.joystick.container.getBoundingClientRect(),o=n.left+n.width/2,a=n.top+n.height/2,r=e-o,l=t-a,c=Math.sqrt(r*r+l*l),{maxDistance:u}=this.joystick;let d=r,f=l;c>u&&(d=r/c*u,f=l/c*u),this.joystick.handle.style.transform=`translate(calc(-50% + ${d}px), calc(-50% + ${f}px))`,this.joystickData.x=d/u,this.joystickData.y=-f/u}deactivateJoystick(){this.joystick.isActive=!1,this.joystick.isVisible=!1,this.joystick.container.style.background="rgba(255, 255, 255, 0.15)",this.joystick.container.style.border="2px solid rgba(255, 255, 255, 0.25)",this.joystick.container.style.opacity="0.4",this.joystick.container.style.pointerEvents="none",this.joystick.handle.style.background="rgba(255, 255, 255, 0.4)",this.joystick.container.style.left=`${this.joystick.defaultLeft}px`,this.joystick.container.style.top="auto",this.joystick.container.style.bottom=`${this.joystick.defaultBottom}px`,this.joystick.container.style.transform="none",this.joystick.handle.style.transform="translate(-50%, -50%)",this.joystickData.x=0,this.joystickData.y=0}addRunButtonEvents(){const e=t=>{t.preventDefault(),this.isRunning=!this.isRunning,this.isRunning?(this.runButton.innerHTML="走",this.runButton.style.background="rgba(255, 255, 255, 0.3)"):(this.runButton.innerHTML="跑",this.runButton.style.background="rgba(255, 100, 100, 0.6)")};this.runButton.addEventListener("touchstart",e,{passive:!1}),this.runButton.addEventListener("click",e)}getMovementInput(){return this.isMobile?{...this.joystickData}:{x:0,y:0}}getRunState(){return this.isMobile?this.isRunning:!1}isMobileDevice(){return this.isMobile}destroy(){this.touchAreas&&(this.touchAreas.left.remove(),this.touchAreas.right.remove(),this.touchAreas.top&&this.touchAreas.top.remove()),this.joystick&&this.joystick.container.remove(),this.runButton&&this.runButton.remove(),window.removeEventListener("resize",this.handleOrientationChange),window.removeEventListener("orientationchange",this.handleOrientationChange)}}const W="w",A="a",S="s",D="d",DIRECTIONS=[W,A,S,D];class InputController{constructor(e){this.keysPressed={},this.characterControls=null,this.mobileController=new MobileController(e),this.container=e,this.isMouseHidden=!1,this.isOrbiting=!1,this.mouseHideTimer=null,this.mouseHideDelay=3e3,this.isMousePressed=!1,this.orbitButton=null,this.onOrbitStart=null,this.onOrbitEnd=null,this.initEventListeners(),this.createOrbitButton()}initEventListeners(){document.addEventListener("keydown",this.onKeyDown.bind(this),!1),document.addEventListener("keyup",this.onKeyUp.bind(this),!1),this.mobileController.isMobileDevice()||(this.container.addEventListener("mousedown",this.onMouseDown.bind(this),!1),this.container.addEventListener("mousemove",this.onMouseMove.bind(this),!1),this.container.addEventListener("mouseup",this.onMouseUp.bind(this),!1),document.addEventListener("keydown",this.onEscapeKey.bind(this),!1),this.resetMouseHideTimer())}onMouseDown(e){this.mobileController.isMobileDevice()||(this.isMousePressed=!0,this.hideMouse())}onMouseMove(e){this.mobileController.isMobileDevice()||this.isMousePressed||(this.isMouseHidden&&this.showMouse(),this.resetMouseHideTimer())}onMouseUp(e){this.mobileController.isMobileDevice()||(this.isMousePressed=!1,this.showMouse(),this.resetMouseHideTimer())}onEscapeKey(e){e.key==="Escape"&&this.isMouseHidden&&this.showMouse()}hideMouse(){this.container.style.cursor="none",this.isMouseHidden=!0,this.clearMouseHideTimer()}showMouse(){this.container.style.cursor="default",this.isMouseHidden=!1,this.clearMouseHideTimer()}resetMouseHideTimer(){this.clearMouseHideTimer(),this.mouseHideTimer=setTimeout(()=>{this.isMouseHidden||this.hideMouse()},this.mouseHideDelay)}clearMouseHideTimer(){this.mouseHideTimer&&(clearTimeout(this.mouseHideTimer),this.mouseHideTimer=null)}onKeyDown(e){e.shiftKey&&this.characterControls?this.characterControls.switchRunToggle():this.keysPressed[e.key.toLowerCase()]=!0}onKeyUp(e){this.keysPressed[e.key.toLowerCase()]=!1}setCharacterControls(e){this.characterControls=e}isDirectionPressed(){if(this.isOrbiting)return!1;const e=DIRECTIONS.some(o=>this.keysPressed[o]===!0),t=this.mobileController.getMovementInput(),n=Math.abs(t.x)>.1||Math.abs(t.y)>.1;return e||n}isKeyPressed(e){return this.keysPressed[e]===!0}getMovementDirection(){if(this.isOrbiting)return{forward:!1,backward:!1,left:!1,right:!1,joystick:{x:0,y:0}};if(this.mobileController.isMobileDevice()){const e=this.mobileController.getMovementInput();if(Math.abs(e.x)>.1||Math.abs(e.y)>.1)return{forward:e.y>.1,backward:e.y<-.1,left:e.x<-.1,right:e.x>.1,joystick:e}}return{forward:this.keysPressed[W],backward:this.keysPressed[S],left:this.keysPressed[A],right:this.keysPressed[D]}}getDirectionOffset(){if(this.isOrbiting)return 0;if(this.mobileController.isMobileDevice()){const t=this.mobileController.getMovementInput();if(Math.abs(t.x)>.1||Math.abs(t.y)>.1)return Math.atan2(-t.x,t.y)}let e=0;return this.keysPressed[W]?this.keysPressed[A]?e=Math.PI/4:this.keysPressed[D]&&(e=-Math.PI/4):this.keysPressed[S]?this.keysPressed[A]?e=Math.PI/4+Math.PI/2:this.keysPressed[D]?e=-Math.PI/4-Math.PI/2:e=Math.PI:this.keysPressed[A]?e=Math.PI/2:this.keysPressed[D]&&(e=-Math.PI/2),e}getRunToggleState(){return this.mobileController.isMobileDevice()?this.mobileController.getRunState():!1}getOrbitState(){return this.mobileController.getOrbitState()}createOrbitButton(){const e=document.createElement("div");e.innerHTML="环顾",e.style.cssText=`
            position: fixed;
            bottom: 50px;
            right: 50px;
            width: 80px;
            height: 80px;
            background: rgba(255, 255, 255, 0.3);
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
            font-weight: bold;
            color: white;
            z-index: 1000;
            touch-action: none;
            user-select: none;
        `,this.container.parentNode.appendChild(e),this.orbitButton=e,this.addOrbitButtonEvents()}addOrbitButtonEvents(){const e=n=>{n.preventDefault(),this.isOrbiting=!0,this.orbitButton.style.background="rgba(100, 255, 100, 0.6)",this.onOrbitStart&&this.onOrbitStart()},t=n=>{n.preventDefault(),this.isOrbiting=!1,this.orbitButton.style.background="rgba(255, 255, 255, 0.3)",this.onOrbitEnd&&this.onOrbitEnd()};this.orbitButton.addEventListener("touchstart",e,{passive:!1}),this.orbitButton.addEventListener("touchend",t,{passive:!1}),this.orbitButton.addEventListener("touchcancel",t,{passive:!1}),this.orbitButton.addEventListener("mousedown",e,{passive:!1}),this.orbitButton.addEventListener("mouseup",t,{passive:!1}),this.orbitButton.addEventListener("mouseleave",t,{passive:!1})}setOrbitCallbacks(e,t){this.onOrbitStart=e,this.onOrbitEnd=t}destroy(){document.removeEventListener("keydown",this.onKeyDown),document.removeEventListener("keyup",this.onKeyUp),this.mobileController.isMobileDevice()||(this.container.removeEventListener("mousedown",this.onMouseDown),this.container.removeEventListener("mousemove",this.onMouseMove),this.container.removeEventListener("mouseup",this.onMouseUp),document.removeEventListener("keydown",this.onEscapeKey),this.clearMouseHideTimer(),this.showMouse()),this.orbitButton&&this.orbitButton.remove(),this.mobileController.destroy()}}class Capsule{constructor(e=new Vector3(0,0,0),t=new Vector3(0,1,0),n=1){this.start=e,this.end=t,this.radius=n}clone(){return new this.constructor().copy(this)}set(e,t,n){return this.start.copy(e),this.end.copy(t),this.radius=n,this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this.radius=e.radius,this}getCenter(e){return e.copy(this.end).add(this.start).multiplyScalar(.5)}translate(e){return this.start.add(e),this.end.add(e),this}intersectsBox(e){return checkAABBAxis(this.start.x,this.start.y,this.end.x,this.end.y,e.min.x,e.max.x,e.min.y,e.max.y,this.radius)&&checkAABBAxis(this.start.x,this.start.z,this.end.x,this.end.z,e.min.x,e.max.x,e.min.z,e.max.z,this.radius)&&checkAABBAxis(this.start.y,this.start.z,this.end.y,this.end.z,e.min.y,e.max.y,e.min.z,e.max.z,this.radius)}}function checkAABBAxis(s,e,t,n,o,a,r,l,c){return(o-s<c||o-t<c)&&(s-a<c||t-a<c)&&(r-e<c||r-n<c)&&(e-l<c||n-l<c)}class PlayerController{constructor(e,t,n,o){console.log("player controller",n),this.scene=e,this.worldOctree=t,this.model=null,this.mixer=null,this.animationsMap=new Map,this.initialPosition=n!=null&&n.player.position?new Vector3(n.player.position.x,n.player.position.y,n.player.position.z):new Vector3(0,0,0),this.initialRotation=n!=null&&n.player.rotation?new Vector3(n.player.rotation.x,n.player.rotation.y,n.player.rotation.z):new Vector3(0,0,0),this.playerVelocity=new Vector3,this.playerOnFloor=!0,this.gravity=30,this.runVelocity=5,this.walkVelocity=2,this.toggleRun=!0,this.currentAction="Idle",this.fadeDuration=.2,this.walkDirection=new Vector3,this.rotateAngle=new Vector3(0,1,0),this.rotateQuarternion=new Quaternion,this.playerCollider=new Capsule(new Vector3(this.initialPosition.x,this.initialPosition.y+.35,this.initialPosition.z),new Vector3(this.initialPosition.x,this.initialPosition.y+1,this.initialPosition.z),.35),this.ensurePlayerOnGround()}async init(){await this.loadCharacterModel(),console.log("loadCharacterModel",this.initialPosition)}loadCharacterModel(){return new Promise((e,t)=>{const n=new GLTFLoader;n.setPath("./models/"),n.load("Soldier.glb",o=>{this.model=o.scene,this.model.traverse(r=>{r.isMesh&&(r.castShadow=!0)}),this.initialPosition&&(this.model.position.copy(this.initialPosition),this.playerCollider.start.set(this.initialPosition.x,this.initialPosition.y+.35,this.initialPosition.z),this.playerCollider.end.set(this.initialPosition.x,this.initialPosition.y+1,this.initialPosition.z)),this.initialRotation&&(this.model.rotation.x=this.initialRotation.x,this.model.rotation.y=this.initialRotation.y,this.model.rotation.z=this.initialRotation.z),this.scene.add(this.model);const a=o.animations;this.mixer=new AnimationMixer(this.model),a.filter(r=>r.name!=="TPose").forEach(r=>{this.animationsMap.set(r.name,this.mixer.clipAction(r))}),this.animationsMap.forEach((r,l)=>{l===this.currentAction&&r.play()}),e(this)},void 0,t)})}isLoaded(){return this.model!==null&&this.mixer!==null}switchRunToggle(){this.toggleRun=!this.toggleRun}ensurePlayerOnGround(){const e=new Vector3(0,10,0);new Vector3(0,-1,0),this.playerCollider.start.copy(e),this.playerCollider.end.copy(new Vector3(0,e.y+.65,0)),this.playerVelocity.set(0,-.1,0)}update(e,t,n){if(!this.mixer)return;const o=t.isDirectionPressed(),a=t.getRunToggleState(),r=t.mobileController.isMobileDevice()?a:this.toggleRun;let l="";if(o&&r?l="Run":o?l="Walk":l="Idle",this.currentAction!==l){const c=this.animationsMap.get(l),u=this.animationsMap.get(this.currentAction);c&&u&&(u.fadeOut(this.fadeDuration),c.reset().fadeIn(this.fadeDuration).play(),this.currentAction=l)}this.mixer.update(e),this.playerOnFloor?this.playerVelocity.y=Math.max(0,this.playerVelocity.y):this.playerVelocity.y-=this.gravity*e,this.currentAction==="Run"||this.currentAction==="Walk"?this.handleMovement(t,n):(this.playerVelocity.x-=this.playerVelocity.x*10*e,this.playerVelocity.z-=this.playerVelocity.z*10*e),this.updatePosition(e)}handleMovement(e,t){const n=Math.atan2(t.position.x-this.model.position.x,t.position.z-this.model.position.z),o=e.getDirectionOffset();this.rotateQuarternion.setFromAxisAngle(this.rotateAngle,n+o),this.model.quaternion.rotateTowards(this.rotateQuarternion,.2),t.getWorldDirection(this.walkDirection),this.walkDirection.y=0,this.walkDirection.normalize(),this.walkDirection.applyAxisAngle(this.rotateAngle,o);const a=this.currentAction==="Run"?this.runVelocity:this.walkVelocity;this.playerVelocity.x=this.walkDirection.x*a,this.playerVelocity.z=this.walkDirection.z*a}updatePosition(e){if(!this.model)return;const t=this.playerVelocity.clone().multiplyScalar(e);this.playerCollider.translate(t),this.playerOnFloor=!1;const n=this.worldOctree.capsuleIntersect(this.playerCollider);n&&(this.playerOnFloor=n.normal.y>0,this.playerOnFloor||this.playerVelocity.addScaledVector(n.normal,-n.normal.dot(this.playerVelocity)),this.playerCollider.translate(n.normal.multiplyScalar(n.depth))),this.playerCollider.end.y<.35&&(this.playerCollider.end.y=.35,this.playerCollider.start.y=.35-.65,this.playerOnFloor=!0,this.playerVelocity.y=0),this.model.position.copy(this.playerCollider.end),this.model.position.y-=1,this.initialPosition.copy(this.model.position)}getPosition(){return this.model?this.model.position.clone():new Vector3}getVelocity(){return this.playerVelocity.clone()}getRotation(){return this.model?this.model.rotation.clone():new Euler}setPosition(e,t,n){this.model&&(this.model.position.set(e,t,n),this.playerCollider.start.set(e,t+.35,n),this.playerCollider.end.set(e,t+1,n),this.initialPosition.set(e,t,n),this.playerVelocity.set(0,0,0),console.log("玩家位置已设置为:",{x:e,y:t,z:n}))}setRotation(e,t,n){this.model&&(this.model.rotation.set(e,t,n),console.log("玩家朝向已设置为:",{x:e,y:t,z:n}))}setPositionAndRotation(e,t){e&&this.setPosition(e.x,e.y,e.z),t&&this.setRotation(t.x,t.y,t.z)}saveCurrentPosition(e,t="default"){if(!this.model||!e)return console.warn("PlayerController或SceneController未初始化完成，无法保存位置"),!1;try{const n=this.getPosition(),o=this.getRotation(),a=e.getCamera(),r=e.getOrbitControl(),l={position:{x:a.position.x,y:a.position.y,z:a.position.z},target:{x:r.target.x,y:r.target.y,z:r.target.z},polarAngle:r.getPolarAngle(),azimuthalAngle:r.getAzimuthalAngle(),distance:r.getDistance()},c={timestamp:Date.now(),modelUrl:t,player:{position:{x:n.x,y:n.y,z:n.z},rotation:{x:o.x,y:o.y,z:o.z}},camera:l},u=`metaverse_position_${t}`;return localStorage.setItem(u,JSON.stringify(c)),console.log("位置信息已保存:",c,JSON.stringify(c)),!0}catch(n){return console.error("保存位置信息失败:",n),!1}}restoreSavedPosition(e,t="default"){var n,o;if(!this.model||!e)return console.warn("PlayerController或SceneController未初始化完成，无法恢复位置"),!1;try{const a=`metaverse_position_${t}`,r=localStorage.getItem(a);if(!r)return console.log("没有找到保存的位置信息"),!1;const l=JSON.parse(r);return console.log("恢复位置信息:",l),l!=null&&l.player&&this.setPositionAndRotation((n=l.player)==null?void 0:n.position,(o=l.player)==null?void 0:o.rotation),l!=null&&l.camera&&e.setCameraAndOribitControl(l.camera),!0}catch(a){return console.error("恢复位置信息失败:",a),!1}}hasSavedPosition(e="default"){const t=`metaverse_position_${e}`;return localStorage.getItem(t)!==null}clearSavedPosition(e="default"){try{const t=`metaverse_position_${e}`;return localStorage.removeItem(t),console.log("已清除保存的位置信息"),!0}catch(t){return console.error("清除位置信息失败:",t),!1}}}const _changeEvent={type:"change"},_startEvent={type:"start"},_endEvent={type:"end"},_ray=new Ray$1,_plane$1=new Plane,_TILT_LIMIT=Math.cos(70*MathUtils.DEG2RAD),_v=new Vector3,_twoPI=2*Math.PI,_STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},_EPS=1e-6;class OrbitControls extends Controls{constructor(e,t=null){super(e,t),this.state=_STATE.NONE,this.target=new Vector3,this.cursor=new Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:MOUSE.ROTATE,MIDDLE:MOUSE.DOLLY,RIGHT:MOUSE.PAN},this.touches={ONE:TOUCH.ROTATE,TWO:TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new Vector3,this._lastQuaternion=new Quaternion,this._lastTargetPosition=new Vector3,this._quat=new Quaternion().setFromUnitVectors(e.up,new Vector3(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Spherical,this._sphericalDelta=new Spherical,this._scale=1,this._panOffset=new Vector3,this._rotateStart=new Vector2,this._rotateEnd=new Vector2,this._rotateDelta=new Vector2,this._panStart=new Vector2,this._panEnd=new Vector2,this._panDelta=new Vector2,this._dollyStart=new Vector2,this._dollyEnd=new Vector2,this._dollyDelta=new Vector2,this._dollyDirection=new Vector3,this._mouse=new Vector2,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=onPointerMove.bind(this),this._onPointerDown=onPointerDown.bind(this),this._onPointerUp=onPointerUp.bind(this),this._onContextMenu=onContextMenu.bind(this),this._onMouseWheel=onMouseWheel.bind(this),this._onKeyDown=onKeyDown.bind(this),this._onTouchStart=onTouchStart.bind(this),this._onTouchMove=onTouchMove.bind(this),this._onMouseDown=onMouseDown.bind(this),this._onMouseMove=onMouseMove.bind(this),this._interceptControlDown=interceptControlDown.bind(this),this._interceptControlUp=interceptControlUp.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(_changeEvent),this.update(),this.state=_STATE.NONE}update(e=null){const t=this.object.position;_v.copy(t).sub(this.target),_v.applyQuaternion(this._quat),this._spherical.setFromVector3(_v),this.autoRotate&&this.state===_STATE.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,o=this.maxAzimuthAngle;isFinite(n)&&isFinite(o)&&(n<-Math.PI?n+=_twoPI:n>Math.PI&&(n-=_twoPI),o<-Math.PI?o+=_twoPI:o>Math.PI&&(o-=_twoPI),n<=o?this._spherical.theta=Math.max(n,Math.min(o,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+o)/2?Math.max(n,this._spherical.theta):Math.min(o,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let a=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const r=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),a=r!=this._spherical.radius}if(_v.setFromSpherical(this._spherical),_v.applyQuaternion(this._quatInverse),t.copy(this.target).add(_v),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let r=null;if(this.object.isPerspectiveCamera){const l=_v.length();r=this._clampDistance(l*this._scale);const c=l-r;this.object.position.addScaledVector(this._dollyDirection,c),this.object.updateMatrixWorld(),a=!!c}else if(this.object.isOrthographicCamera){const l=new Vector3(this._mouse.x,this._mouse.y,0);l.unproject(this.object);const c=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),a=c!==this.object.zoom;const u=new Vector3(this._mouse.x,this._mouse.y,0);u.unproject(this.object),this.object.position.sub(u).add(l),this.object.updateMatrixWorld(),r=_v.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;r!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(r).add(this.object.position):(_ray.origin.copy(this.object.position),_ray.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(_ray.direction))<_TILT_LIMIT?this.object.lookAt(this.target):(_plane$1.setFromNormalAndCoplanarPoint(this.object.up,this.target),_ray.intersectPlane(_plane$1,this.target))))}else if(this.object.isOrthographicCamera){const r=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),r!==this.object.zoom&&(this.object.updateProjectionMatrix(),a=!0)}return this._scale=1,this._performCursorZoom=!1,a||this._lastPosition.distanceToSquared(this.object.position)>_EPS||8*(1-this._lastQuaternion.dot(this.object.quaternion))>_EPS||this._lastTargetPosition.distanceToSquared(this.target)>_EPS?(this.dispatchEvent(_changeEvent),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?_twoPI/60*this.autoRotateSpeed*e:_twoPI/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){_v.setFromMatrixColumn(t,0),_v.multiplyScalar(-e),this._panOffset.add(_v)}_panUp(e,t){this.screenSpacePanning===!0?_v.setFromMatrixColumn(t,1):(_v.setFromMatrixColumn(t,0),_v.crossVectors(this.object.up,_v)),_v.multiplyScalar(e),this._panOffset.add(_v)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const o=this.object.position;_v.copy(o).sub(this.target);let a=_v.length();a*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*a/n.clientHeight,this.object.matrix),this._panUp(2*t*a/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),o=e-n.left,a=t-n.top,r=n.width,l=n.height;this._mouse.x=o/r*2-1,this._mouse.y=-(a/l)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(_twoPI*this._rotateDelta.x/t.clientHeight),this._rotateUp(_twoPI*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(_twoPI*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-_twoPI*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(_twoPI*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-_twoPI*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),o=.5*(e.pageY+t.y);this._rotateStart.set(n,o)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),o=.5*(e.pageY+t.y);this._panStart.set(n,o)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,o=e.pageY-t.y,a=Math.sqrt(n*n+o*o);this._dollyStart.set(0,a)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),o=.5*(e.pageX+n.x),a=.5*(e.pageY+n.y);this._rotateEnd.set(o,a)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(_twoPI*this._rotateDelta.x/t.clientHeight),this._rotateUp(_twoPI*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),o=.5*(e.pageY+t.y);this._panEnd.set(n,o)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,o=e.pageY-t.y,a=Math.sqrt(n*n+o*o);this._dollyEnd.set(0,a),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const r=(e.pageX+t.x)*.5,l=(e.pageY+t.y)*.5;this._updateZoomParameters(r,l)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new Vector2,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function onPointerDown(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(s)&&(this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s)))}function onPointerMove(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function onPointerUp(s){switch(this._removePointer(s),this._pointers.length){case 0:this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(_endEvent),this.state=_STATE.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function onMouseDown(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case MOUSE.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(s),this.state=_STATE.DOLLY;break;case MOUSE.ROTATE:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=_STATE.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=_STATE.ROTATE}break;case MOUSE.PAN:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=_STATE.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=_STATE.PAN}break;default:this.state=_STATE.NONE}this.state!==_STATE.NONE&&this.dispatchEvent(_startEvent)}function onMouseMove(s){switch(this.state){case _STATE.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(s);break;case _STATE.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(s);break;case _STATE.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(s);break}}function onMouseWheel(s){this.enabled===!1||this.enableZoom===!1||this.state!==_STATE.NONE||(s.preventDefault(),this.dispatchEvent(_startEvent),this._handleMouseWheel(this._customWheelEvent(s)),this.dispatchEvent(_endEvent))}function onKeyDown(s){this.enabled!==!1&&this._handleKeyDown(s)}function onTouchStart(s){switch(this._trackPointer(s),this._pointers.length){case 1:switch(this.touches.ONE){case TOUCH.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(s),this.state=_STATE.TOUCH_ROTATE;break;case TOUCH.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(s),this.state=_STATE.TOUCH_PAN;break;default:this.state=_STATE.NONE}break;case 2:switch(this.touches.TWO){case TOUCH.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(s),this.state=_STATE.TOUCH_DOLLY_PAN;break;case TOUCH.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(s),this.state=_STATE.TOUCH_DOLLY_ROTATE;break;default:this.state=_STATE.NONE}break;default:this.state=_STATE.NONE}this.state!==_STATE.NONE&&this.dispatchEvent(_startEvent)}function onTouchMove(s){switch(this._trackPointer(s),this.state){case _STATE.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(s),this.update();break;case _STATE.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(s),this.update();break;case _STATE.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(s),this.update();break;case _STATE.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(s),this.update();break;default:this.state=_STATE.NONE}}function onContextMenu(s){this.enabled!==!1&&s.preventDefault()}function interceptControlDown(s){s.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function interceptControlUp(s){s.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const _v1=new Vector3,_v2=new Vector3,_point1=new Vector3,_point2=new Vector3,_plane=new Plane,_line1=new Line3,_line2=new Line3,_sphere=new Sphere,_capsule=new Capsule,_temp1=new Vector3,_temp2=new Vector3,_temp3=new Vector3,EPS=1e-10;function lineToLineClosestPoints(s,e,t=null,n=null){const o=_temp1.copy(s.end).sub(s.start),a=_temp2.copy(e.end).sub(e.start),r=_temp3.copy(e.start).sub(s.start),l=o.dot(a),c=o.dot(o),u=a.dot(a),d=a.dot(r),f=o.dot(r);let g,_;const b=c*u-l*l;if(Math.abs(b)<EPS){const B=-d/u,I=(l-d)/u;Math.abs(B-.5)<Math.abs(I-.5)?(g=0,_=B):(g=1,_=I)}else g=(d*l+f*u)/b,_=(g*l-d)/u;_=Math.max(0,Math.min(1,_)),g=Math.max(0,Math.min(1,g)),t&&t.copy(o).multiplyScalar(g).add(s.start),n&&n.copy(a).multiplyScalar(_).add(e.start)}class Octree{constructor(e){this.box=e,this.bounds=new Box3,this.layers=new Layers,this.trianglesPerLeaf=8,this.maxLevel=16,this.subTrees=[],this.triangles=[]}addTriangle(e){return this.bounds.min.x=Math.min(this.bounds.min.x,e.a.x,e.b.x,e.c.x),this.bounds.min.y=Math.min(this.bounds.min.y,e.a.y,e.b.y,e.c.y),this.bounds.min.z=Math.min(this.bounds.min.z,e.a.z,e.b.z,e.c.z),this.bounds.max.x=Math.max(this.bounds.max.x,e.a.x,e.b.x,e.c.x),this.bounds.max.y=Math.max(this.bounds.max.y,e.a.y,e.b.y,e.c.y),this.bounds.max.z=Math.max(this.bounds.max.z,e.a.z,e.b.z,e.c.z),this.triangles.push(e),this}calcBox(){return this.box=this.bounds.clone(),this.box.min.x-=.01,this.box.min.y-=.01,this.box.min.z-=.01,this}split(e){if(!this.box)return;const t=[],n=_v2.copy(this.box.max).sub(this.box.min).multiplyScalar(.5);for(let a=0;a<2;a++)for(let r=0;r<2;r++)for(let l=0;l<2;l++){const c=new Box3,u=_v1.set(a,r,l);c.min.copy(this.box.min).add(u.multiply(n)),c.max.copy(c.min).add(n),t.push(new Octree(c))}let o;for(;o=this.triangles.pop();)for(let a=0;a<t.length;a++)t[a].box.intersectsTriangle(o)&&t[a].triangles.push(o);for(let a=0;a<t.length;a++){const r=t[a].triangles.length;r>this.trianglesPerLeaf&&e<this.maxLevel&&t[a].split(e+1),r!==0&&this.subTrees.push(t[a])}return this}build(){return this.calcBox(),this.split(0),this}getRayTriangles(e,t){for(let n=0;n<this.subTrees.length;n++){const o=this.subTrees[n];if(e.intersectsBox(o.box))if(o.triangles.length>0)for(let a=0;a<o.triangles.length;a++)t.indexOf(o.triangles[a])===-1&&t.push(o.triangles[a]);else o.getRayTriangles(e,t)}}triangleCapsuleIntersect(e,t){t.getPlane(_plane);const n=_plane.distanceToPoint(e.start)-e.radius,o=_plane.distanceToPoint(e.end)-e.radius;if(n>0&&o>0||n<-e.radius&&o<-e.radius)return!1;const a=Math.abs(n/(Math.abs(n)+Math.abs(o))),r=_v1.copy(e.start).lerp(e.end,a);if(t.containsPoint(r))return{normal:_plane.normal.clone(),point:r.clone(),depth:Math.abs(Math.min(n,o))};const l=e.radius*e.radius,c=_line1.set(e.start,e.end),u=[[t.a,t.b],[t.b,t.c],[t.c,t.a]];for(let d=0;d<u.length;d++){const f=_line2.set(u[d][0],u[d][1]);if(lineToLineClosestPoints(c,f,_point1,_point2),_point1.distanceToSquared(_point2)<l)return{normal:_point1.clone().sub(_point2).normalize(),point:_point2.clone(),depth:e.radius-_point1.distanceTo(_point2)}}return!1}triangleSphereIntersect(e,t){if(t.getPlane(_plane),!e.intersectsPlane(_plane))return!1;const n=Math.abs(_plane.distanceToSphere(e)),o=e.radius*e.radius-n*n,a=_plane.projectPoint(e.center,_v1);if(t.containsPoint(e.center))return{normal:_plane.normal.clone(),point:a.clone(),depth:Math.abs(_plane.distanceToSphere(e))};const r=[[t.a,t.b],[t.b,t.c],[t.c,t.a]];for(let l=0;l<r.length;l++){_line1.set(r[l][0],r[l][1]),_line1.closestPointToPoint(a,!0,_v2);const c=_v2.distanceToSquared(e.center);if(c<o)return{normal:e.center.clone().sub(_v2).normalize(),point:_v2.clone(),depth:e.radius-Math.sqrt(c)}}return!1}getSphereTriangles(e,t){for(let n=0;n<this.subTrees.length;n++){const o=this.subTrees[n];if(e.intersectsBox(o.box))if(o.triangles.length>0)for(let a=0;a<o.triangles.length;a++)t.indexOf(o.triangles[a])===-1&&t.push(o.triangles[a]);else o.getSphereTriangles(e,t)}}getCapsuleTriangles(e,t){for(let n=0;n<this.subTrees.length;n++){const o=this.subTrees[n];if(e.intersectsBox(o.box))if(o.triangles.length>0)for(let a=0;a<o.triangles.length;a++)t.indexOf(o.triangles[a])===-1&&t.push(o.triangles[a]);else o.getCapsuleTriangles(e,t)}}sphereIntersect(e){_sphere.copy(e);const t=[];let n,o=!1;this.getSphereTriangles(e,t);for(let a=0;a<t.length;a++)(n=this.triangleSphereIntersect(_sphere,t[a]))&&(o=!0,_sphere.center.add(n.normal.multiplyScalar(n.depth)));if(o){const a=_sphere.center.clone().sub(e.center),r=a.length();return{normal:a.normalize(),depth:r}}return!1}capsuleIntersect(e){_capsule.copy(e);const t=[];let n,o=!1;this.getCapsuleTriangles(_capsule,t);for(let a=0;a<t.length;a++)(n=this.triangleCapsuleIntersect(_capsule,t[a]))&&(o=!0,_capsule.translate(n.normal.multiplyScalar(n.depth)));if(o){const a=_capsule.getCenter(new Vector3).sub(e.getCenter(_v1)),r=a.length();return{normal:a.normalize(),depth:r}}return!1}rayIntersect(e){const t=[];let n,o,a=1e100;this.getRayTriangles(e,t);for(let r=0;r<t.length;r++){const l=e.intersectTriangle(t[r].a,t[r].b,t[r].c,!0,_v1);if(l){const c=l.sub(e.origin).length();a>c&&(o=l.clone().add(e.origin),a=c,n=t[r])}}return a<1e100?{distance:a,triangle:n,position:o}:!1}fromGraphNode(e){return e.updateWorldMatrix(!0,!0),e.traverse(t=>{if(t.isMesh===!0&&this.layers.test(t.layers)){let n,o=!1;t.geometry.index!==null?(o=!0,n=t.geometry.toNonIndexed()):n=t.geometry;const a=n.getAttribute("position");for(let r=0;r<a.count;r+=3){const l=new Vector3().fromBufferAttribute(a,r),c=new Vector3().fromBufferAttribute(a,r+1),u=new Vector3().fromBufferAttribute(a,r+2);l.applyMatrix4(t.matrixWorld),c.applyMatrix4(t.matrixWorld),u.applyMatrix4(t.matrixWorld),this.addTriangle(new Triangle(l,c,u))}o&&n.dispose()}}),this.build(),this}clear(){return this.box=null,this.bounds.makeEmpty(),this.subTrees.length=0,this.triangles.length=0,this}}const EngineConfig={Auto:"Auto",Spark:"Spark",GaussianSplats3D:"GaussianSplats3D"},_camera=new OrthographicCamera(-1,1,1,-1,0,1);class FullscreenTriangleGeometry extends BufferGeometry{constructor(){super(),this.setAttribute("position",new Float32BufferAttribute([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Float32BufferAttribute([0,2,0,0,2,0],2))}}const _geometry=new FullscreenTriangleGeometry;class FullScreenQuad{constructor(e){this._mesh=new Mesh(_geometry,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,_camera)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}var u8=Uint8Array,u16=Uint16Array,i32=Int32Array,fleb=new u8([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),fdeb=new u8([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),clim=new u8([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),freb=function(s,e){for(var t=new u16(31),n=0;n<31;++n)t[n]=e+=1<<s[n-1];for(var o=new i32(t[30]),n=1;n<30;++n)for(var a=t[n];a<t[n+1];++a)o[a]=a-t[n]<<5|n;return{b:t,r:o}},_a=freb(fleb,2),fl=_a.b,revfl=_a.r;fl[28]=258,revfl[258]=28;var _b=freb(fdeb,0),fd=_b.b,rev=new u16(32768);for(var i=0;i<32768;++i){var x=(i&43690)>>1|(i&21845)<<1;x=(x&52428)>>2|(x&13107)<<2,x=(x&61680)>>4|(x&3855)<<4,rev[i]=((x&65280)>>8|(x&255)<<8)>>1}var hMap=function(s,e,t){for(var n=s.length,o=0,a=new u16(e);o<n;++o)s[o]&&++a[s[o]-1];var r=new u16(e);for(o=1;o<e;++o)r[o]=r[o-1]+a[o-1]<<1;var l;{l=new u16(1<<e);var c=15-e;for(o=0;o<n;++o)if(s[o])for(var u=o<<4|s[o],d=e-s[o],f=r[s[o]-1]++<<d,g=f|(1<<d)-1;f<=g;++f)l[rev[f]>>c]=u}return l},flt=new u8(288);for(var i=0;i<144;++i)flt[i]=8;for(var i=144;i<256;++i)flt[i]=9;for(var i=256;i<280;++i)flt[i]=7;for(var i=280;i<288;++i)flt[i]=8;var fdt=new u8(32);for(var i=0;i<32;++i)fdt[i]=5;var flrm=hMap(flt,9),fdrm=hMap(fdt,5),max$1=function(s){for(var e=s[0],t=1;t<s.length;++t)s[t]>e&&(e=s[t]);return e},bits=function(s,e,t){var n=e/8|0;return(s[n]|s[n+1]<<8)>>(e&7)&t},bits16=function(s,e){var t=e/8|0;return(s[t]|s[t+1]<<8|s[t+2]<<16)>>(e&7)},shft=function(s){return(s+7)/8|0},slc=function(s,e,t){return(e==null||e<0)&&(e=0),(t==null||t>s.length)&&(t=s.length),new u8(s.subarray(e,t))},ec=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],err=function(s,e,t){var n=new Error(e||ec[s]);if(n.code=s,Error.captureStackTrace&&Error.captureStackTrace(n,err),!t)throw n;return n},inflt=function(s,e,t,n){var o=s.length,a=n?n.length:0;if(!o||e.f&&!e.l)return t||new u8(0);var r=!t,l=r||e.i!=2,c=e.i;r&&(t=new u8(o*3));var u=function(nt){var ie=t.length;if(nt>ie){var oe=new u8(Math.max(ie*2,nt));oe.set(t),t=oe}},d=e.f||0,f=e.p||0,g=e.b||0,_=e.l,b=e.d,B=e.m,I=e.n,C=o*8;do{if(!_){d=bits(s,f,1);var R=bits(s,f+1,3);if(f+=3,R)if(R==1)_=flrm,b=fdrm,B=9,I=5;else if(R==2){var k=bits(s,f,31)+257,Q=bits(s,f+10,15)+4,z=k+bits(s,f+5,31)+1;f+=14;for(var G=new u8(z),O=new u8(19),q=0;q<Q;++q)O[clim[q]]=bits(s,f+q*3,7);f+=Q*3;for(var ce=max$1(O),ne=(1<<ce)-1,ue=hMap(O,ce),q=0;q<z;){var pe=ue[bits(s,f,ne)];f+=pe&15;var L=pe>>4;if(L<16)G[q++]=L;else{var fe=0,ee=0;for(L==16?(ee=3+bits(s,f,3),f+=2,fe=G[q-1]):L==17?(ee=3+bits(s,f,7),f+=3):L==18&&(ee=11+bits(s,f,127),f+=7);ee--;)G[q++]=fe}}var J=G.subarray(0,k),ye=G.subarray(k);B=max$1(J),I=max$1(ye),_=hMap(J,B),b=hMap(ye,I)}else err(1);else{var L=shft(f)+4,F=s[L-4]|s[L-3]<<8,N=L+F;if(N>o){c&&err(0);break}l&&u(g+F),t.set(s.subarray(L,N),g),e.b=g+=F,e.p=f=N*8,e.f=d;continue}if(f>C){c&&err(0);break}}l&&u(g+131072);for(var Te=(1<<B)-1,xe=(1<<I)-1,ve=f;;ve=f){var fe=_[bits16(s,f)&Te],he=fe>>4;if(f+=fe&15,f>C){c&&err(0);break}if(fe||err(2),he<256)t[g++]=he;else if(he==256){ve=f,_=null;break}else{var le=he-254;if(he>264){var q=he-257,_e=fleb[q];le=bits(s,f,(1<<_e)-1)+fl[q],f+=_e}var De=b[bits16(s,f)&xe],de=De>>4;De||err(3),f+=De&15;var ye=fd[de];if(de>3){var _e=fdeb[de];ye+=bits16(s,f)&(1<<_e)-1,f+=_e}if(f>C){c&&err(0);break}l&&u(g+131072);var Me=g+le;if(g<ye){var Ne=a-ye,Pe=Math.min(ye,Me);for(Ne+g<0&&err(3);g<Pe;++g)t[g]=n[Ne+g]}for(;g<Me;++g)t[g]=t[g-ye]}}e.l=_,e.p=ve,e.b=g,e.f=d,_&&(d=1,e.m=B,e.d=b,e.n=I)}while(!d);return g!=t.length&&r?slc(t,0,g):t.subarray(0,g)},et=new u8(0),b2=function(s,e){return s[e]|s[e+1]<<8},b4=function(s,e){return(s[e]|s[e+1]<<8|s[e+2]<<16|s[e+3]<<24)>>>0},b8=function(s,e){return b4(s,e)+b4(s,e+4)*4294967296},gzs=function(s){(s[0]!=31||s[1]!=139||s[2]!=8)&&err(6,"invalid gzip data");var e=s[3],t=10;e&4&&(t+=(s[10]|s[11]<<8)+2);for(var n=(e>>3&1)+(e>>4&1);n>0;n-=!s[t++]);return t+(e&2)},Inflate=function(){function s(e,t){typeof e=="function"&&(t=e,e={}),this.ondata=t;var n=e&&e.dictionary&&e.dictionary.subarray(-32768);this.s={i:0,b:n?n.length:0},this.o=new u8(32768),this.p=new u8(0),n&&this.o.set(n)}return s.prototype.e=function(e){if(this.ondata||err(5),this.d&&err(4),!this.p.length)this.p=e;else if(e.length){var t=new u8(this.p.length+e.length);t.set(this.p),t.set(e,this.p.length),this.p=t}},s.prototype.c=function(e){this.s.i=+(this.d=e||!1);var t=this.s.b,n=inflt(this.p,this.s,this.o);this.ondata(slc(n,t,this.s.b),this.d),this.o=slc(n,this.s.b-32768),this.s.b=this.o.length,this.p=slc(this.p,this.s.p/8|0),this.s.p&=7},s.prototype.push=function(e,t){this.e(e),this.c(t)},s}();function inflateSync(s,e){return inflt(s,{i:2},e&&e.out,e&&e.dictionary)}var Gunzip=function(){function s(e,t){this.v=1,this.r=0,Inflate.call(this,e,t)}return s.prototype.push=function(e,t){if(Inflate.prototype.e.call(this,e),this.r+=e.length,this.v){var n=this.p.subarray(this.v-1),o=n.length>3?gzs(n):4;if(o>n.length){if(!t)return}else this.v>1&&this.onmember&&this.onmember(this.r-n.length);this.p=n.subarray(o),this.v=0}Inflate.prototype.c.call(this,t),this.s.f&&!this.s.l&&!t&&(this.v=shft(this.s.p)+9,this.s={i:0},this.o=new u8(0),this.push(new u8(0),t))},s}(),td=typeof TextDecoder<"u"&&new TextDecoder,tds=0;try{td.decode(et,{stream:!0}),tds=1}catch{}var dutf8=function(s){for(var e="",t=0;;){var n=s[t++],o=(n>127)+(n>223)+(n>239);if(t+o>s.length)return{s:e,r:slc(s,t-1)};o?o==3?(n=((n&15)<<18|(s[t++]&63)<<12|(s[t++]&63)<<6|s[t++]&63)-65536,e+=String.fromCharCode(55296|n>>10,56320|n&1023)):o&1?e+=String.fromCharCode((n&31)<<6|s[t++]&63):e+=String.fromCharCode((n&15)<<12|(s[t++]&63)<<6|s[t++]&63):e+=String.fromCharCode(n)}};function strFromU8(s,e){if(e){for(var t="",n=0;n<s.length;n+=16384)t+=String.fromCharCode.apply(null,s.subarray(n,n+16384));return t}else{if(td)return td.decode(s);var o=dutf8(s),a=o.s,t=o.r;return t.length&&err(8),a}}var slzh=function(s,e){return e+30+b2(s,e+26)+b2(s,e+28)},zh=function(s,e,t){var n=b2(s,e+28),o=strFromU8(s.subarray(e+46,e+46+n),!(b2(s,e+8)&2048)),a=e+46+n,r=b4(s,e+20),l=t&&r==4294967295?z64e(s,a):[r,b4(s,e+24),b4(s,e+42)],c=l[0],u=l[1],d=l[2];return[b2(s,e+10),c,u,o,a+b2(s,e+30)+b2(s,e+32),d]},z64e=function(s,e){for(;b2(s,e)!=1;e+=4+b2(s,e+2));return[b8(s,e+12),b8(s,e+4),b8(s,e+20)]};function unzipSync(s,e){for(var t={},n=s.length-22;b4(s,n)!=101010256;--n)(!n||s.length-n>65558)&&err(13);var o=b2(s,n+8);if(!o)return{};var a=b4(s,n+16),r=a==4294967295||o==65535;if(r){var l=b4(s,n-12);r=b4(s,l)==101075792,r&&(o=b4(s,l+32),a=b4(s,l+48))}for(var c=e&&e.filter,u=0;u<o;++u){var d=zh(s,a,r),f=d[0],g=d[1],_=d[2],b=d[3],B=d[4],I=d[5],C=slzh(s,I);a=B,(!c||c({name:b,size:g,originalSize:_,compression:f}))&&(f?f==8?t[b]=inflateSync(s.subarray(C,C+g),{out:new u8(_)}):err(14,"unknown compression type "+f):t[b]=slc(s,C,C+g))}return t}let wasm;const cachedTextDecoder=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&cachedTextDecoder.decode();let cachedUint8ArrayMemory0=null;function getUint8ArrayMemory0(){return(cachedUint8ArrayMemory0===null||cachedUint8ArrayMemory0.byteLength===0)&&(cachedUint8ArrayMemory0=new Uint8Array(wasm.memory.buffer)),cachedUint8ArrayMemory0}function getStringFromWasm0(s,e){return s=s>>>0,cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(s,s+e))}function raycast_splats(s,e,t,n,o,a,r,l,c,u,d,f,g){return wasm.raycast_splats(s,e,t,n,o,a,r,l,c,u,d,f,g)}async function __wbg_load(s,e){if(typeof Response=="function"&&s instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(s,e)}catch(n){if(s.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",n);else throw n}const t=await s.arrayBuffer();return await WebAssembly.instantiate(t,e)}else{const t=await WebAssembly.instantiate(s,e);return t instanceof WebAssembly.Instance?{instance:t,module:s}:t}}function __wbg_get_imports(){const s={};return s.wbg={},s.wbg.__wbg_buffer_609cc3eee51ed158=function(e){return e.buffer},s.wbg.__wbg_length_3b4f022188ae8db6=function(e){return e.length},s.wbg.__wbg_length_6ca527665d89694d=function(e){return e.length},s.wbg.__wbg_length_8cfd2c6409af88ad=function(e){return e.length},s.wbg.__wbg_new_9fee97a409b32b68=function(e){return new Uint16Array(e)},s.wbg.__wbg_new_e3b321dcfef89fc7=function(e){return new Uint32Array(e)},s.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354=function(e,t,n){return new Float32Array(e,t>>>0,n>>>0)},s.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212=function(e,t,n){return new Uint32Array(e,t>>>0,n>>>0)},s.wbg.__wbg_newwithlength_5a5efe313cfd59f1=function(e){return new Float32Array(e>>>0)},s.wbg.__wbg_set_10bad9bee0e9c58b=function(e,t,n){e.set(t,n>>>0)},s.wbg.__wbg_set_d23661d19148b229=function(e,t,n){e.set(t,n>>>0)},s.wbg.__wbg_set_f4f1f0daa30696fc=function(e,t,n){e.set(t,n>>>0)},s.wbg.__wbg_subarray_3aaeec89bb2544f0=function(e,t,n){return e.subarray(t>>>0,n>>>0)},s.wbg.__wbg_subarray_769e1e0f81bb259b=function(e,t,n){return e.subarray(t>>>0,n>>>0)},s.wbg.__wbindgen_init_externref_table=function(){const e=wasm.__wbindgen_export_0,t=e.grow(4);e.set(0,void 0),e.set(t+0,void 0),e.set(t+1,null),e.set(t+2,!0),e.set(t+3,!1)},s.wbg.__wbindgen_memory=function(){return wasm.memory},s.wbg.__wbindgen_throw=function(e,t){throw new Error(getStringFromWasm0(e,t))},s}function __wbg_finalize_init(s,e){return wasm=s.exports,__wbg_init.__wbindgen_wasm_module=e,cachedUint8ArrayMemory0=null,wasm.__wbindgen_start(),wasm}async function __wbg_init(s){if(wasm!==void 0)return wasm;typeof s<"u"&&(Object.getPrototypeOf(s)===Object.prototype?{module_or_path:s}=s:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof s>"u"&&(s=new URL("data:application/wasm;base64,",import.meta.url));const e=__wbg_get_imports();(typeof s=="string"||typeof Request=="function"&&s instanceof Request||typeof URL=="function"&&s instanceof URL)&&(s=fetch(s));const{instance:t,module:n}=await __wbg_load(await s,e);return __wbg_finalize_init(t,n)}const LN_SCALE_MIN=-12,LN_SCALE_MAX=9,LN_SCALE_ZERO=-30,SCALE_ZERO=Math.exp(LN_SCALE_ZERO),SPLAT_TEX_WIDTH_BITS=11,SPLAT_TEX_HEIGHT_BITS=11,SPLAT_TEX_WIDTH=1<<SPLAT_TEX_WIDTH_BITS,SPLAT_TEX_HEIGHT=1<<SPLAT_TEX_HEIGHT_BITS,SPLAT_TEX_MIN_HEIGHT=1;function isBoolType(s){return s==="bool"||s==="bvec2"||s==="bvec3"||s==="bvec4"}function isIntType(s){return s==="int"||s==="ivec2"||s==="ivec3"||s==="ivec4"}function isUintType(s){return s==="uint"||s==="uvec2"||s==="uvec3"||s==="uvec4"}function isFloatType(s){return s==="float"||s==="vec2"||s==="vec3"||s==="vec4"}function isMatFloatType(s){return s==="mat2"||s==="mat2x2"||s==="mat2x3"||s==="mat2x4"||s==="mat3"||s==="mat3x2"||s==="mat3x3"||s==="mat3x4"||s==="mat4"||s==="mat4x2"||s==="mat4x3"||s==="mat4x4"}function isAllFloatType(s){return isFloatType(s)||isMatFloatType(s)}function isMat2(s){return s==="mat2"||s==="mat2x2"}function isMat3(s){return s==="mat3"||s==="mat3x3"}function isMat4(s){return s==="mat4"||s==="mat4x4"}function vectorElementType(s){switch(s){case"vec2":return"float";case"vec3":return"float";case"vec4":return"float";case"ivec2":return"int";case"ivec3":return"int";case"ivec4":return"int";case"uvec2":return"uint";case"uvec3":return"uint";case"uvec4":return"uint";default:throw new Error(`Invalid vector type: ${s}`)}}function vectorDim(s){switch(s){case"vec2":case"ivec2":case"uvec2":return 2;case"vec3":case"ivec3":case"uvec3":return 3;case"vec4":case"ivec4":case"uvec4":return 4;default:throw new Error(`Invalid vector type: ${s}`)}}function numberAsInt(s){return Math.trunc(s).toString()}function numberAsUint(s){return`${Math.max(0,Math.trunc(s)).toString()}u`}function numberAsFloat(s){return s===Number.POSITIVE_INFINITY?"INFINITY":s===Number.NEGATIVE_INFINITY?"-INFINITY":Number.isInteger(s)?s.toFixed(1):s.toString()}function valType(s){return s instanceof DynoValue?s.type:s.dynoOut().type}class DynoValue{constructor(e){this.__isDynoValue=!0,this.type=e}}class DynoOutput extends DynoValue{constructor(e,t){super(e.outTypes[t]),this.dyno=e,this.key=t}}class DynoLiteral extends DynoValue{constructor(e,t){super(e),this.literal=t}getLiteral(){return this.literal}}class DynoConst extends DynoLiteral{constructor(e,t){super(e,""),this.value=t}getLiteral(){const{type:e,value:t}=this;switch(e){case"bool":return t?"true":"false";case"uint":return numberAsUint(t);case"int":return numberAsInt(t);case"float":return numberAsFloat(t);case"bvec2":{const n=t;return`bvec2(${n[0]}, ${n[1]})`}case"uvec2":{if(t instanceof Vector2)return`uvec2(${numberAsUint(t.x)}, ${numberAsUint(t.y)})`;const n=t;return`uvec2(${numberAsUint(n[0])}, ${numberAsUint(n[1])})`}case"ivec2":{if(t instanceof Vector2)return`ivec2(${numberAsInt(t.x)}, ${numberAsInt(t.y)})`;const n=t;return`ivec2(${numberAsInt(n[0])}, ${numberAsInt(n[1])})`}case"vec2":{if(t instanceof Vector2)return`vec2(${numberAsFloat(t.x)}, ${numberAsFloat(t.y)})`;const n=t;return`vec2(${numberAsFloat(n[0])}, ${numberAsFloat(n[1])})`}case"bvec3":{const n=t;return`bvec3(${n[0]}, ${n[1]}, ${n[2]})`}case"uvec3":{if(t instanceof Vector3)return`uvec3(${numberAsUint(t.x)}, ${numberAsUint(t.y)}, ${numberAsUint(t.z)})`;const n=t;return`uvec3(${numberAsUint(n[0])}, ${numberAsUint(n[1])}, ${numberAsUint(n[2])})`}case"ivec3":{if(t instanceof Vector3)return`ivec3(${numberAsInt(t.x)}, ${numberAsInt(t.y)}, ${numberAsInt(t.z)})`;const n=t;return`ivec3(${numberAsInt(n[0])}, ${numberAsInt(n[1])}, ${numberAsInt(n[2])})`}case"vec3":{if(t instanceof Vector3)return`vec3(${numberAsFloat(t.x)}, ${numberAsFloat(t.y)}, ${numberAsFloat(t.z)})`;const n=t;return`vec3(${numberAsFloat(n[0])}, ${numberAsFloat(n[1])}, ${numberAsFloat(n[2])})`}case"bvec4":{const n=t;return`bvec4(${n[0]}, ${n[1]}, ${n[2]}, ${n[3]})`}case"uvec4":{if(t instanceof Vector4)return`uvec4(${numberAsUint(t.x)}, ${numberAsUint(t.y)}, ${numberAsUint(t.z)}, ${numberAsUint(t.w)})`;const n=t;return`uvec4(${numberAsUint(n[0])}, ${numberAsUint(n[1])}, ${numberAsUint(n[2])}, ${numberAsUint(n[3])})`}case"ivec4":{if(t instanceof Vector4)return`ivec4(${numberAsInt(t.x)}, ${numberAsInt(t.y)}, ${numberAsInt(t.z)}, ${numberAsInt(t.w)})`;const n=t;return`ivec4(${numberAsInt(n[0])}, ${numberAsInt(n[1])}, ${numberAsInt(n[2])}, ${numberAsInt(n[3])})`}case"vec4":{if(t instanceof Vector4)return`vec4(${numberAsFloat(t.x)}, ${numberAsFloat(t.y)}, ${numberAsFloat(t.z)}, ${numberAsFloat(t.w)})`;if(t instanceof Quaternion)return`vec4(${numberAsFloat(t.x)}, ${numberAsFloat(t.y)}, ${numberAsFloat(t.z)}, ${numberAsFloat(t.w)})`;const n=t;return`vec4(${numberAsFloat(n[0])}, ${numberAsFloat(n[1])}, ${numberAsFloat(n[2])}, ${numberAsFloat(n[3])})`}case"mat2":case"mat2x2":{const n=t,o=n instanceof Matrix2?n.elements:t,a=new Array(4).fill(0).map((r,l)=>numberAsFloat(o[l]));return`${e}(${a.join(", ")})`}case"mat2x3":{const n=t,o=new Array(6).fill(0).map((a,r)=>numberAsFloat(n[r]));return`${e}(${o.join(", ")})`}case"mat2x4":{const n=t,o=new Array(8).fill(0).map((a,r)=>numberAsFloat(n[r]));return`${e}(${o.join(", ")})`}case"mat3":case"mat3x3":{const n=t,o=n instanceof Matrix3?n.elements:t,a=new Array(9).fill(0).map((r,l)=>numberAsFloat(o[l]));return`${e}(${a.join(", ")})`}case"mat3x2":{const n=t,o=new Array(6).fill(0).map((a,r)=>numberAsFloat(n[r]));return`${e}(${o.join(", ")})`}case"mat3x4":{const n=t,o=new Array(12).fill(0).map((a,r)=>numberAsFloat(n[r]));return`${e}(${o.join(", ")})`}case"mat4":case"mat4x4":{const n=t,o=n instanceof Matrix4?n.elements:t,a=new Array(16).fill(0).map((r,l)=>numberAsFloat(o[l]));return`${e}(${a.join(", ")})`}case"mat4x2":{const n=t,o=new Array(8).fill(0).map((a,r)=>numberAsFloat(n[r]));return`${e}(${o.join(", ")})`}case"mat4x3":{const n=t,o=new Array(12).fill(0).map((a,r)=>numberAsFloat(n[r]));return`${e}(${o.join(", ")})`}default:throw new Error(`Type not implemented: ${String(e)}`)}}}function dynoConst(s,e){return new DynoConst(s,e)}function literalZero(s){const e=String(s);if(isBoolType(s))return`${e}(false)`;if(isAllFloatType(s))return`${e}(0.0)`;if(isIntType(s))return`${e}(0)`;if(isUintType(s))return`${e}(0u)`;throw new Error(`Type not implemented: ${e}`)}const DEFAULT_INDENT="    ";class Compilation{constructor({indent:e}={}){this.globals=new Set,this.statements=[],this.uniforms={},this.declares=new Set,this.updaters=[],this.sequence=0,this.indent=DEFAULT_INDENT,this.indent=e??DEFAULT_INDENT}nextSequence(){return this.sequence++}}class Dyno{constructor({inTypes:e,outTypes:t,inputs:n,update:o,globals:a,statements:r,generate:l}){this.inTypes=e??{},this.outTypes=t??{},this.inputs=n??{},this.update=o,this.globals=a,this.statements=r,this.generate=l??(({inputs:c,outputs:u,compile:d})=>{var f,g;return{globals:(f=this.globals)==null?void 0:f.call(this,{inputs:c,outputs:u,compile:d}),statements:(g=this.statements)==null?void 0:g.call(this,{inputs:c,outputs:u,compile:d})}})}get outputs(){const e={};for(const t in this.outTypes)e[t]=new DynoOutput(this,t);return e}apply(e){return Object.assign(this.inputs,e),this.outputs}compile({inputs:e,outputs:t,compile:n}){const o=[`// ${this.constructor.name}(${Object.values(e).join(", ")}) => (${Object.values(t).join(", ")})`],a=[];for(const u in t){const d=t[u];d&&!n.declares.has(d)&&(n.declares.add(d),a.push(u))}const{globals:r,statements:l,uniforms:c}=this.generate({inputs:e,outputs:t,compile:n});for(const u of r??[])n.globals.add(u);for(const u in c)n.uniforms[u]=c[u];this.update&&n.updaters.push(this.update);for(const u of a){const d=t[u];d&&(n.uniforms[d]||o.push(`${dynoDeclare(d,this.outTypes[u])};`))}return l!=null&&l.length&&(o.push("{"),o.push(...l.map(u=>n.indent+u)),o.push("}")),o}}class DynoBlock extends Dyno{constructor({inTypes:e,outTypes:t,inputs:n,update:o,globals:a,construct:r}){super({inTypes:e,outTypes:t,inputs:n,update:o,globals:a,generate:l=>this.generateBlock(l)}),this.construct=r}generateBlock({inputs:e,outputs:t,compile:n}){var o,a;const r={},l={};for(const I in e)e[I]!=null&&(r[I]=new DynoLiteral(this.inTypes[I],e[I]));for(const I in t)t[I]!=null&&(l[I]=new DynoValue(this.outTypes[I]));const c={roots:[]},u=this.construct(r,l,c);for(const I of((o=this.globals)==null?void 0:o.call(this,{inputs:e,outputs:t,compile:n}))??[])n.globals.add(I);const d=[],f=new Map;function g(I,C,R){let L=f.get(I);if(!L){L={sequence:n.nextSequence(),outNames:new Map,newOuts:new Set},f.set(I,L);for(const F in I.inputs){let N=I.inputs[F];for(;N;){if(N instanceof DynoValue){N instanceof DynoOutput&&g(N.dyno,N.key);break}N=N.dynoOut()}}d.push(I)}C&&(R||L.newOuts.add(C),L.outNames.set(C,R??`${C}_${L.sequence}`))}for(const I of c.roots)g(I);for(const I in l){let C=(u==null?void 0:u[I])??l[I];for(;C;){if(C instanceof DynoValue){C instanceof DynoOutput&&g(C.dyno,C.key,t[I]);break}C=C.dynoOut()}l[I]=C}const _=[];for(const I of d){const C={},R={};for(const N in I.inputs){let k=I.inputs[N];for(;k;){if(k instanceof DynoValue){if(k instanceof DynoLiteral)C[N]=k.getLiteral();else if(k instanceof DynoOutput){const Q=(a=f.get(k.dyno))==null?void 0:a.outNames.get(k.key);if(!Q)throw new Error(`Source not found for ${k.dyno.constructor.name}.${k.key}`);C[N]=Q}break}k=k.dynoOut()}}const L=f.get(I)??{outNames:new Map};for(const[N,k]of L.outNames.entries())R[N]=k;const F=I.compile({inputs:C,outputs:R,compile:n});_.push(F)}const b=[];for(const I in t)l[I]instanceof DynoLiteral&&b.push(`${t[I]} = ${l[I].getLiteral()};`);return b.length>0&&_.push(b),{statements:_.flatMap((I,C)=>C===0?I:["",...I])}}}function dynoBlock(s,e,t,{update:n,globals:o}={}){return new DynoBlock({inTypes:s,outTypes:e,construct:t,update:n,globals:o})}function dyno$1({inTypes:s,outTypes:e,inputs:t,update:n,globals:o,statements:a,generate:r}){return new Dyno({inTypes:s,outTypes:e,inputs:t,update:n,globals:o,statements:a,generate:r})}function dynoDeclare(s,e,t){const n=typeof e=="string"?e:e.type;if(!n)throw new Error(`Invalid DynoType: ${String(e)}`);return`${n} ${s}${t!=null?`[${t}]`:""}`}function unindentLines(s){var e;let t=!1;const n=s.split(`
`).map(r=>{const l=r.trimEnd();return t?l:l.length>0?(t=!0,l):null}).filter(r=>r!=null);for(;n.length>0&&n[n.length-1].length===0;)n.pop();if(n.length===0)return[];const o=(e=n[0].match(/^\s*/))==null?void 0:e[0];if(!o)return n;const a=new RegExp(`^${o}`);return n.map(r=>r.replace(a,""))}function unindent(s){return unindentLines(s).join(`
`)}class UnaryOp extends Dyno{constructor({a:e,outKey:t,outTypeFunc:n}){const o={a:valType(e)},a=n(valType(e)),r={[t]:a};super({inTypes:o,outTypes:r,inputs:{a:e}}),this.outKey=t}dynoOut(){return new DynoOutput(this,this.outKey)}}class BinaryOp extends Dyno{constructor({a:e,b:t,outKey:n,outTypeFunc:o}){const a={a:valType(e),b:valType(t)},r=o(valType(e),valType(t)),l={[n]:r};super({inTypes:a,outTypes:l,inputs:{a:e,b:t}}),this.outKey=n}dynoOut(){return new DynoOutput(this,this.outKey)}}const Gsplat={type:"Gsplat"},TPackedSplats={type:"PackedSplats"},readPackedSplat=(s,e)=>new ReadPackedSplat({packedSplats:s,index:e}),readPackedSplatRange=(s,e,t,n)=>new ReadPackedSplatRange({packedSplats:s,index:e,base:t,count:n}),splitGsplat=s=>new SplitGsplat({gsplat:s}),combineGsplat=({gsplat:s,flags:e,index:t,center:n,scales:o,quaternion:a,rgba:r,rgb:l,opacity:c,x:u,y:d,z:f,r:g,g:_,b})=>new CombineGsplat({gsplat:s,flags:e,index:t,center:n,scales:o,quaternion:a,rgba:r,rgb:l,opacity:c,x:u,y:d,z:f,r:g,g:_,b}),transformGsplat=(s,{scale:e,rotate:t,translate:n,recolor:o})=>new TransformGsplat({gsplat:s,scale:e,rotate:t,translate:n,recolor:o}),defineGsplat=unindent(`
  struct Gsplat {
    vec3 center;
    uint flags;
    vec3 scales;
    int index;
    vec4 quaternion;
    vec4 rgba;
  };
  const uint GSPLAT_FLAG_ACTIVE = 1u << 0u;

  bool isGsplatActive(uint flags) {
    return (flags & GSPLAT_FLAG_ACTIVE) != 0u;
  }
`),definePackedSplats=unindent(`
  struct PackedSplats {
    usampler2DArray texture;
    int numSplats;
    vec4 rgbMinMaxLnScaleMinMax;
  };
`),defineReadPackedSplat=unindent(`
  bool readPackedSplat(usampler2DArray texture, int numSplats, vec4 rgbMinMaxLnScaleMinMax, int index, out Gsplat gsplat) {
    if ((index >= 0) && (index < numSplats)) {
      uvec4 packed = texelFetch(texture, splatTexCoord(index), 0);
      unpackSplatEncoding(packed, gsplat.center, gsplat.scales, gsplat.quaternion, gsplat.rgba, rgbMinMaxLnScaleMinMax);
      return true;
    } else {
      return false;
    }
  }
`);class ReadPackedSplat extends Dyno{constructor({packedSplats:e,index:t}){super({inTypes:{packedSplats:TPackedSplats,index:"int"},outTypes:{gsplat:Gsplat},inputs:{packedSplats:e,index:t},globals:()=>[defineGsplat,definePackedSplats,defineReadPackedSplat],statements:({inputs:n,outputs:o})=>{const{gsplat:a}=o;if(!a)return[];const{packedSplats:r,index:l}=n;let c;return r&&l?c=unindentLines(`
            if (readPackedSplat(${r}.texture, ${r}.numSplats, ${r}.rgbMinMaxLnScaleMinMax, ${l}, ${a})) {
              bool zeroSize = all(equal(${a}.scales, vec3(0.0, 0.0, 0.0)));
              ${a}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;
            } else {
              ${a}.flags = 0u;
            }
          `):c=[`${a}.flags = 0u;`],c.push(`${a}.index = ${l??"0"};`),c}})}dynoOut(){return new DynoOutput(this,"gsplat")}}class ReadPackedSplatRange extends Dyno{constructor({packedSplats:e,index:t,base:n,count:o}){super({inTypes:{packedSplats:TPackedSplats,index:"int",base:"int",count:"int"},outTypes:{gsplat:Gsplat},inputs:{packedSplats:e,index:t,base:n,count:o},globals:()=>[defineGsplat,definePackedSplats,defineReadPackedSplat],statements:({inputs:a,outputs:r})=>{const{gsplat:l}=r;if(!l)return[];const{packedSplats:c,index:u,base:d,count:f}=a;let g;return c&&u&&d&&f?g=unindentLines(`
            ${l}.flags = 0u;
            if ((${u} >= ${d}) && (${u} < (${d} + ${f}))) {
              if (readPackedSplat(${c}.texture, ${c}.numSplats, ${c}.rgbMinMaxLnScaleMinMax, ${u}, ${l})) {
                bool zeroSize = all(equal(${l}.scales, vec3(0.0, 0.0, 0.0)));
                ${l}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;
              }
            }
          `):g=[`${l}.flags = 0u;`],g.push(`${l}.index = ${u??"0"};`),g}})}dynoOut(){return new DynoOutput(this,"gsplat")}}class SplitGsplat extends Dyno{constructor({gsplat:e}){super({inTypes:{gsplat:Gsplat},outTypes:{flags:"uint",active:"bool",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},inputs:{gsplat:e},globals:()=>[defineGsplat],statements:({inputs:t,outputs:n})=>{const{gsplat:o}=t,{flags:a,active:r,index:l,center:c,scales:u,quaternion:d,rgba:f,rgb:g,opacity:_,x:b,y:B,z:I,r:C,g:R,b:L}=n;return[a?`${a} = ${o?`${o}.flags`:"0u"};`:null,r?`${r} = isGsplatActive(${o?`${o}.flags`:"0u"});`:null,l?`${l} = ${o?`${o}.index`:"0"};`:null,c?`${c} = ${o?`${o}.center`:"vec3(0.0, 0.0, 0.0)"};`:null,u?`${u} = ${o?`${o}.scales`:"vec3(0.0, 0.0, 0.0)"};`:null,d?`${d} = ${o?`${o}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)"};`:null,f?`${f} = ${o?`${o}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)"};`:null,g?`${g} = ${o?`${o}.rgba.rgb`:"vec3(0.0, 0.0, 0.0)"};`:null,_?`${_} = ${o?`${o}.rgba.a`:"0.0"};`:null,b?`${b} = ${o?`${o}.center.x`:"0.0"};`:null,B?`${B} = ${o?`${o}.center.y`:"0.0"};`:null,I?`${I} = ${o?`${o}.center.z`:"0.0"};`:null,C?`${C} = ${o?`${o}.rgba.r`:"0.0"};`:null,R?`${R} = ${o?`${o}.rgba.g`:"0.0"};`:null,L?`${L} = ${o?`${o}.rgba.b`:"0.0"};`:null].filter(Boolean)}})}}class CombineGsplat extends Dyno{constructor({gsplat:e,flags:t,index:n,center:o,scales:a,quaternion:r,rgba:l,rgb:c,opacity:u,x:d,y:f,z:g,r:_,g:b,b:B}){super({inTypes:{gsplat:Gsplat,flags:"uint",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},outTypes:{gsplat:Gsplat},inputs:{gsplat:e,flags:t,index:n,center:o,scales:a,quaternion:r,rgba:l,rgb:c,opacity:u,x:d,y:f,z:g,r:_,g:b,b:B},globals:()=>[defineGsplat],statements:({inputs:I,outputs:C})=>{const{gsplat:R}=C;if(!R)return[];const{gsplat:L,flags:F,index:N,center:k,scales:Q,quaternion:z,rgba:G,rgb:O,opacity:q,x:ce,y:ne,z:ue,r:pe,g:fe,b:ee}=I;return[`${R}.flags = ${F??(L?`${L}.flags`:"0u")};`,`${R}.index = ${N??(L?`${L}.index`:"0")};`,`${R}.center = ${k??(L?`${L}.center`:"vec3(0.0, 0.0, 0.0)")};`,`${R}.scales = ${Q??(L?`${L}.scales`:"vec3(0.0, 0.0, 0.0)")};`,`${R}.quaternion = ${z??(L?`${L}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)")};`,`${R}.rgba = ${G??(L?`${L}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)")};`,O?`${R}.rgba.rgb = ${O};`:null,q?`${R}.rgba.a = ${q};`:null,ce?`${R}.center.x = ${ce};`:null,ne?`${R}.center.y = ${ne};`:null,ue?`${R}.center.z = ${ue};`:null,pe?`${R}.rgba.r = ${pe};`:null,fe?`${R}.rgba.g = ${fe};`:null,ee?`${R}.rgba.b = ${ee};`:null].filter(Boolean)}})}dynoOut(){return new DynoOutput(this,"gsplat")}}unindent(`
  vec3 gsplatNormal(vec3 scales, vec4 quaternion) {
    float minScale = min(scales.x, min(scales.y, scales.z));
    vec3 normal;
    if (scales.z == minScale) {
      normal = vec3(0.0, 0.0, 1.0);
    } else if (scales.y == minScale) {
      normal = vec3(0.0, 1.0, 0.0);
    } else {
      normal = vec3(1.0, 0.0, 0.0);
    }
    return quatVec(quaternion, normal);
  }
`);class TransformGsplat extends Dyno{constructor({gsplat:e,scale:t,rotate:n,translate:o,recolor:a}){super({inTypes:{gsplat:Gsplat,scale:"float",rotate:"vec4",translate:"vec3",recolor:"vec4"},outTypes:{gsplat:Gsplat},inputs:{gsplat:e,scale:t,rotate:n,translate:o,recolor:a},globals:()=>[defineGsplat],statements:({inputs:r,outputs:l,compile:c})=>{const{gsplat:u}=l;if(!u||!r.gsplat)return[];const{scale:d,rotate:f,translate:g,recolor:_}=r,b=c.indent;return[`${u} = ${r.gsplat};`,`if (isGsplatActive(${u}.flags)) {`,d?`${b}${u}.center *= ${d};`:null,f?`${b}${u}.center = quatVec(${f}, ${u}.center);`:null,g?`${b}${u}.center += ${g};`:null,d?`${b}${u}.scales *= ${d};`:null,f?`${b}${u}.quaternion = quatQuat(${f}, ${u}.quaternion);`:null,_?`${b}${u}.rgba *= ${_};`:null,"}"].filter(Boolean)}})}dynoOut(){return new DynoOutput(this,"gsplat")}}const outputPackedSplat=(s,e)=>new OutputPackedSplat({gsplat:s,rgbMinMaxLnScaleMinMax:e});class OutputPackedSplat extends Dyno{constructor({gsplat:e,rgbMinMaxLnScaleMinMax:t}){super({inTypes:{gsplat:Gsplat,rgbMinMaxLnScaleMinMax:"vec4"},inputs:{gsplat:e,rgbMinMaxLnScaleMinMax:t},globals:()=>[defineGsplat],statements:({inputs:n,outputs:o})=>{const{output:a}=o;if(!a)return[];const{gsplat:r,rgbMinMaxLnScaleMinMax:l}=n;return r?unindentLines(`
            if (isGsplatActive(${r}.flags)) {
              ${a} = packSplatEncoding(${r}.center, ${r}.scales, ${r}.quaternion, ${r}.rgba, ${l});
            } else {
              ${a} = uvec4(0u, 0u, 0u, 0u);
            }
          `):[`${a} = uvec4(0u, 0u, 0u, 0u);`]}})}dynoOut(){return new DynoOutput(this,"output")}}class OutputRgba8 extends Dyno{constructor({rgba8:e}){super({inTypes:{rgba8:"vec4"},inputs:{rgba8:e},statements:({inputs:t,outputs:n})=>[`target = ${t.rgba8??"vec4(0.0, 0.0, 0.0, 0.0)"};`]})}dynoOut(){return new DynoOutput(this,"rgba8")}}class DynoUniform extends Dyno{constructor({key:e,type:t,count:n,value:o,update:a,globals:r}){e=e??"value",super({outTypes:{[e]:t},update:()=>{if(a){const l=a(this.value);l!==void 0&&(this.value=l)}this.uniform.value=this.value},generate:({inputs:l,outputs:c})=>{const u=(r==null?void 0:r({inputs:l,outputs:c}))??[],d={},f=c[e];return f&&(u.push(`uniform ${dynoDeclare(f,t,n)};`),d[f]=this.uniform),{globals:u,uniforms:d}}}),this.type=t,this.count=n,this.value=o,this.uniform={value:o},this.outKey=e}dynoOut(){return new DynoOutput(this,this.outKey)}}class DynoBool extends DynoUniform{constructor({key:e,value:t,update:n}){super({key:e,type:"bool",value:t,update:n})}}class DynoInt extends DynoUniform{constructor({key:e,value:t,update:n}){super({key:e,type:"int",value:t,update:n})}}class DynoFloat extends DynoUniform{constructor({key:e,value:t,update:n}){super({key:e,type:"float",value:t,update:n})}}class DynoVec2 extends DynoUniform{constructor({key:e,value:t,update:n}){super({key:e,type:"vec2",value:t,update:n})}}class DynoVec3 extends DynoUniform{constructor({key:e,value:t,update:n}){super({key:e,type:"vec3",value:t,update:n})}}class DynoVec4 extends DynoUniform{constructor({key:e,value:t,update:n}){super({key:e,type:"vec4",value:t,update:n})}}class DynoUsampler2DArray extends DynoUniform{constructor({key:e,value:t,update:n}){super({key:e,type:"usampler2DArray",value:t,update:n})}}const f32buffer=new Float32Array(1),u32buffer=new Uint32Array(f32buffer.buffer);function toHalf(s){f32buffer[0]=s;const e=u32buffer[0],t=e>>31&1,n=e>>23&255,o=e&8388607,a=t<<15;if(n===255)return o!==0?a|32767:a|31744;const r=n-127+15;if(r>=31)return a|31744;if(r<=0){if(r<-10)return a;const c=(o|8388608)>>1-r+13;return a|c}const l=o>>13;return a|r<<10|l}function fromHalf(s){const e=s>>15&1,t=s>>10&31,n=s&1023;let o;if(t===0)if(n===0)o=e<<31;else{let a=n,r=-14;for(;(a&1024)===0;)a<<=1,r--;a&=1023;const l=r+127,c=a<<13;o=e<<31|l<<23|c}else if(t===31)n===0?o=e<<31|2139095040:o=e<<31|2143289344;else{const a=t-15+127,r=n<<13;o=e<<31|a<<23|r}return u32buffer[0]=o,f32buffer[0]}function floatToUint8(s){return Math.max(0,Math.min(255,Math.round(s*255)))}function getArrayBuffers(s){const e=[],t=new Set;function n(o){o&&typeof o=="object"&&!t.has(o)&&(t.add(o),o instanceof ArrayBuffer?e.push(o):ArrayBuffer.isView(o)?e.push(o.buffer):Array.isArray(o)?o.forEach(n):Object.values(o).forEach(n))}return n(s),e}class FreeList{constructor({allocate:e,dispose:t,valid:n}){this.items=[],this.allocate=e,this.dispose=t,this.valid=n}alloc(e){for(;;){const t=this.items.pop();if(!t)break;if(this.valid(t,e))return t;this.dispose&&this.dispose(t)}return this.allocate(e)}free(e){this.items.push(e)}disposeAll(){let e;for(e=this.items.pop();e;)this.dispose&&this.dispose(e),e=this.items.pop()}}function setPackedSplat(s,e,t,n,o,a,r,l,c,u,d,f,g,_,b,B,I){const C=(I==null?void 0:I.rgbMin)??0,L=((I==null?void 0:I.rgbMax)??1)-C,F=floatToUint8((_-C)/L),N=floatToUint8((b-C)/L),k=floatToUint8((B-C)/L),Q=floatToUint8(g),z=encodeQuatOctXy88R8(new Quaternion(c,u,d,f)),G=z&255,O=z>>>8&255,q=z>>>16&255,ce=(I==null?void 0:I.lnScaleMin)??LN_SCALE_MIN,ue=254/(((I==null?void 0:I.lnScaleMax)??LN_SCALE_MAX)-ce),pe=a<SCALE_ZERO?0:Math.min(255,Math.max(1,Math.round((Math.log(a)-ce)*ue)+1)),fe=r<SCALE_ZERO?0:Math.min(255,Math.max(1,Math.round((Math.log(r)-ce)*ue)+1)),ee=l<SCALE_ZERO?0:Math.min(255,Math.max(1,Math.round((Math.log(l)-ce)*ue)+1)),J=toHalf(t),ye=toHalf(n),Te=toHalf(o),xe=e*4;s[xe]=F|N<<8|k<<16|Q<<24,s[xe+1]=J|ye<<16,s[xe+2]=Te|G<<16|O<<24,s[xe+3]=pe|fe<<8|ee<<16|q<<24}const packedCenter=new Vector3,packedScales=new Vector3,packedQuaternion=new Quaternion,packedColor=new Color,packedFields={center:packedCenter,scales:packedScales,quaternion:packedQuaternion,color:packedColor,opacity:0};function unpackSplat(s,e,t){const n=packedFields,o=e*4,a=s[o],r=s[o+1],l=s[o+2],c=s[o+3],u=(t==null?void 0:t.rgbMin)??0,f=((t==null?void 0:t.rgbMax)??1)-u;n.color.set(u+(a&255)/255*f,u+(a>>>8&255)/255*f,u+(a>>>16&255)/255*f),n.opacity=(a>>>24&255)/255,n.center.set(fromHalf(r&65535),fromHalf(r>>>16&65535),fromHalf(l&65535));const g=(t==null?void 0:t.lnScaleMin)??LN_SCALE_MIN,b=(((t==null?void 0:t.lnScaleMax)??LN_SCALE_MAX)-g)/254,B=c&255;n.scales.x=B===0?0:Math.exp(g+(B-1)*b);const I=c>>>8&255;n.scales.y=I===0?0:Math.exp(g+(I-1)*b);const C=c>>>16&255;n.scales.z=C===0?0:Math.exp(g+(C-1)*b);const R=l>>>16&65535|c>>>8&16711680;return decodeQuatOctXy88R8(R,n.quaternion),n}function getTextureSize(s){const e=SPLAT_TEX_WIDTH,t=Math.max(SPLAT_TEX_MIN_HEIGHT,Math.min(SPLAT_TEX_HEIGHT,Math.ceil(s/e))),n=Math.ceil(s/(e*t)),o=e*t*n;return{width:e,height:t,depth:n,maxSplats:o}}function cloneClock(s){const e=new Clock(s.autoStart);return e.startTime=s.startTime,e.oldTime=s.oldTime,e.elapsedTime=s.elapsedTime,e.running=s.running,e}const IDENT_VERTEX_SHADER=unindent(`
  precision highp float;

  in vec3 position;

  void main() {
    gl_Position = vec4(position.xy, 0.0, 1.0);
  }
`);function averagePositions(s){const e=new Vector3;for(const t of s)e.add(t);return e.divideScalar(s.length)}function averageQuaternions(s){if(s.length===0)return new Quaternion;const e=s[0].clone();for(let t=1;t<s.length;t++)s[t].dot(s[0])<0?(e.x-=s[t].x,e.y-=s[t].y,e.z-=s[t].z,e.w-=s[t].w):(e.x+=s[t].x,e.y+=s[t].y,e.z+=s[t].z,e.w+=s[t].w);return e.normalize()}function coorientDist(s,e){const[t,n]=[new Vector3,new Quaternion],[o,a]=[new Vector3,new Quaternion];s.decompose(t,n,new Vector3),e.decompose(o,a,new Vector3);const r=t.distanceTo(o),l=Math.abs(n.dot(a));return{distance:r,coorient:l}}function withinCoorientDist({matrix1:s,matrix2:e,maxDistance:t,minCoorient:n}){const{distance:o,coorient:a}=coorientDist(s,e);return o<=t&&(n==null||a>=n)}function encodeQuatOctXy88R8(s){const e=s.clone().normalize();e.w<0&&e.set(-e.x,-e.y,-e.z,-e.w);const t=2*Math.acos(e.w),n=Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z),o=n<1e-6?new Vector3(1,0,0):new Vector3(e.x,e.y,e.z).divideScalar(n),a=Math.abs(o.x)+Math.abs(o.y)+Math.abs(o.z);let r=o.x/a,l=o.y/a;if(o.z<0){const _=r;r=(1-Math.abs(l))*(r>=0?1:-1),l=(1-Math.abs(_))*(l>=0?1:-1)}const c=r*.5+.5,u=l*.5+.5,d=Math.round(c*255),f=Math.round(u*255);return Math.round(t*(255/Math.PI))<<16|f<<8|d}function decodeQuatOctXy88R8(s,e){const t=s&255,n=s>>>8&255,o=s>>>16&255,a=t/255,r=n/255;let l=(a-.5)*2,c=(r-.5)*2;const u=1-(Math.abs(l)+Math.abs(c)),d=Math.max(-u,0);l+=l>=0?-d:d,c+=c>=0?-d:d;const f=new Vector3(l,c,u).normalize(),_=o/255*Math.PI*.5,b=Math.sin(_),B=Math.cos(_);return e.set(f.x*b,f.y*b,f.z*b,B),e}function decompressPartialGzip(s,e){const t=[];let n=0,o=null;const a=new Gunzip((c,u)=>{if(t.push(c),n+=c.length,u||n>=e){const d=new Uint8Array(n);let f=0;for(const g of t)d.set(g,f),f+=g.length;o=d.slice(0,e)}}),r=1024;let l=0;for(;o==null&&l<s.length;){const c=s.slice(l,l+r);a.push(c,!1),l+=r}if(o==null&&(a.push(new Uint8Array,!0),o==null))throw new Error("Failed to decompress partial gzip");return o}class DynoProgram{constructor({graph:e,inputs:t,outputs:n,template:o}){this.graph=e,this.template=o,this.inputs=t??{},this.outputs=n??{};const a=new Compilation({indent:this.template.indent});for(const l in this.outputs)this.outputs[l]&&a.declares.add(this.outputs[l]);const r=e.compile({inputs:this.inputs,outputs:this.outputs,compile:a});this.shader=o.generate({globals:a.globals,statements:r}),this.uniforms=a.uniforms,this.updaters=a.updaters}prepareMaterial(){return getMaterial(this)}update(){for(const e of this.updaters)e()}}class DynoProgramTemplate{constructor(e){const t=e.match(/^([ \t]*)\{\{\s*GLOBALS\s*\}\}/m),n=e.match(/^([ \t]*)\{\{\s*STATEMENTS\s*\}\}/m);if(!t||!n)throw new Error("Template must contain {{ GLOBALS }} and {{ STATEMENTS }}");this.before=e.substring(0,t.index),this.between=e.substring(t.index+t[0].length,n.index),this.after=e.substring(n.index+n[0].length),this.indent=n[1]}generate({globals:e,statements:t}){return this.before+Array.from(e).join(`

`)+this.between+t.map(n=>this.indent+n).join(`
`)+this.after}}const programMaterial=new Map;function getMaterial(s){let e=programMaterial.get(s);return e||(e=new RawShaderMaterial({glslVersion:GLSL3,vertexShader:IDENT_VERTEX_SHADER,fragmentShader:s.shader,uniforms:s.uniforms}),programMaterial.set(s,e),e)}function addOutputType(s,e,t="add"){const n=()=>{throw new Error(`Invalid ${t} types: ${s}, ${e}`)};if(s===e)return s;if(s==="int"){if(isIntType(e))return e;n()}if(e==="int"){if(isIntType(s))return s;n()}if(s==="uint"){if(isUintType(e))return e;n()}if(e==="uint"){if(isUintType(s))return s;n()}if(s==="float"){if(isAllFloatType(e))return e;n()}if(e==="float"){if(isAllFloatType(s))return s;n()}throw new Error(`Invalid ${t} types: ${s}, ${e}`)}function subOutputType(s,e){return addOutputType(s,e,"sub")}function mulOutputType(s,e){const t=()=>{throw new Error(`Invalid mul types: ${s}, ${e}`)},n=o=>o;if(s==="int"){if(isIntType(e))return n(e);t()}if(e==="int"){if(isIntType(s))return n(s);t()}if(s==="uint"){if(isUintType(e))return n(e);t()}if(e==="uint"){if(isUintType(s))return n(s);t()}if(s==="float"){if(isAllFloatType(e))return n(e);t()}if(e==="float"){if(isAllFloatType(s))return n(s);t()}if(isIntType(s)||isUintType(s)||isIntType(e)||isUintType(e)){if(s===e)return n(s);t()}if(s==="vec2"){if(e==="vec2"||isMat2(e))return n("vec2");if(e==="mat3x2")return n("vec3");if(e==="mat4x2")return n("vec4");t()}if(s==="vec3"){if(e==="mat2x3")return n("vec2");if(e==="vec3"||isMat3(e))return n("vec3");if(e==="mat4x3")return n("vec4");t()}if(s==="vec4"){if(e==="mat2x4")return n("vec2");if(e==="mat3x4")return n("vec3");if(e==="vec4"||isMat4(e))return n("vec4");t()}if(e==="vec2"){if(isMat2(s))return n("vec2");if(s==="mat2x3")return n("vec3");if(s==="mat2x4")return n("vec4");t()}if(e==="vec3"){if(s==="mat3x2")return n("vec2");if(isMat3(s))return n("vec3");if(s==="mat3x4")return n("vec4");t()}if(e==="vec4"){if(s==="mat4x2")return n("vec2");if(s==="mat4x3")return n("vec3");if(isMat4(s))return n("vec4");t()}if(isMat2(s)){if(isMat2(e))return n("mat2");if(e==="mat3x2")return n("mat3x2");if(e==="mat4x2")return n("mat4x2");t()}if(s==="mat2x3"){if(isMat2(e))return n("mat2x3");if(e==="mat3x2")return n("mat3");if(e==="mat4x2")return n("mat4x3");t()}if(s==="mat2x4"){if(isMat2(e))return n("mat2x4");if(e==="mat3x2")return n("mat3x4");if(e==="mat4x2")return n("mat4");t()}if(s==="mat3x2"){if(e==="mat2x3")return n("mat2");if(isMat3(e))return n("mat3x2");if(e==="mat4x3")return n("mat4x2");t()}if(isMat3(s)){if(e==="mat2x3")return n("mat2x3");if(isMat3(e))return n("mat3");if(e==="mat4x3")return n("mat4x3");t()}if(s==="mat3x4"){if(e==="mat2x3")return n("mat2x4");if(isMat3(e))return n("mat3x4");if(e==="mat4x3")return n("mat4");t()}if(s==="mat4x2"){if(e==="mat2x4")return n("mat2");if(e==="mat3x4")return n("mat3x2");if(isMat4(e))return n("mat4x2");t()}if(s==="mat4x3"){if(e==="mat2x4")return n("mat2x3");if(e==="mat3x4")return n("mat3");if(isMat4(e))return n("mat4x3");t()}if(isMat4(s)){if(e==="mat2x4")return n("mat2x4");if(e==="mat3x4")return n("mat3x4");if(isMat4(e))return n("mat4");t()}throw new Error(`Invalid mul types: ${s}, ${e}`)}const add=(s,e)=>new Add({a:s,b:e}),sub=(s,e)=>new Sub({a:s,b:e}),mul=(s,e)=>new Mul({a:s,b:e});class Add extends BinaryOp{constructor({a:e,b:t}){super({a:e,b:t,outKey:"sum",outTypeFunc:addOutputType}),this.statements=({inputs:n,outputs:o})=>[`${o.sum} = ${n.a} + ${n.b};`]}}class Sub extends BinaryOp{constructor({a:e,b:t}){super({a:e,b:t,outKey:"difference",outTypeFunc:subOutputType}),this.statements=({inputs:n,outputs:o})=>[`${o.difference} = ${n.a} - ${n.b};`]}}class Mul extends BinaryOp{constructor({a:e,b:t}){super({a:e,b:t,outKey:"product",outTypeFunc:mulOutputType}),this.statements=({inputs:n,outputs:o})=>[`${o.product} = ${n.a} * ${n.b};`]}}const floatBitsToUint=s=>new FloatBitsToUint({value:s}),packHalf2x16=s=>new PackHalf2x16({value:s}),uintToRgba8=s=>new UintToRgba8({value:s});class FloatBitsToUint extends UnaryOp{constructor({value:e}){super({a:e,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:n})=>[`${n.uint} = floatBitsToUint(${t.a});`]}}class PackHalf2x16 extends UnaryOp{constructor({value:e}){super({a:e,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:n})=>[`${n.uint} = packHalf2x16(${t.a});`]}}class UintToRgba8 extends UnaryOp{constructor({value:e}){super({a:e,outKey:"rgba8",outTypeFunc:()=>"vec4"}),this.statements=({inputs:t,outputs:n})=>[`uvec4 uRgba = uvec4(${t.a} & 0xffu, (${t.a} >> 8u) & 0xffu, (${t.a} >> 16u) & 0xffu, (${t.a} >> 24u) & 0xffu);`,`${n.rgba8} = vec4(uRgba) / 255.0;`]}}const normalize=s=>new Normalize({a:s}),split=s=>new Split({vector:s}),combine=({vector:s,vectorType:e,x:t,y:n,z:o,w:a,r,g:l,b:c,a:u})=>new Combine({vector:s,vectorType:e,x:t,y:n,z:o,w:a,r,g:l,b:c,a:u}),extendVec=(s,e)=>new ExtendVec({a:s,b:e});class Normalize extends UnaryOp{constructor({a:e}){super({a:e,outTypeFunc:t=>t,outKey:"normalize"}),this.statements=({inputs:t,outputs:n})=>[`${n.normalize} = normalize(${t.a});`]}}function extendVecOutputType(s){if(s==="float")return"vec2";if(s==="vec2")return"vec3";if(s==="vec3")return"vec4";throw new Error("Invalid type")}class ExtendVec extends BinaryOp{constructor({a:e,b:t}){const n=valType(e),o=extendVecOutputType(n);super({a:e,b:t,outKey:"extend",outTypeFunc:()=>o}),this.statements=({inputs:a,outputs:r})=>[`${r.extend} = ${o}(${a.a}, ${a.b});`]}}function splitOutTypes(s){const e=t=>t;switch(s){case"vec2":return e({x:"float",y:"float",r:"float",g:"float"});case"vec3":return e({x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"});case"vec4":return e({x:"float",y:"float",z:"float",w:"float",r:"float",g:"float",b:"float",a:"float"});case"ivec2":return e({x:"int",y:"int",r:"int",g:"int"});case"ivec3":return e({x:"int",y:"int",z:"int",r:"int",g:"int",b:"int"});case"ivec4":return e({x:"int",y:"int",z:"int",w:"int",r:"int",g:"int",b:"int",a:"int"});case"uvec2":return e({x:"uint",y:"uint",r:"uint",g:"uint"});case"uvec3":return e({x:"uint",y:"uint",z:"uint",r:"uint",g:"uint",b:"uint"});case"uvec4":return e({x:"uint",y:"uint",z:"uint",w:"uint",r:"uint",g:"uint",b:"uint",a:"uint"});default:throw new Error(`Invalid vector type: ${s}`)}}class Split extends Dyno{constructor({vector:e}){const n={vector:valType(e)},o=splitOutTypes(n.vector);super({inTypes:n,outTypes:o,inputs:{vector:e}}),this.statements=({inputs:a,outputs:r})=>{const{x:l,y:c,z:u,w:d,r:f,g,b:_,a:b}=r,{vector:B}=a;return[l?`${l} = ${B}.x;`:null,c?`${c} = ${B}.y;`:null,u?`${u} = ${B}.z;`:null,d?`${d} = ${B}.w;`:null,f?`${f} = ${B}.r;`:null,g?`${g} = ${B}.g;`:null,_?`${_} = ${B}.b;`:null,b?`${b} = ${B}.a;`:null].filter(Boolean)}}}class Combine extends Dyno{constructor({vector:e,vectorType:t,x:n,y:o,z:a,w:r,r:l,g:c,b:u,a:d}){if(!e&&!t)throw new Error("Either vector or vectorType must be provided");const f=t??valType(e),g=vectorElementType(f),_=vectorDim(f),b={vector:f,x:g,y:g,r:g,g},B={vector:e,x:n,y:o,r:l,g:c};_>=3&&(Object.assign(b,{z:g,b:g}),Object.assign(B,{z:a,b:u})),_>=4&&(Object.assign(b,{w:g,a:g}),Object.assign(B,{w:r,a:d})),super({inTypes:b,outTypes:{vector:f},inputs:B}),this.statements=({inputs:I,outputs:C})=>{const{vector:R}=C,{vector:L,x:F,y:N,z:k,w:Q,r:z,g:G,b:O,a:q}=I,ce=[`${R}.x = ${F??z??(L?`${L}.x`:literalZero(g))};`,`${R}.y = ${N??G??(L?`${L}.y`:literalZero(g))};`];return _>=3&&ce.push(`${R}.z = ${k??O??(L?`${L}.z`:literalZero(g))};`),_>=4&&ce.push(`${R}.w = ${Q??q??(L?`${L}.w`:literalZero(g))};`),ce}}dynoOut(){return new DynoOutput(this,"vector")}}const transformPos=(s,{scale:e,scales:t,rotate:n,translate:o})=>new TransformPosition({position:s,scale:e,scales:t,rotate:n,translate:o}).outputs.position,transformDir=(s,{scale:e,scales:t,rotate:n})=>new TransformDir({dir:s,scale:e,scales:t,rotate:n}).outputs.dir;class TransformPosition extends Dyno{constructor({position:e,scale:t,scales:n,rotate:o,translate:a}){super({inTypes:{position:"vec3",scale:"float",scales:"vec3",rotate:"vec4",translate:"vec3"},outTypes:{position:"vec3"},inputs:{position:e,scale:t,scales:n,rotate:o,translate:a},statements:({inputs:r,outputs:l})=>{const{position:c}=l;if(!c)return[];const{scale:u,scales:d,rotate:f,translate:g}=r;return[`${c} = ${r.position??"vec3(0.0, 0.0, 0.0)"};`,u?`${c} *= ${u};`:null,d?`${c} *= ${d};`:null,f?`${c} = quatVec(${f}, ${c});`:null,g?`${c} += ${g};`:null].filter(Boolean)}})}}class TransformDir extends Dyno{constructor({dir:e,scale:t,scales:n,rotate:o}){super({inTypes:{dir:"vec3",scale:"float",scales:"vec3",rotate:"vec4"},outTypes:{dir:"vec3"},inputs:{dir:e,scale:t,scales:n,rotate:o},statements:({inputs:a,outputs:r})=>{const{dir:l}=r;if(!l)return[];const{scale:c,scales:u,rotate:d}=a;return[`${l} = ${a.dir??"vec3(0.0, 0.0, 0.0)"};`,c?`${l} *= ${c};`:null,u?`${l} *= ${u};`:null,d?`${l} = quatVec(${d}, ${l});`:null].filter(Boolean)}})}}var computeVec4_default=`precision highp float;
precision highp int;
precision highp sampler2D;
precision highp usampler2D;
precision highp isampler2D;
precision highp sampler2DArray;
precision highp usampler2DArray;
precision highp isampler2DArray;
precision highp sampler3D;
precision highp usampler3D;
precision highp isampler3D;

#include <splatDefines>

uniform uint targetLayer;
uniform int targetBase;
uniform int targetCount;

out vec4 target;

{{ GLOBALS }}

void computeReadback(int index) {
    {{ STATEMENTS }}
}

void main() {
    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);
    int index = targetIndex - targetBase;

    if ((index >= 0) && (index < targetCount)) {
        computeReadback(index);
    } else {
        target = vec4(0.0, 0.0, 0.0, 0.0);
    }
}`;const _Readback=class yi{constructor({renderer:e}={}){this.renderer=e,this.capacity=0,this.count=0}dispose(){this.target&&(this.target.dispose(),this.target=void 0)}ensureBuffer(e,t){const o=Math.ceil(Math.max(1,e)/SPLAT_TEX_WIDTH)*SPLAT_TEX_WIDTH*4;if(t.byteLength>=o)return t;const a=new ArrayBuffer(o);if(t instanceof ArrayBuffer)return a;const r=t.constructor;return new r(a)}ensureCapacity(e){const{width:t,height:n,depth:o,maxSplats:a}=getTextureSize(e);(!this.target||a>this.capacity)&&(this.dispose(),this.capacity=a,this.target=new WebGLArrayRenderTarget(t,n,o,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:NearestFilter,minFilter:NearestFilter}),this.target.texture.format=RGBAFormat,this.target.texture.type=UnsignedByteType,this.target.texture.internalFormat="RGBA8",this.target.scissorTest=!0)}prepareProgramMaterial(e){let t=yi.readbackProgram.get(e);if(!t){const o=dynoBlock({index:"int"},{rgba8:"vec4"},({index:a})=>(e.inputs.index=a,{rgba8:new OutputRgba8({rgba8:e.outputs.rgba8})}));yi.programTemplate||(yi.programTemplate=new DynoProgramTemplate(computeVec4_default)),t=new DynoProgram({graph:o,inputs:{index:"index"},outputs:{rgba8:"target"},template:yi.programTemplate}),Object.assign(t.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),yi.readbackProgram.set(e,t)}const n=t.prepareMaterial();return yi.fullScreenQuad.material=n,{program:t,material:n}}saveRenderState(e){return{xrEnabled:e.xr.enabled,autoClear:e.autoClear}}resetRenderState(e,t){e.setRenderTarget(null),e.xr.enabled=t.xrEnabled,e.autoClear=t.autoClear}process({count:e,material:t}){const n=this.renderer;if(!n)throw new Error("No renderer");if(!this.target)throw new Error("No target");const o=SPLAT_TEX_WIDTH*SPLAT_TEX_HEIGHT;t.uniforms.targetBase.value=0,t.uniforms.targetCount.value=e;let a=0;for(;a<e;){const r=Math.floor(a/o),l=r*o,c=Math.min(SPLAT_TEX_HEIGHT,Math.ceil((e-l)/SPLAT_TEX_WIDTH));t.uniforms.targetLayer.value=r,this.target.scissor.set(0,0,SPLAT_TEX_WIDTH,c),n.setRenderTarget(this.target,r),n.xr.enabled=!1,n.autoClear=!1,yi.fullScreenQuad.render(n),a+=SPLAT_TEX_WIDTH*c}this.count=e}async read({readback:e}){const t=this.renderer;if(!t)throw new Error("No renderer");if(!this.target)throw new Error("No target");const n=Math.ceil(this.count/SPLAT_TEX_WIDTH)*SPLAT_TEX_WIDTH;if(e.byteLength<n*4)throw new Error(`Readback buffer too small: ${e.byteLength} < ${n*4}`);const o=new Uint8Array(e instanceof ArrayBuffer?e:e.buffer),a=SPLAT_TEX_WIDTH*SPLAT_TEX_HEIGHT;let r=0;const l=[];for(;r<this.count;){const c=Math.floor(r/a),u=c*a,d=Math.min(SPLAT_TEX_HEIGHT,Math.ceil((this.count-u)/SPLAT_TEX_WIDTH));t.setRenderTarget(this.target,c);const f=SPLAT_TEX_WIDTH*d*4,g=o.subarray(u*4,u*4+f),_=t==null?void 0:t.readRenderTargetPixelsAsync(this.target,0,0,SPLAT_TEX_WIDTH,d,g);l.push(_),r+=SPLAT_TEX_WIDTH*d}return Promise.all(l).then(()=>e)}render({reader:e,count:t,renderer:n}){if(this.renderer=n||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(t);const{program:o,material:a}=this.prepareProgramMaterial(e);o.update();const r=this.saveRenderState(this.renderer);this.process({count:t,material:a}),this.resetRenderState(this.renderer,r)}async readback({readback:e}){if(!this.renderer)throw new Error("No renderer");const t=this.saveRenderState(this.renderer),n=this.read({readback:e});return this.resetRenderState(this.renderer,t),n}async renderReadback({reader:e,count:t,renderer:n,readback:o}){if(this.renderer=n||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(t);const{program:a,material:r}=this.prepareProgramMaterial(e);a.update();const l=this.saveRenderState(this.renderer);this.process({count:t,material:r});const c=this.read({readback:o});return this.resetRenderState(this.renderer,l),c}getTexture(){var e;return(e=this.target)==null?void 0:e.texture}};_Readback.programTemplate=null;_Readback.readbackProgram=new Map;_Readback.fullScreenQuad=new FullScreenQuad(new RawShaderMaterial({visible:!1}));let Readback=_Readback;const _RgbaArray=class On{constructor(e={}){this.capacity=0,this.count=0,this.array=null,this.readback=null,this.source=null,this.needsUpdate=!0,this.dyno=new DynoUniform({key:"rgbaArray",type:TRgbaArray,globals:()=>[defineRgbaArray],value:{texture:On.getEmpty(),count:0},update:t=>{var n;return t.texture=((n=this.readback)==null?void 0:n.getTexture())??this.source??On.getEmpty(),t.count=this.count,t}}),e.array?(this.array=e.array,this.capacity=Math.floor(this.array.length/4),this.capacity=Math.floor(this.capacity/SPLAT_TEX_WIDTH)*SPLAT_TEX_WIDTH,this.count=Math.min(this.capacity,e.count??Number.POSITIVE_INFINITY)):(this.capacity=e.capacity??0,this.count=0)}dispose(){this.readback&&(this.readback.dispose(),this.readback=null),this.source&&(this.source.dispose(),this.source=null)}ensureCapacity(e){var t;if(!this.array||e>(((t=this.array)==null?void 0:t.length)??0)/4){this.capacity=getTextureSize(e).maxSplats;const n=new Uint8Array(this.capacity*4);this.array&&n.set(this.array),this.array=n}return this.array}getTexture(){var e;let t=(e=this.readback)==null?void 0:e.getTexture();return(this.source||this.array)&&(t=this.maybeUpdateSource()),t??On.getEmpty()}maybeUpdateSource(){if(!this.array)throw new Error("No array");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:e,height:t,depth:n}=this.source.image;this.capacity!==e*t*n&&(this.source.dispose(),this.source=null)}if(this.source)this.array.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.array.buffer));else{const{width:e,height:t,depth:n}=getTextureSize(this.capacity);this.source=new DataArrayTexture(this.array,e,t,n),this.source.format=RGBAFormat,this.source.type=UnsignedByteType,this.source.internalFormat="RGBA8",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}render({reader:e,count:t,renderer:n}){this.readback||(this.readback=new Readback({renderer:n})),this.readback.render({reader:e,count:t,renderer:n}),this.capacity=this.readback.capacity,this.count=this.readback.count}fromPackedSplats({packedSplats:e,base:t,count:n,renderer:o}){const{dynoSplats:a,dynoBase:r,dynoCount:l,reader:c}=On.makeDynos();return a.packedSplats=e,r.value=t,l.value=n,this.render({reader:c,count:n,renderer:o}),this}async read(){if(!this.readback)throw new Error("No readback");return(!this.array||this.array.length<this.count*4)&&(this.array=new Uint8Array(this.capacity*4)),(await this.readback.readback({readback:this.array})).subarray(0,this.count*4)}static getEmpty(){if(!On.emptySource){const e=new Uint8Array(4);On.emptySource=new DataArrayTexture(e,1,1,1),On.emptySource.format=RGBAFormat,On.emptySource.type=UnsignedByteType,On.emptySource.internalFormat="RGBA8",On.emptySource.needsUpdate=!0}return On.emptySource}static makeDynos(){if(!On.dynos){const e=new DynoPackedSplats,t=new DynoInt({value:0}),n=new DynoInt({value:0}),o=dynoBlock({index:"int"},{rgba8:"vec4"},({index:a})=>{if(!a)throw new Error("index is undefined");a=add(a,t);const r=readPackedSplatRange(e,a,t,n);return{rgba8:splitGsplat(r).outputs.rgba}});On.dynos={dynoSplats:e,dynoBase:t,dynoCount:n,reader:o}}return On.dynos}};_RgbaArray.emptySource=null;_RgbaArray.dynos=null;let RgbaArray=_RgbaArray;const TRgbaArray={type:"RgbaArray"},defineRgbaArray=unindent(`
  struct RgbaArray {
    sampler2DArray texture;
    int count;
  };
`);function readRgbaArray(s,e){return new Dyno({inTypes:{rgba:TRgbaArray,index:"int"},outTypes:{rgba:"vec4"},inputs:{rgba:s,index:e},globals:()=>[defineRgbaArray],statements:({inputs:n,outputs:o})=>unindentLines(`
        if ((index >= 0) && (index < ${n.rgba}.count)) {
          ${o.rgba} = texelFetch(${n.rgba}.texture, splatTexCoord(index), 0);
        } else {
          ${o.rgba} = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `)}).outputs.rgba}function sdfTypeToNumber(s){switch(s){case"all":return 0;case"plane":return 1;case"sphere":return 2;case"box":return 3;case"ellipsoid":return 4;case"cylinder":return 5;case"capsule":return 6;case"infinite_cone":return 7;default:throw new Error(`Unknown SDF type: ${s}`)}}function rgbaBlendModeToNumber(s){switch(s){case"multiply":return 0;case"set_rgb":return 1;case"add_rgba":return 2;default:throw new Error(`Unknown blend mode: ${s}`)}}class SplatEditSdf extends Object3D{constructor(e={}){super();const{type:t,invert:n,opacity:o,color:a,displace:r,radius:l}=e;this.type=t??"sphere",this.invert=n??!1,this.opacity=o??1,this.color=a??new Color(1,1,1),this.displace=r??new Vector3(0,0,0),this.radius=l??0}}const _SplatEdit=class Ns extends Object3D{constructor(e={}){const{name:t,rgbaBlendMode:n="multiply",sdfSmooth:o=0,softEdge:a=0,invert:r=!1,sdfs:l=null}=e;super(),this.rgbaBlendMode=n,this.sdfSmooth=o,this.softEdge=a,this.invert=r,this.sdfs=l,this.ordering=Ns.nextOrdering++,this.name=t??`Edit ${this.ordering}`}addSdf(e){this.sdfs==null&&(this.sdfs=[]),this.sdfs.includes(e)||this.sdfs.push(e)}removeSdf(e){this.sdfs!=null&&(this.sdfs=this.sdfs.filter(t=>t!==e))}};_SplatEdit.nextOrdering=1;let SplatEdit=_SplatEdit;class SplatEdits{constructor({maxSdfs:e,maxEdits:t}){this.maxSdfs=Math.max(16,e??0),this.numSdfs=0,this.sdfData=new Uint32Array(this.maxSdfs*8*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs),this.dynoSdfArray=new DynoUniform({key:"sdfArray",type:SdfArray,globals:()=>[defineSdfArray],value:{numSdfs:0,sdfTexture:this.sdfTexture},update:n=>(n.numSdfs=this.numSdfs,n.sdfTexture=this.sdfTexture,n)}),this.maxEdits=Math.max(16,t??0),this.numEdits=0,this.editData=new Uint32Array(this.maxEdits*4),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoNumEdits=new DynoInt({value:0}),this.dynoEdits=this.newEdits(this.editData,this.maxEdits)}newSdfTexture(e,t){const n=new DataTexture(e,8,t,RGBAIntegerFormat,UnsignedIntType);return n.internalFormat="RGBA32UI",n.needsUpdate=!0,n}newEdits(e,t){return new DynoUniform({key:"edits",type:"uvec4",count:t,globals:()=>[defineEdit],value:e})}ensureCapacity({maxSdfs:e,maxEdits:t}){let n=!1;return e>this.sdfTexture.image.height&&(this.sdfTexture.dispose(),this.maxSdfs=Math.max(this.maxSdfs*2,e),this.sdfData=new Uint32Array(this.maxSdfs*8*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs)),t>(this.dynoEdits.count??0)&&(this.maxEdits=Math.max(this.maxEdits*2,t),this.editData=new Uint32Array(this.maxEdits*4),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoEdits=this.newEdits(this.editData,this.maxEdits),n=!0),n}updateEditData(e,t){const n=this.editData[e]!==t;return this.editData[e]=t,n}updateEditFloatData(e,t){tempFloat32[0]=t;const n=this.editFloatData[e]!==tempFloat32[0];return n&&(this.editFloatData[e]=tempFloat32[0]),n}encodeEdit(e,{sdfFirst:t,sdfCount:n,invert:o,rgbaBlendMode:a,softEdge:r,sdfSmooth:l}){const c=e*4;let u=!1;return u=this.updateEditData(c+0,a|(o?256:0))||u,u=this.updateEditData(c+1,t|n<<16)||u,u=this.updateEditFloatData(c+2,r)||u,u=this.updateEditFloatData(c+3,l)||u,u}updateSdfData(e,t){const n=this.sdfData[e]!==t;return this.sdfData[e]=t,n}updateSdfFloatData(e,t){tempFloat32[0]=t;const n=this.sdfFloatData[e]!==tempFloat32[0];return n&&(this.sdfFloatData[e]=tempFloat32[0]),n}encodeSdf(e,{sdfType:t,invert:n,center:o,quaternion:a,scale:r,sizes:l},c){const u=e*32,d=t|(n?256:0);let f=!1;f=this.updateSdfFloatData(u+0,(o==null?void 0:o.x)??0)||f,f=this.updateSdfFloatData(u+1,(o==null?void 0:o.y)??0)||f,f=this.updateSdfFloatData(u+2,(o==null?void 0:o.z)??0)||f,f=this.updateSdfData(u+3,d)||f,f=this.updateSdfFloatData(u+4,(a==null?void 0:a.x)??0)||f,f=this.updateSdfFloatData(u+5,(a==null?void 0:a.y)??0)||f,f=this.updateSdfFloatData(u+6,(a==null?void 0:a.z)??0)||f,f=this.updateSdfFloatData(u+7,(a==null?void 0:a.w)??0)||f,f=this.updateSdfFloatData(u+8,(r==null?void 0:r.x)??0)||f,f=this.updateSdfFloatData(u+9,(r==null?void 0:r.y)??0)||f,f=this.updateSdfFloatData(u+10,(r==null?void 0:r.z)??0)||f,f=this.updateSdfData(u+11,0)||f,f=this.updateSdfFloatData(u+12,(l==null?void 0:l.x)??0)||f,f=this.updateSdfFloatData(u+13,(l==null?void 0:l.y)??0)||f,f=this.updateSdfFloatData(u+14,(l==null?void 0:l.z)??0)||f,f=this.updateSdfFloatData(u+15,(l==null?void 0:l.w)??0)||f;const g=Math.min(4,c.length);for(let _=0;_<g;++_){const b=u+16+_*4;f=this.updateSdfFloatData(b+0,c[_].x)||f,f=this.updateSdfFloatData(b+1,c[_].y)||f,f=this.updateSdfFloatData(b+2,c[_].z)||f,f=this.updateSdfFloatData(b+3,c[_].w)||f}return f}update(e){const t=e.reduce((f,{sdfs:g})=>f+g.length,0),n=this.ensureCapacity({maxEdits:e.length,maxSdfs:t}),o=[new Vector4,new Vector4],a=new Vector3,r=new Quaternion,l=new Vector3,c=new Vector4;let u=0,d=n;e.length!==this.dynoNumEdits.value&&(this.dynoNumEdits.value=e.length,this.numEdits=e.length,d=!0);for(const[f,{edit:g,sdfs:_}]of e.entries()){d=this.encodeEdit(f,{sdfFirst:u,sdfCount:_.length,invert:g.invert,rgbaBlendMode:rgbaBlendModeToNumber(g.rgbaBlendMode),softEdge:g.softEdge,sdfSmooth:g.sdfSmooth})||d;let b=!1;for(const B of _)c.set(B.scale.x,B.scale.y,B.scale.z,B.radius),B.scale.setScalar(1),B.updateMatrixWorld(),B.matrixWorld.clone().invert().decompose(a,r,l),B.scale.set(c.x,c.y,c.z),B.updateMatrixWorld(),o[0].set(B.color.r,B.color.g,B.color.b,B.opacity),o[1].set(B.displace.x,B.displace.y,B.displace.z,1),b=this.encodeSdf(u,{sdfType:sdfTypeToNumber(B.type),invert:B.invert,center:a,quaternion:r,scale:l,sizes:c},o)||b,u+=1;this.numSdfs=u,b&&(this.sdfTexture.needsUpdate=!0),d||(d=b)}return{updated:d,dynoUpdated:n}}modify(e){return applyGsplatRgbaDisplaceEdits(e,this.dynoSdfArray,this.dynoNumEdits,this.dynoEdits)}}const SdfArray={type:"SdfArray"},defineSdfArray=unindent(`
  struct SdfArray {
    int numSdfs;
    usampler2D sdfTexture;
  };

  void unpackSdfArray(
    usampler2D sdfTexture, int sdfIndex, out uint flags,
    out vec3 center, out vec4 quaternion, out vec3 scale, out vec4 sizes,
    int numValues, out vec4 values[4]
  ) {
    uvec4 temp = texelFetch(sdfTexture, ivec2(0, sdfIndex), 0);
    flags = temp.w;
    center = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));

    temp = texelFetch(sdfTexture, ivec2(1, sdfIndex), 0);
    quaternion = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));

    temp = texelFetch(sdfTexture, ivec2(2, sdfIndex), 0);
    scale = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));

    temp = texelFetch(sdfTexture, ivec2(3, sdfIndex), 0);
    sizes = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));

    for (int i = 0; i < numValues; ++i) {
      temp = texelFetch(sdfTexture, ivec2(4 + i, sdfIndex), 0);
      values[i] = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));
    }
  }

  const uint SDF_FLAG_TYPE = 0xFFu;
  const uint SDF_FLAG_INVERT = 1u << 8u;

  const uint SDF_TYPE_ALL = 0u;
  const uint SDF_TYPE_PLANE = 1u;
  const uint SDF_TYPE_SPHERE = 2u;
  const uint SDF_TYPE_BOX = 3u;
  const uint SDF_TYPE_ELLIPSOID = 4u;
  const uint SDF_TYPE_CYLINDER = 5u;
  const uint SDF_TYPE_CAPSULE = 6u;
  const uint SDF_TYPE_INFINITE_CONE = 7u;

  float evaluateSdfArray(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,
    float smoothK, int numValues, out vec4 outValues[4]
  ) {
    float distanceAccum = (smoothK == 0.0) ? 1.0 / 0.0 : 0.0;
    float maxExp = -1.0 / 0.0;
    for (int i = 0; i < numValues; ++i) {
        outValues[i] = vec4(0.0);
    }

    uint flags;
    vec3 center, scale;
    vec4 quaternion, sizes;
    vec4 values[4];

    int sdfLast = min(sdfFirst + sdfCount, numSdfs);
    for (int index = sdfFirst; index < sdfLast; ++index) {
      unpackSdfArray(sdfTexture, index, flags, center, quaternion, scale, sizes, numValues, values);
      uint sdfType = flags & SDF_FLAG_TYPE;
      vec3 sdfPos = quatVec(quaternion, pos * scale) + center;

      float distance;
      switch (sdfType) {
        case SDF_TYPE_ALL:
          distance = -1.0 / 0.0;
          break;
        case SDF_TYPE_PLANE: {
          distance = sdfPos.z;
          break;
        }
        case SDF_TYPE_SPHERE: {
          distance = length(sdfPos) - sizes.w;
          break;
        }
        case SDF_TYPE_BOX: {
          vec3 q = abs(sdfPos) - sizes.xyz + sizes.w;
          distance = length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - sizes.w;
          break;
        }
        case SDF_TYPE_ELLIPSOID: {
          vec3 sizes = sizes.xyz;
          float k0 = length(sdfPos / sizes);
          float k1 = length(sdfPos / dot(sizes, sizes));
          distance = k0 * (k0 - 1.0) / k1;
          break;
        }
        case SDF_TYPE_CYLINDER: {
          vec2 d = abs(vec2(length(sdfPos.xz), sdfPos.y)) - sizes.wy;
          distance = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));
          break;
        }
        case SDF_TYPE_CAPSULE: {
          sdfPos.y -= clamp(sdfPos.y, -0.5 * sizes.y, 0.5 * sizes.y);
          distance = length(sdfPos) - sizes.w;
          break;
        }
        case SDF_TYPE_INFINITE_CONE: {
          float angle = 0.25 * PI * sizes.w;
          vec2 c = vec2(sin(angle), cos(angle));
          vec2 q = vec2(length(sdfPos.xy), -sdfPos.z);
          float d = length(q - c * max(dot(q, c), 0.0));
          distance = d * (((q.x * c.y - q.y * c.x) < 0.0) ? -1.0 : 1.0);
          break;
        }
      }

      if ((flags & SDF_FLAG_INVERT) != 0u) {
        distance = -distance;
      }

      if (smoothK == 0.0) {
        if (distance < distanceAccum) {
          distanceAccum = distance;
          for (int i = 0; i < numValues; ++i) {
            outValues[i] = values[i];
          }
        }
      } else {
        float scaledDistance = -distance / smoothK;
        if (scaledDistance > maxExp) {
          float scale = exp(maxExp - scaledDistance);
          distanceAccum *= scale;
          for (int i = 0; i < numValues; ++i) {
            outValues[i] *= scale;
          }
          maxExp = scaledDistance;
        }

        float weight = exp(scaledDistance - maxExp);
        distanceAccum += weight;
        for (int i = 0; i < numValues; ++i) {
          outValues[i] += weight * values[i];
        }
      }
    }

    if (smoothK == 0.0) {
      return distanceAccum;
    } else {
      // Very distant SDFs may result in 0 accumulation
      if (distanceAccum == 0.0) {
        return 1.0 / 0.0;
      }
      for (int i = 0; i < numValues; ++i) {
        outValues[i] /= distanceAccum;
      }
      return (-log(distanceAccum) - maxExp) * smoothK;
    }
  }

  float modulateSdfArray(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,
    float smoothK, int numValues, out vec4 values[4],
    float softEdge, bool invert
  ) {
    float distance = evaluateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, numValues, values);
    if (invert) {
      distance = -distance;
    }

    return (softEdge == 0.0) ? ((distance < 0.0) ? 1.0 : 0.0)
      : clamp(-distance / softEdge + 0.5, 0.0, 1.0);
  }
`),defineEdit=unindent(`
  const uint EDIT_FLAG_BLEND = 0xFFu;
  const uint EDIT_BLEND_MULTIPLY = 0u;
  const uint EDIT_BLEND_SET_RGB = 1u;
  const uint EDIT_BLEND_ADD_RGBA = 2u;
  const uint EDIT_FLAG_INVERT = 0x100u;

  void decodeEdit(
    uvec4 packedEdit, out int sdfFirst, out int sdfCount,
    out bool invert, out uint rgbaBlendMode, out float softEdge, out float sdfSmooth
  ) {
    rgbaBlendMode = packedEdit.x & EDIT_FLAG_BLEND;
    invert = (packedEdit.x & EDIT_FLAG_INVERT) != 0u;

    sdfFirst = int(packedEdit.y & 0xFFFFu);
    sdfCount = int(packedEdit.y >> 16u);

    softEdge = uintBitsToFloat(packedEdit.z);
    sdfSmooth = uintBitsToFloat(packedEdit.w);
  }

  void applyRgbaDisplaceEdit(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, inout vec3 pos,
    float smoothK, float softEdge, bool invert, uint rgbaBlendMode, inout vec4 rgba
  ) {
    vec4 values[4];
    float modulate = modulateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, 2, values, softEdge, invert);
    // On Android, moving values[0] is necessary to work around a compiler bug.
    vec4 sdfRgba = values[0];
    vec4 sdfDisplaceScale = values[1];

    vec4 target;
    switch (rgbaBlendMode) {
      case EDIT_BLEND_MULTIPLY:
        target = rgba * sdfRgba;
        break;
      case EDIT_BLEND_SET_RGB:
        target = vec4(sdfRgba.rgb, rgba.a * sdfRgba.a);
        break;
      case EDIT_BLEND_ADD_RGBA:
        target = rgba + sdfRgba;
        break;
      default:
        // Debug output if blend mode not set
        target = vec4(fract(pos), 1.0);
    }
    rgba = mix(rgba, target, modulate);
    pos += sdfDisplaceScale.xyz * modulate;
  }

  void applyPackedRgbaDisplaceEdit(uvec4 packedEdit, usampler2D sdfTexture, int numSdfs, inout vec3 pos, inout vec4 rgba) {
    int sdfFirst, sdfCount;
    bool invert;
    uint rgbaBlendMode;
    float softEdge, sdfSmooth;
    decodeEdit(packedEdit, sdfFirst, sdfCount, invert, rgbaBlendMode, softEdge, sdfSmooth);
    applyRgbaDisplaceEdit(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, sdfSmooth, softEdge, invert, rgbaBlendMode, rgba);
  }
`);function applyGsplatRgbaDisplaceEdits(s,e,t,n){return new Dyno({inTypes:{gsplat:Gsplat,sdfArray:SdfArray,numEdits:"int",rgbaDisplaceEdits:"uvec4"},outTypes:{gsplat:Gsplat},globals:()=>[defineSdfArray,defineEdit],inputs:{gsplat:s,sdfArray:e,numEdits:t,rgbaDisplaceEdits:n},statements:({inputs:a,outputs:r})=>{const{sdfArray:l,numEdits:c,rgbaDisplaceEdits:u}=a,{gsplat:d}=r;return unindentLines(`
        ${d} = ${a.gsplat};
        if (isGsplatActive(${d}.flags)) {
          for (int editIndex = 0; editIndex < ${c}; ++editIndex) {
            applyPackedRgbaDisplaceEdit(
              ${u}[editIndex], ${l}.sdfTexture, ${l}.numSdfs,
              ${d}.center, ${d}.rgba
            );
          }
        }
      `)}}).outputs.gsplat}const tempFloat32=new Float32Array(1);class SplatModifier{constructor(e){this.modifier=e,this.cache=new Map}apply(e){let t=this.cache.get(e);return t||(t=dynoBlock({index:"int"},{gsplat:Gsplat},({index:n})=>{const{gsplat:o}=e.apply({index:n});return this.modifier.apply({gsplat:o})}),this.cache.set(e,t)),t}}class SplatTransformer{constructor(){this.scale=new DynoFloat({value:Number.NEGATIVE_INFINITY}),this.rotate=new DynoVec4({value:new Quaternion(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)}),this.translate=new DynoVec3({value:new Vector3(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)})}apply(e){return transformPos(e,{scale:this.scale,rotate:this.rotate,translate:this.translate})}applyDir(e){return transformDir(e,{rotate:this.rotate})}applyGsplat(e){return transformGsplat(e,{scale:this.scale,rotate:this.rotate,translate:this.translate})}updateFromMatrix(e){const t=new Vector3,n=new Quaternion,o=new Vector3;e.decompose(o,n,t);const a=(t.x+t.y+t.z)/3;let r=!1;return a!==this.scale.value&&(this.scale.value=a,r=!0),o.equals(this.translate.value)||(this.translate.value.copy(o),r=!0),n.equals(this.rotate.value)||(this.rotate.value.copy(n),r=!0),r}update(e){return e.updateMatrixWorld(),this.updateFromMatrix(e.matrixWorld)}}class SplatGenerator extends Object3D{constructor({numSplats:e,generator:t,construct:n,update:o}){if(super(),this.numSplats=e??0,this.generator=t,this.frameUpdate=o,this.version=0,n){const a=n(this);Object.assign(this,a)}}updateVersion(){this.version+=1}set needsUpdate(e){e&&this.updateVersion()}}const _SplatMesh=class vr extends SplatGenerator{constructor(e={}){const t=new SplatTransformer,n=new SplatTransformer,o=new SplatTransformer,a=new SplatTransformer,r=new DynoVec4({value:new Vector4(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY)}),l=new DynoFloat({value:0}),c=new DynoFloat({value:0}),u={transform:t,viewToWorld:n,worldToView:o,viewToObject:a,recolor:r,time:l,deltaTime:c};if(super({update:({time:d,deltaTime:f,viewToWorld:g,globalEdits:_})=>this.update({time:d,deltaTime:f,viewToWorld:g,globalEdits:_})}),this.isInitialized=!1,this.recolor=new Color(1,1,1),this.opacity=1,this.enableViewToObject=!1,this.enableViewToWorld=!1,this.enableWorldToView=!1,this.skinning=null,this.edits=null,this.rgbaDisplaceEdits=null,this.splatRgba=null,this.maxSh=3,this.packedSplats=e.packedSplats??new PackedSplats,this.packedSplats.splatEncoding=e.splatEncoding??{...DEFAULT_SPLAT_ENCODING},this.numSplats=this.packedSplats.numSplats,this.editable=e.editable??!0,this.onFrame=e.onFrame,this.context=u,this.objectModifier=e.objectModifier,this.worldModifier=e.worldModifier,this.updateGenerator(),e.url||e.fileBytes||e.constructSplats||e.packedSplats&&!e.packedSplats.isInitialized)this.initialized=this.asyncInitialize(e).then(async()=>{if(this.updateGenerator(),this.isInitialized=!0,e.onLoad){const d=e.onLoad(this);d instanceof Promise&&await d}return this});else if(this.isInitialized=!0,this.initialized=Promise.resolve(this),e.onLoad){const d=e.onLoad(this);d instanceof Promise&&(this.initialized=d.then(()=>this))}}async asyncInitialize(e){const{url:t,fileBytes:n,fileType:o,fileName:a,maxSplats:r,constructSplats:l,splatEncoding:c}=e;if(t||n||l){const u={url:t,fileBytes:n,fileType:o,fileName:a,maxSplats:r,construct:l,splatEncoding:c};this.packedSplats.reinitialize(u)}this.packedSplats&&(await this.packedSplats.initialized,this.numSplats=this.packedSplats.numSplats,this.updateGenerator())}static async staticInitialize(){await __wbg_init(),vr.isStaticInitialized=!0}pushSplat(e,t,n,o,a){this.packedSplats.pushSplat(e,t,n,o,a)}forEachSplat(e){this.packedSplats.forEachSplat(e)}dispose(){this.packedSplats.dispose()}getBoundingBox(e=!0){if(!this.initialized)throw new Error("Cannot get bounding box before SplatMesh is initialized");const t=new Vector3(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY),n=new Vector3(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY),o=new Vector3,a=[-1,1];return this.packedSplats.forEachSplat((l,c,u,d,f,g)=>{if(e)t.min(c),n.max(c);else for(const _ of a)for(const b of a)for(const B of a)o.set(_*u.x,b*u.y,B*u.z),o.applyQuaternion(d),o.add(c),t.min(o),n.max(o)}),new Box3(t,n)}constructGenerator(e){const{transform:t,viewToObject:n,recolor:o}=e,a=dynoBlock({index:"int"},{gsplat:Gsplat},({index:r})=>{if(!r)throw new Error("index is undefined");let l=readPackedSplat(this.packedSplats.dyno,r);if(this.maxSh>=1){const{sh1Texture:u,sh2Texture:d,sh3Texture:f}=this.ensureShTextures();if(u){let g=function(L,F){const{x:N,y:k}=split(F).outputs,Q=mul(add(N,k),dynoConst("float",.5)),z=mul(sub(k,N),dynoConst("float",.5));return add(Q,mul(L,z))};const _=n.translate,{center:b}=splitGsplat(l).outputs,B=normalize(sub(b,_)),I=evaluateSH1(l,u,B);let C=g(I,this.packedSplats.dynoSh1MinMax);if(this.maxSh>=2&&d){const L=evaluateSH2(l,d,B);C=add(C,g(L,this.packedSplats.dynoSh2MinMax))}if(this.maxSh>=3&&f){const L=evaluateSH3(l,f,B);C=add(C,g(L,this.packedSplats.dynoSh3MinMax))}let{rgba:R}=splitGsplat(l).outputs;R=add(R,extendVec(C,dynoConst("float",0))),l=combineGsplat({gsplat:l,rgba:R})}}if(this.splatRgba){const u=readRgbaArray(this.splatRgba.dyno,r);l=combineGsplat({gsplat:l,rgba:u})}this.skinning&&(l=this.skinning.modify(l)),this.objectModifier&&(l=this.objectModifier.apply({gsplat:l}).gsplat),l=t.applyGsplat(l);const c=mul(o,splitGsplat(l).outputs.rgba);return l=combineGsplat({gsplat:l,rgba:c}),this.rgbaDisplaceEdits&&(l=this.rgbaDisplaceEdits.modify(l)),this.worldModifier&&(l=this.worldModifier.apply({gsplat:l}).gsplat),{gsplat:l}});this.generator=a}updateGenerator(){this.constructGenerator(this.context)}update({time:e,viewToWorld:t,deltaTime:n,globalEdits:o}){var a;this.numSplats=this.packedSplats.numSplats,this.context.time.value=e,this.context.deltaTime.value=n,vr.dynoTime.value=e;const{transform:r,viewToObject:l,recolor:c}=this.context;let u=r.update(this);this.context.viewToWorld.updateFromMatrix(t)&&this.enableViewToWorld&&(u=!0);const d=t.clone().invert();this.context.worldToView.updateFromMatrix(d)&&this.enableWorldToView&&(u=!0);const _=new Matrix4().compose(r.translate.value,r.rotate.value,new Vector3().setScalar(r.scale.value)).invert().multiply(t);l.updateFromMatrix(_)&&(this.enableViewToObject||this.packedSplats.extra.sh1)&&(u=!0);const b=new Vector4(this.recolor.r,this.recolor.g,this.recolor.b,this.opacity);b.equals(c.value)||(c.value.copy(b),u=!0);const B=this.editable?(this.edits??[]).concat(o):[];this.editable&&!this.edits&&this.traverseVisible(C=>{C instanceof SplatEdit&&B.push(C)}),B.sort((C,R)=>C.ordering-R.ordering);const I=B.map(C=>{if(C.sdfs!=null)return{edit:C,sdfs:C.sdfs};const R=[];return C.traverseVisible(L=>{L instanceof SplatEditSdf&&R.push(L)}),{edit:C,sdfs:R}});if(I.length>0&&!this.rgbaDisplaceEdits){const C=I.length,R=I.reduce((L,F)=>L+F.sdfs.length,0);this.rgbaDisplaceEdits=new SplatEdits({maxEdits:C,maxSdfs:R}),this.updateGenerator()}if(this.rgbaDisplaceEdits){const C=this.rgbaDisplaceEdits.update(I);u||(u=C.updated),C.dynoUpdated&&this.updateGenerator()}u&&this.updateVersion(),(a=this.onFrame)==null||a.call(this,{mesh:this,time:e,deltaTime:n})}raycast(e,t){var n,o;if(!this.packedSplats.packedArray||!this.packedSplats.numSplats)return;const{near:a,far:r,ray:l}=e,c=this.matrixWorld.clone().invert(),u=new Matrix3().setFromMatrix4(c),d=l.origin.clone().applyMatrix4(c),f=l.direction.clone().applyMatrix3(u),g=new Vector3;c.decompose(new Vector3,new Quaternion,g),(g.x*g.y*g.z)**(1/3);const b=raycast_splats(d.x,d.y,d.z,f.x,f.y,f.z,a,r,this.packedSplats.numSplats,this.packedSplats.packedArray,!0,((n=this.packedSplats.splatEncoding)==null?void 0:n.lnScaleMin)??LN_SCALE_MIN,((o=this.packedSplats.splatEncoding)==null?void 0:o.lnScaleMax)??LN_SCALE_MAX);for(const B of b){const I=l.direction.clone().multiplyScalar(B).add(l.origin);t.push({distance:B,point:I,object:this})}}ensureShTextures(){if(!this.packedSplats.extra.sh1)return{};let e=this.packedSplats.extra.sh1Texture;if(!e){let o=this.packedSplats.extra.sh1;const{width:a,height:r,depth:l,maxSplats:c}=getTextureSize(o.length/2);if(o.length<c*2){const d=new Uint32Array(c*2);d.set(o),this.packedSplats.extra.sh1=d,o=d}const u=new DataArrayTexture(o,a,r,l);u.format=RGIntegerFormat,u.type=UnsignedIntType,u.internalFormat="RG32UI",u.needsUpdate=!0,e=new DynoUsampler2DArray({value:u,key:"sh1"}),this.packedSplats.extra.sh1Texture=e}if(!this.packedSplats.extra.sh2)return{sh1Texture:e};let t=this.packedSplats.extra.sh2Texture;if(!t){let o=this.packedSplats.extra.sh2;const{width:a,height:r,depth:l,maxSplats:c}=getTextureSize(o.length/4);if(o.length<c*4){const d=new Uint32Array(c*4);d.set(o),this.packedSplats.extra.sh2=d,o=d}const u=new DataArrayTexture(o,a,r,l);u.format=RGBAIntegerFormat,u.type=UnsignedIntType,u.internalFormat="RGBA32UI",u.needsUpdate=!0,t=new DynoUsampler2DArray({value:u,key:"sh2"}),this.packedSplats.extra.sh2Texture=t}if(!this.packedSplats.extra.sh3)return{sh1Texture:e,sh2Texture:t};let n=this.packedSplats.extra.sh3Texture;if(!n){let o=this.packedSplats.extra.sh3;const{width:a,height:r,depth:l,maxSplats:c}=getTextureSize(o.length/4);if(o.length<c*4){const d=new Uint32Array(c*4);d.set(o),this.packedSplats.extra.sh3=d,o=d}const u=new DataArrayTexture(o,a,r,l);u.format=RGBAIntegerFormat,u.type=UnsignedIntType,u.internalFormat="RGBA32UI",u.needsUpdate=!0,n=new DynoUsampler2DArray({value:u,key:"sh3"}),this.packedSplats.extra.sh3Texture=n}return{sh1Texture:e,sh2Texture:t,sh3Texture:n}}};_SplatMesh.staticInitialized=_SplatMesh.staticInitialize();_SplatMesh.isStaticInitialized=!1;_SplatMesh.dynoTime=new DynoFloat({value:0});let SplatMesh=_SplatMesh;const defineEvaluateSH1=unindent(`
  vec3 evaluateSH1(Gsplat gsplat, usampler2DArray sh1, vec3 viewDir) {
    // Extract sint7 values packed into 2 x uint32
    uvec2 packed = texelFetch(sh1, splatTexCoord(gsplat.index), 0).rg;
    vec3 sh1_0 = vec3(ivec3(
      int(packed.x << 25u) >> 25,
      int(packed.x << 18u) >> 25,
      int(packed.x << 11u) >> 25
    )) / 63.0;
    vec3 sh1_1 = vec3(ivec3(
      int(packed.x << 4u) >> 25,
      int((packed.x >> 3u) | (packed.y << 29u)) >> 25,
      int(packed.y << 22u) >> 25
    )) / 63.0;
    vec3 sh1_2 = vec3(ivec3(
      int(packed.y << 15u) >> 25,
      int(packed.y << 8u) >> 25,
      int(packed.y << 1u) >> 25
    )) / 63.0;

    return sh1_0 * (-0.4886025 * viewDir.y)
      + sh1_1 * (0.4886025 * viewDir.z)
      + sh1_2 * (-0.4886025 * viewDir.x);
  }
`),defineEvaluateSH2=unindent(`
  vec3 evaluateSH2(Gsplat gsplat, usampler2DArray sh2, vec3 viewDir) {
    // Extract sint8 values packed into 4 x uint32
    uvec4 packed = texelFetch(sh2, splatTexCoord(gsplat.index), 0);
    vec3 sh2_0 = vec3(ivec3(
      int(packed.x << 24u) >> 24,
      int(packed.x << 16u) >> 24,
      int(packed.x << 8u) >> 24
    )) / 127.0;
    vec3 sh2_1 = vec3(ivec3(
      int(packed.x) >> 24,
      int(packed.y << 24u) >> 24,
      int(packed.y << 16u) >> 24
    )) / 127.0;
    vec3 sh2_2 = vec3(ivec3(
      int(packed.y << 8u) >> 24,
      int(packed.y) >> 24,
      int(packed.z << 24u) >> 24
    )) / 127.0;
    vec3 sh2_3 = vec3(ivec3(
      int(packed.z << 16u) >> 24,
      int(packed.z << 8u) >> 24,
      int(packed.z) >> 24
    )) / 127.0;
    vec3 sh2_4 = vec3(ivec3(
      int(packed.w << 24u) >> 24,
      int(packed.w << 16u) >> 24,
      int(packed.w << 8u) >> 24
    )) / 127.0;

    return sh2_0 * (1.0925484 * viewDir.x * viewDir.y)
      + sh2_1 * (-1.0925484 * viewDir.y * viewDir.z)
      + sh2_2 * (0.3153915 * (2.0 * viewDir.z * viewDir.z - viewDir.x * viewDir.x - viewDir.y * viewDir.y))
      + sh2_3 * (-1.0925484 * viewDir.x * viewDir.z)
      + sh2_4 * (0.5462742 * (viewDir.x * viewDir.x - viewDir.y * viewDir.y));
  }
`),defineEvaluateSH3=unindent(`
  vec3 evaluateSH3(Gsplat gsplat, usampler2DArray sh3, vec3 viewDir) {
    // Extract sint6 values packed into 4 x uint32
    uvec4 packed = texelFetch(sh3, splatTexCoord(gsplat.index), 0);
    vec3 sh3_0 = vec3(ivec3(
      int(packed.x << 26u) >> 26,
      int(packed.x << 20u) >> 26,
      int(packed.x << 14u) >> 26
    )) / 31.0;
    vec3 sh3_1 = vec3(ivec3(
      int(packed.x << 8u) >> 26,
      int(packed.x << 2u) >> 26,
      int((packed.x >> 4u) | (packed.y << 28u)) >> 26
    )) / 31.0;
    vec3 sh3_2 = vec3(ivec3(
      int(packed.y << 22u) >> 26,
      int(packed.y << 16u) >> 26,
      int(packed.y << 10u) >> 26
    )) / 31.0;
    vec3 sh3_3 = vec3(ivec3(
      int(packed.y << 4u) >> 26,
      int((packed.y >> 2u) | (packed.z << 30u)) >> 26,
      int(packed.z << 24u) >> 26
    )) / 31.0;
    vec3 sh3_4 = vec3(ivec3(
      int(packed.z << 18u) >> 26,
      int(packed.z << 12u) >> 26,
      int(packed.z << 6u) >> 26
    )) / 31.0;
    vec3 sh3_5 = vec3(ivec3(
      int(packed.z) >> 26,
      int(packed.w << 26u) >> 26,
      int(packed.w << 20u) >> 26
    )) / 31.0;
    vec3 sh3_6 = vec3(ivec3(
      int(packed.w << 14u) >> 26,
      int(packed.w << 8u) >> 26,
      int(packed.w << 2u) >> 26
    )) / 31.0;

    float xx = viewDir.x * viewDir.x;
    float yy = viewDir.y * viewDir.y;
    float zz = viewDir.z * viewDir.z;
    float xy = viewDir.x * viewDir.y;
    float yz = viewDir.y * viewDir.z;
    float zx = viewDir.z * viewDir.x;

    return sh3_0 * (-0.5900436 * viewDir.y * (3.0 * xx - yy))
      + sh3_1 * (2.8906114 * xy * viewDir.z) +
      + sh3_2 * (-0.4570458 * viewDir.y * (4.0 * zz - xx - yy))
      + sh3_3 * (0.3731763 * viewDir.z * (2.0 * zz - 3.0 * xx - 3.0 * yy))
      + sh3_4 * (-0.4570458 * viewDir.x * (4.0 * zz - xx - yy))
      + sh3_5 * (1.4453057 * viewDir.z * (xx - yy))
      + sh3_6 * (-0.5900436 * viewDir.x * (xx - 3.0 * yy));
  }
`);function evaluateSH1(s,e,t){return dyno$1({inTypes:{gsplat:Gsplat,sh1:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:s,sh1:e,viewDir:t},globals:()=>[defineGsplat,defineEvaluateSH1],statements:({inputs:n,outputs:o})=>unindentLines(`
        if (isGsplatActive(${n.gsplat}.flags)) {
          ${o.rgb} = evaluateSH1(${n.gsplat}, ${n.sh1}, ${n.viewDir});
        } else {
          ${o.rgb} = vec3(0.0);
        }
      `)}).outputs.rgb}function evaluateSH2(s,e,t){return dyno$1({inTypes:{gsplat:Gsplat,sh2:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:s,sh2:e,viewDir:t},globals:()=>[defineGsplat,defineEvaluateSH2],statements:({inputs:n,outputs:o})=>unindentLines(`
        if (isGsplatActive(${n.gsplat}.flags)) {
          ${o.rgb} = evaluateSH2(${n.gsplat}, ${n.sh2}, ${n.viewDir});
        } else {
          ${o.rgb} = vec3(0.0);
        }
      `)}).outputs.rgb}function evaluateSH3(s,e,t){return dyno$1({inTypes:{gsplat:Gsplat,sh3:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:s,sh3:e,viewDir:t},globals:()=>[defineGsplat,defineEvaluateSH3],statements:({inputs:n,outputs:o})=>unindentLines(`
        if (isGsplatActive(${n.gsplat}.flags)) {
          ${o.rgb} = evaluateSH3(${n.gsplat}, ${n.sh3}, ${n.viewDir});
        } else {
          ${o.rgb} = vec3(0.0);
        }
      `)}).outputs.rgb}const _PlyReader=class nr{constructor({fileBytes:e}){this.header="",this.littleEndian=!0,this.elements={},this.comments=[],this.data=null,this.numSplats=0,this.fileBytes=e instanceof ArrayBuffer?new Uint8Array(e):e}async parseHeader(){const t=new ReadableStream({start:r=>{r.enqueue(this.fileBytes.slice(0,65536)),r.close()}}).pipeThrough(new TextDecoderStream).getReader();this.header="";const n=`end_header
`;for(;;){const{value:r,done:l}=await t.read();if(l)throw new Error("Failed to read header");this.header+=r;const c=this.header.indexOf(n);if(c>=0){this.header=this.header.slice(0,c+n.length);break}}const o=new TextEncoder().encode(this.header).length;this.data=new DataView(this.fileBytes.buffer,o),this.elements={};let a=null;this.comments=[],this.header.trim().split(`
`).forEach((r,l)=>{const c=r.trim();if(l===0){if(c!=="ply")throw new Error("Invalid PLY header");return}if(c.length===0)return;const u=c.split(" ");switch(u[0]){case"format":if(u[1]==="binary_little_endian")this.littleEndian=!0;else if(u[1]==="binary_big_endian")this.littleEndian=!1;else throw new Error(`Unsupported PLY format: ${u[1]}`);if(u[2]!=="1.0")throw new Error(`Unsupported PLY version: ${u[2]}`);break;case"end_header":break;case"comment":this.comments.push(c.slice(8));break;case"element":{const d=u[1];a={name:d,count:Number.parseInt(u[2]),properties:{}},this.elements[d]=a;break}case"property":if(a==null)throw new Error("Property must be inside an element");u[1]==="list"?a.properties[u[4]]={isList:!0,type:u[3],countType:u[2]}:a.properties[u[2]]={isList:!1,type:u[1]};break}}),this.elements.vertex&&(this.numSplats=this.elements.vertex.count)}parseData(e){let t=0;const n=this.data;if(n==null)throw new Error("No data to parse");for(const o in this.elements){const a=this.elements[o],{count:r,properties:l}=a,c={},u=[];for(const[f,g]of Object.entries(l))g.isList?(c[f]=[],u.push(()=>{const _=c[f];_.length=PARSE_FIELD[g.countType](n,t,this.littleEndian),t+=FIELD_BYTES[g.countType];for(let b=0;b<_.length;b++)_[b]=PARSE_FIELD[g.type](n,t,this.littleEndian),t+=FIELD_BYTES[g.type]})):(c[f]=0,u.push(()=>{c[f]=PARSE_FIELD[g.type](n,t,this.littleEndian),t+=FIELD_BYTES[g.type]}));const d=e(a)??(()=>{});for(let f=0;f<r;f++){for(const g of u)g();d(f,c)}}}parseSplats(e,t){if(this.elements.vertex==null)throw new Error("No vertex element found");let n=!1;const o=[];let a=0,r=[],l=[],c=[],u,d,f;function g(){const C=NUM_SH_TO_NUM_F_REST[a];r=new Array(3).fill(null).flatMap((R,L)=>[0,1,2].map((F,N)=>`f_rest_${L+N*C/3}`)),l=new Array(5).fill(null).flatMap((R,L)=>[0,1,2].map((F,N)=>`f_rest_${3+L+N*C/3}`)),c=new Array(7).fill(null).flatMap((R,L)=>[0,1,2].map((F,N)=>`f_rest_${8+L+N*C/3}`)),u=a>=1?new Float32Array(3*3):void 0,d=a>=2?new Float32Array(5*3):void 0,f=a>=3?new Float32Array(7*3):void 0}function _(C,R){if(!u)throw new Error("Missing sh1");for(const[L,F]of r.entries())u[L]=R[F]*8/255-4;if(d)for(const[L,F]of l.entries())d[L]=R[F]*8/255-4;if(f)for(const[L,F]of c.entries())f[L]=R[F]*8/255-4;t==null||t(C,u,d,f)}function b(C){const{min_x:R,min_y:L,min_z:F,max_x:N,max_y:k,max_z:Q,min_scale_x:z,min_scale_y:G,min_scale_z:O,max_scale_x:q,max_scale_y:ce,max_scale_z:ne}=C.properties;if(!R||!L||!F||!N||!k||!Q||!z||!G||!O||!q||!ce||!ne)throw new Error("Missing PLY chunk properties");return n=!0,(ue,pe)=>{const{min_x:fe,min_y:ee,min_z:J,max_x:ye,max_y:Te,max_z:xe,min_scale_x:ve,min_scale_y:he,min_scale_z:le,max_scale_x:_e,max_scale_y:De,max_scale_z:de,min_r:Me,min_g:Ne,min_b:Pe,max_r:nt,max_g:ie,max_b:oe}=pe;o.push({min_x:fe,min_y:ee,min_z:J,max_x:ye,max_y:Te,max_z:xe,min_scale_x:ve,min_scale_y:he,min_scale_z:le,max_scale_x:_e,max_scale_y:De,max_scale_z:de,min_r:Me,min_g:Ne,min_b:Pe,max_r:nt,max_g:ie,max_b:oe})}}function B(C){if(t&&C.name==="sh")return a=getNumSh(C.properties),g(),_;if(C.name!=="vertex")return null;const{packed_position:R,packed_rotation:L,packed_scale:F,packed_color:N}=C.properties;if(!R||!L||!F||!N)throw new Error("Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color");const k=Math.sqrt(2);return(Q,z)=>{const G=o[Q>>>8];if(G==null)throw new Error("Missing PLY chunk");const{min_x:O,min_y:q,min_z:ce,max_x:ne,max_y:ue,max_z:pe,min_scale_x:fe,min_scale_y:ee,min_scale_z:J,max_scale_x:ye,max_scale_y:Te,max_scale_z:xe,min_r:ve,min_g:he,min_b:le,max_r:_e,max_g:De,max_b:de}=G,{packed_position:Me,packed_rotation:Ne,packed_scale:Pe,packed_color:nt}=z,ie=(Me>>>21&2047)/2047*(ne-O)+O,oe=(Me>>>11&1023)/1023*(ue-q)+q,$=(Me&2047)/2047*(pe-ce)+ce,Se=((Ne>>>20&1023)/1023-.5)*k,Be=((Ne>>>10&1023)/1023-.5)*k,we=((Ne&1023)/1023-.5)*k,Fe=Math.sqrt(Math.max(0,1-Se*Se-Be*Be-we*we)),$e=Ne>>>30,ze=$e===0?Se:$e===1?Fe:Be,qe=$e<=1?Be:$e===2?Fe:we,ut=$e<=2?we:Fe,te=$e===0?Fe:Se,H=Math.exp((Pe>>>21&2047)/2047*(ye-fe)+fe),Ie=Math.exp((Pe>>>11&1023)/1023*(Te-ee)+ee),Ge=Math.exp((Pe&2047)/2047*(xe-J)+J),We=(nt>>>24&255)/255*((_e??1)-(ve??0))+(ve??0),Ve=(nt>>>16&255)/255*((De??1)-(he??0))+(he??0),dt=(nt>>>8&255)/255*((de??1)-(le??0))+(le??0),it=(nt&255)/255;e(Q,ie,oe,$,H,Ie,Ge,ze,qe,ut,te,it,We,Ve,dt)}}const I=C=>{if(C.name==="chunk")return b(C);if(n)return B(C);if(C.name!=="vertex")return null;const{x:R,y:L,z:F,scale_0:N,scale_1:k,scale_2:Q,rot_0:z,rot_1:G,rot_2:O,rot_3:q,opacity:ce,f_dc_0:ne,f_dc_1:ue,f_dc_2:pe,red:fe,green:ee,blue:J,alpha:ye}=C.properties;if(!R||!L||!F)throw new Error("Missing PLY properties: x, y, z");const Te=N&&k&&Q,xe=z&&G&&O&&q,ve=ye!=null?FIELD_SCALE[ye.type]:1,he=fe!=null?FIELD_SCALE[fe.type]:1,le=ee!=null?FIELD_SCALE[ee.type]:1,_e=J!=null?FIELD_SCALE[J.type]:1;return a=getNumSh(C.properties),g(),(De,de)=>{const Me=Te?Math.exp(de.scale_0):nr.defaultPointScale,Ne=Te?Math.exp(de.scale_1):nr.defaultPointScale,Pe=Te?Math.exp(de.scale_2):nr.defaultPointScale,nt=xe?de.rot_1:0,ie=xe?de.rot_2:0,oe=xe?de.rot_3:0,$=xe?de.rot_0:1,Se=ce!=null?1/(1+Math.exp(-de.opacity)):ye!=null?de.alpha/ve:1,Be=ne!=null?de.f_dc_0*SH_C0$1+.5:fe!=null?de.red/he:1,we=ue!=null?de.f_dc_1*SH_C0$1+.5:ee!=null?de.green/le:1,Fe=pe!=null?de.f_dc_2*SH_C0$1+.5:J!=null?de.blue/_e:1;if(e(De,de.x,de.y,de.z,Me,Ne,Pe,nt,ie,oe,$,Se,Be,we,Fe),t&&u){if(u)for(const[$e,ze]of r.entries())u[$e]=de[ze];if(d)for(const[$e,ze]of l.entries())d[$e]=de[ze];if(f)for(const[$e,ze]of c.entries())f[$e]=de[ze];t(De,u,d,f)}}};this.parseData(I)}injectRgba(e){let t=0;const n=this.data;if(n==null)throw new Error("No parsed data");if(e.length!==this.numSplats*4)throw new Error("Invalid RGBA array length");for(const o in this.elements){const a=this.elements[o],{count:r,properties:l}=a,c=[];let u=0;const d=o==="vertex";if(d){for(const f of["opacity","f_dc_0","f_dc_1","f_dc_2"])if(!l[f]||l[f].type!=="float")throw new Error(`Can't injectRgba due to property: ${f}`)}for(const[f,g]of Object.entries(l))if(g.isList)c.push(()=>{const _=PARSE_FIELD[g.countType](n,t,this.littleEndian);t+=FIELD_BYTES[g.countType],t+=_*FIELD_BYTES[g.type]});else{if(d)if(f==="f_dc_0"||f==="f_dc_1"||f==="f_dc_2"){const _=Number.parseInt(f.slice(5));c.push(()=>{const b=(e[u+_]/255-.5)/SH_C0$1;SET_FIELD[g.type](n,t,this.littleEndian,b)})}else f==="opacity"&&c.push(()=>{const _=Math.max(-100,Math.min(100,-Math.log(1/(e[u+3]/255)-1)));SET_FIELD[g.type](n,t,this.littleEndian,_)});c.push(()=>{t+=FIELD_BYTES[g.type]})}for(let f=0;f<r;f++){for(const g of c)g();d&&(u+=4)}}}};_PlyReader.defaultPointScale=.001;let PlyReader=_PlyReader;const SH_C0$1=.28209479177387814,PARSE_FIELD={char:(s,e,t)=>s.getInt8(e),uchar:(s,e,t)=>s.getUint8(e),short:(s,e,t)=>s.getInt16(e,t),ushort:(s,e,t)=>s.getUint16(e,t),int:(s,e,t)=>s.getInt32(e,t),uint:(s,e,t)=>s.getUint32(e,t),float:(s,e,t)=>s.getFloat32(e,t),double:(s,e,t)=>s.getFloat64(e,t)},SET_FIELD={char:(s,e,t,n)=>{s.setInt8(e,n)},uchar:(s,e,t,n)=>{s.setUint8(e,n)},short:(s,e,t,n)=>{s.setInt16(e,n,t)},ushort:(s,e,t,n)=>{s.setUint16(e,n,t)},int:(s,e,t,n)=>{s.setInt32(e,n,t)},uint:(s,e,t,n)=>{s.setUint32(e,n,t)},float:(s,e,t,n)=>{s.setFloat32(e,n,t)},double:(s,e,t,n)=>{s.setFloat64(e,n,t)}},FIELD_BYTES={char:1,uchar:1,short:2,ushort:2,int:4,uint:4,float:4,double:8},FIELD_SCALE={char:127,uchar:255,short:32767,ushort:65535,int:2147483647,uint:4294967295,float:1,double:1},NUM_F_REST_TO_NUM_SH={0:0,9:1,24:2,45:3},NUM_SH_TO_NUM_F_REST={0:0,1:9,2:24,3:45};function getNumSh(s){let e=0;for(;s[`f_rest_${e}`];)e+=1;const t=NUM_F_REST_TO_NUM_SH[e];if(t==null)throw new Error(`Unsupported number of SH coefficients: ${e}`);return t}const jsContent=`(function() {
  "use strict";
  let wasm;
  const cachedTextDecoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-8", { ignoreBOM: true, fatal: true }) : { decode: () => {
    throw Error("TextDecoder not available");
  } };
  if (typeof TextDecoder !== "undefined") {
    cachedTextDecoder.decode();
  }
  let cachedUint8ArrayMemory0 = null;
  function getUint8ArrayMemory0() {
    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {
      cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachedUint8ArrayMemory0;
  }
  function getStringFromWasm0(ptr, len) {
    ptr = ptr >>> 0;
    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));
  }
  function sort_splats(num_splats, readback, ordering) {
    const ret = wasm.sort_splats(num_splats, readback, ordering);
    return ret >>> 0;
  }
  function sort32_splats(num_splats, readback, ordering) {
    const ret = wasm.sort32_splats(num_splats, readback, ordering);
    return ret >>> 0;
  }
  async function __wbg_load(module, imports) {
    if (typeof Response === "function" && module instanceof Response) {
      if (typeof WebAssembly.instantiateStreaming === "function") {
        try {
          return await WebAssembly.instantiateStreaming(module, imports);
        } catch (e) {
          if (module.headers.get("Content-Type") != "application/wasm") {
            console.warn("\`WebAssembly.instantiateStreaming\` failed because your server does not serve Wasm with \`application/wasm\` MIME type. Falling back to \`WebAssembly.instantiate\` which is slower. Original error:\\n", e);
          } else {
            throw e;
          }
        }
      }
      const bytes = await module.arrayBuffer();
      return await WebAssembly.instantiate(bytes, imports);
    } else {
      const instance = await WebAssembly.instantiate(module, imports);
      if (instance instanceof WebAssembly.Instance) {
        return { instance, module };
      } else {
        return instance;
      }
    }
  }
  function __wbg_get_imports() {
    const imports = {};
    imports.wbg = {};
    imports.wbg.__wbg_buffer_609cc3eee51ed158 = function(arg0) {
      const ret = arg0.buffer;
      return ret;
    };
    imports.wbg.__wbg_length_3b4f022188ae8db6 = function(arg0) {
      const ret = arg0.length;
      return ret;
    };
    imports.wbg.__wbg_length_6ca527665d89694d = function(arg0) {
      const ret = arg0.length;
      return ret;
    };
    imports.wbg.__wbg_length_8cfd2c6409af88ad = function(arg0) {
      const ret = arg0.length;
      return ret;
    };
    imports.wbg.__wbg_new_9fee97a409b32b68 = function(arg0) {
      const ret = new Uint16Array(arg0);
      return ret;
    };
    imports.wbg.__wbg_new_e3b321dcfef89fc7 = function(arg0) {
      const ret = new Uint32Array(arg0);
      return ret;
    };
    imports.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354 = function(arg0, arg1, arg2) {
      const ret = new Float32Array(arg0, arg1 >>> 0, arg2 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212 = function(arg0, arg1, arg2) {
      const ret = new Uint32Array(arg0, arg1 >>> 0, arg2 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_newwithlength_5a5efe313cfd59f1 = function(arg0) {
      const ret = new Float32Array(arg0 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_set_10bad9bee0e9c58b = function(arg0, arg1, arg2) {
      arg0.set(arg1, arg2 >>> 0);
    };
    imports.wbg.__wbg_set_d23661d19148b229 = function(arg0, arg1, arg2) {
      arg0.set(arg1, arg2 >>> 0);
    };
    imports.wbg.__wbg_set_f4f1f0daa30696fc = function(arg0, arg1, arg2) {
      arg0.set(arg1, arg2 >>> 0);
    };
    imports.wbg.__wbg_subarray_3aaeec89bb2544f0 = function(arg0, arg1, arg2) {
      const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_subarray_769e1e0f81bb259b = function(arg0, arg1, arg2) {
      const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);
      return ret;
    };
    imports.wbg.__wbindgen_init_externref_table = function() {
      const table = wasm.__wbindgen_export_0;
      const offset = table.grow(4);
      table.set(0, void 0);
      table.set(offset + 0, void 0);
      table.set(offset + 1, null);
      table.set(offset + 2, true);
      table.set(offset + 3, false);
    };
    imports.wbg.__wbindgen_memory = function() {
      const ret = wasm.memory;
      return ret;
    };
    imports.wbg.__wbindgen_throw = function(arg0, arg1) {
      throw new Error(getStringFromWasm0(arg0, arg1));
    };
    return imports;
  }
  function __wbg_finalize_init(instance, module) {
    wasm = instance.exports;
    __wbg_init.__wbindgen_wasm_module = module;
    cachedUint8ArrayMemory0 = null;
    wasm.__wbindgen_start();
    return wasm;
  }
  async function __wbg_init(module_or_path) {
    if (wasm !== void 0) return wasm;
    if (typeof module_or_path !== "undefined") {
      if (Object.getPrototypeOf(module_or_path) === Object.prototype) {
        ({ module_or_path } = module_or_path);
      } else {
        console.warn("using deprecated parameters for the initialization function; pass a single object instead");
      }
    }
    if (typeof module_or_path === "undefined") {
      module_or_path = new URL("data:application/wasm;base64,", self.location.href);
    }
    const imports = __wbg_get_imports();
    if (typeof module_or_path === "string" || typeof Request === "function" && module_or_path instanceof Request || typeof URL === "function" && module_or_path instanceof URL) {
      module_or_path = fetch(module_or_path);
    }
    const { instance, module } = await __wbg_load(await module_or_path, imports);
    return __wbg_finalize_init(instance, module);
  }
  var ch2 = {};
  var wk = function(c, id, msg, transfer, cb) {
    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([
      c + ';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'
    ], { type: "text/javascript" }))));
    w.onmessage = function(e) {
      var d = e.data, ed = d.$e$;
      if (ed) {
        var err2 = new Error(ed[0]);
        err2["code"] = ed[1];
        err2.stack = ed[2];
        cb(err2, null);
      } else
        cb(null, d);
    };
    w.postMessage(msg, transfer);
    return w;
  };
  var u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;
  var fleb = new u8([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    0,
    /* unused */
    0,
    0,
    /* impossible */
    0
  ]);
  var fdeb = new u8([
    0,
    0,
    0,
    0,
    1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    5,
    5,
    6,
    6,
    7,
    7,
    8,
    8,
    9,
    9,
    10,
    10,
    11,
    11,
    12,
    12,
    13,
    13,
    /* unused */
    0,
    0
  ]);
  var clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
  var freb = function(eb, start) {
    var b = new u16(31);
    for (var i2 = 0; i2 < 31; ++i2) {
      b[i2] = start += 1 << eb[i2 - 1];
    }
    var r = new i32(b[30]);
    for (var i2 = 1; i2 < 30; ++i2) {
      for (var j = b[i2]; j < b[i2 + 1]; ++j) {
        r[j] = j - b[i2] << 5 | i2;
      }
    }
    return { b, r };
  };
  var _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;
  fl[28] = 258, revfl[258] = 28;
  var _b = freb(fdeb, 0), fd = _b.b;
  var rev = new u16(32768);
  for (var i = 0; i < 32768; ++i) {
    var x = (i & 43690) >> 1 | (i & 21845) << 1;
    x = (x & 52428) >> 2 | (x & 13107) << 2;
    x = (x & 61680) >> 4 | (x & 3855) << 4;
    rev[i] = ((x & 65280) >> 8 | (x & 255) << 8) >> 1;
  }
  var hMap = function(cd, mb, r) {
    var s = cd.length;
    var i2 = 0;
    var l = new u16(mb);
    for (; i2 < s; ++i2) {
      if (cd[i2])
        ++l[cd[i2] - 1];
    }
    var le = new u16(mb);
    for (i2 = 1; i2 < mb; ++i2) {
      le[i2] = le[i2 - 1] + l[i2 - 1] << 1;
    }
    var co;
    if (r) {
      co = new u16(1 << mb);
      var rvb = 15 - mb;
      for (i2 = 0; i2 < s; ++i2) {
        if (cd[i2]) {
          var sv = i2 << 4 | cd[i2];
          var r_1 = mb - cd[i2];
          var v = le[cd[i2] - 1]++ << r_1;
          for (var m = v | (1 << r_1) - 1; v <= m; ++v) {
            co[rev[v] >> rvb] = sv;
          }
        }
      }
    } else {
      co = new u16(s);
      for (i2 = 0; i2 < s; ++i2) {
        if (cd[i2]) {
          co[i2] = rev[le[cd[i2] - 1]++] >> 15 - cd[i2];
        }
      }
    }
    return co;
  };
  var flt = new u8(288);
  for (var i = 0; i < 144; ++i)
    flt[i] = 8;
  for (var i = 144; i < 256; ++i)
    flt[i] = 9;
  for (var i = 256; i < 280; ++i)
    flt[i] = 7;
  for (var i = 280; i < 288; ++i)
    flt[i] = 8;
  var fdt = new u8(32);
  for (var i = 0; i < 32; ++i)
    fdt[i] = 5;
  var flrm = /* @__PURE__ */ hMap(flt, 9, 1);
  var fdrm = /* @__PURE__ */ hMap(fdt, 5, 1);
  var max = function(a) {
    var m = a[0];
    for (var i2 = 1; i2 < a.length; ++i2) {
      if (a[i2] > m)
        m = a[i2];
    }
    return m;
  };
  var bits = function(d, p, m) {
    var o = p / 8 | 0;
    return (d[o] | d[o + 1] << 8) >> (p & 7) & m;
  };
  var bits16 = function(d, p) {
    var o = p / 8 | 0;
    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);
  };
  var shft = function(p) {
    return (p + 7) / 8 | 0;
  };
  var slc = function(v, s, e) {
    if (s == null || s < 0)
      s = 0;
    if (e == null || e > v.length)
      e = v.length;
    return new u8(v.subarray(s, e));
  };
  var ec = [
    "unexpected EOF",
    "invalid block type",
    "invalid length/literal",
    "invalid distance",
    "stream finished",
    "no stream handler",
    ,
    "no callback",
    "invalid UTF-8 data",
    "extra field too long",
    "date not in range 1980-2099",
    "filename too long",
    "stream finishing",
    "invalid zip data"
    // determined by unknown compression method
  ];
  var err = function(ind, msg, nt) {
    var e = new Error(msg || ec[ind]);
    e.code = ind;
    if (Error.captureStackTrace)
      Error.captureStackTrace(e, err);
    if (!nt)
      throw e;
    return e;
  };
  var inflt = function(dat, st, buf, dict) {
    var sl = dat.length, dl = dict ? dict.length : 0;
    if (!sl || st.f && !st.l)
      return buf || new u8(0);
    var noBuf = !buf;
    var resize = noBuf || st.i != 2;
    var noSt = st.i;
    if (noBuf)
      buf = new u8(sl * 3);
    var cbuf = function(l2) {
      var bl = buf.length;
      if (l2 > bl) {
        var nbuf = new u8(Math.max(bl * 2, l2));
        nbuf.set(buf);
        buf = nbuf;
      }
    };
    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;
    var tbts = sl * 8;
    do {
      if (!lm) {
        final = bits(dat, pos, 1);
        var type = bits(dat, pos + 1, 3);
        pos += 3;
        if (!type) {
          var s = shft(pos) + 4, l = dat[s - 4] | dat[s - 3] << 8, t = s + l;
          if (t > sl) {
            if (noSt)
              err(0);
            break;
          }
          if (resize)
            cbuf(bt + l);
          buf.set(dat.subarray(s, t), bt);
          st.b = bt += l, st.p = pos = t * 8, st.f = final;
          continue;
        } else if (type == 1)
          lm = flrm, dm = fdrm, lbt = 9, dbt = 5;
        else if (type == 2) {
          var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;
          var tl = hLit + bits(dat, pos + 5, 31) + 1;
          pos += 14;
          var ldt = new u8(tl);
          var clt = new u8(19);
          for (var i2 = 0; i2 < hcLen; ++i2) {
            clt[clim[i2]] = bits(dat, pos + i2 * 3, 7);
          }
          pos += hcLen * 3;
          var clb = max(clt), clbmsk = (1 << clb) - 1;
          var clm = hMap(clt, clb, 1);
          for (var i2 = 0; i2 < tl; ) {
            var r = clm[bits(dat, pos, clbmsk)];
            pos += r & 15;
            var s = r >> 4;
            if (s < 16) {
              ldt[i2++] = s;
            } else {
              var c = 0, n = 0;
              if (s == 16)
                n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i2 - 1];
              else if (s == 17)
                n = 3 + bits(dat, pos, 7), pos += 3;
              else if (s == 18)
                n = 11 + bits(dat, pos, 127), pos += 7;
              while (n--)
                ldt[i2++] = c;
            }
          }
          var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);
          lbt = max(lt);
          dbt = max(dt);
          lm = hMap(lt, lbt, 1);
          dm = hMap(dt, dbt, 1);
        } else
          err(1);
        if (pos > tbts) {
          if (noSt)
            err(0);
          break;
        }
      }
      if (resize)
        cbuf(bt + 131072);
      var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;
      var lpos = pos;
      for (; ; lpos = pos) {
        var c = lm[bits16(dat, pos) & lms], sym = c >> 4;
        pos += c & 15;
        if (pos > tbts) {
          if (noSt)
            err(0);
          break;
        }
        if (!c)
          err(2);
        if (sym < 256)
          buf[bt++] = sym;
        else if (sym == 256) {
          lpos = pos, lm = null;
          break;
        } else {
          var add = sym - 254;
          if (sym > 264) {
            var i2 = sym - 257, b = fleb[i2];
            add = bits(dat, pos, (1 << b) - 1) + fl[i2];
            pos += b;
          }
          var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;
          if (!d)
            err(3);
          pos += d & 15;
          var dt = fd[dsym];
          if (dsym > 3) {
            var b = fdeb[dsym];
            dt += bits16(dat, pos) & (1 << b) - 1, pos += b;
          }
          if (pos > tbts) {
            if (noSt)
              err(0);
            break;
          }
          if (resize)
            cbuf(bt + 131072);
          var end = bt + add;
          if (bt < dt) {
            var shift = dl - dt, dend = Math.min(dt, end);
            if (shift + bt < 0)
              err(3);
            for (; bt < dend; ++bt)
              buf[bt] = dict[shift + bt];
          }
          for (; bt < end; ++bt)
            buf[bt] = buf[bt - dt];
        }
      }
      st.l = lm, st.p = lpos, st.b = bt, st.f = final;
      if (lm)
        final = 1, st.m = lbt, st.d = dm, st.n = dbt;
    } while (!final);
    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);
  };
  var et = /* @__PURE__ */ new u8(0);
  var mrg = function(a, b) {
    var o = {};
    for (var k in a)
      o[k] = a[k];
    for (var k in b)
      o[k] = b[k];
    return o;
  };
  var wcln = function(fn, fnStr, td2) {
    var dt = fn();
    var st = fn.toString();
    var ks = st.slice(st.indexOf("[") + 1, st.lastIndexOf("]")).replace(/\\s+/g, "").split(",");
    for (var i2 = 0; i2 < dt.length; ++i2) {
      var v = dt[i2], k = ks[i2];
      if (typeof v == "function") {
        fnStr += ";" + k + "=";
        var st_1 = v.toString();
        if (v.prototype) {
          if (st_1.indexOf("[native code]") != -1) {
            var spInd = st_1.indexOf(" ", 8) + 1;
            fnStr += st_1.slice(spInd, st_1.indexOf("(", spInd));
          } else {
            fnStr += st_1;
            for (var t in v.prototype)
              fnStr += ";" + k + ".prototype." + t + "=" + v.prototype[t].toString();
          }
        } else
          fnStr += st_1;
      } else
        td2[k] = v;
    }
    return fnStr;
  };
  var ch = [];
  var cbfs = function(v) {
    var tl = [];
    for (var k in v) {
      if (v[k].buffer) {
        tl.push((v[k] = new v[k].constructor(v[k])).buffer);
      }
    }
    return tl;
  };
  var wrkr = function(fns, init, id, cb) {
    if (!ch[id]) {
      var fnStr = "", td_1 = {}, m = fns.length - 1;
      for (var i2 = 0; i2 < m; ++i2)
        fnStr = wcln(fns[i2], fnStr, td_1);
      ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };
    }
    var td2 = mrg({}, ch[id].e);
    return wk(ch[id].c + ";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=" + init.toString() + "}", id, td2, cbfs(td2), cb);
  };
  var bInflt = function() {
    return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt];
  };
  var pbf = function(msg) {
    return postMessage(msg, [msg.buffer]);
  };
  var gopt = function(o) {
    return o && {
      out: o.size && new u8(o.size),
      dictionary: o.dictionary
    };
  };
  var cbify = function(dat, opts, fns, init, id, cb) {
    var w = wrkr(fns, init, id, function(err2, dat2) {
      w.terminate();
      cb(err2, dat2);
    });
    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);
    return function() {
      w.terminate();
    };
  };
  var b2 = function(d, b) {
    return d[b] | d[b + 1] << 8;
  };
  var b4 = function(d, b) {
    return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;
  };
  var b8 = function(d, b) {
    return b4(d, b) + b4(d, b + 4) * 4294967296;
  };
  var gzs = function(d) {
    if (d[0] != 31 || d[1] != 139 || d[2] != 8)
      err(6, "invalid gzip data");
    var flg = d[3];
    var st = 10;
    if (flg & 4)
      st += (d[10] | d[11] << 8) + 2;
    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])
      ;
    return st + (flg & 2);
  };
  var Inflate = /* @__PURE__ */ function() {
    function Inflate2(opts, cb) {
      if (typeof opts == "function")
        cb = opts, opts = {};
      this.ondata = cb;
      var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);
      this.s = { i: 0, b: dict ? dict.length : 0 };
      this.o = new u8(32768);
      this.p = new u8(0);
      if (dict)
        this.o.set(dict);
    }
    Inflate2.prototype.e = function(c) {
      if (!this.ondata)
        err(5);
      if (this.d)
        err(4);
      if (!this.p.length)
        this.p = c;
      else if (c.length) {
        var n = new u8(this.p.length + c.length);
        n.set(this.p), n.set(c, this.p.length), this.p = n;
      }
    };
    Inflate2.prototype.c = function(final) {
      this.s.i = +(this.d = final || false);
      var bts = this.s.b;
      var dt = inflt(this.p, this.s, this.o);
      this.ondata(slc(dt, bts, this.s.b), this.d);
      this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;
      this.p = slc(this.p, this.s.p / 8 | 0), this.s.p &= 7;
    };
    Inflate2.prototype.push = function(chunk, final) {
      this.e(chunk), this.c(final);
    };
    return Inflate2;
  }();
  function inflate(data, opts, cb) {
    if (!cb)
      cb = opts, opts = {};
    if (typeof cb != "function")
      err(7);
    return cbify(data, opts, [
      bInflt
    ], function(ev) {
      return pbf(inflateSync(ev.data[0], gopt(ev.data[1])));
    }, 1, cb);
  }
  function inflateSync(data, opts) {
    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);
  }
  var Gunzip = /* @__PURE__ */ function() {
    function Gunzip2(opts, cb) {
      this.v = 1;
      this.r = 0;
      Inflate.call(this, opts, cb);
    }
    Gunzip2.prototype.push = function(chunk, final) {
      Inflate.prototype.e.call(this, chunk);
      this.r += chunk.length;
      if (this.v) {
        var p = this.p.subarray(this.v - 1);
        var s = p.length > 3 ? gzs(p) : 4;
        if (s > p.length) {
          if (!final)
            return;
        } else if (this.v > 1 && this.onmember) {
          this.onmember(this.r - p.length);
        }
        this.p = p.subarray(s), this.v = 0;
      }
      Inflate.prototype.c.call(this, final);
      if (this.s.f && !this.s.l && !final) {
        this.v = shft(this.s.p) + 9;
        this.s = { i: 0 };
        this.o = new u8(0);
        this.push(new u8(0), final);
      }
    };
    return Gunzip2;
  }();
  var td = typeof TextDecoder != "undefined" && /* @__PURE__ */ new TextDecoder();
  try {
    td.decode(et, { stream: true });
  } catch (e) {
  }
  var dutf8 = function(d) {
    for (var r = "", i2 = 0; ; ) {
      var c = d[i2++];
      var eb = (c > 127) + (c > 223) + (c > 239);
      if (i2 + eb > d.length)
        return { s: r, r: slc(d, i2 - 1) };
      if (!eb)
        r += String.fromCharCode(c);
      else if (eb == 3) {
        c = ((c & 15) << 18 | (d[i2++] & 63) << 12 | (d[i2++] & 63) << 6 | d[i2++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);
      } else if (eb & 1)
        r += String.fromCharCode((c & 31) << 6 | d[i2++] & 63);
      else
        r += String.fromCharCode((c & 15) << 12 | (d[i2++] & 63) << 6 | d[i2++] & 63);
    }
  };
  function strFromU8(dat, latin1) {
    if (latin1) {
      var r = "";
      for (var i2 = 0; i2 < dat.length; i2 += 16384)
        r += String.fromCharCode.apply(null, dat.subarray(i2, i2 + 16384));
      return r;
    } else if (td) {
      return td.decode(dat);
    } else {
      var _a2 = dutf8(dat), s = _a2.s, r = _a2.r;
      if (r.length)
        err(8);
      return s;
    }
  }
  var slzh = function(d, b) {
    return b + 30 + b2(d, b + 26) + b2(d, b + 28);
  };
  var zh = function(d, b, z) {
    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);
    var _a2 = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a2[0], su = _a2[1], off = _a2[2];
    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];
  };
  var z64e = function(d, b) {
    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))
      ;
    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];
  };
  var mt = typeof queueMicrotask == "function" ? queueMicrotask : typeof setTimeout == "function" ? setTimeout : function(fn) {
    fn();
  };
  function unzip(data, opts, cb) {
    if (!cb)
      cb = opts, opts = {};
    if (typeof cb != "function")
      err(7);
    var term = [];
    var tAll = function() {
      for (var i3 = 0; i3 < term.length; ++i3)
        term[i3]();
    };
    var files = {};
    var cbd = function(a, b) {
      mt(function() {
        cb(a, b);
      });
    };
    mt(function() {
      cbd = cb;
    });
    var e = data.length - 22;
    for (; b4(data, e) != 101010256; --e) {
      if (!e || data.length - e > 65558) {
        cbd(err(13, 0, 1), null);
        return tAll;
      }
    }
    var lft = b2(data, e + 8);
    if (lft) {
      var c = lft;
      var o = b4(data, e + 16);
      var z = o == 4294967295 || c == 65535;
      if (z) {
        var ze = b4(data, e - 12);
        z = b4(data, ze) == 101075792;
        if (z) {
          c = lft = b4(data, ze + 32);
          o = b4(data, ze + 48);
        }
      }
      var fltr = opts && opts.filter;
      var _loop_3 = function(i3) {
        var _a2 = zh(data, o, z), c_1 = _a2[0], sc = _a2[1], su = _a2[2], fn = _a2[3], no = _a2[4], off = _a2[5], b = slzh(data, off);
        o = no;
        var cbl = function(e2, d) {
          if (e2) {
            tAll();
            cbd(e2, null);
          } else {
            if (d)
              files[fn] = d;
            if (!--lft)
              cbd(null, files);
          }
        };
        if (!fltr || fltr({
          name: fn,
          size: sc,
          originalSize: su,
          compression: c_1
        })) {
          if (!c_1)
            cbl(null, slc(data, b, b + sc));
          else if (c_1 == 8) {
            var infl = data.subarray(b, b + sc);
            if (su < 524288 || sc > 0.8 * su) {
              try {
                cbl(null, inflateSync(infl, { out: new u8(su) }));
              } catch (e2) {
                cbl(e2, null);
              }
            } else
              term.push(inflate(infl, { size: su }, cbl));
          } else
            cbl(err(14, "unknown compression type " + c_1, 1), null);
        } else
          cbl(null, null);
      };
      for (var i2 = 0; i2 < c; ++i2) {
        _loop_3(i2);
      }
    } else
      cbd(null, {});
    return tAll;
  }
  function unzipSync(data, opts) {
    var files = {};
    var e = data.length - 22;
    for (; b4(data, e) != 101010256; --e) {
      if (!e || data.length - e > 65558)
        err(13);
    }
    var c = b2(data, e + 8);
    if (!c)
      return {};
    var o = b4(data, e + 16);
    var z = o == 4294967295 || c == 65535;
    if (z) {
      var ze = b4(data, e - 12);
      z = b4(data, ze) == 101075792;
      if (z) {
        c = b4(data, ze + 32);
        o = b4(data, ze + 48);
      }
    }
    var fltr = opts && opts.filter;
    for (var i2 = 0; i2 < c; ++i2) {
      var _a2 = zh(data, o, z), c_2 = _a2[0], sc = _a2[1], su = _a2[2], fn = _a2[3], no = _a2[4], off = _a2[5], b = slzh(data, off);
      o = no;
      if (!fltr || fltr({
        name: fn,
        size: sc,
        originalSize: su,
        compression: c_2
      })) {
        if (!c_2)
          files[fn] = slc(data, b, b + sc);
        else if (c_2 == 8)
          files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });
        else
          err(14, "unknown compression type " + c_2);
      }
    }
    return files;
  }
  /**
   * @license
   * Copyright 2010-2024 Three.js Authors
   * SPDX-License-Identifier: MIT
   */
  const REVISION = "172";
  const NoColorSpace = "";
  const SRGBColorSpace = "srgb";
  const LinearSRGBColorSpace = "srgb-linear";
  const LinearTransfer = "linear";
  const SRGBTransfer = "srgb";
  function clamp(value, min, max2) {
    return Math.max(min, Math.min(max2, value));
  }
  function euclideanModulo(n, m) {
    return (n % m + m) % m;
  }
  function lerp(x2, y, t) {
    return (1 - t) * x2 + t * y;
  }
  class Matrix3 {
    constructor(n11, n12, n13, n21, n22, n23, n31, n32, n33) {
      Matrix3.prototype.isMatrix3 = true;
      this.elements = [
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1
      ];
      if (n11 !== void 0) {
        this.set(n11, n12, n13, n21, n22, n23, n31, n32, n33);
      }
    }
    set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {
      const te = this.elements;
      te[0] = n11;
      te[1] = n21;
      te[2] = n31;
      te[3] = n12;
      te[4] = n22;
      te[5] = n32;
      te[6] = n13;
      te[7] = n23;
      te[8] = n33;
      return this;
    }
    identity() {
      this.set(
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1
      );
      return this;
    }
    copy(m) {
      const te = this.elements;
      const me = m.elements;
      te[0] = me[0];
      te[1] = me[1];
      te[2] = me[2];
      te[3] = me[3];
      te[4] = me[4];
      te[5] = me[5];
      te[6] = me[6];
      te[7] = me[7];
      te[8] = me[8];
      return this;
    }
    extractBasis(xAxis, yAxis, zAxis) {
      xAxis.setFromMatrix3Column(this, 0);
      yAxis.setFromMatrix3Column(this, 1);
      zAxis.setFromMatrix3Column(this, 2);
      return this;
    }
    setFromMatrix4(m) {
      const me = m.elements;
      this.set(
        me[0],
        me[4],
        me[8],
        me[1],
        me[5],
        me[9],
        me[2],
        me[6],
        me[10]
      );
      return this;
    }
    multiply(m) {
      return this.multiplyMatrices(this, m);
    }
    premultiply(m) {
      return this.multiplyMatrices(m, this);
    }
    multiplyMatrices(a, b) {
      const ae = a.elements;
      const be = b.elements;
      const te = this.elements;
      const a11 = ae[0], a12 = ae[3], a13 = ae[6];
      const a21 = ae[1], a22 = ae[4], a23 = ae[7];
      const a31 = ae[2], a32 = ae[5], a33 = ae[8];
      const b11 = be[0], b12 = be[3], b13 = be[6];
      const b21 = be[1], b22 = be[4], b23 = be[7];
      const b31 = be[2], b32 = be[5], b33 = be[8];
      te[0] = a11 * b11 + a12 * b21 + a13 * b31;
      te[3] = a11 * b12 + a12 * b22 + a13 * b32;
      te[6] = a11 * b13 + a12 * b23 + a13 * b33;
      te[1] = a21 * b11 + a22 * b21 + a23 * b31;
      te[4] = a21 * b12 + a22 * b22 + a23 * b32;
      te[7] = a21 * b13 + a22 * b23 + a23 * b33;
      te[2] = a31 * b11 + a32 * b21 + a33 * b31;
      te[5] = a31 * b12 + a32 * b22 + a33 * b32;
      te[8] = a31 * b13 + a32 * b23 + a33 * b33;
      return this;
    }
    multiplyScalar(s) {
      const te = this.elements;
      te[0] *= s;
      te[3] *= s;
      te[6] *= s;
      te[1] *= s;
      te[4] *= s;
      te[7] *= s;
      te[2] *= s;
      te[5] *= s;
      te[8] *= s;
      return this;
    }
    determinant() {
      const te = this.elements;
      const a = te[0], b = te[1], c = te[2], d = te[3], e = te[4], f = te[5], g = te[6], h = te[7], i2 = te[8];
      return a * e * i2 - a * f * h - b * d * i2 + b * f * g + c * d * h - c * e * g;
    }
    invert() {
      const te = this.elements, n11 = te[0], n21 = te[1], n31 = te[2], n12 = te[3], n22 = te[4], n32 = te[5], n13 = te[6], n23 = te[7], n33 = te[8], t11 = n33 * n22 - n32 * n23, t12 = n32 * n13 - n33 * n12, t13 = n23 * n12 - n22 * n13, det = n11 * t11 + n21 * t12 + n31 * t13;
      if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
      const detInv = 1 / det;
      te[0] = t11 * detInv;
      te[1] = (n31 * n23 - n33 * n21) * detInv;
      te[2] = (n32 * n21 - n31 * n22) * detInv;
      te[3] = t12 * detInv;
      te[4] = (n33 * n11 - n31 * n13) * detInv;
      te[5] = (n31 * n12 - n32 * n11) * detInv;
      te[6] = t13 * detInv;
      te[7] = (n21 * n13 - n23 * n11) * detInv;
      te[8] = (n22 * n11 - n21 * n12) * detInv;
      return this;
    }
    transpose() {
      let tmp;
      const m = this.elements;
      tmp = m[1];
      m[1] = m[3];
      m[3] = tmp;
      tmp = m[2];
      m[2] = m[6];
      m[6] = tmp;
      tmp = m[5];
      m[5] = m[7];
      m[7] = tmp;
      return this;
    }
    getNormalMatrix(matrix4) {
      return this.setFromMatrix4(matrix4).invert().transpose();
    }
    transposeIntoArray(r) {
      const m = this.elements;
      r[0] = m[0];
      r[1] = m[3];
      r[2] = m[6];
      r[3] = m[1];
      r[4] = m[4];
      r[5] = m[7];
      r[6] = m[2];
      r[7] = m[5];
      r[8] = m[8];
      return this;
    }
    setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {
      const c = Math.cos(rotation);
      const s = Math.sin(rotation);
      this.set(
        sx * c,
        sx * s,
        -sx * (c * cx + s * cy) + cx + tx,
        -sy * s,
        sy * c,
        -sy * (-s * cx + c * cy) + cy + ty,
        0,
        0,
        1
      );
      return this;
    }
    //
    scale(sx, sy) {
      this.premultiply(_m3.makeScale(sx, sy));
      return this;
    }
    rotate(theta) {
      this.premultiply(_m3.makeRotation(-theta));
      return this;
    }
    translate(tx, ty) {
      this.premultiply(_m3.makeTranslation(tx, ty));
      return this;
    }
    // for 2D Transforms
    makeTranslation(x2, y) {
      if (x2.isVector2) {
        this.set(
          1,
          0,
          x2.x,
          0,
          1,
          x2.y,
          0,
          0,
          1
        );
      } else {
        this.set(
          1,
          0,
          x2,
          0,
          1,
          y,
          0,
          0,
          1
        );
      }
      return this;
    }
    makeRotation(theta) {
      const c = Math.cos(theta);
      const s = Math.sin(theta);
      this.set(
        c,
        -s,
        0,
        s,
        c,
        0,
        0,
        0,
        1
      );
      return this;
    }
    makeScale(x2, y) {
      this.set(
        x2,
        0,
        0,
        0,
        y,
        0,
        0,
        0,
        1
      );
      return this;
    }
    //
    equals(matrix) {
      const te = this.elements;
      const me = matrix.elements;
      for (let i2 = 0; i2 < 9; i2++) {
        if (te[i2] !== me[i2]) return false;
      }
      return true;
    }
    fromArray(array, offset = 0) {
      for (let i2 = 0; i2 < 9; i2++) {
        this.elements[i2] = array[i2 + offset];
      }
      return this;
    }
    toArray(array = [], offset = 0) {
      const te = this.elements;
      array[offset] = te[0];
      array[offset + 1] = te[1];
      array[offset + 2] = te[2];
      array[offset + 3] = te[3];
      array[offset + 4] = te[4];
      array[offset + 5] = te[5];
      array[offset + 6] = te[6];
      array[offset + 7] = te[7];
      array[offset + 8] = te[8];
      return array;
    }
    clone() {
      return new this.constructor().fromArray(this.elements);
    }
  }
  const _m3 = /* @__PURE__ */ new Matrix3();
  const LINEAR_REC709_TO_XYZ = /* @__PURE__ */ new Matrix3().set(
    0.4123908,
    0.3575843,
    0.1804808,
    0.212639,
    0.7151687,
    0.0721923,
    0.0193308,
    0.1191948,
    0.9505322
  );
  const XYZ_TO_LINEAR_REC709 = /* @__PURE__ */ new Matrix3().set(
    3.2409699,
    -1.5373832,
    -0.4986108,
    -0.9692436,
    1.8759675,
    0.0415551,
    0.0556301,
    -0.203977,
    1.0569715
  );
  function createColorManagement() {
    const ColorManagement2 = {
      enabled: true,
      workingColorSpace: LinearSRGBColorSpace,
      /**
       * Implementations of supported color spaces.
       *
       * Required:
       *	- primaries: chromaticity coordinates [ rx ry gx gy bx by ]
       *	- whitePoint: reference white [ x y ]
       *	- transfer: transfer function (pre-defined)
       *	- toXYZ: Matrix3 RGB to XYZ transform
       *	- fromXYZ: Matrix3 XYZ to RGB transform
       *	- luminanceCoefficients: RGB luminance coefficients
       *
       * Optional:
       *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }
       *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }
       *
       * Reference:
       * - https://www.russellcottrell.com/photo/matrixCalculator.htm
       */
      spaces: {},
      convert: function(color, sourceColorSpace, targetColorSpace) {
        if (this.enabled === false || sourceColorSpace === targetColorSpace || !sourceColorSpace || !targetColorSpace) {
          return color;
        }
        if (this.spaces[sourceColorSpace].transfer === SRGBTransfer) {
          color.r = SRGBToLinear(color.r);
          color.g = SRGBToLinear(color.g);
          color.b = SRGBToLinear(color.b);
        }
        if (this.spaces[sourceColorSpace].primaries !== this.spaces[targetColorSpace].primaries) {
          color.applyMatrix3(this.spaces[sourceColorSpace].toXYZ);
          color.applyMatrix3(this.spaces[targetColorSpace].fromXYZ);
        }
        if (this.spaces[targetColorSpace].transfer === SRGBTransfer) {
          color.r = LinearToSRGB(color.r);
          color.g = LinearToSRGB(color.g);
          color.b = LinearToSRGB(color.b);
        }
        return color;
      },
      fromWorkingColorSpace: function(color, targetColorSpace) {
        return this.convert(color, this.workingColorSpace, targetColorSpace);
      },
      toWorkingColorSpace: function(color, sourceColorSpace) {
        return this.convert(color, sourceColorSpace, this.workingColorSpace);
      },
      getPrimaries: function(colorSpace) {
        return this.spaces[colorSpace].primaries;
      },
      getTransfer: function(colorSpace) {
        if (colorSpace === NoColorSpace) return LinearTransfer;
        return this.spaces[colorSpace].transfer;
      },
      getLuminanceCoefficients: function(target, colorSpace = this.workingColorSpace) {
        return target.fromArray(this.spaces[colorSpace].luminanceCoefficients);
      },
      define: function(colorSpaces) {
        Object.assign(this.spaces, colorSpaces);
      },
      // Internal APIs
      _getMatrix: function(targetMatrix, sourceColorSpace, targetColorSpace) {
        return targetMatrix.copy(this.spaces[sourceColorSpace].toXYZ).multiply(this.spaces[targetColorSpace].fromXYZ);
      },
      _getDrawingBufferColorSpace: function(colorSpace) {
        return this.spaces[colorSpace].outputColorSpaceConfig.drawingBufferColorSpace;
      },
      _getUnpackColorSpace: function(colorSpace = this.workingColorSpace) {
        return this.spaces[colorSpace].workingColorSpaceConfig.unpackColorSpace;
      }
    };
    const REC709_PRIMARIES = [0.64, 0.33, 0.3, 0.6, 0.15, 0.06];
    const REC709_LUMINANCE_COEFFICIENTS = [0.2126, 0.7152, 0.0722];
    const D65 = [0.3127, 0.329];
    ColorManagement2.define({
      [LinearSRGBColorSpace]: {
        primaries: REC709_PRIMARIES,
        whitePoint: D65,
        transfer: LinearTransfer,
        toXYZ: LINEAR_REC709_TO_XYZ,
        fromXYZ: XYZ_TO_LINEAR_REC709,
        luminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,
        workingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },
        outputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }
      },
      [SRGBColorSpace]: {
        primaries: REC709_PRIMARIES,
        whitePoint: D65,
        transfer: SRGBTransfer,
        toXYZ: LINEAR_REC709_TO_XYZ,
        fromXYZ: XYZ_TO_LINEAR_REC709,
        luminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,
        outputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }
      }
    });
    return ColorManagement2;
  }
  const ColorManagement = /* @__PURE__ */ createColorManagement();
  function SRGBToLinear(c) {
    return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);
  }
  function LinearToSRGB(c) {
    return c < 31308e-7 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;
  }
  class Quaternion {
    constructor(x2 = 0, y = 0, z = 0, w = 1) {
      this.isQuaternion = true;
      this._x = x2;
      this._y = y;
      this._z = z;
      this._w = w;
    }
    static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {
      let x0 = src0[srcOffset0 + 0], y0 = src0[srcOffset0 + 1], z0 = src0[srcOffset0 + 2], w0 = src0[srcOffset0 + 3];
      const x1 = src1[srcOffset1 + 0], y1 = src1[srcOffset1 + 1], z1 = src1[srcOffset1 + 2], w1 = src1[srcOffset1 + 3];
      if (t === 0) {
        dst[dstOffset + 0] = x0;
        dst[dstOffset + 1] = y0;
        dst[dstOffset + 2] = z0;
        dst[dstOffset + 3] = w0;
        return;
      }
      if (t === 1) {
        dst[dstOffset + 0] = x1;
        dst[dstOffset + 1] = y1;
        dst[dstOffset + 2] = z1;
        dst[dstOffset + 3] = w1;
        return;
      }
      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {
        let s = 1 - t;
        const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1, dir = cos >= 0 ? 1 : -1, sqrSin = 1 - cos * cos;
        if (sqrSin > Number.EPSILON) {
          const sin = Math.sqrt(sqrSin), len = Math.atan2(sin, cos * dir);
          s = Math.sin(s * len) / sin;
          t = Math.sin(t * len) / sin;
        }
        const tDir = t * dir;
        x0 = x0 * s + x1 * tDir;
        y0 = y0 * s + y1 * tDir;
        z0 = z0 * s + z1 * tDir;
        w0 = w0 * s + w1 * tDir;
        if (s === 1 - t) {
          const f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);
          x0 *= f;
          y0 *= f;
          z0 *= f;
          w0 *= f;
        }
      }
      dst[dstOffset] = x0;
      dst[dstOffset + 1] = y0;
      dst[dstOffset + 2] = z0;
      dst[dstOffset + 3] = w0;
    }
    static multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {
      const x0 = src0[srcOffset0];
      const y0 = src0[srcOffset0 + 1];
      const z0 = src0[srcOffset0 + 2];
      const w0 = src0[srcOffset0 + 3];
      const x1 = src1[srcOffset1];
      const y1 = src1[srcOffset1 + 1];
      const z1 = src1[srcOffset1 + 2];
      const w1 = src1[srcOffset1 + 3];
      dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;
      dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;
      dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;
      dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;
      return dst;
    }
    get x() {
      return this._x;
    }
    set x(value) {
      this._x = value;
      this._onChangeCallback();
    }
    get y() {
      return this._y;
    }
    set y(value) {
      this._y = value;
      this._onChangeCallback();
    }
    get z() {
      return this._z;
    }
    set z(value) {
      this._z = value;
      this._onChangeCallback();
    }
    get w() {
      return this._w;
    }
    set w(value) {
      this._w = value;
      this._onChangeCallback();
    }
    set(x2, y, z, w) {
      this._x = x2;
      this._y = y;
      this._z = z;
      this._w = w;
      this._onChangeCallback();
      return this;
    }
    clone() {
      return new this.constructor(this._x, this._y, this._z, this._w);
    }
    copy(quaternion) {
      this._x = quaternion.x;
      this._y = quaternion.y;
      this._z = quaternion.z;
      this._w = quaternion.w;
      this._onChangeCallback();
      return this;
    }
    setFromEuler(euler, update = true) {
      const x2 = euler._x, y = euler._y, z = euler._z, order = euler._order;
      const cos = Math.cos;
      const sin = Math.sin;
      const c1 = cos(x2 / 2);
      const c2 = cos(y / 2);
      const c3 = cos(z / 2);
      const s1 = sin(x2 / 2);
      const s2 = sin(y / 2);
      const s3 = sin(z / 2);
      switch (order) {
        case "XYZ":
          this._x = s1 * c2 * c3 + c1 * s2 * s3;
          this._y = c1 * s2 * c3 - s1 * c2 * s3;
          this._z = c1 * c2 * s3 + s1 * s2 * c3;
          this._w = c1 * c2 * c3 - s1 * s2 * s3;
          break;
        case "YXZ":
          this._x = s1 * c2 * c3 + c1 * s2 * s3;
          this._y = c1 * s2 * c3 - s1 * c2 * s3;
          this._z = c1 * c2 * s3 - s1 * s2 * c3;
          this._w = c1 * c2 * c3 + s1 * s2 * s3;
          break;
        case "ZXY":
          this._x = s1 * c2 * c3 - c1 * s2 * s3;
          this._y = c1 * s2 * c3 + s1 * c2 * s3;
          this._z = c1 * c2 * s3 + s1 * s2 * c3;
          this._w = c1 * c2 * c3 - s1 * s2 * s3;
          break;
        case "ZYX":
          this._x = s1 * c2 * c3 - c1 * s2 * s3;
          this._y = c1 * s2 * c3 + s1 * c2 * s3;
          this._z = c1 * c2 * s3 - s1 * s2 * c3;
          this._w = c1 * c2 * c3 + s1 * s2 * s3;
          break;
        case "YZX":
          this._x = s1 * c2 * c3 + c1 * s2 * s3;
          this._y = c1 * s2 * c3 + s1 * c2 * s3;
          this._z = c1 * c2 * s3 - s1 * s2 * c3;
          this._w = c1 * c2 * c3 - s1 * s2 * s3;
          break;
        case "XZY":
          this._x = s1 * c2 * c3 - c1 * s2 * s3;
          this._y = c1 * s2 * c3 - s1 * c2 * s3;
          this._z = c1 * c2 * s3 + s1 * s2 * c3;
          this._w = c1 * c2 * c3 + s1 * s2 * s3;
          break;
        default:
          console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + order);
      }
      if (update === true) this._onChangeCallback();
      return this;
    }
    setFromAxisAngle(axis, angle) {
      const halfAngle = angle / 2, s = Math.sin(halfAngle);
      this._x = axis.x * s;
      this._y = axis.y * s;
      this._z = axis.z * s;
      this._w = Math.cos(halfAngle);
      this._onChangeCallback();
      return this;
    }
    setFromRotationMatrix(m) {
      const te = m.elements, m11 = te[0], m12 = te[4], m13 = te[8], m21 = te[1], m22 = te[5], m23 = te[9], m31 = te[2], m32 = te[6], m33 = te[10], trace = m11 + m22 + m33;
      if (trace > 0) {
        const s = 0.5 / Math.sqrt(trace + 1);
        this._w = 0.25 / s;
        this._x = (m32 - m23) * s;
        this._y = (m13 - m31) * s;
        this._z = (m21 - m12) * s;
      } else if (m11 > m22 && m11 > m33) {
        const s = 2 * Math.sqrt(1 + m11 - m22 - m33);
        this._w = (m32 - m23) / s;
        this._x = 0.25 * s;
        this._y = (m12 + m21) / s;
        this._z = (m13 + m31) / s;
      } else if (m22 > m33) {
        const s = 2 * Math.sqrt(1 + m22 - m11 - m33);
        this._w = (m13 - m31) / s;
        this._x = (m12 + m21) / s;
        this._y = 0.25 * s;
        this._z = (m23 + m32) / s;
      } else {
        const s = 2 * Math.sqrt(1 + m33 - m11 - m22);
        this._w = (m21 - m12) / s;
        this._x = (m13 + m31) / s;
        this._y = (m23 + m32) / s;
        this._z = 0.25 * s;
      }
      this._onChangeCallback();
      return this;
    }
    setFromUnitVectors(vFrom, vTo) {
      let r = vFrom.dot(vTo) + 1;
      if (r < Number.EPSILON) {
        r = 0;
        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {
          this._x = -vFrom.y;
          this._y = vFrom.x;
          this._z = 0;
          this._w = r;
        } else {
          this._x = 0;
          this._y = -vFrom.z;
          this._z = vFrom.y;
          this._w = r;
        }
      } else {
        this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;
        this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;
        this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;
        this._w = r;
      }
      return this.normalize();
    }
    angleTo(q) {
      return 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));
    }
    rotateTowards(q, step) {
      const angle = this.angleTo(q);
      if (angle === 0) return this;
      const t = Math.min(1, step / angle);
      this.slerp(q, t);
      return this;
    }
    identity() {
      return this.set(0, 0, 0, 1);
    }
    invert() {
      return this.conjugate();
    }
    conjugate() {
      this._x *= -1;
      this._y *= -1;
      this._z *= -1;
      this._onChangeCallback();
      return this;
    }
    dot(v) {
      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;
    }
    lengthSq() {
      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
    }
    length() {
      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
    }
    normalize() {
      let l = this.length();
      if (l === 0) {
        this._x = 0;
        this._y = 0;
        this._z = 0;
        this._w = 1;
      } else {
        l = 1 / l;
        this._x = this._x * l;
        this._y = this._y * l;
        this._z = this._z * l;
        this._w = this._w * l;
      }
      this._onChangeCallback();
      return this;
    }
    multiply(q) {
      return this.multiplyQuaternions(this, q);
    }
    premultiply(q) {
      return this.multiplyQuaternions(q, this);
    }
    multiplyQuaternions(a, b) {
      const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;
      const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;
      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;
      this._onChangeCallback();
      return this;
    }
    slerp(qb, t) {
      if (t === 0) return this;
      if (t === 1) return this.copy(qb);
      const x2 = this._x, y = this._y, z = this._z, w = this._w;
      let cosHalfTheta = w * qb._w + x2 * qb._x + y * qb._y + z * qb._z;
      if (cosHalfTheta < 0) {
        this._w = -qb._w;
        this._x = -qb._x;
        this._y = -qb._y;
        this._z = -qb._z;
        cosHalfTheta = -cosHalfTheta;
      } else {
        this.copy(qb);
      }
      if (cosHalfTheta >= 1) {
        this._w = w;
        this._x = x2;
        this._y = y;
        this._z = z;
        return this;
      }
      const sqrSinHalfTheta = 1 - cosHalfTheta * cosHalfTheta;
      if (sqrSinHalfTheta <= Number.EPSILON) {
        const s = 1 - t;
        this._w = s * w + t * this._w;
        this._x = s * x2 + t * this._x;
        this._y = s * y + t * this._y;
        this._z = s * z + t * this._z;
        this.normalize();
        return this;
      }
      const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);
      const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);
      const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta, ratioB = Math.sin(t * halfTheta) / sinHalfTheta;
      this._w = w * ratioA + this._w * ratioB;
      this._x = x2 * ratioA + this._x * ratioB;
      this._y = y * ratioA + this._y * ratioB;
      this._z = z * ratioA + this._z * ratioB;
      this._onChangeCallback();
      return this;
    }
    slerpQuaternions(qa, qb, t) {
      return this.copy(qa).slerp(qb, t);
    }
    random() {
      const theta1 = 2 * Math.PI * Math.random();
      const theta2 = 2 * Math.PI * Math.random();
      const x0 = Math.random();
      const r1 = Math.sqrt(1 - x0);
      const r2 = Math.sqrt(x0);
      return this.set(
        r1 * Math.sin(theta1),
        r1 * Math.cos(theta1),
        r2 * Math.sin(theta2),
        r2 * Math.cos(theta2)
      );
    }
    equals(quaternion) {
      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;
    }
    fromArray(array, offset = 0) {
      this._x = array[offset];
      this._y = array[offset + 1];
      this._z = array[offset + 2];
      this._w = array[offset + 3];
      this._onChangeCallback();
      return this;
    }
    toArray(array = [], offset = 0) {
      array[offset] = this._x;
      array[offset + 1] = this._y;
      array[offset + 2] = this._z;
      array[offset + 3] = this._w;
      return array;
    }
    fromBufferAttribute(attribute, index) {
      this._x = attribute.getX(index);
      this._y = attribute.getY(index);
      this._z = attribute.getZ(index);
      this._w = attribute.getW(index);
      this._onChangeCallback();
      return this;
    }
    toJSON() {
      return this.toArray();
    }
    _onChange(callback) {
      this._onChangeCallback = callback;
      return this;
    }
    _onChangeCallback() {
    }
    *[Symbol.iterator]() {
      yield this._x;
      yield this._y;
      yield this._z;
      yield this._w;
    }
  }
  class Vector3 {
    constructor(x2 = 0, y = 0, z = 0) {
      Vector3.prototype.isVector3 = true;
      this.x = x2;
      this.y = y;
      this.z = z;
    }
    set(x2, y, z) {
      if (z === void 0) z = this.z;
      this.x = x2;
      this.y = y;
      this.z = z;
      return this;
    }
    setScalar(scalar) {
      this.x = scalar;
      this.y = scalar;
      this.z = scalar;
      return this;
    }
    setX(x2) {
      this.x = x2;
      return this;
    }
    setY(y) {
      this.y = y;
      return this;
    }
    setZ(z) {
      this.z = z;
      return this;
    }
    setComponent(index, value) {
      switch (index) {
        case 0:
          this.x = value;
          break;
        case 1:
          this.y = value;
          break;
        case 2:
          this.z = value;
          break;
        default:
          throw new Error("index is out of range: " + index);
      }
      return this;
    }
    getComponent(index) {
      switch (index) {
        case 0:
          return this.x;
        case 1:
          return this.y;
        case 2:
          return this.z;
        default:
          throw new Error("index is out of range: " + index);
      }
    }
    clone() {
      return new this.constructor(this.x, this.y, this.z);
    }
    copy(v) {
      this.x = v.x;
      this.y = v.y;
      this.z = v.z;
      return this;
    }
    add(v) {
      this.x += v.x;
      this.y += v.y;
      this.z += v.z;
      return this;
    }
    addScalar(s) {
      this.x += s;
      this.y += s;
      this.z += s;
      return this;
    }
    addVectors(a, b) {
      this.x = a.x + b.x;
      this.y = a.y + b.y;
      this.z = a.z + b.z;
      return this;
    }
    addScaledVector(v, s) {
      this.x += v.x * s;
      this.y += v.y * s;
      this.z += v.z * s;
      return this;
    }
    sub(v) {
      this.x -= v.x;
      this.y -= v.y;
      this.z -= v.z;
      return this;
    }
    subScalar(s) {
      this.x -= s;
      this.y -= s;
      this.z -= s;
      return this;
    }
    subVectors(a, b) {
      this.x = a.x - b.x;
      this.y = a.y - b.y;
      this.z = a.z - b.z;
      return this;
    }
    multiply(v) {
      this.x *= v.x;
      this.y *= v.y;
      this.z *= v.z;
      return this;
    }
    multiplyScalar(scalar) {
      this.x *= scalar;
      this.y *= scalar;
      this.z *= scalar;
      return this;
    }
    multiplyVectors(a, b) {
      this.x = a.x * b.x;
      this.y = a.y * b.y;
      this.z = a.z * b.z;
      return this;
    }
    applyEuler(euler) {
      return this.applyQuaternion(_quaternion$4.setFromEuler(euler));
    }
    applyAxisAngle(axis, angle) {
      return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));
    }
    applyMatrix3(m) {
      const x2 = this.x, y = this.y, z = this.z;
      const e = m.elements;
      this.x = e[0] * x2 + e[3] * y + e[6] * z;
      this.y = e[1] * x2 + e[4] * y + e[7] * z;
      this.z = e[2] * x2 + e[5] * y + e[8] * z;
      return this;
    }
    applyNormalMatrix(m) {
      return this.applyMatrix3(m).normalize();
    }
    applyMatrix4(m) {
      const x2 = this.x, y = this.y, z = this.z;
      const e = m.elements;
      const w = 1 / (e[3] * x2 + e[7] * y + e[11] * z + e[15]);
      this.x = (e[0] * x2 + e[4] * y + e[8] * z + e[12]) * w;
      this.y = (e[1] * x2 + e[5] * y + e[9] * z + e[13]) * w;
      this.z = (e[2] * x2 + e[6] * y + e[10] * z + e[14]) * w;
      return this;
    }
    applyQuaternion(q) {
      const vx = this.x, vy = this.y, vz = this.z;
      const qx = q.x, qy = q.y, qz = q.z, qw = q.w;
      const tx = 2 * (qy * vz - qz * vy);
      const ty = 2 * (qz * vx - qx * vz);
      const tz = 2 * (qx * vy - qy * vx);
      this.x = vx + qw * tx + qy * tz - qz * ty;
      this.y = vy + qw * ty + qz * tx - qx * tz;
      this.z = vz + qw * tz + qx * ty - qy * tx;
      return this;
    }
    project(camera) {
      return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);
    }
    unproject(camera) {
      return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);
    }
    transformDirection(m) {
      const x2 = this.x, y = this.y, z = this.z;
      const e = m.elements;
      this.x = e[0] * x2 + e[4] * y + e[8] * z;
      this.y = e[1] * x2 + e[5] * y + e[9] * z;
      this.z = e[2] * x2 + e[6] * y + e[10] * z;
      return this.normalize();
    }
    divide(v) {
      this.x /= v.x;
      this.y /= v.y;
      this.z /= v.z;
      return this;
    }
    divideScalar(scalar) {
      return this.multiplyScalar(1 / scalar);
    }
    min(v) {
      this.x = Math.min(this.x, v.x);
      this.y = Math.min(this.y, v.y);
      this.z = Math.min(this.z, v.z);
      return this;
    }
    max(v) {
      this.x = Math.max(this.x, v.x);
      this.y = Math.max(this.y, v.y);
      this.z = Math.max(this.z, v.z);
      return this;
    }
    clamp(min, max2) {
      this.x = clamp(this.x, min.x, max2.x);
      this.y = clamp(this.y, min.y, max2.y);
      this.z = clamp(this.z, min.z, max2.z);
      return this;
    }
    clampScalar(minVal, maxVal) {
      this.x = clamp(this.x, minVal, maxVal);
      this.y = clamp(this.y, minVal, maxVal);
      this.z = clamp(this.z, minVal, maxVal);
      return this;
    }
    clampLength(min, max2) {
      const length = this.length();
      return this.divideScalar(length || 1).multiplyScalar(clamp(length, min, max2));
    }
    floor() {
      this.x = Math.floor(this.x);
      this.y = Math.floor(this.y);
      this.z = Math.floor(this.z);
      return this;
    }
    ceil() {
      this.x = Math.ceil(this.x);
      this.y = Math.ceil(this.y);
      this.z = Math.ceil(this.z);
      return this;
    }
    round() {
      this.x = Math.round(this.x);
      this.y = Math.round(this.y);
      this.z = Math.round(this.z);
      return this;
    }
    roundToZero() {
      this.x = Math.trunc(this.x);
      this.y = Math.trunc(this.y);
      this.z = Math.trunc(this.z);
      return this;
    }
    negate() {
      this.x = -this.x;
      this.y = -this.y;
      this.z = -this.z;
      return this;
    }
    dot(v) {
      return this.x * v.x + this.y * v.y + this.z * v.z;
    }
    // TODO lengthSquared?
    lengthSq() {
      return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    length() {
      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    manhattanLength() {
      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    }
    normalize() {
      return this.divideScalar(this.length() || 1);
    }
    setLength(length) {
      return this.normalize().multiplyScalar(length);
    }
    lerp(v, alpha) {
      this.x += (v.x - this.x) * alpha;
      this.y += (v.y - this.y) * alpha;
      this.z += (v.z - this.z) * alpha;
      return this;
    }
    lerpVectors(v1, v2, alpha) {
      this.x = v1.x + (v2.x - v1.x) * alpha;
      this.y = v1.y + (v2.y - v1.y) * alpha;
      this.z = v1.z + (v2.z - v1.z) * alpha;
      return this;
    }
    cross(v) {
      return this.crossVectors(this, v);
    }
    crossVectors(a, b) {
      const ax = a.x, ay = a.y, az = a.z;
      const bx = b.x, by = b.y, bz = b.z;
      this.x = ay * bz - az * by;
      this.y = az * bx - ax * bz;
      this.z = ax * by - ay * bx;
      return this;
    }
    projectOnVector(v) {
      const denominator = v.lengthSq();
      if (denominator === 0) return this.set(0, 0, 0);
      const scalar = v.dot(this) / denominator;
      return this.copy(v).multiplyScalar(scalar);
    }
    projectOnPlane(planeNormal) {
      _vector$c.copy(this).projectOnVector(planeNormal);
      return this.sub(_vector$c);
    }
    reflect(normal) {
      return this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));
    }
    angleTo(v) {
      const denominator = Math.sqrt(this.lengthSq() * v.lengthSq());
      if (denominator === 0) return Math.PI / 2;
      const theta = this.dot(v) / denominator;
      return Math.acos(clamp(theta, -1, 1));
    }
    distanceTo(v) {
      return Math.sqrt(this.distanceToSquared(v));
    }
    distanceToSquared(v) {
      const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;
      return dx * dx + dy * dy + dz * dz;
    }
    manhattanDistanceTo(v) {
      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);
    }
    setFromSpherical(s) {
      return this.setFromSphericalCoords(s.radius, s.phi, s.theta);
    }
    setFromSphericalCoords(radius, phi, theta) {
      const sinPhiRadius = Math.sin(phi) * radius;
      this.x = sinPhiRadius * Math.sin(theta);
      this.y = Math.cos(phi) * radius;
      this.z = sinPhiRadius * Math.cos(theta);
      return this;
    }
    setFromCylindrical(c) {
      return this.setFromCylindricalCoords(c.radius, c.theta, c.y);
    }
    setFromCylindricalCoords(radius, theta, y) {
      this.x = radius * Math.sin(theta);
      this.y = y;
      this.z = radius * Math.cos(theta);
      return this;
    }
    setFromMatrixPosition(m) {
      const e = m.elements;
      this.x = e[12];
      this.y = e[13];
      this.z = e[14];
      return this;
    }
    setFromMatrixScale(m) {
      const sx = this.setFromMatrixColumn(m, 0).length();
      const sy = this.setFromMatrixColumn(m, 1).length();
      const sz = this.setFromMatrixColumn(m, 2).length();
      this.x = sx;
      this.y = sy;
      this.z = sz;
      return this;
    }
    setFromMatrixColumn(m, index) {
      return this.fromArray(m.elements, index * 4);
    }
    setFromMatrix3Column(m, index) {
      return this.fromArray(m.elements, index * 3);
    }
    setFromEuler(e) {
      this.x = e._x;
      this.y = e._y;
      this.z = e._z;
      return this;
    }
    setFromColor(c) {
      this.x = c.r;
      this.y = c.g;
      this.z = c.b;
      return this;
    }
    equals(v) {
      return v.x === this.x && v.y === this.y && v.z === this.z;
    }
    fromArray(array, offset = 0) {
      this.x = array[offset];
      this.y = array[offset + 1];
      this.z = array[offset + 2];
      return this;
    }
    toArray(array = [], offset = 0) {
      array[offset] = this.x;
      array[offset + 1] = this.y;
      array[offset + 2] = this.z;
      return array;
    }
    fromBufferAttribute(attribute, index) {
      this.x = attribute.getX(index);
      this.y = attribute.getY(index);
      this.z = attribute.getZ(index);
      return this;
    }
    random() {
      this.x = Math.random();
      this.y = Math.random();
      this.z = Math.random();
      return this;
    }
    randomDirection() {
      const theta = Math.random() * Math.PI * 2;
      const u = Math.random() * 2 - 1;
      const c = Math.sqrt(1 - u * u);
      this.x = c * Math.cos(theta);
      this.y = u;
      this.z = c * Math.sin(theta);
      return this;
    }
    *[Symbol.iterator]() {
      yield this.x;
      yield this.y;
      yield this.z;
    }
  }
  const _vector$c = /* @__PURE__ */ new Vector3();
  const _quaternion$4 = /* @__PURE__ */ new Quaternion();
  class Box3 {
    constructor(min = new Vector3(Infinity, Infinity, Infinity), max2 = new Vector3(-Infinity, -Infinity, -Infinity)) {
      this.isBox3 = true;
      this.min = min;
      this.max = max2;
    }
    set(min, max2) {
      this.min.copy(min);
      this.max.copy(max2);
      return this;
    }
    setFromArray(array) {
      this.makeEmpty();
      for (let i2 = 0, il = array.length; i2 < il; i2 += 3) {
        this.expandByPoint(_vector$b.fromArray(array, i2));
      }
      return this;
    }
    setFromBufferAttribute(attribute) {
      this.makeEmpty();
      for (let i2 = 0, il = attribute.count; i2 < il; i2++) {
        this.expandByPoint(_vector$b.fromBufferAttribute(attribute, i2));
      }
      return this;
    }
    setFromPoints(points) {
      this.makeEmpty();
      for (let i2 = 0, il = points.length; i2 < il; i2++) {
        this.expandByPoint(points[i2]);
      }
      return this;
    }
    setFromCenterAndSize(center, size) {
      const halfSize = _vector$b.copy(size).multiplyScalar(0.5);
      this.min.copy(center).sub(halfSize);
      this.max.copy(center).add(halfSize);
      return this;
    }
    setFromObject(object, precise = false) {
      this.makeEmpty();
      return this.expandByObject(object, precise);
    }
    clone() {
      return new this.constructor().copy(this);
    }
    copy(box) {
      this.min.copy(box.min);
      this.max.copy(box.max);
      return this;
    }
    makeEmpty() {
      this.min.x = this.min.y = this.min.z = Infinity;
      this.max.x = this.max.y = this.max.z = -Infinity;
      return this;
    }
    isEmpty() {
      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
    }
    getCenter(target) {
      return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);
    }
    getSize(target) {
      return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);
    }
    expandByPoint(point) {
      this.min.min(point);
      this.max.max(point);
      return this;
    }
    expandByVector(vector) {
      this.min.sub(vector);
      this.max.add(vector);
      return this;
    }
    expandByScalar(scalar) {
      this.min.addScalar(-scalar);
      this.max.addScalar(scalar);
      return this;
    }
    expandByObject(object, precise = false) {
      object.updateWorldMatrix(false, false);
      const geometry = object.geometry;
      if (geometry !== void 0) {
        const positionAttribute = geometry.getAttribute("position");
        if (precise === true && positionAttribute !== void 0 && object.isInstancedMesh !== true) {
          for (let i2 = 0, l = positionAttribute.count; i2 < l; i2++) {
            if (object.isMesh === true) {
              object.getVertexPosition(i2, _vector$b);
            } else {
              _vector$b.fromBufferAttribute(positionAttribute, i2);
            }
            _vector$b.applyMatrix4(object.matrixWorld);
            this.expandByPoint(_vector$b);
          }
        } else {
          if (object.boundingBox !== void 0) {
            if (object.boundingBox === null) {
              object.computeBoundingBox();
            }
            _box$4.copy(object.boundingBox);
          } else {
            if (geometry.boundingBox === null) {
              geometry.computeBoundingBox();
            }
            _box$4.copy(geometry.boundingBox);
          }
          _box$4.applyMatrix4(object.matrixWorld);
          this.union(_box$4);
        }
      }
      const children = object.children;
      for (let i2 = 0, l = children.length; i2 < l; i2++) {
        this.expandByObject(children[i2], precise);
      }
      return this;
    }
    containsPoint(point) {
      return point.x >= this.min.x && point.x <= this.max.x && point.y >= this.min.y && point.y <= this.max.y && point.z >= this.min.z && point.z <= this.max.z;
    }
    containsBox(box) {
      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;
    }
    getParameter(point, target) {
      return target.set(
        (point.x - this.min.x) / (this.max.x - this.min.x),
        (point.y - this.min.y) / (this.max.y - this.min.y),
        (point.z - this.min.z) / (this.max.z - this.min.z)
      );
    }
    intersectsBox(box) {
      return box.max.x >= this.min.x && box.min.x <= this.max.x && box.max.y >= this.min.y && box.min.y <= this.max.y && box.max.z >= this.min.z && box.min.z <= this.max.z;
    }
    intersectsSphere(sphere) {
      this.clampPoint(sphere.center, _vector$b);
      return _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;
    }
    intersectsPlane(plane) {
      let min, max2;
      if (plane.normal.x > 0) {
        min = plane.normal.x * this.min.x;
        max2 = plane.normal.x * this.max.x;
      } else {
        min = plane.normal.x * this.max.x;
        max2 = plane.normal.x * this.min.x;
      }
      if (plane.normal.y > 0) {
        min += plane.normal.y * this.min.y;
        max2 += plane.normal.y * this.max.y;
      } else {
        min += plane.normal.y * this.max.y;
        max2 += plane.normal.y * this.min.y;
      }
      if (plane.normal.z > 0) {
        min += plane.normal.z * this.min.z;
        max2 += plane.normal.z * this.max.z;
      } else {
        min += plane.normal.z * this.max.z;
        max2 += plane.normal.z * this.min.z;
      }
      return min <= -plane.constant && max2 >= -plane.constant;
    }
    intersectsTriangle(triangle) {
      if (this.isEmpty()) {
        return false;
      }
      this.getCenter(_center);
      _extents.subVectors(this.max, _center);
      _v0$2.subVectors(triangle.a, _center);
      _v1$7.subVectors(triangle.b, _center);
      _v2$4.subVectors(triangle.c, _center);
      _f0.subVectors(_v1$7, _v0$2);
      _f1.subVectors(_v2$4, _v1$7);
      _f2.subVectors(_v0$2, _v2$4);
      let axes = [
        0,
        -_f0.z,
        _f0.y,
        0,
        -_f1.z,
        _f1.y,
        0,
        -_f2.z,
        _f2.y,
        _f0.z,
        0,
        -_f0.x,
        _f1.z,
        0,
        -_f1.x,
        _f2.z,
        0,
        -_f2.x,
        -_f0.y,
        _f0.x,
        0,
        -_f1.y,
        _f1.x,
        0,
        -_f2.y,
        _f2.x,
        0
      ];
      if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {
        return false;
      }
      axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];
      if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {
        return false;
      }
      _triangleNormal.crossVectors(_f0, _f1);
      axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];
      return satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents);
    }
    clampPoint(point, target) {
      return target.copy(point).clamp(this.min, this.max);
    }
    distanceToPoint(point) {
      return this.clampPoint(point, _vector$b).distanceTo(point);
    }
    getBoundingSphere(target) {
      if (this.isEmpty()) {
        target.makeEmpty();
      } else {
        this.getCenter(target.center);
        target.radius = this.getSize(_vector$b).length() * 0.5;
      }
      return target;
    }
    intersect(box) {
      this.min.max(box.min);
      this.max.min(box.max);
      if (this.isEmpty()) this.makeEmpty();
      return this;
    }
    union(box) {
      this.min.min(box.min);
      this.max.max(box.max);
      return this;
    }
    applyMatrix4(matrix) {
      if (this.isEmpty()) return this;
      _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix);
      _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix);
      _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix);
      _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix);
      _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix);
      _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix);
      _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix);
      _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix);
      this.setFromPoints(_points);
      return this;
    }
    translate(offset) {
      this.min.add(offset);
      this.max.add(offset);
      return this;
    }
    equals(box) {
      return box.min.equals(this.min) && box.max.equals(this.max);
    }
  }
  const _points = [
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3()
  ];
  const _vector$b = /* @__PURE__ */ new Vector3();
  const _box$4 = /* @__PURE__ */ new Box3();
  const _v0$2 = /* @__PURE__ */ new Vector3();
  const _v1$7 = /* @__PURE__ */ new Vector3();
  const _v2$4 = /* @__PURE__ */ new Vector3();
  const _f0 = /* @__PURE__ */ new Vector3();
  const _f1 = /* @__PURE__ */ new Vector3();
  const _f2 = /* @__PURE__ */ new Vector3();
  const _center = /* @__PURE__ */ new Vector3();
  const _extents = /* @__PURE__ */ new Vector3();
  const _triangleNormal = /* @__PURE__ */ new Vector3();
  const _testAxis = /* @__PURE__ */ new Vector3();
  function satForAxes(axes, v0, v1, v2, extents) {
    for (let i2 = 0, j = axes.length - 3; i2 <= j; i2 += 3) {
      _testAxis.fromArray(axes, i2);
      const r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z);
      const p0 = v0.dot(_testAxis);
      const p1 = v1.dot(_testAxis);
      const p2 = v2.dot(_testAxis);
      if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {
        return false;
      }
    }
    return true;
  }
  const _colorKeywords = {
    "aliceblue": 15792383,
    "antiquewhite": 16444375,
    "aqua": 65535,
    "aquamarine": 8388564,
    "azure": 15794175,
    "beige": 16119260,
    "bisque": 16770244,
    "black": 0,
    "blanchedalmond": 16772045,
    "blue": 255,
    "blueviolet": 9055202,
    "brown": 10824234,
    "burlywood": 14596231,
    "cadetblue": 6266528,
    "chartreuse": 8388352,
    "chocolate": 13789470,
    "coral": 16744272,
    "cornflowerblue": 6591981,
    "cornsilk": 16775388,
    "crimson": 14423100,
    "cyan": 65535,
    "darkblue": 139,
    "darkcyan": 35723,
    "darkgoldenrod": 12092939,
    "darkgray": 11119017,
    "darkgreen": 25600,
    "darkgrey": 11119017,
    "darkkhaki": 12433259,
    "darkmagenta": 9109643,
    "darkolivegreen": 5597999,
    "darkorange": 16747520,
    "darkorchid": 10040012,
    "darkred": 9109504,
    "darksalmon": 15308410,
    "darkseagreen": 9419919,
    "darkslateblue": 4734347,
    "darkslategray": 3100495,
    "darkslategrey": 3100495,
    "darkturquoise": 52945,
    "darkviolet": 9699539,
    "deeppink": 16716947,
    "deepskyblue": 49151,
    "dimgray": 6908265,
    "dimgrey": 6908265,
    "dodgerblue": 2003199,
    "firebrick": 11674146,
    "floralwhite": 16775920,
    "forestgreen": 2263842,
    "fuchsia": 16711935,
    "gainsboro": 14474460,
    "ghostwhite": 16316671,
    "gold": 16766720,
    "goldenrod": 14329120,
    "gray": 8421504,
    "green": 32768,
    "greenyellow": 11403055,
    "grey": 8421504,
    "honeydew": 15794160,
    "hotpink": 16738740,
    "indianred": 13458524,
    "indigo": 4915330,
    "ivory": 16777200,
    "khaki": 15787660,
    "lavender": 15132410,
    "lavenderblush": 16773365,
    "lawngreen": 8190976,
    "lemonchiffon": 16775885,
    "lightblue": 11393254,
    "lightcoral": 15761536,
    "lightcyan": 14745599,
    "lightgoldenrodyellow": 16448210,
    "lightgray": 13882323,
    "lightgreen": 9498256,
    "lightgrey": 13882323,
    "lightpink": 16758465,
    "lightsalmon": 16752762,
    "lightseagreen": 2142890,
    "lightskyblue": 8900346,
    "lightslategray": 7833753,
    "lightslategrey": 7833753,
    "lightsteelblue": 11584734,
    "lightyellow": 16777184,
    "lime": 65280,
    "limegreen": 3329330,
    "linen": 16445670,
    "magenta": 16711935,
    "maroon": 8388608,
    "mediumaquamarine": 6737322,
    "mediumblue": 205,
    "mediumorchid": 12211667,
    "mediumpurple": 9662683,
    "mediumseagreen": 3978097,
    "mediumslateblue": 8087790,
    "mediumspringgreen": 64154,
    "mediumturquoise": 4772300,
    "mediumvioletred": 13047173,
    "midnightblue": 1644912,
    "mintcream": 16121850,
    "mistyrose": 16770273,
    "moccasin": 16770229,
    "navajowhite": 16768685,
    "navy": 128,
    "oldlace": 16643558,
    "olive": 8421376,
    "olivedrab": 7048739,
    "orange": 16753920,
    "orangered": 16729344,
    "orchid": 14315734,
    "palegoldenrod": 15657130,
    "palegreen": 10025880,
    "paleturquoise": 11529966,
    "palevioletred": 14381203,
    "papayawhip": 16773077,
    "peachpuff": 16767673,
    "peru": 13468991,
    "pink": 16761035,
    "plum": 14524637,
    "powderblue": 11591910,
    "purple": 8388736,
    "rebeccapurple": 6697881,
    "red": 16711680,
    "rosybrown": 12357519,
    "royalblue": 4286945,
    "saddlebrown": 9127187,
    "salmon": 16416882,
    "sandybrown": 16032864,
    "seagreen": 3050327,
    "seashell": 16774638,
    "sienna": 10506797,
    "silver": 12632256,
    "skyblue": 8900331,
    "slateblue": 6970061,
    "slategray": 7372944,
    "slategrey": 7372944,
    "snow": 16775930,
    "springgreen": 65407,
    "steelblue": 4620980,
    "tan": 13808780,
    "teal": 32896,
    "thistle": 14204888,
    "tomato": 16737095,
    "turquoise": 4251856,
    "violet": 15631086,
    "wheat": 16113331,
    "white": 16777215,
    "whitesmoke": 16119285,
    "yellow": 16776960,
    "yellowgreen": 10145074
  };
  const _hslA = { h: 0, s: 0, l: 0 };
  const _hslB = { h: 0, s: 0, l: 0 };
  function hue2rgb(p, q, t) {
    if (t < 0) t += 1;
    if (t > 1) t -= 1;
    if (t < 1 / 6) return p + (q - p) * 6 * t;
    if (t < 1 / 2) return q;
    if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);
    return p;
  }
  class Color {
    constructor(r, g, b) {
      this.isColor = true;
      this.r = 1;
      this.g = 1;
      this.b = 1;
      return this.set(r, g, b);
    }
    set(r, g, b) {
      if (g === void 0 && b === void 0) {
        const value = r;
        if (value && value.isColor) {
          this.copy(value);
        } else if (typeof value === "number") {
          this.setHex(value);
        } else if (typeof value === "string") {
          this.setStyle(value);
        }
      } else {
        this.setRGB(r, g, b);
      }
      return this;
    }
    setScalar(scalar) {
      this.r = scalar;
      this.g = scalar;
      this.b = scalar;
      return this;
    }
    setHex(hex, colorSpace = SRGBColorSpace) {
      hex = Math.floor(hex);
      this.r = (hex >> 16 & 255) / 255;
      this.g = (hex >> 8 & 255) / 255;
      this.b = (hex & 255) / 255;
      ColorManagement.toWorkingColorSpace(this, colorSpace);
      return this;
    }
    setRGB(r, g, b, colorSpace = ColorManagement.workingColorSpace) {
      this.r = r;
      this.g = g;
      this.b = b;
      ColorManagement.toWorkingColorSpace(this, colorSpace);
      return this;
    }
    setHSL(h, s, l, colorSpace = ColorManagement.workingColorSpace) {
      h = euclideanModulo(h, 1);
      s = clamp(s, 0, 1);
      l = clamp(l, 0, 1);
      if (s === 0) {
        this.r = this.g = this.b = l;
      } else {
        const p = l <= 0.5 ? l * (1 + s) : l + s - l * s;
        const q = 2 * l - p;
        this.r = hue2rgb(q, p, h + 1 / 3);
        this.g = hue2rgb(q, p, h);
        this.b = hue2rgb(q, p, h - 1 / 3);
      }
      ColorManagement.toWorkingColorSpace(this, colorSpace);
      return this;
    }
    setStyle(style, colorSpace = SRGBColorSpace) {
      function handleAlpha(string) {
        if (string === void 0) return;
        if (parseFloat(string) < 1) {
          console.warn("THREE.Color: Alpha component of " + style + " will be ignored.");
        }
      }
      let m;
      if (m = /^(\\w+)\\(([^\\)]*)\\)/.exec(style)) {
        let color;
        const name = m[1];
        const components = m[2];
        switch (name) {
          case "rgb":
          case "rgba":
            if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {
              handleAlpha(color[4]);
              return this.setRGB(
                Math.min(255, parseInt(color[1], 10)) / 255,
                Math.min(255, parseInt(color[2], 10)) / 255,
                Math.min(255, parseInt(color[3], 10)) / 255,
                colorSpace
              );
            }
            if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {
              handleAlpha(color[4]);
              return this.setRGB(
                Math.min(100, parseInt(color[1], 10)) / 100,
                Math.min(100, parseInt(color[2], 10)) / 100,
                Math.min(100, parseInt(color[3], 10)) / 100,
                colorSpace
              );
            }
            break;
          case "hsl":
          case "hsla":
            if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {
              handleAlpha(color[4]);
              return this.setHSL(
                parseFloat(color[1]) / 360,
                parseFloat(color[2]) / 100,
                parseFloat(color[3]) / 100,
                colorSpace
              );
            }
            break;
          default:
            console.warn("THREE.Color: Unknown color model " + style);
        }
      } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {
        const hex = m[1];
        const size = hex.length;
        if (size === 3) {
          return this.setRGB(
            parseInt(hex.charAt(0), 16) / 15,
            parseInt(hex.charAt(1), 16) / 15,
            parseInt(hex.charAt(2), 16) / 15,
            colorSpace
          );
        } else if (size === 6) {
          return this.setHex(parseInt(hex, 16), colorSpace);
        } else {
          console.warn("THREE.Color: Invalid hex color " + style);
        }
      } else if (style && style.length > 0) {
        return this.setColorName(style, colorSpace);
      }
      return this;
    }
    setColorName(style, colorSpace = SRGBColorSpace) {
      const hex = _colorKeywords[style.toLowerCase()];
      if (hex !== void 0) {
        this.setHex(hex, colorSpace);
      } else {
        console.warn("THREE.Color: Unknown color " + style);
      }
      return this;
    }
    clone() {
      return new this.constructor(this.r, this.g, this.b);
    }
    copy(color) {
      this.r = color.r;
      this.g = color.g;
      this.b = color.b;
      return this;
    }
    copySRGBToLinear(color) {
      this.r = SRGBToLinear(color.r);
      this.g = SRGBToLinear(color.g);
      this.b = SRGBToLinear(color.b);
      return this;
    }
    copyLinearToSRGB(color) {
      this.r = LinearToSRGB(color.r);
      this.g = LinearToSRGB(color.g);
      this.b = LinearToSRGB(color.b);
      return this;
    }
    convertSRGBToLinear() {
      this.copySRGBToLinear(this);
      return this;
    }
    convertLinearToSRGB() {
      this.copyLinearToSRGB(this);
      return this;
    }
    getHex(colorSpace = SRGBColorSpace) {
      ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);
      return Math.round(clamp(_color.r * 255, 0, 255)) * 65536 + Math.round(clamp(_color.g * 255, 0, 255)) * 256 + Math.round(clamp(_color.b * 255, 0, 255));
    }
    getHexString(colorSpace = SRGBColorSpace) {
      return ("000000" + this.getHex(colorSpace).toString(16)).slice(-6);
    }
    getHSL(target, colorSpace = ColorManagement.workingColorSpace) {
      ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);
      const r = _color.r, g = _color.g, b = _color.b;
      const max2 = Math.max(r, g, b);
      const min = Math.min(r, g, b);
      let hue, saturation;
      const lightness = (min + max2) / 2;
      if (min === max2) {
        hue = 0;
        saturation = 0;
      } else {
        const delta = max2 - min;
        saturation = lightness <= 0.5 ? delta / (max2 + min) : delta / (2 - max2 - min);
        switch (max2) {
          case r:
            hue = (g - b) / delta + (g < b ? 6 : 0);
            break;
          case g:
            hue = (b - r) / delta + 2;
            break;
          case b:
            hue = (r - g) / delta + 4;
            break;
        }
        hue /= 6;
      }
      target.h = hue;
      target.s = saturation;
      target.l = lightness;
      return target;
    }
    getRGB(target, colorSpace = ColorManagement.workingColorSpace) {
      ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);
      target.r = _color.r;
      target.g = _color.g;
      target.b = _color.b;
      return target;
    }
    getStyle(colorSpace = SRGBColorSpace) {
      ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);
      const r = _color.r, g = _color.g, b = _color.b;
      if (colorSpace !== SRGBColorSpace) {
        return \`color(\${colorSpace} \${r.toFixed(3)} \${g.toFixed(3)} \${b.toFixed(3)})\`;
      }
      return \`rgb(\${Math.round(r * 255)},\${Math.round(g * 255)},\${Math.round(b * 255)})\`;
    }
    offsetHSL(h, s, l) {
      this.getHSL(_hslA);
      return this.setHSL(_hslA.h + h, _hslA.s + s, _hslA.l + l);
    }
    add(color) {
      this.r += color.r;
      this.g += color.g;
      this.b += color.b;
      return this;
    }
    addColors(color1, color2) {
      this.r = color1.r + color2.r;
      this.g = color1.g + color2.g;
      this.b = color1.b + color2.b;
      return this;
    }
    addScalar(s) {
      this.r += s;
      this.g += s;
      this.b += s;
      return this;
    }
    sub(color) {
      this.r = Math.max(0, this.r - color.r);
      this.g = Math.max(0, this.g - color.g);
      this.b = Math.max(0, this.b - color.b);
      return this;
    }
    multiply(color) {
      this.r *= color.r;
      this.g *= color.g;
      this.b *= color.b;
      return this;
    }
    multiplyScalar(s) {
      this.r *= s;
      this.g *= s;
      this.b *= s;
      return this;
    }
    lerp(color, alpha) {
      this.r += (color.r - this.r) * alpha;
      this.g += (color.g - this.g) * alpha;
      this.b += (color.b - this.b) * alpha;
      return this;
    }
    lerpColors(color1, color2, alpha) {
      this.r = color1.r + (color2.r - color1.r) * alpha;
      this.g = color1.g + (color2.g - color1.g) * alpha;
      this.b = color1.b + (color2.b - color1.b) * alpha;
      return this;
    }
    lerpHSL(color, alpha) {
      this.getHSL(_hslA);
      color.getHSL(_hslB);
      const h = lerp(_hslA.h, _hslB.h, alpha);
      const s = lerp(_hslA.s, _hslB.s, alpha);
      const l = lerp(_hslA.l, _hslB.l, alpha);
      this.setHSL(h, s, l);
      return this;
    }
    setFromVector3(v) {
      this.r = v.x;
      this.g = v.y;
      this.b = v.z;
      return this;
    }
    applyMatrix3(m) {
      const r = this.r, g = this.g, b = this.b;
      const e = m.elements;
      this.r = e[0] * r + e[3] * g + e[6] * b;
      this.g = e[1] * r + e[4] * g + e[7] * b;
      this.b = e[2] * r + e[5] * g + e[8] * b;
      return this;
    }
    equals(c) {
      return c.r === this.r && c.g === this.g && c.b === this.b;
    }
    fromArray(array, offset = 0) {
      this.r = array[offset];
      this.g = array[offset + 1];
      this.b = array[offset + 2];
      return this;
    }
    toArray(array = [], offset = 0) {
      array[offset] = this.r;
      array[offset + 1] = this.g;
      array[offset + 2] = this.b;
      return array;
    }
    fromBufferAttribute(attribute, index) {
      this.r = attribute.getX(index);
      this.g = attribute.getY(index);
      this.b = attribute.getZ(index);
      return this;
    }
    toJSON() {
      return this.getHex();
    }
    *[Symbol.iterator]() {
      yield this.r;
      yield this.g;
      yield this.b;
    }
  }
  const _color = /* @__PURE__ */ new Color();
  Color.NAMES = _colorKeywords;
  if (typeof __THREE_DEVTOOLS__ !== "undefined") {
    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", { detail: {
      revision: REVISION
    } }));
  }
  if (typeof window !== "undefined") {
    if (window.__THREE__) {
      console.warn("WARNING: Multiple instances of Three.js being imported.");
    } else {
      window.__THREE__ = REVISION;
    }
  }
  const LN_SCALE_MIN = -12;
  const LN_SCALE_MAX = 9;
  const LN_SCALE_ZERO = -30;
  const SCALE_ZERO = Math.exp(LN_SCALE_ZERO);
  const SPLAT_TEX_WIDTH_BITS = 11;
  const SPLAT_TEX_HEIGHT_BITS = 11;
  const SPLAT_TEX_WIDTH = 1 << SPLAT_TEX_WIDTH_BITS;
  const SPLAT_TEX_HEIGHT = 1 << SPLAT_TEX_HEIGHT_BITS;
  const SPLAT_TEX_MIN_HEIGHT = 1;
  function unindentLines(s) {
    var _a2;
    let seenNonEmpty = false;
    const lines = s.split("\\n").map((line) => {
      const trimmedLine = line.trimEnd();
      if (seenNonEmpty) {
        return trimmedLine;
      }
      if (trimmedLine.length > 0) {
        seenNonEmpty = true;
        return trimmedLine;
      }
      return null;
    }).filter((line) => line != null);
    while (lines.length > 0 && lines[lines.length - 1].length === 0) {
      lines.pop();
    }
    if (lines.length === 0) {
      return [];
    }
    const indent = (_a2 = lines[0].match(/^\\s*/)) == null ? void 0 : _a2[0];
    if (!indent) {
      return lines;
    }
    const regex = new RegExp(\`^\${indent}\`);
    return lines.map((line) => line.replace(regex, ""));
  }
  function unindent(s) {
    return unindentLines(s).join("\\n");
  }
  const f32buffer = new Float32Array(1);
  const u32buffer = new Uint32Array(f32buffer.buffer);
  function toHalf(f) {
    f32buffer[0] = f;
    const bits2 = u32buffer[0];
    const sign = bits2 >> 31 & 1;
    const exp = bits2 >> 23 & 255;
    const frac = bits2 & 8388607;
    const halfSign = sign << 15;
    if (exp === 255) {
      if (frac !== 0) {
        return halfSign | 32767;
      }
      return halfSign | 31744;
    }
    const newExp = exp - 127 + 15;
    if (newExp >= 31) {
      return halfSign | 31744;
    }
    if (newExp <= 0) {
      if (newExp < -10) {
        return halfSign;
      }
      const subFrac = (frac | 8388608) >> 1 - newExp + 13;
      return halfSign | subFrac;
    }
    const halfFrac = frac >> 13;
    return halfSign | newExp << 10 | halfFrac;
  }
  function fromHalf(h) {
    const sign = h >> 15 & 1;
    const exp = h >> 10 & 31;
    const frac = h & 1023;
    let f32bits;
    if (exp === 0) {
      if (frac === 0) {
        f32bits = sign << 31;
      } else {
        let mant = frac;
        let e = -14;
        while ((mant & 1024) === 0) {
          mant <<= 1;
          e--;
        }
        mant &= 1023;
        const newExp = e + 127;
        const newFrac = mant << 13;
        f32bits = sign << 31 | newExp << 23 | newFrac;
      }
    } else if (exp === 31) {
      if (frac === 0) {
        f32bits = sign << 31 | 2139095040;
      } else {
        f32bits = sign << 31 | 2143289344;
      }
    } else {
      const newExp = exp - 15 + 127;
      const newFrac = frac << 13;
      f32bits = sign << 31 | newExp << 23 | newFrac;
    }
    u32buffer[0] = f32bits;
    return f32buffer[0];
  }
  function floatToUint8(v) {
    return Math.max(0, Math.min(255, Math.round(v * 255)));
  }
  function getArrayBuffers(ctx) {
    const buffers = [];
    const seen = /* @__PURE__ */ new Set();
    function traverse(obj) {
      if (obj && typeof obj === "object" && !seen.has(obj)) {
        seen.add(obj);
        if (obj instanceof ArrayBuffer) {
          buffers.push(obj);
        } else if (ArrayBuffer.isView(obj)) {
          buffers.push(obj.buffer);
        } else if (Array.isArray(obj)) {
          obj.forEach(traverse);
        } else {
          Object.values(obj).forEach(traverse);
        }
      }
    }
    traverse(ctx);
    return buffers;
  }
  function setPackedSplat(packedSplats, index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b, encoding) {
    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;
    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;
    const rgbRange = rgbMax - rgbMin;
    const uR = floatToUint8((r - rgbMin) / rgbRange);
    const uG = floatToUint8((g - rgbMin) / rgbRange);
    const uB = floatToUint8((b - rgbMin) / rgbRange);
    const uA = floatToUint8(opacity);
    const uQuat = encodeQuatOctXy88R8(
      new Quaternion(quatX, quatY, quatZ, quatW)
    );
    const uQuatX = uQuat & 255;
    const uQuatY = uQuat >>> 8 & 255;
    const uQuatZ = uQuat >>> 16 & 255;
    const lnScaleMin = (encoding == null ? void 0 : encoding.lnScaleMin) ?? LN_SCALE_MIN;
    const lnScaleMax = (encoding == null ? void 0 : encoding.lnScaleMax) ?? LN_SCALE_MAX;
    const lnScaleScale = 254 / (lnScaleMax - lnScaleMin);
    const uScaleX = scaleX < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleX) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const uScaleY = scaleY < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleY) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const uScaleZ = scaleZ < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleZ) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const uCenterX = toHalf(x2);
    const uCenterY = toHalf(y);
    const uCenterZ = toHalf(z);
    const i4 = index * 4;
    packedSplats[i4] = uR | uG << 8 | uB << 16 | uA << 24;
    packedSplats[i4 + 1] = uCenterX | uCenterY << 16;
    packedSplats[i4 + 2] = uCenterZ | uQuatX << 16 | uQuatY << 24;
    packedSplats[i4 + 3] = uScaleX | uScaleY << 8 | uScaleZ << 16 | uQuatZ << 24;
  }
  function setPackedSplatCenter(packedSplats, index, x2, y, z) {
    const uCenterX = toHalf(x2);
    const uCenterY = toHalf(y);
    const uCenterZ = toHalf(z);
    const i4 = index * 4;
    packedSplats[i4 + 1] = uCenterX | uCenterY << 16;
    packedSplats[i4 + 2] = uCenterZ | packedSplats[i4 + 2] & 4294901760;
  }
  function setPackedSplatScales(packedSplats, index, scaleX, scaleY, scaleZ, encoding) {
    const lnScaleMin = (encoding == null ? void 0 : encoding.lnScaleMin) ?? LN_SCALE_MIN;
    const lnScaleMax = (encoding == null ? void 0 : encoding.lnScaleMax) ?? LN_SCALE_MAX;
    const lnScaleScale = 254 / (lnScaleMax - lnScaleMin);
    const uScaleX = scaleX < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleX) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const uScaleY = scaleY < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleY) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const uScaleZ = scaleZ < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleZ) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const i4 = index * 4;
    packedSplats[i4 + 3] = uScaleX | uScaleY << 8 | uScaleZ << 16 | packedSplats[i4 + 3] & 4278190080;
  }
  function setPackedSplatQuat(packedSplats, index, quatX, quatY, quatZ, quatW) {
    const uQuat = encodeQuatOctXy88R8(
      new Quaternion(quatX, quatY, quatZ, quatW)
    );
    const uQuatX = uQuat & 255;
    const uQuatY = uQuat >>> 8 & 255;
    const uQuatZ = uQuat >>> 16 & 255;
    const i4 = index * 4;
    packedSplats[i4 + 2] = packedSplats[i4 + 2] & 65535 | uQuatX << 16 | uQuatY << 24;
    packedSplats[i4 + 3] = packedSplats[i4 + 3] & 16777215 | uQuatZ << 24;
  }
  function setPackedSplatRgba(packedSplats, index, r, g, b, a, encoding) {
    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;
    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;
    const rgbRange = rgbMax - rgbMin;
    const uR = floatToUint8((r - rgbMin) / rgbRange);
    const uG = floatToUint8((g - rgbMin) / rgbRange);
    const uB = floatToUint8((b - rgbMin) / rgbRange);
    const uA = floatToUint8(a);
    const i4 = index * 4;
    packedSplats[i4] = uR | uG << 8 | uB << 16 | uA << 24;
  }
  function setPackedSplatRgb(packedSplats, index, r, g, b, encoding) {
    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;
    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;
    const rgbRange = rgbMax - rgbMin;
    const uR = floatToUint8((r - rgbMin) / rgbRange);
    const uG = floatToUint8((g - rgbMin) / rgbRange);
    const uB = floatToUint8((b - rgbMin) / rgbRange);
    const i4 = index * 4;
    packedSplats[i4] = uR | uG << 8 | uB << 16 | packedSplats[i4] & 4278190080;
  }
  function setPackedSplatOpacity(packedSplats, index, opacity) {
    const uA = floatToUint8(opacity);
    const i4 = index * 4;
    packedSplats[i4] = packedSplats[i4] & 16777215 | uA << 24;
  }
  new Vector3();
  new Vector3();
  new Color();
  function getTextureSize(numSplats) {
    const width = SPLAT_TEX_WIDTH;
    const height = Math.max(
      SPLAT_TEX_MIN_HEIGHT,
      Math.min(SPLAT_TEX_HEIGHT, Math.ceil(numSplats / width))
    );
    const depth = Math.ceil(numSplats / (width * height));
    const maxSplats = width * height * depth;
    return { width, height, depth, maxSplats };
  }
  function computeMaxSplats(numSplats) {
    const width = SPLAT_TEX_WIDTH;
    const height = Math.max(
      SPLAT_TEX_MIN_HEIGHT,
      Math.min(SPLAT_TEX_HEIGHT, Math.ceil(numSplats / width))
    );
    const depth = Math.ceil(numSplats / (width * height));
    return width * height * depth;
  }
  unindent(\`
  precision highp float;

  in vec3 position;

  void main() {
    gl_Position = vec4(position.xy, 0.0, 1.0);
  }
\`);
  function encodeQuatOctXy88R8(q) {
    const qnorm = q.clone().normalize();
    if (qnorm.w < 0) {
      qnorm.set(-qnorm.x, -qnorm.y, -qnorm.z, -qnorm.w);
    }
    const theta = 2 * Math.acos(qnorm.w);
    const xyz_norm = Math.sqrt(
      qnorm.x * qnorm.x + qnorm.y * qnorm.y + qnorm.z * qnorm.z
    );
    const axis = xyz_norm < 1e-6 ? new Vector3(1, 0, 0) : new Vector3(qnorm.x, qnorm.y, qnorm.z).divideScalar(xyz_norm);
    const sum = Math.abs(axis.x) + Math.abs(axis.y) + Math.abs(axis.z);
    let p_x = axis.x / sum;
    let p_y = axis.y / sum;
    if (axis.z < 0) {
      const tmp = p_x;
      p_x = (1 - Math.abs(p_y)) * (p_x >= 0 ? 1 : -1);
      p_y = (1 - Math.abs(tmp)) * (p_y >= 0 ? 1 : -1);
    }
    const u_f = p_x * 0.5 + 0.5;
    const v_f = p_y * 0.5 + 0.5;
    const quantU = Math.round(u_f * 255);
    const quantV = Math.round(v_f * 255);
    const angleInt = Math.round(theta * (255 / Math.PI));
    return angleInt << 16 | quantV << 8 | quantU;
  }
  function packSint8Bytes(b0, b1, b22, b3) {
    const clampedB0 = Math.max(-127, Math.min(127, b0 * 127));
    const clampedB1 = Math.max(-127, Math.min(127, b1 * 127));
    const clampedB2 = Math.max(-127, Math.min(127, b22 * 127));
    const clampedB3 = Math.max(-127, Math.min(127, b3 * 127));
    return clampedB0 & 255 | (clampedB1 & 255) << 8 | (clampedB2 & 255) << 16 | (clampedB3 & 255) << 24;
  }
  function encodeSh1Rgb(sh1Array, index, sh1Rgb, encoding) {
    const sh1Min = (encoding == null ? void 0 : encoding.sh1Min) ?? -1;
    const sh1Max = (encoding == null ? void 0 : encoding.sh1Max) ?? 1;
    const sh1Mid = 0.5 * (sh1Min + sh1Max);
    const sh1Scale = 126 / (sh1Max - sh1Min);
    const base = index * 2;
    for (let i2 = 0; i2 < 9; ++i2) {
      const s = (sh1Rgb[i2] - sh1Mid) * sh1Scale;
      const value = Math.round(Math.max(-63, Math.min(63, s))) & 127;
      const bitStart = i2 * 7;
      const bitEnd = bitStart + 7;
      const wordStart = Math.floor(bitStart / 32);
      const bitOffset = bitStart - wordStart * 32;
      const firstWord = value << bitOffset & 4294967295;
      sh1Array[base + wordStart] |= firstWord;
      if (bitEnd > wordStart * 32 + 32) {
        const secondWord = value >>> 32 - bitOffset & 4294967295;
        sh1Array[base + wordStart + 1] |= secondWord;
      }
    }
  }
  function encodeSh2Rgb(sh2Array, index, sh2Rgb, encoding) {
    const sh2Min = (encoding == null ? void 0 : encoding.sh2Min) ?? -1;
    const sh2Max = (encoding == null ? void 0 : encoding.sh2Max) ?? 1;
    const sh2Mid = 0.5 * (sh2Min + sh2Max);
    const sh2Scale = 2 / (sh2Max - sh2Min);
    sh2Array[index * 4 + 0] = packSint8Bytes(
      (sh2Rgb[0] - sh2Mid) * sh2Scale,
      (sh2Rgb[1] - sh2Mid) * sh2Scale,
      (sh2Rgb[2] - sh2Mid) * sh2Scale,
      (sh2Rgb[3] - sh2Mid) * sh2Scale
    );
    sh2Array[index * 4 + 1] = packSint8Bytes(
      (sh2Rgb[4] - sh2Mid) * sh2Scale,
      (sh2Rgb[5] - sh2Mid) * sh2Scale,
      (sh2Rgb[6] - sh2Mid) * sh2Scale,
      (sh2Rgb[7] - sh2Mid) * sh2Scale
    );
    sh2Array[index * 4 + 2] = packSint8Bytes(
      (sh2Rgb[8] - sh2Mid) * sh2Scale,
      (sh2Rgb[9] - sh2Mid) * sh2Scale,
      (sh2Rgb[10] - sh2Mid) * sh2Scale,
      (sh2Rgb[11] - sh2Mid) * sh2Scale
    );
    sh2Array[index * 4 + 3] = packSint8Bytes(
      (sh2Rgb[12] - sh2Mid) * sh2Scale,
      (sh2Rgb[13] - sh2Mid) * sh2Scale,
      (sh2Rgb[14] - sh2Mid) * sh2Scale,
      0
    );
  }
  function encodeSh3Rgb(sh3Array, index, sh3Rgb, encoding) {
    const sh3Min = (encoding == null ? void 0 : encoding.sh3Min) ?? -1;
    const sh3Max = (encoding == null ? void 0 : encoding.sh3Max) ?? 1;
    const sh3Mid = 0.5 * (sh3Min + sh3Max);
    const sh3Scale = 62 / (sh3Max - sh3Min);
    const base = index * 4;
    for (let i2 = 0; i2 < 21; ++i2) {
      const s = (sh3Rgb[i2] - sh3Mid) * sh3Scale;
      const value = Math.round(Math.max(-31, Math.min(31, s))) & 63;
      const bitStart = i2 * 6;
      const bitEnd = bitStart + 6;
      const wordStart = Math.floor(bitStart / 32);
      const bitOffset = bitStart - wordStart * 32;
      const firstWord = value << bitOffset & 4294967295;
      sh3Array[base + wordStart] |= firstWord;
      if (bitEnd > wordStart * 32 + 32) {
        const secondWord = value >>> 32 - bitOffset & 4294967295;
        sh3Array[base + wordStart + 1] |= secondWord;
      }
    }
  }
  function decompressPartialGzip(fileBytes, numBytes) {
    const chunks = [];
    let totalBytes = 0;
    let result = null;
    const gunzip = new Gunzip((data, final) => {
      chunks.push(data);
      totalBytes += data.length;
      if (final || totalBytes >= numBytes) {
        const allBytes = new Uint8Array(totalBytes);
        let offset2 = 0;
        for (const chunk of chunks) {
          allBytes.set(chunk, offset2);
          offset2 += chunk.length;
        }
        result = allBytes.slice(0, numBytes);
      }
    });
    const CHUNK_SIZE = 1024;
    let offset = 0;
    while (result == null && offset < fileBytes.length) {
      const chunk = fileBytes.slice(offset, offset + CHUNK_SIZE);
      gunzip.push(chunk, false);
      offset += CHUNK_SIZE;
    }
    if (result == null) {
      gunzip.push(new Uint8Array(), true);
      if (result == null) {
        throw new Error("Failed to decompress partial gzip");
      }
    }
    return result;
  }
  class GunzipReader {
    constructor({
      fileBytes,
      chunkBytes = 64 * 1024
    }) {
      this.fileBytes = fileBytes;
      this.chunkBytes = chunkBytes;
      this.offset = 0;
      this.chunks = [];
      this.totalBytes = 0;
      this.gunzip = new Gunzip((chunk, _final) => {
        this.chunks.push(chunk);
        this.totalBytes += chunk.length;
      });
    }
    read(numBytes) {
      while (this.totalBytes < numBytes && this.offset < this.fileBytes.length) {
        const end = Math.min(
          this.offset + this.chunkBytes,
          this.fileBytes.length
        );
        this.gunzip.push(this.fileBytes.subarray(this.offset, end), false);
        this.offset = end;
      }
      if (this.totalBytes < numBytes && this.offset >= this.fileBytes.length) {
        this.gunzip.push(new Uint8Array(0), true);
      }
      if (this.totalBytes < numBytes) {
        throw new Error(
          \`Unexpected EOF: needed \${numBytes}, got \${this.totalBytes}\`
        );
      }
      const allBytes = new Uint8Array(this.totalBytes);
      let outOffset = 0;
      for (const chunk of this.chunks) {
        allBytes.set(chunk, outOffset);
        outOffset += chunk.length;
      }
      const result = allBytes.subarray(0, numBytes);
      this.chunks = [allBytes.subarray(numBytes)];
      this.totalBytes -= numBytes;
      return result;
    }
  }
  function decodeAntiSplat(fileBytes, initNumSplats, splatCallback) {
    const numSplats = Math.floor(fileBytes.length / 32);
    if (numSplats * 32 !== fileBytes.length) {
      throw new Error("Invalid .splat file size");
    }
    initNumSplats(numSplats);
    const f32 = new Float32Array(fileBytes.buffer);
    for (let i2 = 0; i2 < numSplats; ++i2) {
      const i322 = i2 * 32;
      const i8 = i2 * 8;
      const x2 = f32[i8 + 0];
      const y = f32[i8 + 1];
      const z = f32[i8 + 2];
      const scaleX = f32[i8 + 3];
      const scaleY = f32[i8 + 4];
      const scaleZ = f32[i8 + 5];
      const r = fileBytes[i322 + 24] / 255;
      const g = fileBytes[i322 + 25] / 255;
      const b = fileBytes[i322 + 26] / 255;
      const opacity = fileBytes[i322 + 27] / 255;
      const quatW = (fileBytes[i322 + 28] - 128) / 128;
      const quatX = (fileBytes[i322 + 29] - 128) / 128;
      const quatY = (fileBytes[i322 + 30] - 128) / 128;
      const quatZ = (fileBytes[i322 + 31] - 128) / 128;
      splatCallback(
        i2,
        x2,
        y,
        z,
        scaleX,
        scaleY,
        scaleZ,
        quatX,
        quatY,
        quatZ,
        quatW,
        opacity,
        r,
        g,
        b
      );
    }
  }
  function unpackAntiSplat(fileBytes, splatEncoding) {
    let numSplats = 0;
    let maxSplats = 0;
    let packedArray = new Uint32Array(0);
    decodeAntiSplat(
      fileBytes,
      (cbNumSplats) => {
        numSplats = cbNumSplats;
        maxSplats = computeMaxSplats(numSplats);
        packedArray = new Uint32Array(maxSplats * 4);
      },
      (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {
        setPackedSplat(
          packedArray,
          index,
          x2,
          y,
          z,
          scaleX,
          scaleY,
          scaleZ,
          quatX,
          quatY,
          quatZ,
          quatW,
          opacity,
          r,
          g,
          b,
          splatEncoding
        );
      }
    );
    return { packedArray, numSplats };
  }
  const KSPLAT_COMPRESSION = {
    0: {
      bytesPerCenter: 12,
      bytesPerScale: 12,
      bytesPerRotation: 16,
      bytesPerColor: 4,
      bytesPerSphericalHarmonicsComponent: 4,
      scaleOffsetBytes: 12,
      rotationOffsetBytes: 24,
      colorOffsetBytes: 40,
      sphericalHarmonicsOffsetBytes: 44,
      scaleRange: 1
    },
    1: {
      bytesPerCenter: 6,
      bytesPerScale: 6,
      bytesPerRotation: 8,
      bytesPerColor: 4,
      bytesPerSphericalHarmonicsComponent: 2,
      scaleOffsetBytes: 6,
      rotationOffsetBytes: 12,
      colorOffsetBytes: 20,
      sphericalHarmonicsOffsetBytes: 24,
      scaleRange: 32767
    },
    2: {
      bytesPerCenter: 6,
      bytesPerScale: 6,
      bytesPerRotation: 8,
      bytesPerColor: 4,
      bytesPerSphericalHarmonicsComponent: 1,
      scaleOffsetBytes: 6,
      rotationOffsetBytes: 12,
      colorOffsetBytes: 20,
      sphericalHarmonicsOffsetBytes: 24,
      scaleRange: 32767
    }
  };
  const KSPLAT_SH_DEGREE_TO_COMPONENTS = {
    0: 0,
    1: 9,
    2: 24,
    3: 45
  };
  function decodeKsplat(fileBytes, initNumSplats, splatCallback, shCallback) {
    var _a2;
    const HEADER_BYTES = 4096;
    const SECTION_BYTES = 1024;
    let headerOffset = 0;
    const header = new DataView(fileBytes.buffer, headerOffset, HEADER_BYTES);
    headerOffset += HEADER_BYTES;
    const versionMajor = header.getUint8(0);
    const versionMinor = header.getUint8(1);
    if (versionMajor !== 0 || versionMinor < 1) {
      throw new Error(
        \`Unsupported .ksplat version: \${versionMajor}.\${versionMinor}\`
      );
    }
    const maxSectionCount = header.getUint32(4, true);
    header.getUint32(16, true);
    const compressionLevel = header.getUint16(20, true);
    if (compressionLevel < 0 || compressionLevel > 2) {
      throw new Error(\`Invalid .ksplat compression level: \${compressionLevel}\`);
    }
    const minSphericalHarmonicsCoeff = header.getFloat32(36, true) || -1.5;
    const maxSphericalHarmonicsCoeff = header.getFloat32(40, true) || 1.5;
    let sectionBase = HEADER_BYTES + maxSectionCount * SECTION_BYTES;
    for (let section = 0; section < maxSectionCount; ++section) {
      let getSh = function(splatOffset, component) {
        if (compressionLevel === 0) {
          return data.getFloat32(
            splatOffset + sphericalHarmonicsOffsetBytes + component * 4,
            true
          );
        }
        if (compressionLevel === 1) {
          return fromHalf(
            data.getUint16(
              splatOffset + sphericalHarmonicsOffsetBytes + component * 2,
              true
            )
          );
        }
        const t = data.getUint8(splatOffset + sphericalHarmonicsOffsetBytes + component) / 255;
        return minSphericalHarmonicsCoeff + t * (maxSphericalHarmonicsCoeff - minSphericalHarmonicsCoeff);
      };
      const section2 = new DataView(fileBytes.buffer, headerOffset, SECTION_BYTES);
      headerOffset += SECTION_BYTES;
      const sectionSplatCount = section2.getUint32(0, true);
      const sectionMaxSplatCount = section2.getUint32(4, true);
      const bucketSize = section2.getUint32(8, true);
      const bucketCount = section2.getUint32(12, true);
      const bucketBlockSize = section2.getFloat32(16, true);
      const bucketStorageSizeBytes = section2.getUint16(20, true);
      const compressionScaleRange = (section2.getUint32(24, true) || ((_a2 = KSPLAT_COMPRESSION[compressionLevel]) == null ? void 0 : _a2.scaleRange)) ?? 1;
      const fullBucketCount = section2.getUint32(32, true);
      const fullBucketSplats = fullBucketCount * bucketSize;
      const partiallyFilledBucketCount = section2.getUint32(36, true);
      const bucketsMetaDataSizeBytes = partiallyFilledBucketCount * 4;
      const bucketsStorageSizeBytes = bucketStorageSizeBytes * bucketCount + bucketsMetaDataSizeBytes;
      const sphericalHarmonicsDegree = section2.getUint16(40, true);
      const shComponents = KSPLAT_SH_DEGREE_TO_COMPONENTS[sphericalHarmonicsDegree];
      const {
        bytesPerCenter,
        bytesPerScale,
        bytesPerRotation,
        bytesPerColor,
        bytesPerSphericalHarmonicsComponent,
        scaleOffsetBytes,
        rotationOffsetBytes,
        colorOffsetBytes,
        sphericalHarmonicsOffsetBytes
      } = KSPLAT_COMPRESSION[compressionLevel];
      const bytesPerSplat = bytesPerCenter + bytesPerScale + bytesPerRotation + bytesPerColor + shComponents * bytesPerSphericalHarmonicsComponent;
      const splatDataStorageSizeBytes = bytesPerSplat * sectionMaxSplatCount;
      const storageSizeBytes = splatDataStorageSizeBytes + bucketsStorageSizeBytes;
      const sh1Index = [0, 3, 6, 1, 4, 7, 2, 5, 8];
      const sh2Index = [
        9,
        14,
        19,
        10,
        15,
        20,
        11,
        16,
        21,
        12,
        17,
        22,
        13,
        18,
        23
      ];
      const sh3Index = [
        24,
        31,
        38,
        25,
        32,
        39,
        26,
        33,
        40,
        27,
        34,
        41,
        28,
        35,
        42,
        29,
        36,
        43,
        30,
        37,
        44
      ];
      const sh1 = sphericalHarmonicsDegree >= 1 ? new Float32Array(3 * 3) : void 0;
      const sh2 = sphericalHarmonicsDegree >= 2 ? new Float32Array(5 * 3) : void 0;
      const sh3 = sphericalHarmonicsDegree >= 3 ? new Float32Array(7 * 3) : void 0;
      const compressionScaleFactor = bucketBlockSize / 2 / compressionScaleRange;
      const bucketsBase = sectionBase + bucketsMetaDataSizeBytes;
      const dataBase = sectionBase + bucketsStorageSizeBytes;
      const data = new DataView(
        fileBytes.buffer,
        dataBase,
        splatDataStorageSizeBytes
      );
      const bucketArray = new Float32Array(
        fileBytes.buffer,
        bucketsBase,
        bucketCount * 3
      );
      const partiallyFilledBucketLengths = new Uint32Array(
        fileBytes.buffer,
        sectionBase,
        partiallyFilledBucketCount
      );
      let partialBucketIndex = fullBucketCount;
      let partialBucketBase = fullBucketSplats;
      for (let i2 = 0; i2 < sectionSplatCount; ++i2) {
        const splatOffset = i2 * bytesPerSplat;
        let bucketIndex;
        if (i2 < fullBucketSplats) {
          bucketIndex = Math.floor(i2 / bucketSize);
        } else {
          const bucketLength = partiallyFilledBucketLengths[partialBucketIndex - fullBucketCount];
          if (i2 >= partialBucketBase + bucketLength) {
            partialBucketIndex += 1;
            partialBucketBase += bucketLength;
          }
          bucketIndex = partialBucketIndex;
        }
        const x2 = compressionLevel === 0 ? data.getFloat32(splatOffset + 0, true) : (data.getUint16(splatOffset + 0, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 0];
        const y = compressionLevel === 0 ? data.getFloat32(splatOffset + 4, true) : (data.getUint16(splatOffset + 2, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 1];
        const z = compressionLevel === 0 ? data.getFloat32(splatOffset + 8, true) : (data.getUint16(splatOffset + 4, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 2];
        const scaleX = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 0, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 0, true));
        const scaleY = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 4, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 2, true));
        const scaleZ = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 8, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 4, true));
        const quatW = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 0, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 0, true)
        );
        const quatX = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 4, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 2, true)
        );
        const quatY = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 8, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 4, true)
        );
        const quatZ = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 12, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 6, true)
        );
        const r = data.getUint8(splatOffset + colorOffsetBytes + 0) / 255;
        const g = data.getUint8(splatOffset + colorOffsetBytes + 1) / 255;
        const b = data.getUint8(splatOffset + colorOffsetBytes + 2) / 255;
        const opacity = data.getUint8(splatOffset + colorOffsetBytes + 3) / 255;
        splatCallback(
          i2,
          x2,
          y,
          z,
          scaleX,
          scaleY,
          scaleZ,
          quatX,
          quatY,
          quatZ,
          quatW,
          opacity,
          r,
          g,
          b
        );
        if (sphericalHarmonicsDegree >= 1 && sh1) {
          for (const [i22, key] of sh1Index.entries()) {
            sh1[i22] = getSh(splatOffset, key);
          }
          if (sh2) {
            for (const [i22, key] of sh2Index.entries()) {
              sh2[i22] = getSh(splatOffset, key);
            }
          }
          if (sh3) {
            for (const [i22, key] of sh3Index.entries()) {
              sh3[i22] = getSh(splatOffset, key);
            }
          }
          shCallback == null ? void 0 : shCallback(i2, sh1, sh2, sh3);
        }
      }
      sectionBase += storageSizeBytes;
    }
  }
  function unpackKsplat(fileBytes, splatEncoding) {
    var _a2;
    const HEADER_BYTES = 4096;
    const SECTION_BYTES = 1024;
    let headerOffset = 0;
    const header = new DataView(fileBytes.buffer, headerOffset, HEADER_BYTES);
    headerOffset += HEADER_BYTES;
    const versionMajor = header.getUint8(0);
    const versionMinor = header.getUint8(1);
    if (versionMajor !== 0 || versionMinor < 1) {
      throw new Error(
        \`Unsupported .ksplat version: \${versionMajor}.\${versionMinor}\`
      );
    }
    const maxSectionCount = header.getUint32(4, true);
    const splatCount = header.getUint32(16, true);
    const compressionLevel = header.getUint16(20, true);
    if (compressionLevel < 0 || compressionLevel > 2) {
      throw new Error(\`Invalid .ksplat compression level: \${compressionLevel}\`);
    }
    const minSphericalHarmonicsCoeff = header.getFloat32(36, true) || -1.5;
    const maxSphericalHarmonicsCoeff = header.getFloat32(40, true) || 1.5;
    const numSplats = splatCount;
    const maxSplats = computeMaxSplats(numSplats);
    const packedArray = new Uint32Array(maxSplats * 4);
    const extra = {};
    let sectionBase = HEADER_BYTES + maxSectionCount * SECTION_BYTES;
    for (let section = 0; section < maxSectionCount; ++section) {
      let getSh = function(splatOffset, component) {
        if (compressionLevel === 0) {
          return data.getFloat32(
            splatOffset + sphericalHarmonicsOffsetBytes + component * 4,
            true
          );
        }
        if (compressionLevel === 1) {
          return fromHalf(
            data.getUint16(
              splatOffset + sphericalHarmonicsOffsetBytes + component * 2,
              true
            )
          );
        }
        const t = data.getUint8(splatOffset + sphericalHarmonicsOffsetBytes + component) / 255;
        return minSphericalHarmonicsCoeff + t * (maxSphericalHarmonicsCoeff - minSphericalHarmonicsCoeff);
      };
      const section2 = new DataView(fileBytes.buffer, headerOffset, SECTION_BYTES);
      headerOffset += SECTION_BYTES;
      const sectionSplatCount = section2.getUint32(0, true);
      const sectionMaxSplatCount = section2.getUint32(4, true);
      const bucketSize = section2.getUint32(8, true);
      const bucketCount = section2.getUint32(12, true);
      const bucketBlockSize = section2.getFloat32(16, true);
      const bucketStorageSizeBytes = section2.getUint16(20, true);
      const compressionScaleRange = (section2.getUint32(24, true) || ((_a2 = KSPLAT_COMPRESSION[compressionLevel]) == null ? void 0 : _a2.scaleRange)) ?? 1;
      const fullBucketCount = section2.getUint32(32, true);
      const fullBucketSplats = fullBucketCount * bucketSize;
      const partiallyFilledBucketCount = section2.getUint32(36, true);
      const bucketsMetaDataSizeBytes = partiallyFilledBucketCount * 4;
      const bucketsStorageSizeBytes = bucketStorageSizeBytes * bucketCount + bucketsMetaDataSizeBytes;
      const sphericalHarmonicsDegree = section2.getUint16(40, true);
      const shComponents = KSPLAT_SH_DEGREE_TO_COMPONENTS[sphericalHarmonicsDegree];
      const {
        bytesPerCenter,
        bytesPerScale,
        bytesPerRotation,
        bytesPerColor,
        bytesPerSphericalHarmonicsComponent,
        scaleOffsetBytes,
        rotationOffsetBytes,
        colorOffsetBytes,
        sphericalHarmonicsOffsetBytes
      } = KSPLAT_COMPRESSION[compressionLevel];
      const bytesPerSplat = bytesPerCenter + bytesPerScale + bytesPerRotation + bytesPerColor + shComponents * bytesPerSphericalHarmonicsComponent;
      const splatDataStorageSizeBytes = bytesPerSplat * sectionMaxSplatCount;
      const storageSizeBytes = splatDataStorageSizeBytes + bucketsStorageSizeBytes;
      const sh1Index = [0, 3, 6, 1, 4, 7, 2, 5, 8];
      const sh2Index = [
        9,
        14,
        19,
        10,
        15,
        20,
        11,
        16,
        21,
        12,
        17,
        22,
        13,
        18,
        23
      ];
      const sh3Index = [
        24,
        31,
        38,
        25,
        32,
        39,
        26,
        33,
        40,
        27,
        34,
        41,
        28,
        35,
        42,
        29,
        36,
        43,
        30,
        37,
        44
      ];
      const sh1 = sphericalHarmonicsDegree >= 1 ? new Float32Array(3 * 3) : void 0;
      const sh2 = sphericalHarmonicsDegree >= 2 ? new Float32Array(5 * 3) : void 0;
      const sh3 = sphericalHarmonicsDegree >= 3 ? new Float32Array(7 * 3) : void 0;
      const compressionScaleFactor = bucketBlockSize / 2 / compressionScaleRange;
      const bucketsBase = sectionBase + bucketsMetaDataSizeBytes;
      const dataBase = sectionBase + bucketsStorageSizeBytes;
      const data = new DataView(
        fileBytes.buffer,
        dataBase,
        splatDataStorageSizeBytes
      );
      const bucketArray = new Float32Array(
        fileBytes.buffer,
        bucketsBase,
        bucketCount * 3
      );
      const partiallyFilledBucketLengths = new Uint32Array(
        fileBytes.buffer,
        sectionBase,
        partiallyFilledBucketCount
      );
      let partialBucketIndex = fullBucketCount;
      let partialBucketBase = fullBucketSplats;
      for (let i2 = 0; i2 < sectionSplatCount; ++i2) {
        const splatOffset = i2 * bytesPerSplat;
        let bucketIndex;
        if (i2 < fullBucketSplats) {
          bucketIndex = Math.floor(i2 / bucketSize);
        } else {
          const bucketLength = partiallyFilledBucketLengths[partialBucketIndex - fullBucketCount];
          if (i2 >= partialBucketBase + bucketLength) {
            partialBucketIndex += 1;
            partialBucketBase += bucketLength;
          }
          bucketIndex = partialBucketIndex;
        }
        const x2 = compressionLevel === 0 ? data.getFloat32(splatOffset + 0, true) : (data.getUint16(splatOffset + 0, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 0];
        const y = compressionLevel === 0 ? data.getFloat32(splatOffset + 4, true) : (data.getUint16(splatOffset + 2, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 1];
        const z = compressionLevel === 0 ? data.getFloat32(splatOffset + 8, true) : (data.getUint16(splatOffset + 4, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 2];
        const scaleX = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 0, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 0, true));
        const scaleY = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 4, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 2, true));
        const scaleZ = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 8, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 4, true));
        const quatW = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 0, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 0, true)
        );
        const quatX = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 4, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 2, true)
        );
        const quatY = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 8, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 4, true)
        );
        const quatZ = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 12, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 6, true)
        );
        const r = data.getUint8(splatOffset + colorOffsetBytes + 0) / 255;
        const g = data.getUint8(splatOffset + colorOffsetBytes + 1) / 255;
        const b = data.getUint8(splatOffset + colorOffsetBytes + 2) / 255;
        const opacity = data.getUint8(splatOffset + colorOffsetBytes + 3) / 255;
        setPackedSplat(
          packedArray,
          i2,
          x2,
          y,
          z,
          scaleX,
          scaleY,
          scaleZ,
          quatX,
          quatY,
          quatZ,
          quatW,
          opacity,
          r,
          g,
          b,
          splatEncoding
        );
        if (sphericalHarmonicsDegree >= 1) {
          if (sh1) {
            if (!extra.sh1) {
              extra.sh1 = new Uint32Array(numSplats * 2);
            }
            for (const [i22, key] of sh1Index.entries()) {
              sh1[i22] = getSh(splatOffset, key);
            }
            encodeSh1Rgb(extra.sh1, i2, sh1, splatEncoding);
          }
          if (sh2) {
            if (!extra.sh2) {
              extra.sh2 = new Uint32Array(numSplats * 4);
            }
            for (const [i22, key] of sh2Index.entries()) {
              sh2[i22] = getSh(splatOffset, key);
            }
            encodeSh2Rgb(extra.sh2, i2, sh2, splatEncoding);
          }
          if (sh3) {
            if (!extra.sh3) {
              extra.sh3 = new Uint32Array(numSplats * 4);
            }
            for (const [i22, key] of sh3Index.entries()) {
              sh3[i22] = getSh(splatOffset, key);
            }
            encodeSh3Rgb(extra.sh3, i2, sh3, splatEncoding);
          }
        }
      }
      sectionBase += storageSizeBytes;
    }
    return { packedArray, numSplats, extra };
  }
  const _PlyReader = class _PlyReader {
    // Create a PlyReader from a Uint8Array/ArrayBuffer, no parsing done yet
    constructor({ fileBytes }) {
      this.header = "";
      this.littleEndian = true;
      this.elements = {};
      this.comments = [];
      this.data = null;
      this.numSplats = 0;
      this.fileBytes = fileBytes instanceof ArrayBuffer ? new Uint8Array(fileBytes) : fileBytes;
    }
    // Identify and parse the PLY text header (assumed to be <64KB in size).
    // this.elements will contain all the elements in the file, typically
    // "vertex" contains the Gsplat data.
    async parseHeader() {
      const bufferStream = new ReadableStream({
        start: (controller) => {
          controller.enqueue(this.fileBytes.slice(0, 65536));
          controller.close();
        }
      });
      const decoder = bufferStream.pipeThrough(new TextDecoderStream()).getReader();
      this.header = "";
      const headerTerminator = "end_header\\n";
      while (true) {
        const { value, done } = await decoder.read();
        if (done) {
          throw new Error("Failed to read header");
        }
        this.header += value;
        const endHeader = this.header.indexOf(headerTerminator);
        if (endHeader >= 0) {
          this.header = this.header.slice(0, endHeader + headerTerminator.length);
          break;
        }
      }
      const headerLen = new TextEncoder().encode(this.header).length;
      this.data = new DataView(this.fileBytes.buffer, headerLen);
      this.elements = {};
      let curElement = null;
      this.comments = [];
      this.header.trim().split("\\n").forEach((line, lineIndex) => {
        const trimmedLine = line.trim();
        if (lineIndex === 0) {
          if (trimmedLine !== "ply") {
            throw new Error("Invalid PLY header");
          }
          return;
        }
        if (trimmedLine.length === 0) {
          return;
        }
        const fields = trimmedLine.split(" ");
        switch (fields[0]) {
          case "format":
            if (fields[1] === "binary_little_endian") {
              this.littleEndian = true;
            } else if (fields[1] === "binary_big_endian") {
              this.littleEndian = false;
            } else {
              throw new Error(\`Unsupported PLY format: \${fields[1]}\`);
            }
            if (fields[2] !== "1.0") {
              throw new Error(\`Unsupported PLY version: \${fields[2]}\`);
            }
            break;
          case "end_header":
            break;
          case "comment":
            this.comments.push(trimmedLine.slice("comment ".length));
            break;
          case "element": {
            const name = fields[1];
            curElement = {
              name,
              count: Number.parseInt(fields[2]),
              properties: {}
            };
            this.elements[name] = curElement;
            break;
          }
          case "property":
            if (curElement == null) {
              throw new Error("Property must be inside an element");
            }
            if (fields[1] === "list") {
              curElement.properties[fields[4]] = {
                isList: true,
                type: fields[3],
                countType: fields[2]
              };
            } else {
              curElement.properties[fields[2]] = {
                isList: false,
                type: fields[1]
              };
            }
            break;
        }
      });
      if (this.elements.vertex) {
        this.numSplats = this.elements.vertex.count;
      }
    }
    parseData(elementCallback) {
      let offset = 0;
      const data = this.data;
      if (data == null) {
        throw new Error("No data to parse");
      }
      for (const elementName in this.elements) {
        const element = this.elements[elementName];
        const { count, properties } = element;
        const item = {};
        const parsers = [];
        for (const [propertyName, property] of Object.entries(properties)) {
          if (!property.isList) {
            item[propertyName] = 0;
            parsers.push(() => {
              item[propertyName] = PARSE_FIELD[property.type](
                data,
                offset,
                this.littleEndian
              );
              offset += FIELD_BYTES[property.type];
            });
          } else {
            item[propertyName] = [];
            parsers.push(() => {
              const list = item[propertyName];
              list.length = PARSE_FIELD[property.countType](
                data,
                offset,
                this.littleEndian
              );
              offset += FIELD_BYTES[property.countType];
              for (let i2 = 0; i2 < list.length; i2++) {
                list[i2] = PARSE_FIELD[property.type](
                  data,
                  offset,
                  this.littleEndian
                );
                offset += FIELD_BYTES[property.type];
              }
            });
          }
        }
        const callback = elementCallback(element) ?? (() => {
        });
        for (let index = 0; index < count; index++) {
          for (const parser of parsers) {
            parser();
          }
          callback(index, item);
        }
      }
    }
    // Parse all the Gsplat data in the PLY file in go, invoking the given
    // callbacks for each Gsplat.
    parseSplats(splatCallback, shCallback) {
      if (this.elements.vertex == null) {
        throw new Error("No vertex element found");
      }
      let isSuperSplat = false;
      const ssChunks = [];
      let numSh = 0;
      let sh1Props = [];
      let sh2Props = [];
      let sh3Props = [];
      let sh1 = void 0;
      let sh2 = void 0;
      let sh3 = void 0;
      function prepareSh() {
        const num_f_rest = NUM_SH_TO_NUM_F_REST[numSh];
        sh1Props = new Array(3).fill(null).flatMap(
          (_, k) => [0, 1, 2].map((_2, d) => \`f_rest_\${k + d * num_f_rest / 3}\`)
        );
        sh2Props = new Array(5).fill(null).flatMap(
          (_, k) => [0, 1, 2].map((_2, d) => \`f_rest_\${3 + k + d * num_f_rest / 3}\`)
        );
        sh3Props = new Array(7).fill(null).flatMap(
          (_, k) => [0, 1, 2].map((_2, d) => \`f_rest_\${8 + k + d * num_f_rest / 3}\`)
        );
        sh1 = numSh >= 1 ? new Float32Array(3 * 3) : void 0;
        sh2 = numSh >= 2 ? new Float32Array(5 * 3) : void 0;
        sh3 = numSh >= 3 ? new Float32Array(7 * 3) : void 0;
      }
      function ssShCallback(index, item) {
        if (!sh1) {
          throw new Error("Missing sh1");
        }
        for (const [i2, key] of sh1Props.entries()) {
          sh1[i2] = item[key] * 8 / 255 - 4;
        }
        if (sh2) {
          for (const [i2, key] of sh2Props.entries()) {
            sh2[i2] = item[key] * 8 / 255 - 4;
          }
        }
        if (sh3) {
          for (const [i2, key] of sh3Props.entries()) {
            sh3[i2] = item[key] * 8 / 255 - 4;
          }
        }
        shCallback == null ? void 0 : shCallback(index, sh1, sh2, sh3);
      }
      function initSuperSplat(element) {
        const {
          min_x,
          min_y,
          min_z,
          max_x,
          max_y,
          max_z,
          min_scale_x,
          min_scale_y,
          min_scale_z,
          max_scale_x,
          max_scale_y,
          max_scale_z
        } = element.properties;
        if (!min_x || !min_y || !min_z || !max_x || !max_y || !max_z || !min_scale_x || !min_scale_y || !min_scale_z || !max_scale_x || !max_scale_y || !max_scale_z) {
          throw new Error("Missing PLY chunk properties");
        }
        isSuperSplat = true;
        return (index, item) => {
          const {
            min_x: min_x2,
            min_y: min_y2,
            min_z: min_z2,
            max_x: max_x2,
            max_y: max_y2,
            max_z: max_z2,
            min_scale_x: min_scale_x2,
            min_scale_y: min_scale_y2,
            min_scale_z: min_scale_z2,
            max_scale_x: max_scale_x2,
            max_scale_y: max_scale_y2,
            max_scale_z: max_scale_z2,
            min_r,
            min_g,
            min_b,
            max_r,
            max_g,
            max_b
          } = item;
          ssChunks.push({
            min_x: min_x2,
            min_y: min_y2,
            min_z: min_z2,
            max_x: max_x2,
            max_y: max_y2,
            max_z: max_z2,
            min_scale_x: min_scale_x2,
            min_scale_y: min_scale_y2,
            min_scale_z: min_scale_z2,
            max_scale_x: max_scale_x2,
            max_scale_y: max_scale_y2,
            max_scale_z: max_scale_z2,
            min_r,
            min_g,
            min_b,
            max_r,
            max_g,
            max_b
          });
        };
      }
      function decodeSuperSplat(element) {
        if (shCallback && element.name === "sh") {
          numSh = getNumSh(element.properties);
          prepareSh();
          return ssShCallback;
        }
        if (element.name !== "vertex") {
          return null;
        }
        const { packed_position, packed_rotation, packed_scale, packed_color } = element.properties;
        if (!packed_position || !packed_rotation || !packed_scale || !packed_color) {
          throw new Error(
            "Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color"
          );
        }
        const SQRT2 = Math.sqrt(2);
        return (index, item) => {
          const chunk = ssChunks[index >>> 8];
          if (chunk == null) {
            throw new Error("Missing PLY chunk");
          }
          const {
            min_x,
            min_y,
            min_z,
            max_x,
            max_y,
            max_z,
            min_scale_x,
            min_scale_y,
            min_scale_z,
            max_scale_x,
            max_scale_y,
            max_scale_z,
            min_r,
            min_g,
            min_b,
            max_r,
            max_g,
            max_b
          } = chunk;
          const { packed_position: packed_position2, packed_rotation: packed_rotation2, packed_scale: packed_scale2, packed_color: packed_color2 } = item;
          const x2 = (packed_position2 >>> 21 & 2047) / 2047 * (max_x - min_x) + min_x;
          const y = (packed_position2 >>> 11 & 1023) / 1023 * (max_y - min_y) + min_y;
          const z = (packed_position2 & 2047) / 2047 * (max_z - min_z) + min_z;
          const r0 = ((packed_rotation2 >>> 20 & 1023) / 1023 - 0.5) * SQRT2;
          const r1 = ((packed_rotation2 >>> 10 & 1023) / 1023 - 0.5) * SQRT2;
          const r2 = ((packed_rotation2 & 1023) / 1023 - 0.5) * SQRT2;
          const rr = Math.sqrt(Math.max(0, 1 - r0 * r0 - r1 * r1 - r2 * r2));
          const rOrder = packed_rotation2 >>> 30;
          const quatX = rOrder === 0 ? r0 : rOrder === 1 ? rr : r1;
          const quatY = rOrder <= 1 ? r1 : rOrder === 2 ? rr : r2;
          const quatZ = rOrder <= 2 ? r2 : rr;
          const quatW = rOrder === 0 ? rr : r0;
          const scaleX = Math.exp(
            (packed_scale2 >>> 21 & 2047) / 2047 * (max_scale_x - min_scale_x) + min_scale_x
          );
          const scaleY = Math.exp(
            (packed_scale2 >>> 11 & 1023) / 1023 * (max_scale_y - min_scale_y) + min_scale_y
          );
          const scaleZ = Math.exp(
            (packed_scale2 & 2047) / 2047 * (max_scale_z - min_scale_z) + min_scale_z
          );
          const r = (packed_color2 >>> 24 & 255) / 255 * ((max_r ?? 1) - (min_r ?? 0)) + (min_r ?? 0);
          const g = (packed_color2 >>> 16 & 255) / 255 * ((max_g ?? 1) - (min_g ?? 0)) + (min_g ?? 0);
          const b = (packed_color2 >>> 8 & 255) / 255 * ((max_b ?? 1) - (min_b ?? 0)) + (min_b ?? 0);
          const opacity = (packed_color2 & 255) / 255;
          splatCallback(
            index,
            x2,
            y,
            z,
            scaleX,
            scaleY,
            scaleZ,
            quatX,
            quatY,
            quatZ,
            quatW,
            opacity,
            r,
            g,
            b
          );
        };
      }
      const elementCallback = (element) => {
        if (element.name === "chunk") {
          return initSuperSplat(element);
        }
        if (isSuperSplat) {
          return decodeSuperSplat(element);
        }
        if (element.name !== "vertex") {
          return null;
        }
        const {
          x: x2,
          y,
          z,
          scale_0,
          scale_1,
          scale_2,
          rot_0,
          rot_1,
          rot_2,
          rot_3,
          opacity,
          f_dc_0,
          f_dc_1,
          f_dc_2,
          red,
          green,
          blue,
          alpha
        } = element.properties;
        if (!x2 || !y || !z) {
          throw new Error("Missing PLY properties: x, y, z");
        }
        const hasScales = scale_0 && scale_1 && scale_2;
        const hasRots = rot_0 && rot_1 && rot_2 && rot_3;
        const alphaDiv = alpha != null ? FIELD_SCALE[alpha.type] : 1;
        const redDiv = red != null ? FIELD_SCALE[red.type] : 1;
        const greenDiv = green != null ? FIELD_SCALE[green.type] : 1;
        const blueDiv = blue != null ? FIELD_SCALE[blue.type] : 1;
        numSh = getNumSh(element.properties);
        prepareSh();
        return (index, item) => {
          const scaleX = hasScales ? Math.exp(item.scale_0) : _PlyReader.defaultPointScale;
          const scaleY = hasScales ? Math.exp(item.scale_1) : _PlyReader.defaultPointScale;
          const scaleZ = hasScales ? Math.exp(item.scale_2) : _PlyReader.defaultPointScale;
          const quatX = hasRots ? item.rot_1 : 0;
          const quatY = hasRots ? item.rot_2 : 0;
          const quatZ = hasRots ? item.rot_3 : 0;
          const quatW = hasRots ? item.rot_0 : 1;
          const op = opacity != null ? 1 / (1 + Math.exp(-item.opacity)) : alpha != null ? item.alpha / alphaDiv : 1;
          const r = f_dc_0 != null ? item.f_dc_0 * SH_C0$1 + 0.5 : red != null ? item.red / redDiv : 1;
          const g = f_dc_1 != null ? item.f_dc_1 * SH_C0$1 + 0.5 : green != null ? item.green / greenDiv : 1;
          const b = f_dc_2 != null ? item.f_dc_2 * SH_C0$1 + 0.5 : blue != null ? item.blue / blueDiv : 1;
          splatCallback(
            index,
            item.x,
            item.y,
            item.z,
            scaleX,
            scaleY,
            scaleZ,
            quatX,
            quatY,
            quatZ,
            quatW,
            op,
            r,
            g,
            b
          );
          if (shCallback && sh1) {
            if (sh1) {
              for (const [i2, key] of sh1Props.entries()) {
                sh1[i2] = item[key];
              }
            }
            if (sh2) {
              for (const [i2, key] of sh2Props.entries()) {
                sh2[i2] = item[key];
              }
            }
            if (sh3) {
              for (const [i2, key] of sh3Props.entries()) {
                sh3[i2] = item[key];
              }
            }
            shCallback(index, sh1, sh2, sh3);
          }
        };
      };
      this.parseData(elementCallback);
    }
    // Inject RGBA values into original PLY file, which can be used to modify
    // the color/opacity of the Gsplats and write out the modified PLY file.
    injectRgba(rgba) {
      let offset = 0;
      const data = this.data;
      if (data == null) {
        throw new Error("No parsed data");
      }
      if (rgba.length !== this.numSplats * 4) {
        throw new Error("Invalid RGBA array length");
      }
      for (const elementName in this.elements) {
        const element = this.elements[elementName];
        const { count, properties } = element;
        const parsers = [];
        let rgbaOffset = 0;
        const isVertex = elementName === "vertex";
        if (isVertex) {
          for (const name of ["opacity", "f_dc_0", "f_dc_1", "f_dc_2"]) {
            if (!properties[name] || properties[name].type !== "float") {
              throw new Error(\`Can't injectRgba due to property: \${name}\`);
            }
          }
        }
        for (const [propertyName, property] of Object.entries(properties)) {
          if (!property.isList) {
            if (isVertex) {
              if (propertyName === "f_dc_0" || propertyName === "f_dc_1" || propertyName === "f_dc_2") {
                const component = Number.parseInt(
                  propertyName.slice("f_dc_".length)
                );
                parsers.push(() => {
                  const value = (rgba[rgbaOffset + component] / 255 - 0.5) / SH_C0$1;
                  SET_FIELD[property.type](
                    data,
                    offset,
                    this.littleEndian,
                    value
                  );
                });
              } else if (propertyName === "opacity") {
                parsers.push(() => {
                  const value = Math.max(
                    -100,
                    Math.min(
                      100,
                      -Math.log(1 / (rgba[rgbaOffset + 3] / 255) - 1)
                    )
                  );
                  SET_FIELD[property.type](
                    data,
                    offset,
                    this.littleEndian,
                    value
                  );
                });
              }
            }
            parsers.push(() => {
              offset += FIELD_BYTES[property.type];
            });
          } else {
            parsers.push(() => {
              const length = PARSE_FIELD[property.countType](
                data,
                offset,
                this.littleEndian
              );
              offset += FIELD_BYTES[property.countType];
              offset += length * FIELD_BYTES[property.type];
            });
          }
        }
        for (let index = 0; index < count; index++) {
          for (const parser of parsers) {
            parser();
          }
          if (isVertex) {
            rgbaOffset += 4;
          }
        }
      }
    }
  };
  _PlyReader.defaultPointScale = 1e-3;
  let PlyReader = _PlyReader;
  const SH_C0$1 = 0.28209479177387814;
  const PARSE_FIELD = {
    char: (data, offset, littleEndian) => {
      return data.getInt8(offset);
    },
    uchar: (data, offset, littleEndian) => {
      return data.getUint8(offset);
    },
    short: (data, offset, littleEndian) => {
      return data.getInt16(offset, littleEndian);
    },
    ushort: (data, offset, littleEndian) => {
      return data.getUint16(offset, littleEndian);
    },
    int: (data, offset, littleEndian) => {
      return data.getInt32(offset, littleEndian);
    },
    uint: (data, offset, littleEndian) => {
      return data.getUint32(offset, littleEndian);
    },
    float: (data, offset, littleEndian) => {
      return data.getFloat32(offset, littleEndian);
    },
    double: (data, offset, littleEndian) => {
      return data.getFloat64(offset, littleEndian);
    }
  };
  const SET_FIELD = {
    char: (data, offset, littleEndian, value) => {
      data.setInt8(offset, value);
    },
    uchar: (data, offset, littleEndian, value) => {
      data.setUint8(offset, value);
    },
    short: (data, offset, littleEndian, value) => {
      data.setInt16(offset, value, littleEndian);
    },
    ushort: (data, offset, littleEndian, value) => {
      data.setUint16(offset, value, littleEndian);
    },
    int: (data, offset, littleEndian, value) => {
      data.setInt32(offset, value, littleEndian);
    },
    uint: (data, offset, littleEndian, value) => {
      data.setUint32(offset, value, littleEndian);
    },
    float: (data, offset, littleEndian, value) => {
      data.setFloat32(offset, value, littleEndian);
    },
    double: (data, offset, littleEndian, value) => {
      data.setFloat64(offset, value, littleEndian);
    }
  };
  const FIELD_BYTES = {
    char: 1,
    uchar: 1,
    short: 2,
    ushort: 2,
    int: 4,
    uint: 4,
    float: 4,
    double: 8
  };
  const FIELD_SCALE = {
    char: 127,
    uchar: 255,
    short: 32767,
    ushort: 65535,
    int: 2147483647,
    uint: 4294967295,
    float: 1,
    double: 1
  };
  const NUM_F_REST_TO_NUM_SH = {
    0: 0,
    9: 1,
    24: 2,
    45: 3
  };
  const NUM_SH_TO_NUM_F_REST = {
    0: 0,
    1: 9,
    2: 24,
    3: 45
  };
  function getNumSh(properties) {
    let num_f_rest = 0;
    while (properties[\`f_rest_\${num_f_rest}\`]) {
      num_f_rest += 1;
    }
    const numSh = NUM_F_REST_TO_NUM_SH[num_f_rest];
    if (numSh == null) {
      throw new Error(\`Unsupported number of SH coefficients: \${num_f_rest}\`);
    }
    return numSh;
  }
  var SplatFileType = /* @__PURE__ */ ((SplatFileType2) => {
    SplatFileType2["PLY"] = "ply";
    SplatFileType2["SPZ"] = "spz";
    SplatFileType2["SPLAT"] = "splat";
    SplatFileType2["KSPLAT"] = "ksplat";
    SplatFileType2["PCSOGS"] = "pcsogs";
    SplatFileType2["PCSOGSZIP"] = "pcsogszip";
    return SplatFileType2;
  })(SplatFileType || {});
  function getSplatFileType(fileBytes) {
    const view = new DataView(fileBytes.buffer);
    if ((view.getUint32(0, true) & 16777215) === 7957616) {
      return "ply";
    }
    if ((view.getUint32(0, true) & 16777215) === 559903) {
      const header = decompressPartialGzip(fileBytes, 4);
      const gView = new DataView(header.buffer);
      if (gView.getUint32(0, true) === 1347635022) {
        return "spz";
      }
      return void 0;
    }
    if (view.getUint32(0, true) === 67324752) {
      if (tryPcSogsZip(fileBytes)) {
        return "pcsogszip";
      }
      return void 0;
    }
    return void 0;
  }
  function getFileExtension(pathOrUrl) {
    const noTrailing = pathOrUrl.split(/[?#]/, 1)[0];
    const lastSlash = Math.max(
      noTrailing.lastIndexOf("/"),
      noTrailing.lastIndexOf("\\\\")
    );
    const filename = noTrailing.slice(lastSlash + 1);
    const lastDot = filename.lastIndexOf(".");
    if (lastDot <= 0 || lastDot === filename.length - 1) {
      return "";
    }
    return filename.slice(lastDot + 1).toLowerCase();
  }
  function getSplatFileTypeFromPath(pathOrUrl) {
    const extension = getFileExtension(pathOrUrl);
    if (extension === "ply") {
      return "ply";
    }
    if (extension === "spz") {
      return "spz";
    }
    if (extension === "splat") {
      return "splat";
    }
    if (extension === "ksplat") {
      return "ksplat";
    }
    return void 0;
  }
  function tryPcSogs(input) {
    try {
      let text;
      if (typeof input === "string") {
        text = input;
      } else {
        const fileBytes = input instanceof ArrayBuffer ? new Uint8Array(input) : input;
        if (fileBytes.length > 65536) {
          return void 0;
        }
        text = new TextDecoder().decode(fileBytes);
      }
      const json = JSON.parse(text);
      if (!json || typeof json !== "object" || Array.isArray(json)) {
        return void 0;
      }
      for (const key of ["means", "scales", "quats", "sh0"]) {
        if (!json[key] || typeof json[key] !== "object" || Array.isArray(json[key])) {
          return void 0;
        }
        if (!json[key].shape || !json[key].files) {
          return void 0;
        }
        if (key !== "quats" && (!json[key].mins || !json[key].maxs)) {
          return void 0;
        }
      }
      return json;
    } catch {
      return void 0;
    }
  }
  function tryPcSogsZip(input) {
    try {
      const fileBytes = input instanceof ArrayBuffer ? new Uint8Array(input) : input;
      let metaFilename = null;
      const unzipped = unzipSync(fileBytes, {
        filter: ({ name }) => {
          const filename = name.split(/[\\\\/]/).pop();
          if (filename === "meta.json") {
            metaFilename = name;
            return true;
          }
          return false;
        }
      });
      if (!metaFilename) {
        return void 0;
      }
      const json = tryPcSogs(unzipped[metaFilename]);
      if (!json) {
        return void 0;
      }
      return { name: metaFilename, json };
    } catch {
      return void 0;
    }
  }
  class SplatData {
    constructor({ maxSplats = 1 } = {}) {
      this.numSplats = 0;
      this.maxSplats = getTextureSize(maxSplats).maxSplats;
      this.centers = new Float32Array(this.maxSplats * 3);
      this.scales = new Float32Array(this.maxSplats * 3);
      this.quaternions = new Float32Array(this.maxSplats * 4);
      this.opacities = new Float32Array(this.maxSplats);
      this.colors = new Float32Array(this.maxSplats * 3);
    }
    pushSplat() {
      const index = this.numSplats;
      this.ensureIndex(index);
      this.numSplats += 1;
      return index;
    }
    unpushSplat(index) {
      if (index === this.numSplats - 1) {
        this.numSplats -= 1;
      } else {
        throw new Error("Cannot unpush splat from non-last position");
      }
    }
    ensureCapacity(numSplats) {
      if (numSplats > this.maxSplats) {
        const targetSplats = Math.max(numSplats, this.maxSplats * 2);
        const newCenters = new Float32Array(targetSplats * 3);
        const newScales = new Float32Array(targetSplats * 3);
        const newQuaternions = new Float32Array(targetSplats * 4);
        const newOpacities = new Float32Array(targetSplats);
        const newColors = new Float32Array(targetSplats * 3);
        newCenters.set(this.centers);
        newScales.set(this.scales);
        newQuaternions.set(this.quaternions);
        newOpacities.set(this.opacities);
        newColors.set(this.colors);
        this.centers = newCenters;
        this.scales = newScales;
        this.quaternions = newQuaternions;
        this.opacities = newOpacities;
        this.colors = newColors;
        if (this.sh1) {
          const newSh1 = new Float32Array(targetSplats * 9);
          newSh1.set(this.sh1);
          this.sh1 = newSh1;
        }
        if (this.sh2) {
          const newSh2 = new Float32Array(targetSplats * 15);
          newSh2.set(this.sh2);
          this.sh2 = newSh2;
        }
        if (this.sh3) {
          const newSh3 = new Float32Array(targetSplats * 21);
          newSh3.set(this.sh3);
          this.sh3 = newSh3;
        }
        this.maxSplats = targetSplats;
      }
    }
    ensureIndex(index) {
      this.ensureCapacity(index + 1);
    }
    setCenter(index, x2, y, z) {
      this.centers[index * 3] = x2;
      this.centers[index * 3 + 1] = y;
      this.centers[index * 3 + 2] = z;
    }
    setScale(index, scaleX, scaleY, scaleZ) {
      this.scales[index * 3] = scaleX;
      this.scales[index * 3 + 1] = scaleY;
      this.scales[index * 3 + 2] = scaleZ;
    }
    setQuaternion(index, x2, y, z, w) {
      this.quaternions[index * 4] = x2;
      this.quaternions[index * 4 + 1] = y;
      this.quaternions[index * 4 + 2] = z;
      this.quaternions[index * 4 + 3] = w;
    }
    setOpacity(index, opacity) {
      this.opacities[index] = opacity;
    }
    setColor(index, r, g, b) {
      this.colors[index * 3] = r;
      this.colors[index * 3 + 1] = g;
      this.colors[index * 3 + 2] = b;
    }
    setSh1(index, sh1) {
      if (!this.sh1) {
        this.sh1 = new Float32Array(this.maxSplats * 9);
      }
      for (let j = 0; j < 9; ++j) {
        this.sh1[index * 9 + j] = sh1[j];
      }
    }
    setSh2(index, sh2) {
      if (!this.sh2) {
        this.sh2 = new Float32Array(this.maxSplats * 15);
      }
      for (let j = 0; j < 15; ++j) {
        this.sh2[index * 15 + j] = sh2[j];
      }
    }
    setSh3(index, sh3) {
      if (!this.sh3) {
        this.sh3 = new Float32Array(this.maxSplats * 21);
      }
      for (let j = 0; j < 21; ++j) {
        this.sh3[index * 21 + j] = sh3[j];
      }
    }
  }
  async function unpackPcSogs(json, extraFiles, splatEncoding) {
    if (json.quats.encoding !== "quaternion_packed") {
      throw new Error("Unsupported quaternion encoding");
    }
    const numSplats = json.means.shape[0];
    const maxSplats = computeMaxSplats(numSplats);
    const packedArray = new Uint32Array(maxSplats * 4);
    const extra = {};
    const meansPromise = Promise.all([
      decodeImageRgba(extraFiles[json.means.files[0]]),
      decodeImageRgba(extraFiles[json.means.files[1]])
    ]).then((means) => {
      for (let i2 = 0; i2 < numSplats; ++i2) {
        const i4 = i2 * 4;
        const fx = (means[0][i4 + 0] + (means[1][i4 + 0] << 8)) / 65535;
        const fy = (means[0][i4 + 1] + (means[1][i4 + 1] << 8)) / 65535;
        const fz = (means[0][i4 + 2] + (means[1][i4 + 2] << 8)) / 65535;
        let x2 = json.means.mins[0] + (json.means.maxs[0] - json.means.mins[0]) * fx;
        let y = json.means.mins[1] + (json.means.maxs[1] - json.means.mins[1]) * fy;
        let z = json.means.mins[2] + (json.means.maxs[2] - json.means.mins[2]) * fz;
        x2 = Math.sign(x2) * (Math.exp(Math.abs(x2)) - 1);
        y = Math.sign(y) * (Math.exp(Math.abs(y)) - 1);
        z = Math.sign(z) * (Math.exp(Math.abs(z)) - 1);
        setPackedSplatCenter(packedArray, i2, x2, y, z);
      }
    });
    const scalesPromise = decodeImageRgba(extraFiles[json.scales.files[0]]).then(
      (scales) => {
        for (let i2 = 0; i2 < numSplats; ++i2) {
          const i4 = i2 * 4;
          const fx = scales[i4 + 0] / 255;
          const fy = scales[i4 + 1] / 255;
          const fz = scales[i4 + 2] / 255;
          const x2 = json.scales.mins[0] + (json.scales.maxs[0] - json.scales.mins[0]) * fx;
          const y = json.scales.mins[1] + (json.scales.maxs[1] - json.scales.mins[1]) * fy;
          const z = json.scales.mins[2] + (json.scales.maxs[2] - json.scales.mins[2]) * fz;
          setPackedSplatScales(
            packedArray,
            i2,
            Math.exp(x2),
            Math.exp(y),
            Math.exp(z),
            splatEncoding
          );
        }
      }
    );
    const quatsPromise = decodeImageRgba(extraFiles[json.quats.files[0]]).then(
      (quats) => {
        const SQRT2 = Math.sqrt(2);
        for (let i2 = 0; i2 < numSplats; ++i2) {
          const i4 = i2 * 4;
          const r0 = (quats[i4 + 0] / 255 - 0.5) * SQRT2;
          const r1 = (quats[i4 + 1] / 255 - 0.5) * SQRT2;
          const r2 = (quats[i4 + 2] / 255 - 0.5) * SQRT2;
          const rr = Math.sqrt(Math.max(0, 1 - r0 * r0 - r1 * r1 - r2 * r2));
          const rOrder = quats[i4 + 3] - 252;
          const quatX = rOrder === 0 ? r0 : rOrder === 1 ? rr : r1;
          const quatY = rOrder <= 1 ? r1 : rOrder === 2 ? rr : r2;
          const quatZ = rOrder <= 2 ? r2 : rr;
          const quatW = rOrder === 0 ? rr : r0;
          setPackedSplatQuat(packedArray, i2, quatX, quatY, quatZ, quatW);
        }
      }
    );
    const sh0Promise = decodeImageRgba(extraFiles[json.sh0.files[0]]).then(
      (sh0) => {
        const SH_C02 = 0.28209479177387814;
        for (let i2 = 0; i2 < numSplats; ++i2) {
          const i4 = i2 * 4;
          const f0 = sh0[i4 + 0] / 255;
          const f1 = sh0[i4 + 1] / 255;
          const f2 = sh0[i4 + 2] / 255;
          const f3 = sh0[i4 + 3] / 255;
          const dc0 = json.sh0.mins[0] + (json.sh0.maxs[0] - json.sh0.mins[0]) * f0;
          const dc1 = json.sh0.mins[1] + (json.sh0.maxs[1] - json.sh0.mins[1]) * f1;
          const dc2 = json.sh0.mins[2] + (json.sh0.maxs[2] - json.sh0.mins[2]) * f2;
          const opa = json.sh0.mins[3] + (json.sh0.maxs[3] - json.sh0.mins[3]) * f3;
          const r = SH_C02 * dc0 + 0.5;
          const g = SH_C02 * dc1 + 0.5;
          const b = SH_C02 * dc2 + 0.5;
          const a = 1 / (1 + Math.exp(-opa));
          setPackedSplatRgba(packedArray, i2, r, g, b, a, splatEncoding);
        }
      }
    );
    const promises = [meansPromise, scalesPromise, quatsPromise, sh0Promise];
    if (json.shN) {
      const useSH3 = json.shN.shape[1] >= 48 - 3;
      const useSH2 = json.shN.shape[1] >= 27 - 3;
      const useSH1 = json.shN.shape[1] >= 12 - 3;
      if (useSH1) extra.sh1 = new Uint32Array(numSplats * 2);
      if (useSH2) extra.sh2 = new Uint32Array(numSplats * 4);
      if (useSH3) extra.sh3 = new Uint32Array(numSplats * 4);
      const sh1 = new Float32Array(9);
      const sh2 = new Float32Array(15);
      const sh3 = new Float32Array(21);
      const shN = json.shN;
      const shNPromise = Promise.all([
        decodeImage(extraFiles[json.shN.files[0]]),
        decodeImage(extraFiles[json.shN.files[1]])
      ]).then(([centroids, labels]) => {
        for (let i2 = 0; i2 < numSplats; ++i2) {
          const i4 = i2 * 4;
          const label = labels.rgba[i4 + 0] + (labels.rgba[i4 + 1] << 8);
          const col = (label & 63) * 15;
          const row = label >>> 6;
          const offset = row * centroids.width + col;
          for (let d = 0; d < 3; ++d) {
            if (useSH1) {
              for (let k = 0; k < 3; ++k) {
                sh1[k * 3 + d] = shN.mins + (shN.maxs - shN.mins) * centroids.rgba[(offset + k) * 4 + d] / 255;
              }
            }
            if (useSH2) {
              for (let k = 0; k < 5; ++k) {
                sh2[k * 3 + d] = shN.mins + (shN.maxs - shN.mins) * centroids.rgba[(offset + 3 + k) * 4 + d] / 255;
              }
            }
            if (useSH3) {
              for (let k = 0; k < 7; ++k) {
                sh3[k * 3 + d] = shN.mins + (shN.maxs - shN.mins) * centroids.rgba[(offset + 8 + k) * 4 + d] / 255;
              }
            }
          }
          if (useSH1)
            encodeSh1Rgb(extra.sh1, i2, sh1, splatEncoding);
          if (useSH2)
            encodeSh2Rgb(extra.sh2, i2, sh2, splatEncoding);
          if (useSH3)
            encodeSh3Rgb(extra.sh3, i2, sh3, splatEncoding);
        }
      });
      promises.push(shNPromise);
    }
    await Promise.all(promises);
    return { packedArray, numSplats, extra };
  }
  let offscreenGlContext = null;
  async function decodeImage(fileBytes) {
    if (!offscreenGlContext) {
      const canvas = new OffscreenCanvas(1, 1);
      offscreenGlContext = canvas.getContext("webgl2");
      if (!offscreenGlContext) {
        throw new Error("Failed to create WebGL2 context");
      }
    }
    const imageBlob = new Blob([fileBytes]);
    const bitmap = await createImageBitmap(imageBlob, {
      premultiplyAlpha: "none"
    });
    const gl = offscreenGlContext;
    const texture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, texture);
    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, bitmap);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    const framebuffer = gl.createFramebuffer();
    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);
    gl.framebufferTexture2D(
      gl.FRAMEBUFFER,
      gl.COLOR_ATTACHMENT0,
      gl.TEXTURE_2D,
      texture,
      0
    );
    const data = new Uint8Array(bitmap.width * bitmap.height * 4);
    gl.readPixels(
      0,
      0,
      bitmap.width,
      bitmap.height,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      data
    );
    gl.deleteTexture(texture);
    gl.deleteFramebuffer(framebuffer);
    return { rgba: data, width: bitmap.width, height: bitmap.height };
  }
  async function decodeImageRgba(fileBytes) {
    const { rgba } = await decodeImage(fileBytes);
    return rgba;
  }
  async function unpackPcSogsZip(fileBytes, splatEncoding) {
    var _a2;
    const nameJson = tryPcSogsZip(fileBytes);
    if (!nameJson) {
      throw new Error("Invalid PC SOGS zip file");
    }
    const { name, json } = nameJson;
    const lastSlash = name.lastIndexOf("/");
    const lastBackslash = name.lastIndexOf("\\\\");
    const prefix = name.slice(0, Math.max(lastSlash, lastBackslash) + 1);
    const fileMap = /* @__PURE__ */ new Map();
    const refFiles = [
      ...json.means.files,
      ...json.scales.files,
      ...json.quats.files,
      ...json.sh0.files,
      ...((_a2 = json.shN) == null ? void 0 : _a2.files) ?? []
    ];
    for (const file of refFiles) {
      fileMap.set(prefix + file, file);
    }
    const unzipped = await new Promise(
      (resolve, reject) => {
        unzip(
          fileBytes,
          {
            filter: ({ name: name2 }) => {
              return fileMap.has(name2);
            }
          },
          (err2, files) => {
            if (err2) {
              reject(err2);
            } else {
              resolve(files);
            }
          }
        );
      }
    );
    const extraFiles = {};
    for (const [full, name2] of fileMap.entries()) {
      extraFiles[name2] = unzipped[full];
    }
    return await unpackPcSogs(json, extraFiles, splatEncoding);
  }
  class SpzReader {
    constructor({ fileBytes }) {
      this.fileBytes = fileBytes instanceof ArrayBuffer ? new Uint8Array(fileBytes) : fileBytes;
      this.reader = new GunzipReader({ fileBytes: this.fileBytes });
      const header = new DataView(this.reader.read(16).buffer);
      if (header.getUint32(0, true) !== 1347635022) {
        throw new Error("Invalid SPZ file");
      }
      this.version = header.getUint32(4, true);
      if (this.version < 1 || this.version > 2) {
        throw new Error(\`Unsupported SPZ version: \${this.version}\`);
      }
      this.numSplats = header.getUint32(8, true);
      this.shDegree = header.getUint8(12);
      this.fractionalBits = header.getUint8(13);
      this.flags = header.getUint8(14);
      this.flagAntiAlias = (this.flags & 1) !== 0;
      this.reserved = header.getUint8(15);
      this.parsed = false;
    }
    parseSplats(centerCallback, alphaCallback, rgbCallback, scalesCallback, quatCallback, shCallback) {
      if (this.parsed) {
        throw new Error("SPZ file already parsed");
      }
      this.parsed = true;
      if (this.version === 1) {
        const centerBytes = this.reader.read(this.numSplats * 3 * 2);
        const centerUint16 = new Uint16Array(centerBytes.buffer);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i3 = i2 * 3;
          const x2 = fromHalf(centerUint16[i3]);
          const y = fromHalf(centerUint16[i3 + 1]);
          const z = fromHalf(centerUint16[i3 + 2]);
          centerCallback == null ? void 0 : centerCallback(i2, x2, y, z);
        }
      } else if (this.version === 2) {
        const fixed = 1 << this.fractionalBits;
        const centerBytes = this.reader.read(this.numSplats * 3 * 3);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i9 = i2 * 9;
          const x2 = ((centerBytes[i9 + 2] << 24 | centerBytes[i9 + 1] << 16 | centerBytes[i9] << 8) >> 8) / fixed;
          const y = ((centerBytes[i9 + 5] << 24 | centerBytes[i9 + 4] << 16 | centerBytes[i9 + 3] << 8) >> 8) / fixed;
          const z = ((centerBytes[i9 + 8] << 24 | centerBytes[i9 + 7] << 16 | centerBytes[i9 + 6] << 8) >> 8) / fixed;
          centerCallback == null ? void 0 : centerCallback(i2, x2, y, z);
        }
      } else {
        throw new Error("Unreachable");
      }
      {
        const bytes = this.reader.read(this.numSplats);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          alphaCallback == null ? void 0 : alphaCallback(i2, bytes[i2] / 255);
        }
      }
      {
        const rgbBytes = this.reader.read(this.numSplats * 3);
        const scale = SH_C0 / 0.15;
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i3 = i2 * 3;
          const r = (rgbBytes[i3] / 255 - 0.5) * scale + 0.5;
          const g = (rgbBytes[i3 + 1] / 255 - 0.5) * scale + 0.5;
          const b = (rgbBytes[i3 + 2] / 255 - 0.5) * scale + 0.5;
          rgbCallback == null ? void 0 : rgbCallback(i2, r, g, b);
        }
      }
      {
        const scalesBytes = this.reader.read(this.numSplats * 3);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i3 = i2 * 3;
          const scaleX = Math.exp(scalesBytes[i3] / 16 - 10);
          const scaleY = Math.exp(scalesBytes[i3 + 1] / 16 - 10);
          const scaleZ = Math.exp(scalesBytes[i3 + 2] / 16 - 10);
          scalesCallback == null ? void 0 : scalesCallback(i2, scaleX, scaleY, scaleZ);
        }
      }
      {
        const quatBytes = this.reader.read(this.numSplats * 3);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i3 = i2 * 3;
          const quatX = quatBytes[i3] / 127.5 - 1;
          const quatY = quatBytes[i3 + 1] / 127.5 - 1;
          const quatZ = quatBytes[i3 + 2] / 127.5 - 1;
          const quatW = Math.sqrt(
            Math.max(0, 1 - quatX * quatX - quatY * quatY - quatZ * quatZ)
          );
          quatCallback == null ? void 0 : quatCallback(i2, quatX, quatY, quatZ, quatW);
        }
      }
      if (shCallback && this.shDegree >= 1) {
        const sh1 = new Float32Array(3 * 3);
        const sh2 = this.shDegree >= 2 ? new Float32Array(5 * 3) : void 0;
        const sh3 = this.shDegree >= 3 ? new Float32Array(7 * 3) : void 0;
        const shBytes = this.reader.read(
          this.numSplats * SH_DEGREE_TO_VECS[this.shDegree] * 3
        );
        let offset = 0;
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          for (let j = 0; j < 9; ++j) {
            sh1[j] = (shBytes[offset + j] - 128) / 128;
          }
          offset += 9;
          if (sh2) {
            for (let j = 0; j < 15; ++j) {
              sh2[j] = (shBytes[offset + j] - 128) / 128;
            }
            offset += 15;
          }
          if (sh3) {
            for (let j = 0; j < 21; ++j) {
              sh3[j] = (shBytes[offset + j] - 128) / 128;
            }
            offset += 21;
          }
          shCallback == null ? void 0 : shCallback(i2, sh1, sh2, sh3);
        }
      }
    }
  }
  const SH_DEGREE_TO_VECS = { 1: 3, 2: 8, 3: 15 };
  const SH_C0 = 0.28209479177387814;
  const SPZ_MAGIC = 1347635022;
  const SPZ_VERSION = 2;
  const FLAG_ANTIALIASED = 1;
  class SpzWriter {
    constructor({
      numSplats,
      shDegree,
      fractionalBits = 12,
      flagAntiAlias = true
    }) {
      this.clippedCount = 0;
      const splatSize = 9 + 1 + 3 + 3 + 3 + (shDegree >= 1 ? 9 : 0) + (shDegree >= 2 ? 15 : 0) + (shDegree >= 3 ? 21 : 0);
      const bufferSize = 16 + numSplats * splatSize;
      this.buffer = new ArrayBuffer(bufferSize);
      this.view = new DataView(this.buffer);
      this.view.setUint32(0, SPZ_MAGIC, true);
      this.view.setUint32(4, SPZ_VERSION, true);
      this.view.setUint32(8, numSplats, true);
      this.view.setUint8(12, shDegree);
      this.view.setUint8(13, fractionalBits);
      this.view.setUint8(14, flagAntiAlias ? FLAG_ANTIALIASED : 0);
      this.view.setUint8(15, 0);
      this.numSplats = numSplats;
      this.shDegree = shDegree;
      this.fractionalBits = fractionalBits;
      this.fraction = 1 << fractionalBits;
      this.flagAntiAlias = flagAntiAlias;
    }
    setCenter(index, x2, y, z) {
      const xRounded = Math.round(x2 * this.fraction);
      const xInt = Math.max(-8388607, Math.min(8388607, xRounded));
      const yRounded = Math.round(y * this.fraction);
      const yInt = Math.max(-8388607, Math.min(8388607, yRounded));
      const zRounded = Math.round(z * this.fraction);
      const zInt = Math.max(-8388607, Math.min(8388607, zRounded));
      const clipped = xRounded !== xInt || yRounded !== yInt || zRounded !== zInt;
      if (clipped) {
        this.clippedCount += 1;
      }
      const i9 = index * 9;
      const base = 16 + i9;
      this.view.setUint8(base, xInt & 255);
      this.view.setUint8(base + 1, xInt >> 8 & 255);
      this.view.setUint8(base + 2, xInt >> 16 & 255);
      this.view.setUint8(base + 3, yInt & 255);
      this.view.setUint8(base + 4, yInt >> 8 & 255);
      this.view.setUint8(base + 5, yInt >> 16 & 255);
      this.view.setUint8(base + 6, zInt & 255);
      this.view.setUint8(base + 7, zInt >> 8 & 255);
      this.view.setUint8(base + 8, zInt >> 16 & 255);
    }
    setAlpha(index, alpha) {
      const base = 16 + this.numSplats * 9 + index;
      this.view.setUint8(
        base,
        Math.max(0, Math.min(255, Math.round(alpha * 255)))
      );
    }
    static scaleRgb(r) {
      const v = ((r - 0.5) / (SH_C0 / 0.15) + 0.5) * 255;
      return Math.max(0, Math.min(255, Math.round(v)));
    }
    setRgb(index, r, g, b) {
      const base = 16 + this.numSplats * 10 + index * 3;
      this.view.setUint8(base, SpzWriter.scaleRgb(r));
      this.view.setUint8(base + 1, SpzWriter.scaleRgb(g));
      this.view.setUint8(base + 2, SpzWriter.scaleRgb(b));
    }
    setScale(index, scaleX, scaleY, scaleZ) {
      const base = 16 + this.numSplats * 13 + index * 3;
      this.view.setUint8(
        base,
        Math.max(0, Math.min(255, Math.round((Math.log(scaleX) + 10) * 16)))
      );
      this.view.setUint8(
        base + 1,
        Math.max(0, Math.min(255, Math.round((Math.log(scaleY) + 10) * 16)))
      );
      this.view.setUint8(
        base + 2,
        Math.max(0, Math.min(255, Math.round((Math.log(scaleZ) + 10) * 16)))
      );
    }
    setQuat(index, quatX, quatY, quatZ, quatW) {
      const base = 16 + this.numSplats * 16 + index * 3;
      const quatNeg = quatW < 0;
      this.view.setUint8(
        base,
        Math.max(
          0,
          Math.min(255, Math.round(((quatNeg ? -quatX : quatX) + 1) * 127.5))
        )
      );
      this.view.setUint8(
        base + 1,
        Math.max(
          0,
          Math.min(255, Math.round(((quatNeg ? -quatY : quatY) + 1) * 127.5))
        )
      );
      this.view.setUint8(
        base + 2,
        Math.max(
          0,
          Math.min(255, Math.round(((quatNeg ? -quatZ : quatZ) + 1) * 127.5))
        )
      );
    }
    static quantizeSh(sh, bits2) {
      const value = Math.round(sh * 128) + 128;
      const bucketSize = 1 << 8 - bits2;
      const quantized = Math.floor((value + bucketSize / 2) / bucketSize) * bucketSize;
      return Math.max(0, Math.min(255, quantized));
    }
    setSh(index, sh1, sh2, sh3) {
      const shVecs = SH_DEGREE_TO_VECS[this.shDegree] || 0;
      const base1 = 16 + this.numSplats * 19 + index * shVecs * 3;
      for (let j = 0; j < 9; ++j) {
        this.view.setUint8(base1 + j, SpzWriter.quantizeSh(sh1[j], 5));
      }
      if (sh2) {
        const base2 = base1 + 9;
        for (let j = 0; j < 15; ++j) {
          this.view.setUint8(base2 + j, SpzWriter.quantizeSh(sh2[j], 4));
        }
        if (sh3) {
          const base3 = base2 + 15;
          for (let j = 0; j < 21; ++j) {
            this.view.setUint8(base3 + j, SpzWriter.quantizeSh(sh3[j], 4));
          }
        }
      }
    }
    async finalize() {
      const input = new Uint8Array(this.buffer);
      const stream = new ReadableStream({
        async start(controller) {
          controller.enqueue(input);
          controller.close();
        }
      });
      const compressed = stream.pipeThrough(new CompressionStream("gzip"));
      const response = new Response(compressed);
      const buffer = await response.arrayBuffer();
      console.log(
        "Compressed",
        input.length,
        "bytes to",
        buffer.byteLength,
        "bytes"
      );
      return new Uint8Array(buffer);
    }
  }
  async function transcodeSpz(input) {
    var _a2, _b2, _c;
    const splats = new SplatData();
    const {
      inputs,
      clipXyz,
      maxSh,
      fractionalBits = 12,
      opacityThreshold
    } = input;
    for (const input2 of inputs) {
      let transformPos = function(pos) {
        pos.multiplyScalar(scale);
        pos.applyQuaternion(quaternion);
        pos.add(translate);
        return pos;
      }, transformScales = function(scales) {
        scales.multiplyScalar(scale);
        return scales;
      }, transformQuaternion = function(quat) {
        quat.premultiply(quaternion);
        return quat;
      }, withinClip = function(p) {
        return !clip || clip.containsPoint(p);
      }, withinOpacity = function(opacity) {
        return opacityThreshold !== void 0 ? opacity >= opacityThreshold : true;
      };
      const scale = ((_a2 = input2.transform) == null ? void 0 : _a2.scale) ?? 1;
      const quaternion = new Quaternion().fromArray(
        ((_b2 = input2.transform) == null ? void 0 : _b2.quaternion) ?? [0, 0, 0, 1]
      );
      const translate = new Vector3().fromArray(
        ((_c = input2.transform) == null ? void 0 : _c.translate) ?? [0, 0, 0]
      );
      const clip = clipXyz ? new Box3(
        new Vector3().fromArray(clipXyz.min),
        new Vector3().fromArray(clipXyz.max)
      ) : void 0;
      let fileType = input2.fileType;
      if (!fileType) {
        fileType = getSplatFileType(input2.fileBytes);
        if (!fileType && input2.pathOrUrl) {
          fileType = getSplatFileTypeFromPath(input2.pathOrUrl);
        }
      }
      switch (fileType) {
        case SplatFileType.PLY: {
          const ply = new PlyReader({ fileBytes: input2.fileBytes });
          await ply.parseHeader();
          let lastIndex = null;
          ply.parseSplats(
            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {
              const center = transformPos(new Vector3(x2, y, z));
              if (withinClip(center) && withinOpacity(opacity)) {
                lastIndex = splats.pushSplat();
                splats.setCenter(lastIndex, center.x, center.y, center.z);
                const scales = transformScales(
                  new Vector3(scaleX, scaleY, scaleZ)
                );
                splats.setScale(lastIndex, scales.x, scales.y, scales.z);
                const quaternion2 = transformQuaternion(
                  new Quaternion(quatX, quatY, quatZ, quatW)
                );
                splats.setQuaternion(
                  lastIndex,
                  quaternion2.x,
                  quaternion2.y,
                  quaternion2.z,
                  quaternion2.w
                );
                splats.setOpacity(lastIndex, opacity);
                splats.setColor(lastIndex, r, g, b);
              } else {
                lastIndex = null;
              }
            },
            (index, sh1, sh2, sh3) => {
              if (sh1 && lastIndex !== null) {
                splats.setSh1(lastIndex, sh1);
              }
              if (sh2 && lastIndex !== null) {
                splats.setSh2(lastIndex, sh2);
              }
              if (sh3 && lastIndex !== null) {
                splats.setSh3(lastIndex, sh3);
              }
            }
          );
          break;
        }
        case SplatFileType.SPZ: {
          const spz2 = new SpzReader({ fileBytes: input2.fileBytes });
          const mapping = new Int32Array(spz2.numSplats);
          mapping.fill(-1);
          const centers = new Float32Array(spz2.numSplats * 3);
          const center = new Vector3();
          spz2.parseSplats(
            (index, x2, y, z) => {
              const center2 = transformPos(new Vector3(x2, y, z));
              centers[index * 3] = center2.x;
              centers[index * 3 + 1] = center2.y;
              centers[index * 3 + 2] = center2.z;
            },
            (index, alpha) => {
              center.fromArray(centers, index * 3);
              if (withinClip(center) && withinOpacity(alpha)) {
                mapping[index] = splats.pushSplat();
                splats.setCenter(mapping[index], center.x, center.y, center.z);
                splats.setOpacity(mapping[index], alpha);
              }
            },
            (index, r, g, b) => {
              if (mapping[index] >= 0) {
                splats.setColor(mapping[index], r, g, b);
              }
            },
            (index, scaleX, scaleY, scaleZ) => {
              if (mapping[index] >= 0) {
                const scales = transformScales(
                  new Vector3(scaleX, scaleY, scaleZ)
                );
                splats.setScale(mapping[index], scales.x, scales.y, scales.z);
              }
            },
            (index, quatX, quatY, quatZ, quatW) => {
              if (mapping[index] >= 0) {
                const quaternion2 = transformQuaternion(
                  new Quaternion(quatX, quatY, quatZ, quatW)
                );
                splats.setQuaternion(
                  mapping[index],
                  quaternion2.x,
                  quaternion2.y,
                  quaternion2.z,
                  quaternion2.w
                );
              }
            },
            (index, sh1, sh2, sh3) => {
              if (mapping[index] >= 0) {
                splats.setSh1(mapping[index], sh1);
                if (sh2) {
                  splats.setSh2(mapping[index], sh2);
                }
                if (sh3) {
                  splats.setSh3(mapping[index], sh3);
                }
              }
            }
          );
          break;
        }
        case SplatFileType.SPLAT:
          decodeAntiSplat(
            input2.fileBytes,
            (numSplats) => {
            },
            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {
              const center = transformPos(new Vector3(x2, y, z));
              if (withinClip(center) && withinOpacity(opacity)) {
                const index2 = splats.pushSplat();
                splats.setCenter(index2, center.x, center.y, center.z);
                const scales = transformScales(
                  new Vector3(scaleX, scaleY, scaleZ)
                );
                splats.setScale(index2, scales.x, scales.y, scales.z);
                const quaternion2 = transformQuaternion(
                  new Quaternion(quatX, quatY, quatZ, quatW)
                );
                splats.setQuaternion(
                  index2,
                  quaternion2.x,
                  quaternion2.y,
                  quaternion2.z,
                  quaternion2.w
                );
                splats.setOpacity(index2, opacity);
                splats.setColor(index2, r, g, b);
              }
            }
          );
          break;
        case SplatFileType.KSPLAT: {
          let lastIndex = null;
          decodeKsplat(
            input2.fileBytes,
            (numSplats) => {
            },
            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {
              const center = transformPos(new Vector3(x2, y, z));
              if (withinClip(center) && withinOpacity(opacity)) {
                lastIndex = splats.pushSplat();
                splats.setCenter(lastIndex, center.x, center.y, center.z);
                const scales = transformScales(
                  new Vector3(scaleX, scaleY, scaleZ)
                );
                splats.setScale(lastIndex, scales.x, scales.y, scales.z);
                const quaternion2 = transformQuaternion(
                  new Quaternion(quatX, quatY, quatZ, quatW)
                );
                splats.setQuaternion(
                  lastIndex,
                  quaternion2.x,
                  quaternion2.y,
                  quaternion2.z,
                  quaternion2.w
                );
                splats.setOpacity(lastIndex, opacity);
                splats.setColor(lastIndex, r, g, b);
              } else {
                lastIndex = null;
              }
            },
            (index, sh1, sh2, sh3) => {
              if (lastIndex !== null) {
                splats.setSh1(lastIndex, sh1);
                if (sh2) {
                  splats.setSh2(lastIndex, sh2);
                }
                if (sh3) {
                  splats.setSh3(lastIndex, sh3);
                }
              }
            }
          );
          break;
        }
        default:
          throw new Error(\`transcodeSpz not implemented for \${fileType}\`);
      }
    }
    const shDegree = Math.min(
      maxSh ?? 3,
      splats.sh3 ? 3 : splats.sh2 ? 2 : splats.sh1 ? 1 : 0
    );
    const spz = new SpzWriter({
      numSplats: splats.numSplats,
      shDegree,
      fractionalBits,
      flagAntiAlias: true
    });
    for (let i2 = 0; i2 < splats.numSplats; ++i2) {
      const i3 = i2 * 3;
      const i4 = i2 * 4;
      spz.setCenter(
        i2,
        splats.centers[i3],
        splats.centers[i3 + 1],
        splats.centers[i3 + 2]
      );
      spz.setScale(
        i2,
        splats.scales[i3],
        splats.scales[i3 + 1],
        splats.scales[i3 + 2]
      );
      spz.setQuat(
        i2,
        splats.quaternions[i4],
        splats.quaternions[i4 + 1],
        splats.quaternions[i4 + 2],
        splats.quaternions[i4 + 3]
      );
      spz.setAlpha(i2, splats.opacities[i2]);
      spz.setRgb(
        i2,
        splats.colors[i3],
        splats.colors[i3 + 1],
        splats.colors[i3 + 2]
      );
      if (splats.sh1 && shDegree >= 1) {
        spz.setSh(
          i2,
          splats.sh1.slice(i2 * 9, (i2 + 1) * 9),
          shDegree >= 2 && splats.sh2 ? splats.sh2.slice(i2 * 15, (i2 + 1) * 15) : void 0,
          shDegree >= 3 && splats.sh3 ? splats.sh3.slice(i2 * 21, (i2 + 1) * 21) : void 0
        );
      }
    }
    const spzBytes = await spz.finalize();
    return { fileBytes: spzBytes, clippedCount: spz.clippedCount };
  }
  async function onMessage(event) {
    const { name, args, id } = event.data;
    let result = void 0;
    let error = void 0;
    try {
      switch (name) {
        case "unpackPly": {
          const { packedArray, fileBytes, splatEncoding } = args;
          const decoded = await unpackPly({
            packedArray,
            fileBytes,
            splatEncoding
          });
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray,
            extra: decoded.extra
          };
          break;
        }
        case "decodeSpz": {
          const { fileBytes, splatEncoding } = args;
          const decoded = unpackSpz(fileBytes, splatEncoding);
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray,
            extra: decoded.extra
          };
          break;
        }
        case "decodeAntiSplat": {
          const { fileBytes, splatEncoding } = args;
          const decoded = unpackAntiSplat(fileBytes, splatEncoding);
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray
          };
          break;
        }
        case "decodeKsplat": {
          const { fileBytes, splatEncoding } = args;
          const decoded = unpackKsplat(fileBytes, splatEncoding);
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray,
            extra: decoded.extra
          };
          break;
        }
        case "decodePcSogs": {
          const { fileBytes, extraFiles, splatEncoding } = args;
          const json = JSON.parse(
            new TextDecoder().decode(fileBytes)
          );
          const decoded = await unpackPcSogs(json, extraFiles, splatEncoding);
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray,
            extra: decoded.extra
          };
          break;
        }
        case "decodePcSogsZip": {
          const { fileBytes, splatEncoding } = args;
          const decoded = await unpackPcSogsZip(fileBytes, splatEncoding);
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray,
            extra: decoded.extra
          };
          break;
        }
        case "sortSplats": {
          const { totalSplats, readback, ordering } = args;
          result = {
            id,
            readback,
            ...sortSplats({ totalSplats, readback, ordering })
          };
          break;
        }
        case "sortDoubleSplats": {
          const { numSplats, readback, ordering } = args;
          {
            result = {
              id,
              readback,
              ordering,
              activeSplats: sort_splats(numSplats, readback, ordering)
            };
          }
          break;
        }
        case "sort32Splats": {
          const { numSplats, readback, ordering } = args;
          {
            result = {
              id,
              readback,
              ordering,
              activeSplats: sort32_splats(numSplats, readback, ordering)
            };
          }
          break;
        }
        case "transcodeSpz": {
          const input = args;
          const spzBytes = await transcodeSpz(input);
          result = {
            id,
            fileBytes: spzBytes,
            input
          };
          break;
        }
        default: {
          throw new Error(\`Unknown name: \${name}\`);
        }
      }
    } catch (e) {
      error = e;
      console.error(error);
    }
    self.postMessage(
      { id, result, error },
      { transfer: getArrayBuffers(result) }
    );
  }
  async function unpackPly({
    packedArray,
    fileBytes,
    splatEncoding
  }) {
    const ply = new PlyReader({ fileBytes });
    await ply.parseHeader();
    const numSplats = ply.numSplats;
    const extra = {};
    ply.parseSplats(
      (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {
        setPackedSplat(
          packedArray,
          index,
          x2,
          y,
          z,
          scaleX,
          scaleY,
          scaleZ,
          quatX,
          quatY,
          quatZ,
          quatW,
          opacity,
          r,
          g,
          b,
          splatEncoding
        );
      },
      (index, sh1, sh2, sh3) => {
        if (sh1) {
          if (!extra.sh1) {
            extra.sh1 = new Uint32Array(numSplats * 2);
          }
          encodeSh1Rgb(extra.sh1, index, sh1, splatEncoding);
        }
        if (sh2) {
          if (!extra.sh2) {
            extra.sh2 = new Uint32Array(numSplats * 4);
          }
          encodeSh2Rgb(extra.sh2, index, sh2, splatEncoding);
        }
        if (sh3) {
          if (!extra.sh3) {
            extra.sh3 = new Uint32Array(numSplats * 4);
          }
          encodeSh3Rgb(extra.sh3, index, sh3, splatEncoding);
        }
      }
    );
    return { packedArray, numSplats, extra };
  }
  function unpackSpz(fileBytes, splatEncoding) {
    const spz = new SpzReader({ fileBytes });
    const numSplats = spz.numSplats;
    const maxSplats = computeMaxSplats(numSplats);
    const packedArray = new Uint32Array(maxSplats * 4);
    const extra = {};
    spz.parseSplats(
      (index, x2, y, z) => {
        setPackedSplatCenter(packedArray, index, x2, y, z);
      },
      (index, alpha) => {
        setPackedSplatOpacity(packedArray, index, alpha);
      },
      (index, r, g, b) => {
        setPackedSplatRgb(packedArray, index, r, g, b, splatEncoding);
      },
      (index, scaleX, scaleY, scaleZ) => {
        setPackedSplatScales(
          packedArray,
          index,
          scaleX,
          scaleY,
          scaleZ,
          splatEncoding
        );
      },
      (index, quatX, quatY, quatZ, quatW) => {
        setPackedSplatQuat(packedArray, index, quatX, quatY, quatZ, quatW);
      },
      (index, sh1, sh2, sh3) => {
        if (sh1) {
          if (!extra.sh1) {
            extra.sh1 = new Uint32Array(numSplats * 2);
          }
          encodeSh1Rgb(extra.sh1, index, sh1, splatEncoding);
        }
        if (sh2) {
          if (!extra.sh2) {
            extra.sh2 = new Uint32Array(numSplats * 4);
          }
          encodeSh2Rgb(extra.sh2, index, sh2, splatEncoding);
        }
        if (sh3) {
          if (!extra.sh3) {
            extra.sh3 = new Uint32Array(numSplats * 4);
          }
          encodeSh3Rgb(extra.sh3, index, sh3, splatEncoding);
        }
      }
    );
    return { packedArray, numSplats, extra };
  }
  const DEPTH_INFINITY_F16 = 31744;
  const DEPTH_SIZE_16 = DEPTH_INFINITY_F16 + 1;
  let depthArray16 = null;
  function sortSplats({
    totalSplats,
    readback,
    ordering
  }) {
    if (!depthArray16) {
      depthArray16 = new Uint32Array(DEPTH_SIZE_16);
    }
    depthArray16.fill(0);
    const readbackUint32 = readback.map((layer) => new Uint32Array(layer.buffer));
    const layerSize = readbackUint32[0].length;
    const numLayers = Math.ceil(totalSplats / layerSize);
    let layerBase = 0;
    for (let layer = 0; layer < numLayers; ++layer) {
      const readbackLayer = readbackUint32[layer];
      const layerSplats = Math.min(readbackLayer.length, totalSplats - layerBase);
      for (let i2 = 0; i2 < layerSplats; ++i2) {
        const pri = readbackLayer[i2] & 32767;
        if (pri < DEPTH_INFINITY_F16) {
          depthArray16[pri] += 1;
        }
      }
      layerBase += layerSplats;
    }
    let activeSplats = 0;
    for (let j = 0; j < DEPTH_SIZE_16; ++j) {
      const nextIndex = activeSplats + depthArray16[j];
      depthArray16[j] = activeSplats;
      activeSplats = nextIndex;
    }
    layerBase = 0;
    for (let layer = 0; layer < numLayers; ++layer) {
      const readbackLayer = readbackUint32[layer];
      const layerSplats = Math.min(readbackLayer.length, totalSplats - layerBase);
      for (let i2 = 0; i2 < layerSplats; ++i2) {
        const pri = readbackLayer[i2] & 32767;
        if (pri < DEPTH_INFINITY_F16) {
          ordering[depthArray16[pri]] = layerBase + i2;
          depthArray16[pri] += 1;
        }
      }
      layerBase += layerSplats;
    }
    if (depthArray16[DEPTH_SIZE_16 - 1] !== activeSplats) {
      throw new Error(
        \`Expected \${activeSplats} active splats but got \${depthArray16[DEPTH_SIZE_16 - 1]}\`
      );
    }
    return { activeSplats, ordering };
  }
  const messageBuffer = [];
  function bufferMessage(event) {
    messageBuffer.push(event);
  }
  async function initialize() {
    self.addEventListener("message", bufferMessage);
    await __wbg_init();
    self.removeEventListener("message", bufferMessage);
    self.addEventListener("message", onMessage);
    for (const event of messageBuffer) {
      onMessage(event);
    }
    messageBuffer.length = 0;
  }
  initialize().catch(console.error);
})();
//# sourceMappingURL=worker-C1ojSBY1.js.map
`,blob=typeof self<"u"&&self.Blob&&new Blob([jsContent],{type:"text/javascript;charset=utf-8"});function WorkerWrapper(s){let e;try{if(e=blob&&(self.URL||self.webkitURL).createObjectURL(blob),!e)throw"";const t=new Worker(e,{name:s==null?void 0:s.name});return t.addEventListener("error",()=>{(self.URL||self.webkitURL).revokeObjectURL(e)}),t}catch{return new Worker("data:text/javascript;charset=utf-8,"+encodeURIComponent(jsContent),{name:s==null?void 0:s.name})}finally{e&&(self.URL||self.webkitURL).revokeObjectURL(e)}}class SplatWorker{constructor(){this.messages={},this.messageIdNext=0,this.worker=new WorkerWrapper,this.worker.onmessage=e=>this.onMessage(e)}makeMessageId(){return++this.messageIdNext}makeMessagePromiseId(){const e=this.makeMessageId(),t=new Promise((n,o)=>{this.messages[e]={resolve:n,reject:o}});return{id:e,promise:t}}onMessage(e){const{id:t,result:n,error:o}=e.data,a=this.messages[t];a&&(delete this.messages[t],o?a.reject(o):a.resolve(n))}async call(e,t){const{id:n,promise:o}=this.makeMessagePromiseId();return this.worker.postMessage({name:e,args:t,id:n},{transfer:getArrayBuffers(t)}),o}}let maxWorkers=4,numWorkers=0;const freeWorkers=[],workerQueue=[];async function allocWorker(){const s=freeWorkers.shift();if(s)return s;if(numWorkers<maxWorkers){const e=new SplatWorker;return numWorkers+=1,e}return new Promise(e=>{workerQueue.push(e)})}function freeWorker(s){if(numWorkers>maxWorkers){numWorkers-=1;return}const e=workerQueue.shift();if(e){e(s);return}freeWorkers.push(s)}async function withWorker(s){const e=await allocWorker();try{return await s(e)}finally{freeWorker(e)}}class SplatLoader extends Loader{constructor(e){super(e),this.fileLoader=new FileLoader(e)}load(e,t,n,o){const a=this.manager.resolveURL((this.path??"")+(e??"")),r=new Headers(this.requestHeader),l=this.withCredentials?"include":"same-origin",c=new Request(a,{headers:r,credentials:l});let u=this.fileType;this.manager.itemStart(a),fetchWithProgress(c,n).then(async d=>{var f;const g=[new ProgressEvent("progress",{lengthComputable:!0,loaded:d.byteLength,total:d.byteLength})];function _(){if(n){const C=g.every(F=>F.lengthComputable||F.loaded===0&&F.total===0),R=g.reduce((F,N)=>F+N.loaded,0),L=g.reduce((F,N)=>F+N.total,0);n(new ProgressEvent("progress",{lengthComputable:C,loaded:R,total:L}))}}const b={},B=[],I=tryPcSogs(d);if(u==="pcsogs"&&I===void 0)throw new Error("Invalid PC SOGS file");if(I!==void 0){u="pcsogs";for(const C of["means","scales","quats","sh0","shN"]){const R=I[C];if(R)for(const L of R.files){const F=new URL(L,a).toString(),N=g.length;g.push(new ProgressEvent("progress")),this.manager.itemStart(F);const k=new Request(F,{headers:r,credentials:l}),Q=fetchWithProgress(k,z=>{g[N]=z,_()}).then(z=>{b[L]=z}).catch(z=>{throw this.manager.itemError(F),z}).finally(()=>{this.manager.itemEnd(F)});B.push(Q)}}}if(await Promise.all(B),t){const C=((f=this.packedSplats)==null?void 0:f.splatEncoding)??DEFAULT_SPLAT_ENCODING,R=await unpackSplats({input:d,extraFiles:b,fileType:u,pathOrUrl:a,splatEncoding:C});this.packedSplats?(this.packedSplats.initialize(R),t(this.packedSplats)):t(new PackedSplats(R))}}).catch(d=>{this.manager.itemError(a),o==null||o(d)}).finally(()=>{this.manager.itemEnd(a)})}async loadAsync(e,t){return new Promise((n,o)=>{this.load(e,a=>{n(a)},t,o)})}parse(e){return new SplatMesh({packedSplats:e})}}async function fetchWithProgress(s,e){const t=await fetch(s);if(!t.ok)throw new Error(`${t.status} "${t.statusText}" fetching URL: ${s.url}`);if(!t.body)throw new Error(`Response body is null for URL: ${s.url}`);const n=t.body.getReader(),o=Number.parseInt(t.headers.get("Content-Length")||"0"),a=Number.isNaN(o)?0:o;let r=0;const l=[];for(;;){const{done:d,value:f}=await n.read();if(d)break;l.push(f),r+=f.length,e&&e(new ProgressEvent("progress",{lengthComputable:a!==0,loaded:r,total:a}))}const c=new Uint8Array(r);let u=0;for(const d of l)c.set(d,u),u+=d.length;return c.buffer}function getSplatFileType(s){const e=new DataView(s.buffer);if((e.getUint32(0,!0)&16777215)===7957616)return"ply";if((e.getUint32(0,!0)&16777215)===559903){const t=decompressPartialGzip(s,4);return new DataView(t.buffer).getUint32(0,!0)===1347635022?"spz":void 0}if(e.getUint32(0,!0)===67324752)return tryPcSogsZip(s)?"pcsogszip":void 0}function getFileExtension(s){const e=s.split(/[?#]/,1)[0],t=Math.max(e.lastIndexOf("/"),e.lastIndexOf("\\")),n=e.slice(t+1),o=n.lastIndexOf(".");return o<=0||o===n.length-1?"":n.slice(o+1).toLowerCase()}function getSplatFileTypeFromPath(s){const e=getFileExtension(s);if(e==="ply")return"ply";if(e==="spz")return"spz";if(e==="splat")return"splat";if(e==="ksplat")return"ksplat"}function tryPcSogs(s){try{let e;if(typeof s=="string")e=s;else{const n=s instanceof ArrayBuffer?new Uint8Array(s):s;if(n.length>65536)return;e=new TextDecoder().decode(n)}const t=JSON.parse(e);if(!t||typeof t!="object"||Array.isArray(t))return;for(const n of["means","scales","quats","sh0"])if(!t[n]||typeof t[n]!="object"||Array.isArray(t[n])||!t[n].shape||!t[n].files||n!=="quats"&&(!t[n].mins||!t[n].maxs))return;return t}catch{return}}function tryPcSogsZip(s){try{const e=s instanceof ArrayBuffer?new Uint8Array(s):s;let t=null;const n=unzipSync(e,{filter:({name:a})=>a.split(/[\\/]/).pop()==="meta.json"?(t=a,!0):!1});if(!t)return;const o=tryPcSogs(n[t]);return o?{name:t,json:o}:void 0}catch{return}}async function unpackSplats({input:s,extraFiles:e,fileType:t,pathOrUrl:n,splatEncoding:o}){const a=s instanceof ArrayBuffer?new Uint8Array(s):s;let r=t;switch(t||(r=getSplatFileType(a),!r&&n&&(r=getSplatFileTypeFromPath(n))),r){case"ply":{const l=new PlyReader({fileBytes:a});await l.parseHeader();const c=l.numSplats,u=getTextureSize(c).maxSplats,d={fileBytes:a,packedArray:new Uint32Array(u*4),splatEncoding:o};return await withWorker(async f=>{const{packedArray:g,numSplats:_,extra:b}=await f.call("unpackPly",d);return{packedArray:g,numSplats:_,extra:b}})}case"spz":return await withWorker(async l=>{const{packedArray:c,numSplats:u,extra:d}=await l.call("decodeSpz",{fileBytes:a,splatEncoding:o});return{packedArray:c,numSplats:u,extra:d}});case"splat":return await withWorker(async l=>{const{packedArray:c,numSplats:u}=await l.call("decodeAntiSplat",{fileBytes:a,splatEncoding:o});return{packedArray:c,numSplats:u}});case"ksplat":return await withWorker(async l=>{const{packedArray:c,numSplats:u,extra:d}=await l.call("decodeKsplat",{fileBytes:a,splatEncoding:o});return{packedArray:c,numSplats:u,extra:d}});case"pcsogs":return await withWorker(async l=>{const{packedArray:c,numSplats:u,extra:d}=await l.call("decodePcSogs",{fileBytes:a,extraFiles:e,splatEncoding:o});return{packedArray:c,numSplats:u,extra:d}});case"pcsogszip":return await withWorker(async l=>{const{packedArray:c,numSplats:u,extra:d}=await l.call("decodePcSogsZip",{fileBytes:a,splatEncoding:o});return{packedArray:c,numSplats:u,extra:d}});default:throw new Error(`Unknown splat file type: ${r}`)}}var computeUvec4_default=`precision highp float;
precision highp int;
precision highp sampler2D;
precision highp usampler2D;
precision highp isampler2D;
precision highp sampler2DArray;
precision highp usampler2DArray;
precision highp isampler2DArray;
precision highp sampler3D;
precision highp usampler3D;
precision highp isampler3D;

#include <splatDefines>

uniform uint targetLayer;
uniform int targetBase;
uniform int targetCount;

out uvec4 target;

{{ GLOBALS }}

void produceSplat(int index) {
    {{ STATEMENTS }}
}

void main() {
    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);
    int index = targetIndex - targetBase;

    if ((index >= 0) && (index < targetCount)) {
        produceSplat(index);
    } else {
        target = uvec4(0u, 0u, 0u, 0u);
    }
}`;const DEFAULT_SPLAT_ENCODING={rgbMin:0,rgbMax:1,lnScaleMin:LN_SCALE_MIN,lnScaleMax:LN_SCALE_MAX,sh1Min:-1,sh1Max:1,sh2Min:-1,sh2Max:1,sh3Min:-1,sh3Max:1},_PackedSplats=class Fn{constructor(e={}){this.maxSplats=0,this.numSplats=0,this.packedArray=null,this.isInitialized=!1,this.target=null,this.source=null,this.needsUpdate=!0,this.extra={},this.dyno=new DynoPackedSplats({packedSplats:this}),this.dynoRgbMinMaxLnScaleMinMax=new DynoVec4({key:"rgbMinMaxLnScaleMinMax",value:new Vector4(0,1,LN_SCALE_MIN,LN_SCALE_MAX),update:t=>{var n,o,a,r;return t.set(((n=this.splatEncoding)==null?void 0:n.rgbMin)??0,((o=this.splatEncoding)==null?void 0:o.rgbMax)??1,((a=this.splatEncoding)==null?void 0:a.lnScaleMin)??LN_SCALE_MIN,((r=this.splatEncoding)==null?void 0:r.lnScaleMax)??LN_SCALE_MAX),t}}),this.dynoSh1MinMax=new DynoVec2({key:"sh1MinMax",value:new Vector2(-1,1),update:t=>{var n,o;return t.set(((n=this.splatEncoding)==null?void 0:n.sh1Min)??-1,((o=this.splatEncoding)==null?void 0:o.sh1Max)??1),t}}),this.dynoSh2MinMax=new DynoVec2({key:"sh2MinMax",value:new Vector2(-1,1),update:t=>{var n,o;return t.set(((n=this.splatEncoding)==null?void 0:n.sh2Min)??-1,((o=this.splatEncoding)==null?void 0:o.sh2Max)??1),t}}),this.dynoSh3MinMax=new DynoVec2({key:"sh3MinMax",value:new Vector2(-1,1),update:t=>{var n,o;return t.set(((n=this.splatEncoding)==null?void 0:n.sh3Min)??-1,((o=this.splatEncoding)==null?void 0:o.sh3Max)??1),t}}),this.initialized=Promise.resolve(this),this.reinitialize(e)}reinitialize(e){this.isInitialized=!1,this.extra={},this.splatEncoding=e.splatEncoding,e.url||e.fileBytes||e.construct?this.initialized=this.asyncInitialize(e).then(()=>(this.isInitialized=!0,this)):(this.initialize(e),this.isInitialized=!0,this.initialized=Promise.resolve(this))}initialize(e){e.packedArray?(this.packedArray=e.packedArray,this.maxSplats=Math.floor(this.packedArray.length/4),this.maxSplats=Math.floor(this.maxSplats/SPLAT_TEX_WIDTH)*SPLAT_TEX_WIDTH,this.numSplats=Math.min(this.maxSplats,e.numSplats??Number.POSITIVE_INFINITY)):(this.maxSplats=e.maxSplats??0,this.numSplats=0),this.extra=e.extra??{}}async asyncInitialize(e){const{url:t,fileBytes:n,construct:o}=e;if(t){const a=new SplatLoader;a.packedSplats=this,await a.loadAsync(t)}else if(n){const a=await unpackSplats({input:n,fileType:e.fileType,pathOrUrl:e.fileName??t,splatEncoding:e.splatEncoding??DEFAULT_SPLAT_ENCODING});this.initialize(a)}if(o){const a=o(this);a instanceof Promise&&await a}}dispose(){this.target&&(this.target.dispose(),this.target=null),this.source&&(this.source.dispose(),this.source=null)}ensureSplats(e){const t=e<=this.maxSplats?this.maxSplats:Math.max(e,2*this.maxSplats),n=this.packedArray?this.packedArray.length/4:0;if(!this.packedArray||t>n){this.maxSplats=getTextureSize(t).maxSplats;const o=new Uint32Array(this.maxSplats*4);this.packedArray&&o.set(this.packedArray),this.packedArray=o}return this.packedArray}ensureSplatsSh(e,t){let n,o;if(e===0)return this.ensureSplats(t);if(e===1)n=2,o="sh1";else if(e===2)n=4,o="sh2";else if(e===3)n=4,o="sh3";else throw new Error(`Invalid level: ${e}`);let a=this.extra[o]?this.extra[o].length/n:0;const r=t<=a?a:Math.max(t,2*a);if(!this.extra[o]||r>a){a=getTextureSize(r).maxSplats;const l=new Uint32Array(a*n);this.extra[o]&&l.set(this.extra[o]),this.extra[o]=l}return this.extra[o]}getSplat(e){if(!this.packedArray||e>=this.numSplats)throw new Error("Invalid index");return unpackSplat(this.packedArray,e,this.splatEncoding)}setSplat(e,t,n,o,a,r){const l=this.ensureSplats(e+1);setPackedSplat(l,e,t.x,t.y,t.z,n.x,n.y,n.z,o.x,o.y,o.z,o.w,a,r.r,r.g,r.b),this.numSplats=Math.max(this.numSplats,e+1)}pushSplat(e,t,n,o,a){const r=this.ensureSplats(this.numSplats+1);setPackedSplat(r,this.numSplats,e.x,e.y,e.z,t.x,t.y,t.z,n.x,n.y,n.z,n.w,o,a.r,a.g,a.b),++this.numSplats}forEachSplat(e){if(!(!this.packedArray||!this.numSplats))for(let t=0;t<this.numSplats;++t){const n=unpackSplat(this.packedArray,t,this.splatEncoding);e(t,n.center,n.scales,n.quaternion,n.opacity,n.color)}}ensureGenerate(e){if(this.target&&(e??1)<=this.maxSplats)return!1;this.dispose();const t=getTextureSize(e??1),{width:n,height:o,depth:a}=t;return this.maxSplats=t.maxSplats,this.target=new WebGLArrayRenderTarget(n,o,a,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:NearestFilter,minFilter:NearestFilter}),this.target.texture.format=RGBAIntegerFormat,this.target.texture.type=UnsignedIntType,this.target.texture.internalFormat="RGBA32UI",this.target.scissorTest=!0,!0}generateMapping(e){let t=0;const n=e.map(o=>{const a=t,r=Math.ceil(o/SPLAT_TEX_WIDTH)*SPLAT_TEX_WIDTH;return t+=r,{base:a,count:o}});return{maxSplats:t,mapping:n}}getTexture(){return this.target?this.target.texture:this.source||this.packedArray?this.maybeUpdateSource():Fn.getEmpty()}maybeUpdateSource(){if(!this.packedArray)throw new Error("No packed splats");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:e,height:t,depth:n}=this.source.image;this.maxSplats!==e*t*n&&(this.source.dispose(),this.source=null)}if(this.source)this.packedArray.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.packedArray.buffer));else{const{width:e,height:t,depth:n}=getTextureSize(this.maxSplats);this.source=new DataArrayTexture(this.packedArray,e,t,n),this.source.format=RGBAIntegerFormat,this.source.type=UnsignedIntType,this.source.internalFormat="RGBA32UI",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}static getEmpty(){if(!Fn.emptySource){const{width:e,height:t,depth:n,maxSplats:o}=getTextureSize(1),a=new Uint32Array(o*4);Fn.emptySource=new DataArrayTexture(a,e,t,n),Fn.emptySource.format=RGBAIntegerFormat,Fn.emptySource.type=UnsignedIntType,Fn.emptySource.internalFormat="RGBA32UI",Fn.emptySource.needsUpdate=!0}return Fn.emptySource}prepareProgramMaterial(e){let t=Fn.generatorProgram.get(e);if(!t){const o=dynoBlock({index:"int"},{output:"uvec4"},({index:a})=>{e.inputs.index=a;const r=e.outputs.gsplat;return{output:outputPackedSplat(r,this.dynoRgbMinMaxLnScaleMinMax)}});Fn.programTemplate||(Fn.programTemplate=new DynoProgramTemplate(computeUvec4_default)),t=new DynoProgram({graph:o,inputs:{index:"index"},outputs:{output:"target"},template:Fn.programTemplate}),Object.assign(t.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),Fn.generatorProgram.set(e,t)}const n=t.prepareMaterial();return Fn.fullScreenQuad.material=n,{program:t,material:n}}saveRenderState(e){return{xrEnabled:e.xr.enabled,autoClear:e.autoClear}}resetRenderState(e,t){e.setRenderTarget(null),e.xr.enabled=t.xrEnabled,e.autoClear=t.autoClear}generate({generator:e,base:t,count:n,renderer:o}){if(!this.target)throw new Error("Target must be initialized with ensureSplats");if(t+n>this.maxSplats)throw new Error("Base + count exceeds maxSplats");const{program:a,material:r}=this.prepareProgramMaterial(e);a.update();const l=this.saveRenderState(o),c=Math.ceil((t+n)/SPLAT_TEX_WIDTH)*SPLAT_TEX_WIDTH,u=SPLAT_TEX_WIDTH*SPLAT_TEX_HEIGHT;for(r.uniforms.targetBase.value=t,r.uniforms.targetCount.value=n;t<c;){const d=Math.floor(t/u);r.uniforms.targetLayer.value=d;const f=d*u,g=Math.floor((t-f)/SPLAT_TEX_WIDTH),_=Math.min(SPLAT_TEX_HEIGHT,Math.ceil((c-f)/SPLAT_TEX_WIDTH));this.target.scissor.set(0,g,SPLAT_TEX_WIDTH,_-g),o.setRenderTarget(this.target,d),o.xr.enabled=!1,o.autoClear=!1,Fn.fullScreenQuad.render(o),t+=SPLAT_TEX_WIDTH*(_-g)}return this.resetRenderState(o,l),{nextBase:c}}};_PackedSplats.emptySource=null;_PackedSplats.programTemplate=null;_PackedSplats.generatorProgram=new Map;_PackedSplats.fullScreenQuad=new FullScreenQuad(new RawShaderMaterial({visible:!1}));let PackedSplats=_PackedSplats;class DynoPackedSplats extends DynoUniform{constructor({packedSplats:e}={}){super({key:"packedSplats",type:TPackedSplats,globals:()=>[definePackedSplats],value:{texture:PackedSplats.getEmpty(),numSplats:0,rgbMinMaxLnScaleMinMax:new Vector4(0,1,LN_SCALE_MIN,LN_SCALE_MAX)},update:t=>{var n,o,a,r,l,c,u,d,f,g;return t.texture=((n=this.packedSplats)==null?void 0:n.getTexture())??PackedSplats.getEmpty(),t.numSplats=((o=this.packedSplats)==null?void 0:o.numSplats)??0,t.rgbMinMaxLnScaleMinMax.set(((r=(a=this.packedSplats)==null?void 0:a.splatEncoding)==null?void 0:r.rgbMin)??0,((c=(l=this.packedSplats)==null?void 0:l.splatEncoding)==null?void 0:c.rgbMax)??1,((d=(u=this.packedSplats)==null?void 0:u.splatEncoding)==null?void 0:d.lnScaleMin)??LN_SCALE_MIN,((g=(f=this.packedSplats)==null?void 0:f.splatEncoding)==null?void 0:g.lnScaleMax)??LN_SCALE_MAX),t}}),this.packedSplats=e}}class SplatGeometry extends InstancedBufferGeometry{constructor(e,t){super(),this.ordering=e,this.setAttribute("position",new BufferAttribute(QUAD_VERTICES,3)),this.setIndex(new BufferAttribute(QUAD_INDICES,1)),this._maxInstanceCount=e.length,this.instanceCount=t,this.attribute=new InstancedBufferAttribute(e,1,!1,1),this.attribute.setUsage(DynamicDrawUsage),this.setAttribute("splatIndex",this.attribute)}update(e,t){this.ordering=e,this.attribute.array=e,this.instanceCount=t,this.attribute.addUpdateRange(0,t),this.attribute.needsUpdate=!0}}const QUAD_VERTICES=new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,1,0]),QUAD_INDICES=new Uint16Array([0,1,2,0,2,3]),_SparkViewpoint=class ki{constructor(e){if(this.lastTime=null,this.encodeLinear=!1,this.superXY=1,this.display=null,this.sorting=null,this.pending=null,this.sortingCheck=!1,this.readback16=new Uint16Array(0),this.readback32=new Uint32Array(0),this.spark=e.spark,this.camera=e.camera,this.viewToWorld=e.viewToWorld??new Matrix4,e.target){const{width:t,height:n,doubleBuffer:o}=e.target,a=Math.max(1,Math.min(4,e.target.superXY??1));if(this.superXY=a,t*a>8192||n*a>8192)throw new Error("Target size too large");this.target=new WebGLRenderTarget(t*a,n*a,{format:RGBAFormat,type:UnsignedByteType,colorSpace:SRGBColorSpace}),o&&(this.back=new WebGLRenderTarget(t*a,n*a,{format:RGBAFormat,type:UnsignedByteType,colorSpace:SRGBColorSpace})),this.encodeLinear=!0}this.onTextureUpdated=e.onTextureUpdated,this.sortRadial=e.sortRadial??!0,this.sortDistance=e.sortDistance,this.sortCoorient=e.sortCoorient,this.depthBias=e.depthBias,this.sort360=e.sort360,this.sort32=e.sort32,this.stochastic=e.stochastic??!1,this.orderingFreelist=new FreeList({allocate:t=>new Uint32Array(t),valid:(t,n)=>t.length===n}),this.autoUpdate=!1,this.setAutoUpdate(e.autoUpdate??!1)}dispose(){var e;this.setAutoUpdate(!1),this.target&&(this.target.dispose(),this.target=void 0),this.back&&(this.back.dispose(),this.back=void 0),this.display&&(this.spark.releaseAccumulator(this.display.accumulator),this.display.geometry.dispose(),this.display=null),(e=this.pending)!=null&&e.accumulator&&(this.spark.releaseAccumulator(this.pending.accumulator),this.pending=null)}setAutoUpdate(e){!this.autoUpdate&&e?this.spark.autoViewpoints.push(this):this.autoUpdate&&!e&&(this.spark.autoViewpoints=this.spark.autoViewpoints.filter(t=>t!==this)),this.autoUpdate=e}async prepare({scene:e,camera:t,viewToWorld:n,update:o,forceOrigin:a}){var r;for(n?this.viewToWorld=n:(this.camera=t??this.camera,this.camera&&(this.camera.updateMatrixWorld(),this.viewToWorld=this.camera.matrixWorld.clone()));o??!0;){const c=a?this.viewToWorld:void 0;if(this.spark.updateInternal({scene:e,originToWorld:c}))break;await new Promise(d=>setTimeout(d,10))}const l=this.spark.active;l!==((r=this.display)==null?void 0:r.accumulator)&&(this.spark.active.refCount+=1),await this.sortUpdate({accumulator:l,viewToWorld:this.viewToWorld})}renderTarget({scene:e,camera:t}){var n;const o=this.back??this.target;if(!o)throw new Error("Must initialize SparkViewpoint with target");if(t=t??this.camera,!t)throw new Error("Must provide camera");if(t instanceof PerspectiveCamera){const a=new PerspectiveCamera().copy(t,!1);a.aspect=o.width/o.height,a.updateProjectionMatrix(),t=a}this.viewToWorld=t.matrixWorld.clone();try{this.spark.renderer.setRenderTarget(o),this.spark.prepareViewpoint(this),this.spark.renderer.render(e,t)}finally{this.spark.prepareViewpoint(this.spark.defaultView),this.spark.renderer.setRenderTarget(null)}o!==this.target&&([this.target,this.back]=[this.back,this.target]),(n=this.onTextureUpdated)==null||n.call(this,o.texture)}async readTarget(){if(!this.target)throw new Error("Must initialize SparkViewpoint with target");const{width:e,height:t}=this.target,n=e*t*4;(!this.superPixels||this.superPixels.length<n)&&(this.superPixels=new Uint8Array(n)),await this.spark.renderer.readRenderTargetPixelsAsync(this.target,0,0,e,t,this.superPixels);const{superXY:o}=this;if(o===1)return this.superPixels;const a=e/o,r=t/o,l=a*r*4;(!this.pixels||this.pixels.length<l)&&(this.pixels=new Uint8Array(l));const{superPixels:c,pixels:u}=this,d=o*o;for(let f=0;f<r;f++){const g=f*a;for(let _=0;_<a;_++){const b=_*o;let B=0,I=0,C=0,R=0;for(let F=0;F<o;F++){const N=(f*o+F)*this.target.width;for(let k=0;k<o;k++){const Q=(N+b+k)*4;B+=c[Q],I+=c[Q+1],C+=c[Q+2],R+=c[Q+3]}}const L=(g+_)*4;u[L]=B/d,u[L+1]=I/d,u[L+2]=C/d,u[L+3]=R/d}}return u}async prepareRenderPixels({scene:e,camera:t,viewToWorld:n,update:o,forceOrigin:a}){return await this.prepare({scene:e,camera:t,viewToWorld:n,update:o,forceOrigin:a}),this.renderTarget({scene:e,camera:t}),this.readTarget()}autoPoll({accumulator:e}){var t,n,o,a;this.camera&&(this.camera.updateMatrixWorld(),this.viewToWorld=this.camera.matrixWorld.clone());let r=!1,l=!1;if(!this.display)r=!0;else if(e){r=!0;const{mappingVersion:u}=this.display.accumulator;e.mappingVersion===u&&(this.spark.releaseAccumulator(this.display.accumulator),this.display.accumulator=e,l=!0)}const c=((t=this.sorting)==null?void 0:t.viewToWorld)??((n=this.display)==null?void 0:n.viewToWorld);c&&!withinCoorientDist({matrix1:this.viewToWorld,matrix2:c,maxDistance:this.sortDistance??.01,minCoorient:this.sortCoorient??this.sortRadial?.99:.999})&&(r=!0),r&&(e&&(e.refCount+=1),e&&((o=this.pending)!=null&&o.accumulator)&&this.pending.accumulator!==((a=this.display)==null?void 0:a.accumulator)&&this.spark.releaseAccumulator(this.pending.accumulator),this.pending={accumulator:e,viewToWorld:this.viewToWorld,displayed:l},this.driveSort())}async driveSort(){for(var e;;){if(this.sorting||!this.pending)return;const{viewToWorld:t,displayed:n}=this.pending;let o=this.pending.accumulator??((e=this.display)==null?void 0:e.accumulator);if(o||(o=this.spark.active,o.refCount+=1),this.pending=null,!o)throw new Error("No accumulator to sort");this.sorting={viewToWorld:t},await this.sortUpdate({accumulator:o,viewToWorld:t,displayed:n}),this.sorting=null}}async sortUpdate({accumulator:e,viewToWorld:t,displayed:n=!1}){if(this.sortingCheck)throw new Error("Only one sort at a time");this.sortingCheck=!0,e=e??this.spark.active;const{numSplats:o,maxSplats:a}=e.splats;let r=0,l=this.orderingFreelist.alloc(a);if(this.stochastic){r=o;for(let c=0;c<o;++c)l[c]=c}else if(o>0){const{reader:c,doubleSortReader:u,sort32Reader:d,dynoSortRadial:f,dynoOrigin:g,dynoDirection:_,dynoDepthBias:b,dynoSort360:B,dynoSplats:I}=ki.makeSorter(),C=this.sort32??!1;let R;if(C)this.readback32=c.ensureBuffer(a,this.readback32),R=this.readback32;else{const z=Math.ceil(a/2);this.readback16=c.ensureBuffer(z,this.readback16),R=this.readback16}const L=e.toWorld.clone().invert(),F=t.clone().premultiply(L);f.value=this.sort360?!0:this.sortRadial,g.value.set(0,0,0).applyMatrix4(F),_.value.set(0,0,-1).applyMatrix4(F).sub(g.value).normalize(),b.value=this.depthBias??1,B.value=this.sort360??!1,I.packedSplats=e.splats;const N=C?d:u,k=C?o:Math.ceil(o/2);await c.renderReadback({renderer:this.spark.renderer,reader:N,count:k,readback:R});const Q=await withWorker(async z=>{const G=C?"sort32Splats":"sortDoubleSplats";return z.call(G,{maxSplats:a,numSplats:o,readback:R,ordering:l})});C?this.readback32=Q.readback:this.readback16=Q.readback,l=Q.ordering,r=Q.activeSplats}this.updateDisplay({accumulator:e,viewToWorld:t,ordering:l,activeSplats:r,displayed:n}),this.sortingCheck=!1}updateDisplay({accumulator:e,viewToWorld:t,ordering:n,activeSplats:o,displayed:a=!1}){if(!this.display)this.display={accumulator:e,viewToWorld:t,geometry:new SplatGeometry(n,o)};else{!a&&e!==this.display.accumulator&&(this.spark.releaseAccumulator(this.display.accumulator),this.display.accumulator=e),this.display.viewToWorld=t;const r=this.display.geometry.ordering;r.length===n.length?this.display.geometry.update(n,o):(this.display.geometry.dispose(),this.display.geometry=new SplatGeometry(n,o)),this.orderingFreelist.free(r)}this.spark.viewpoint===this&&this.spark.prepareViewpoint(this)}static makeSorter(){if(!ki.dynos){const e=new DynoBool({value:!0}),t=new DynoVec3({value:new Vector3}),n=new DynoVec3({value:new Vector3}),o=new DynoFloat({value:1}),a=new DynoBool({value:!1}),r=new DynoPackedSplats,l=new Readback,c=dynoBlock({index:"int"},{rgba8:"vec4"},({index:d})=>{if(!d)throw new Error("No index");const f={sortRadial:e,sortOrigin:t,sortDirection:n,sortDepthBias:o,sort360:a},g=mul(d,dynoConst("int",2)),_=readPackedSplat(r,g),b=computeSortMetric({gsplat:_,...f}),B=readPackedSplat(r,add(g,dynoConst("int",1))),I=computeSortMetric({gsplat:B,...f}),C=combine({vectorType:"vec2",x:b,y:I});return{rgba8:uintToRgba8(packHalf2x16(C))}}),u=dynoBlock({index:"int"},{rgba8:"vec4"},({index:d})=>{if(!d)throw new Error("No index");const f={sortRadial:e,sortOrigin:t,sortDirection:n,sortDepthBias:o,sort360:a},g=readPackedSplat(r,d),_=computeSortMetric({gsplat:g,...f});return{rgba8:uintToRgba8(floatBitsToUint(_))}});ki.dynos={dynoSortRadial:e,dynoOrigin:t,dynoDirection:n,dynoDepthBias:o,dynoSort360:a,dynoSplats:r,reader:l,doubleSortReader:c,sort32Reader:u}}return ki.dynos}};_SparkViewpoint.EMPTY_TEXTURE=new Texture;_SparkViewpoint.dynos=null;let SparkViewpoint=_SparkViewpoint;const defineComputeSortMetric=unindent(`
  float computeSort(Gsplat gsplat, bool sortRadial, vec3 sortOrigin, vec3 sortDirection, float sortDepthBias, bool sort360) {
    if (!isGsplatActive(gsplat.flags)) {
      return INFINITY;
    }

    vec3 center = gsplat.center - sortOrigin;
    float biasedDepth = dot(center, sortDirection) + sortDepthBias;
    if (!sort360 && (biasedDepth <= 0.0)) {
      return INFINITY;
    }

    return sortRadial ? length(center) : biasedDepth;
  }
`);function computeSortMetric({gsplat:s,sortRadial:e,sortOrigin:t,sortDirection:n,sortDepthBias:o,sort360:a}){return dyno$1({inTypes:{gsplat:Gsplat,sortRadial:"bool",sortOrigin:"vec3",sortDirection:"vec3",sortDepthBias:"float",sort360:"bool"},outTypes:{metric:"float"},globals:()=>[defineGsplat,defineComputeSortMetric],inputs:{gsplat:s,sortRadial:e,sortOrigin:t,sortDirection:n,sortDepthBias:o,sort360:a},statements:({inputs:r,outputs:l})=>{const{gsplat:c,sortRadial:u,sortOrigin:d,sortDirection:f,sortDepthBias:g,sort360:_}=r;return unindentLines(`
        ${l.metric} = computeSort(${c}, ${u}, ${d}, ${f}, ${g}, ${_});
      `)}}).outputs.metric}class SplatAccumulator{constructor(){this.splats=new PackedSplats,this.toWorld=new Matrix4,this.mapping=[],this.refCount=0,this.splatsVersion=-1,this.mappingVersion=-1}ensureGenerate(e){this.splats.ensureGenerate(e)&&(this.mapping=[])}generateSplats({renderer:e,modifier:t,generators:n,forceUpdate:o,originToWorld:a}){const r=this.mapping.reduce((u,d)=>(u.set(d.node,d),u),new Map);let l=0,c=0;for(const{node:u,generator:d,version:f,base:g,count:_}of n){const b=r.get(u);if((o||d!==(b==null?void 0:b.generator)||f!==(b==null?void 0:b.version)||g!==(b==null?void 0:b.base)||_!==(b==null?void 0:b.count))&&d&&_>0){const B=t.apply(d);try{this.splats.generate({generator:B,base:g,count:_,renderer:e})}catch(I){u.generator=void 0,u.generatorError=I}l+=1}c=Math.max(c,g+_)}return this.splats.numSplats=c,this.toWorld=a,this.mapping=n,l!==0}hasCorrespondence(e){return this.mapping.length!==e.mapping.length?!1:this.mapping.every(({node:t,base:n,count:o},a)=>{const{node:r,base:l,count:c}=e.mapping[a];return t===r&&n===l&&o===c})}}var splatDefines_default=`const float LN_SCALE_MIN = -12.0;
const float LN_SCALE_MAX = 9.0;

const uint SPLAT_TEX_WIDTH_BITS = 11u;
const uint SPLAT_TEX_HEIGHT_BITS = 11u;
const uint SPLAT_TEX_DEPTH_BITS = 11u;
const uint SPLAT_TEX_LAYER_BITS = SPLAT_TEX_WIDTH_BITS + SPLAT_TEX_HEIGHT_BITS;

const uint SPLAT_TEX_WIDTH = 1u << SPLAT_TEX_WIDTH_BITS;
const uint SPLAT_TEX_HEIGHT = 1u << SPLAT_TEX_HEIGHT_BITS;
const uint SPLAT_TEX_DEPTH = 1u << SPLAT_TEX_DEPTH_BITS;

const uint SPLAT_TEX_WIDTH_MASK = SPLAT_TEX_WIDTH - 1u;
const uint SPLAT_TEX_HEIGHT_MASK = SPLAT_TEX_HEIGHT - 1u;
const uint SPLAT_TEX_DEPTH_MASK = SPLAT_TEX_DEPTH - 1u;

const uint F16_INF = 0x7c00u;
const float PI = 3.1415926535897932384626433832795;

const float INFINITY = 1.0 / 0.0;
const float NEG_INFINITY = -INFINITY;

float sqr(float x) {
    return x * x;
}

float pow4(float x) {
    float x2 = x * x;
    return x2 * x2;
}

float pow8(float x) {
    float x4 = pow4(x);
    return x4 * x4;
}

vec3 srgbToLinear(vec3 rgb) {
    return pow(rgb, vec3(2.2));
}

vec3 linearToSrgb(vec3 rgb) {
    return pow(rgb, vec3(1.0 / 2.2));
}

uint encodeQuatOctXy88R8(vec4 q) {
    
    if (q.w < 0.0) {
        q = -q;
    }
    
    float theta = 2.0 * acos(q.w);
    float halfTheta = theta * 0.5;
    float s = sin(halfTheta);
    
    vec3 axis = (abs(s) < 1e-6) ? vec3(1.0, 0.0, 0.0) : q.xyz / s;
    
    
    
    float sum = abs(axis.x) + abs(axis.y) + abs(axis.z);
    vec2 p = vec2(axis.x, axis.y) / sum;
    
    if (axis.z < 0.0) {
        float oldPx = p.x;
        p.x = (1.0 - abs(p.y)) * (p.x >= 0.0 ? 1.0 : -1.0);
        p.y = (1.0 - abs(oldPx)) * (p.y >= 0.0 ? 1.0 : -1.0);
    }
    
    float u_f = p.x * 0.5 + 0.5;
    float v_f = p.y * 0.5 + 0.5;
    
    uint quantU = uint(clamp(round(u_f * 255.0), 0.0, 255.0));
    uint quantV = uint(clamp(round(v_f * 255.0), 0.0, 255.0));
    
    
    
    uint angleInt = uint(clamp(round((theta / 3.14159265359) * 255.0), 0.0, 255.0));
    
    
    return (angleInt << 16u) | (quantV << 8u) | quantU;
}

vec4 decodeQuatOctXy88R8(uint encoded) {
    
    uint quantU = encoded & uint(0xFFu);               
    uint quantV = (encoded >> 8u) & uint(0xFFu);         
    uint angleInt = encoded >> 16u;                      

    
    float u_f = float(quantU) / 255.0;
    float v_f = float(quantV) / 255.0;
    vec2 f = vec2(u_f * 2.0 - 1.0, v_f * 2.0 - 1.0);

    vec3 axis = vec3(f.xy, 1.0 - abs(f.x) - abs(f.y));
    float t = max(-axis.z, 0.0);
    axis.x += (axis.x >= 0.0) ? -t : t;
    axis.y += (axis.y >= 0.0) ? -t : t;
    axis = normalize(axis);
    
    
    float theta = (float(angleInt) / 255.0) * 3.14159265359;
    float halfTheta = theta * 0.5;
    float s = sin(halfTheta);
    float w = cos(halfTheta);
    
    return vec4(axis * s, w);
}

    

    

    

    

    

    

    

    

    

    

uvec4 packSplatEncoding(
    vec3 center, vec3 scales, vec4 quaternion, vec4 rgba, vec4 rgbMinMaxLnScaleMinMax
) {
    float rgbMin = rgbMinMaxLnScaleMinMax.x;
    float rgbMax = rgbMinMaxLnScaleMinMax.y;
    vec3 encRgb = (rgba.rgb - vec3(rgbMin)) / (rgbMax - rgbMin);
    uvec4 uRgba = uvec4(round(clamp(vec4(encRgb, rgba.a) * 255.0, 0.0, 255.0)));

    uint uQuat = encodeQuatOctXy88R8(quaternion);
    
    
    uvec3 uQuat3 = uvec3(uQuat & 0xffu, (uQuat >> 8u) & 0xffu, (uQuat >> 16u) & 0xffu);

    
    float lnScaleMin = rgbMinMaxLnScaleMinMax.z;
    float lnScaleMax = rgbMinMaxLnScaleMinMax.w;
    float lnScaleScale = 254.0 / (lnScaleMax - lnScaleMin);
    uvec3 uScales = uvec3(
        (scales.x == 0.0) ? 0u : uint(round(clamp((log(scales.x) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u,
        (scales.y == 0.0) ? 0u : uint(round(clamp((log(scales.y) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u,
        (scales.z == 0.0) ? 0u : uint(round(clamp((log(scales.z) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u
    );

    
    uint word0 = uRgba.r | (uRgba.g << 8u) | (uRgba.b << 16u) | (uRgba.a << 24u);
    uint word1 = packHalf2x16(center.xy);
    uint word2 = packHalf2x16(vec2(center.z, 0.0)) | (uQuat3.x << 16u) | (uQuat3.y << 24u);
    uint word3 = uScales.x | (uScales.y << 8u) | (uScales.z << 16u) | (uQuat3.z << 24u);
    return uvec4(word0, word1, word2, word3);
}

uvec4 packSplat(vec3 center, vec3 scales, vec4 quaternion, vec4 rgba) {
    return packSplatEncoding(center, scales, quaternion, rgba, vec4(0.0, 1.0, LN_SCALE_MIN, LN_SCALE_MAX));
}

void unpackSplatEncoding(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba, vec4 rgbMinMaxLnScaleMinMax) {
    uint word0 = packed.x, word1 = packed.y, word2 = packed.z, word3 = packed.w;

    uvec4 uRgba = uvec4(word0 & 0xffu, (word0 >> 8u) & 0xffu, (word0 >> 16u) & 0xffu, (word0 >> 24u) & 0xffu);
    float rgbMin = rgbMinMaxLnScaleMinMax.x;
    float rgbMax = rgbMinMaxLnScaleMinMax.y;
    rgba = (vec4(uRgba) / 255.0);
    rgba.rgb = rgba.rgb * (rgbMax - rgbMin) + rgbMin;

    center = vec4(
        unpackHalf2x16(word1),
        unpackHalf2x16(word2 & 0xffffu)
    ).xyz;

    uvec3 uScales = uvec3(word3 & 0xffu, (word3 >> 8u) & 0xffu, (word3 >> 16u) & 0xffu);
    float lnScaleMin = rgbMinMaxLnScaleMinMax.z;
    float lnScaleMax = rgbMinMaxLnScaleMinMax.w;
    float lnScaleScale = (lnScaleMax - lnScaleMin) / 254.0;
    scales = vec3(
        (uScales.x == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.x - 1u) * lnScaleScale),
        (uScales.y == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.y - 1u) * lnScaleScale),
        (uScales.z == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.z - 1u) * lnScaleScale)
    );

    uint uQuat = ((word2 >> 16u) & 0xFFFFu) | ((word3 >> 8u) & 0xFF0000u);
    quaternion = decodeQuatOctXy88R8(uQuat);
    
    
}

void unpackSplat(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba) {
    unpackSplatEncoding(packed, center, scales, quaternion, rgba, vec4(0.0, 1.0, LN_SCALE_MIN, LN_SCALE_MAX));
}

vec3 quatVec(vec4 q, vec3 v) {
    
    vec3 t = 2.0 * cross(q.xyz, v);
    return v + q.w * t + cross(q.xyz, t);
}

vec4 quatQuat(vec4 q1, vec4 q2) {
    return vec4(
        q1.w * q2.x + q1.x * q2.w + q1.y * q2.z - q1.z * q2.y,
        q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x,
        q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w,
        q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z
    );
}

mat3 scaleQuaternionToMatrix(vec3 s, vec4 q) {
    
    return mat3(
        s.x * (1.0 - 2.0 * (q.y * q.y + q.z * q.z)),
        s.x * (2.0 * (q.x * q.y + q.w * q.z)),
        s.x * (2.0 * (q.x * q.z - q.w * q.y)),
        s.y * (2.0 * (q.x * q.y - q.w * q.z)),
        s.y * (1.0 - 2.0 * (q.x * q.x + q.z * q.z)),
        s.y * (2.0 * (q.y * q.z + q.w * q.x)),
        s.z * (2.0 * (q.x * q.z + q.w * q.y)),
        s.z * (2.0 * (q.y * q.z - q.w * q.x)),
        s.z * (1.0 - 2.0 * (q.x * q.x + q.y * q.y))
    );
}

vec4 slerp(vec4 q1, vec4 q2, float t) {
    
    float cosHalfTheta = dot(q1, q2);

    
    if (abs(cosHalfTheta) >= 0.999) {
        return q1;
    }
    
    
    
    if (cosHalfTheta < 0.0) {
        q2 = -q2;
        cosHalfTheta = -cosHalfTheta;
    }

    
    float halfTheta = acos(cosHalfTheta);
    float sinHalfTheta = sqrt(1.0 - cosHalfTheta * cosHalfTheta);

    
    float ratioA = sin((1.0 - t) * halfTheta) / sinHalfTheta;
    float ratioB = sin(t * halfTheta) / sinHalfTheta;

    
    return q1 * ratioA + q2 * ratioB;
}

ivec3 splatTexCoord(int index) {
    uint x = uint(index) & SPLAT_TEX_WIDTH_MASK;
    uint y = (uint(index) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK;
    uint z = uint(index) >> SPLAT_TEX_LAYER_BITS;
    return ivec3(x, y, z);
}`,splatFragment_default=`precision highp float;
precision highp int;

#include <splatDefines>

uniform float near;
uniform float far;
uniform bool encodeLinear;
uniform float time;
uniform bool debugFlag;
uniform float maxStdDev;
uniform float minAlpha;
uniform bool stochastic;
uniform bool disableFalloff;
uniform float falloff;

uniform bool splatTexEnable;
uniform sampler3D splatTexture;
uniform mat2 splatTexMul;
uniform vec2 splatTexAdd;
uniform float splatTexNear;
uniform float splatTexFar;
uniform float splatTexMid;

out vec4 fragColor;

in vec4 vRgba;
in vec2 vSplatUv;
in vec3 vNdc;
flat in uint vSplatIndex;

void main() {
    vec4 rgba = vRgba;

    float z = dot(vSplatUv, vSplatUv);
    if (!splatTexEnable) {
        if (z > (maxStdDev * maxStdDev)) {
            discard;
        }
    } else {
        vec2 uv = splatTexMul * vSplatUv + splatTexAdd;
        float ndcZ = vNdc.z;
        float depth = (2.0 * near * far) / (far + near - ndcZ * (far - near));
        float clampedFar = max(splatTexFar, splatTexNear);
        float clampedDepth = clamp(depth, splatTexNear, clampedFar);
        float logDepth = log2(clampedDepth + 1.0);
        float logNear = log2(splatTexNear + 1.0);
        float logFar = log2(clampedFar + 1.0);

        float texZ;
        if (splatTexMid > 0.0) {
            float clampedMid = clamp(splatTexMid, splatTexNear, clampedFar);
            float logMid = log2(clampedMid + 1.0);
            texZ = (clampedDepth <= clampedMid) ?
                (0.5 * ((logDepth - logNear) / (logMid - logNear))) :
                (0.5 * ((logDepth - logMid) / (logFar - logMid)) + 0.5);
        } else {
            texZ = (logDepth - logNear) / (logFar - logNear);
        }

        vec4 modulate = texture(splatTexture, vec3(uv, 1.0 - texZ));
        rgba *= modulate;
    }

    rgba.a *= mix(1.0, exp(-0.5 * z), falloff);

    if (rgba.a < minAlpha) {
        discard;
    }
    if (encodeLinear) {
        rgba.rgb = srgbToLinear(rgba.rgb);
    }

    if (stochastic) {
        const bool STEADY = false;
        uint uTime = STEADY ? 0u : floatBitsToUint(time);
        uvec2 coord = uvec2(gl_FragCoord.xy);
        uint state = uTime + 0x9e3779b9u * coord.x + 0x85ebca6bu * coord.y + 0xc2b2ae35u * uint(vSplatIndex);
        state = state * 747796405u + 2891336453u;
        uint hash = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;
        hash = (hash >> 22u) ^ hash;
        float rand = float(hash) / 4294967296.0;
        if (rand < rgba.a) {
            fragColor = vec4(rgba.rgb, 1.0);
        } else {
            discard;
        }
    } else {
        #ifdef PREMULTIPLIED_ALPHA
            fragColor = vec4(rgba.rgb * rgba.a, rgba.a);
        #else
            fragColor = rgba;
        #endif
    }
}`,splatVertex_default=`precision highp float;
precision highp int;
precision highp usampler2DArray;

#include <splatDefines>

attribute uint splatIndex;

out vec4 vRgba;
out vec2 vSplatUv;
out vec3 vNdc;
flat out uint vSplatIndex;

uniform vec2 renderSize;
uniform uint numSplats;
uniform vec4 renderToViewQuat;
uniform vec3 renderToViewPos;
uniform float maxStdDev;
uniform float maxPixelRadius;
uniform float time;
uniform float deltaTime;
uniform bool debugFlag;
uniform float minAlpha;
uniform bool stochastic;
uniform bool enable2DGS;
uniform float blurAmount;
uniform float preBlurAmount;
uniform float focalDistance;
uniform float apertureAngle;
uniform float clipXY;
uniform float focalAdjustment;

uniform usampler2DArray packedSplats;
uniform vec4 rgbMinMaxLnScaleMinMax;

void main() {
    
    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);

    if (uint(gl_InstanceID) >= numSplats) {
        return;
    }

    ivec3 texCoord;
    if (stochastic) {
        texCoord = ivec3(
            uint(gl_InstanceID) & SPLAT_TEX_WIDTH_MASK,
            (uint(gl_InstanceID) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,
            (uint(gl_InstanceID) >> SPLAT_TEX_LAYER_BITS)
        );
    } else {
        if (splatIndex == 0xffffffffu) {
            
            return;
        }
        texCoord = ivec3(
            splatIndex & SPLAT_TEX_WIDTH_MASK,
            (splatIndex >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,
            splatIndex >> SPLAT_TEX_LAYER_BITS
        );
    }
    uvec4 packed = texelFetch(packedSplats, texCoord, 0);

    vec3 center, scales;
    vec4 quaternion, rgba;
    unpackSplatEncoding(packed, center, scales, quaternion, rgba, rgbMinMaxLnScaleMinMax);

    if (rgba.a < minAlpha) {
        return;
    }
    bvec3 zeroScales = equal(scales, vec3(0.0));
    if (all(zeroScales)) {
        return;
    }

    
    vec3 viewCenter = quatVec(renderToViewQuat, center) + renderToViewPos;

    
    if (viewCenter.z >= 0.0) {
        return;
    }

    
    vec4 clipCenter = projectionMatrix * vec4(viewCenter, 1.0);

    
    if (abs(clipCenter.z) >= clipCenter.w) {
        return;
    }

    
    float clip = clipXY * clipCenter.w;
    if (abs(clipCenter.x) > clip || abs(clipCenter.y) > clip) {
        return;
    }

    
    vSplatIndex = splatIndex;

    
    vec4 viewQuaternion = quatQuat(renderToViewQuat, quaternion);

    if (enable2DGS && any(zeroScales)) {
        vRgba = rgba;
        vSplatUv = position.xy * maxStdDev;

        vec3 offset;
        if (zeroScales.z) {
            offset = vec3(vSplatUv.xy * scales.xy, 0.0);
        } else if (zeroScales.y) {
            offset = vec3(vSplatUv.x * scales.x, 0.0, vSplatUv.y * scales.z);
        } else {
            offset = vec3(0.0, vSplatUv.xy * scales.yz);
        }

        vec3 viewPos = viewCenter + quatVec(viewQuaternion, offset);
        gl_Position = projectionMatrix * vec4(viewPos, 1.0);
        vNdc = gl_Position.xyz / gl_Position.w;
        return;
    }

    
    vec3 ndcCenter = clipCenter.xyz / clipCenter.w;

    
    mat3 RS = scaleQuaternionToMatrix(scales, viewQuaternion);
    mat3 cov3D = RS * transpose(RS);

    
    vec2 scaledRenderSize = renderSize * focalAdjustment;
    vec2 focal = 0.5 * scaledRenderSize * vec2(projectionMatrix[0][0], projectionMatrix[1][1]);
    float invZ = 1.0 / viewCenter.z;
    vec2 J1 = focal * invZ;
    vec2 J2 = -(J1 * viewCenter.xy) * invZ;
    mat3 J = mat3(
        J1.x, 0.0, J2.x,
        0.0, J1.y, J2.y,
        0.0, 0.0, 0.0
    );

    
    
    
    
    
    
    
    mat3 cov2D = transpose(J) * cov3D * J;
    float a = cov2D[0][0];
    float d = cov2D[1][1];
    float b = cov2D[0][1];

    
    a += preBlurAmount;
    d += preBlurAmount;

    float fullBlurAmount = blurAmount;
    if ((focalDistance > 0.0) && (apertureAngle > 0.0)) {
        float focusRadius = maxPixelRadius;
        if (viewCenter.z < 0.0) {
            float focusBlur = abs((-viewCenter.z - focalDistance) / viewCenter.z);
            float apertureRadius = focal.x * tan(0.5 * apertureAngle);
            focusRadius = focusBlur * apertureRadius;
        }
        fullBlurAmount = clamp(sqr(focusRadius), blurAmount, sqr(maxPixelRadius));
    }

    
    float detOrig = a * d - b * b;
    a += fullBlurAmount;
    d += fullBlurAmount;
    float det = a * d - b * b;

    
    float blurAdjust = sqrt(max(0.0, detOrig / det));
    rgba.a *= blurAdjust;
    if (rgba.a < minAlpha) {
        return;
    }

    
    float eigenAvg = 0.5 * (a + d);
    float eigenDelta = sqrt(max(0.0, eigenAvg * eigenAvg - det));
    float eigen1 = eigenAvg + eigenDelta;
    float eigen2 = eigenAvg - eigenDelta;

    vec2 eigenVec1 = normalize(vec2((abs(b) < 0.001) ? 1.0 : b, eigen1 - a));
    vec2 eigenVec2 = vec2(eigenVec1.y, -eigenVec1.x);

    float scale1 = position.x * min(maxPixelRadius, maxStdDev * sqrt(eigen1));
    float scale2 = position.y * min(maxPixelRadius, maxStdDev * sqrt(eigen2));

    
    vec2 pixelOffset = eigenVec1 * scale1 + eigenVec2 * scale2;
    vec2 ndcOffset = (2.0 / scaledRenderSize) * pixelOffset;
    vec3 ndc = vec3(ndcCenter.xy + ndcOffset, ndcCenter.z);

    vRgba = rgba;
    vSplatUv = position.xy * maxStdDev;
    vNdc = ndc;
    gl_Position = vec4(ndc.xy * clipCenter.w, clipCenter.zw);
}`;let shaders=null;function getShaders(){return shaders||(ShaderChunk.splatDefines=splatDefines_default,shaders={splatVertex:splatVertex_default,splatFragment:splatFragment_default}),shaders}const MAX_ACCUMULATORS=5;let hasSplatMesh=!1,hasSparkRenderer=!1,sparkRendererInstance;function containsSplatMesh(s){let e=!1;return s instanceof SplatMesh?!0:(s.traverse(t=>{e=e||t instanceof SplatMesh}),e)}const sceneAdd=Scene.prototype.add;Scene.prototype.add=function(s){return hasSplatMesh=hasSplatMesh||containsSplatMesh(s),hasSparkRenderer=hasSparkRenderer||s instanceof SparkRenderer,sceneAdd.call(this,s),this};const sceneOnBeforeRender=Scene.prototype.onBeforeRender;Scene.prototype.onBeforeRender=function(s){if(hasSplatMesh){if(!hasSparkRenderer){const e=sparkRendererInstance||new SparkRenderer({renderer:s});this.add(e)}Scene.prototype.onBeforeRender=sceneOnBeforeRender,Scene.prototype.add=sceneAdd}};const _SparkRenderer=class Qn extends Mesh{constructor(e){const t=Qn.makeUniforms(),n=getShaders(),o=e.premultipliedAlpha??!0,a=new ShaderMaterial({glslVersion:GLSL3,vertexShader:n.splatVertex,fragmentShader:n.splatFragment,uniforms:t,premultipliedAlpha:o,transparent:!0,depthTest:!0,depthWrite:!1,side:DoubleSide});super(EMPTY_GEOMETRY,a),this.splatTexture=null,this.autoViewpoints=[],this.rotateToAccumulator=new DynoVec4({value:new Quaternion}),this.translateToAccumulator=new DynoVec3({value:new Vector3}),this.lastFrame=-1,this.lastUpdateTime=null,this.defaultCameras=[],this.lastStochastic=null,this.pendingUpdate=null,this.envViewpoint=null,this.frustumCulled=!1,this.renderer=e.renderer,this.material=a,this.uniforms=t;const r=dynoBlock({gsplat:Gsplat},{gsplat:Gsplat},({gsplat:l})=>{if(!l)throw new Error("gsplat not defined");return l=transformGsplat(l,{rotate:this.rotateToAccumulator,translate:this.translateToAccumulator}),{gsplat:l}});this.modifier=new SplatModifier(r),this.premultipliedAlpha=o,this.autoUpdate=e.autoUpdate??!0,this.preUpdate=e.preUpdate??!1,this.needsUpdate=!1,this.originDistance=e.originDistance??1,this.maxStdDev=e.maxStdDev??Math.sqrt(8),this.maxPixelRadius=e.maxPixelRadius??512,this.minAlpha=e.minAlpha??.5*(1/255),this.enable2DGS=e.enable2DGS??!1,this.preBlurAmount=e.preBlurAmount??0,this.blurAmount=e.blurAmount??.3,this.focalDistance=e.focalDistance??0,this.apertureAngle=e.apertureAngle??0,this.falloff=e.falloff??1,this.clipXY=e.clipXY??1.4,this.focalAdjustment=e.focalAdjustment??1,this.splatEncoding=e.splatEncoding??{...DEFAULT_SPLAT_ENCODING},this.active=new SplatAccumulator,this.accumulatorCount=1,this.freeAccumulators=[];for(let l=0;l<1;++l)this.freeAccumulators.push(new SplatAccumulator),this.accumulatorCount+=1;this.defaultView=new SparkViewpoint({...e.view,autoUpdate:!0,spark:this}),this.viewpoint=this.defaultView,this.prepareViewpoint(this.viewpoint),this.clock=e.clock?cloneClock(e.clock):new Clock,sparkRendererInstance=this}static makeUniforms(){return{renderSize:{value:new Vector2},near:{value:.1},far:{value:1e3},numSplats:{value:0},renderToViewQuat:{value:new Quaternion},renderToViewPos:{value:new Vector3},maxStdDev:{value:1},maxPixelRadius:{value:512},minAlpha:{value:.00196078431372549},stochastic:{value:!1},enable2DGS:{value:!1},preBlurAmount:{value:0},blurAmount:{value:.3},focalDistance:{value:0},apertureAngle:{value:0},falloff:{value:1},clipXY:{value:1.4},focalAdjustment:{value:1},splatTexEnable:{value:!1},splatTexture:{type:"t",value:Qn.EMPTY_SPLAT_TEXTURE},splatTexMul:{value:new Matrix2},splatTexAdd:{value:new Vector2},splatTexNear:{value:.1},splatTexFar:{value:1e3},splatTexMid:{value:0},packedSplats:{type:"t",value:PackedSplats.getEmpty()},rgbMinMaxLnScaleMinMax:{value:new Vector4},time:{value:0},deltaTime:{value:0},encodeLinear:{value:!1},debugFlag:{value:!1}}}canAllocAccumulator(){return this.freeAccumulators.length>0||this.accumulatorCount<MAX_ACCUMULATORS}maybeAllocAccumulator(){let e=this.freeAccumulators.pop();if(e===void 0){if(this.accumulatorCount>=MAX_ACCUMULATORS)return null;e=new SplatAccumulator,this.accumulatorCount+=1}return e.refCount=1,e}releaseAccumulator(e){e.refCount-=1,e.refCount===0&&this.freeAccumulators.push(e)}newViewpoint(e){return new SparkViewpoint({...e,spark:this})}onBeforeRender(e,t,n){var o,a;const r=this.time??this.clock.getElapsedTime(),l=r-(this.viewpoint.lastTime??r);this.viewpoint.lastTime=r;const c=e.info.render.frame,u=c!==this.lastFrame;this.lastFrame=c;const d=this.viewpoint;if(d===this.defaultView){if(u)if(!e.xr.isPresenting)this.defaultView.viewToWorld=n.matrixWorld.clone(),this.defaultCameras=[this.defaultView.viewToWorld];else{const B=e.xr.getCamera().cameras;this.defaultCameras=B.map(I=>I.matrixWorld),this.defaultView.viewToWorld=averageOriginToWorlds(this.defaultCameras)??new Matrix4}this.autoUpdate&&this.update({scene:t,viewToWorld:this.defaultView.viewToWorld})}if(u&&(this.material.premultipliedAlpha!==this.premultipliedAlpha&&(this.material.premultipliedAlpha=this.premultipliedAlpha,this.material.needsUpdate=!0),this.uniforms.time.value=r,this.uniforms.deltaTime.value=l,this.uniforms.debugFlag.value=performance.now()/1e3%2<1,d.display&&d.stochastic&&(this.geometry.instanceCount=this.uniforms.numSplats.value)),d.target)this.uniforms.renderSize.value.set(d.target.width,d.target.height);else{const B=e.getDrawingBufferSize(this.uniforms.renderSize.value);if(B.x===1&&B.y===1){const I=(o=e.xr.getSession())==null?void 0:o.renderState.baseLayer;I&&(B.x=I.framebufferWidth,B.y=I.framebufferHeight)}}const f=n;if(this.uniforms.near.value=f.near,this.uniforms.far.value=f.far,this.uniforms.encodeLinear.value=d.encodeLinear,this.uniforms.maxStdDev.value=this.maxStdDev,this.uniforms.maxPixelRadius.value=this.maxPixelRadius,this.uniforms.minAlpha.value=this.minAlpha,this.uniforms.stochastic.value=d.stochastic,this.uniforms.enable2DGS.value=this.enable2DGS,this.uniforms.preBlurAmount.value=this.preBlurAmount,this.uniforms.blurAmount.value=this.blurAmount,this.uniforms.focalDistance.value=this.focalDistance,this.uniforms.apertureAngle.value=this.apertureAngle,this.uniforms.falloff.value=this.falloff,this.uniforms.clipXY.value=this.clipXY,this.uniforms.focalAdjustment.value=this.focalAdjustment,this.lastStochastic!==!d.stochastic&&(this.lastStochastic=!d.stochastic,this.material.transparent=!d.stochastic,this.material.depthWrite=d.stochastic,this.material.needsUpdate=!0),this.splatTexture){const{enable:B,texture:I,multiply:C,add:R,near:L,far:F,mid:N}=this.splatTexture;B&&I?(this.uniforms.splatTexEnable.value=!0,this.uniforms.splatTexture.value=I,C?this.uniforms.splatTexMul.value.fromArray(C.elements):this.uniforms.splatTexMul.value.set(.5/this.maxStdDev,0,0,.5/this.maxStdDev),this.uniforms.splatTexAdd.value.set((R==null?void 0:R.x)??.5,(R==null?void 0:R.y)??.5),this.uniforms.splatTexNear.value=L??this.uniforms.near.value,this.uniforms.splatTexFar.value=F??this.uniforms.far.value,this.uniforms.splatTexMid.value=N??0):(this.uniforms.splatTexEnable.value=!1,this.uniforms.splatTexture.value=Qn.EMPTY_SPLAT_TEXTURE)}else this.uniforms.splatTexEnable.value=!1,this.uniforms.splatTexture.value=Qn.EMPTY_SPLAT_TEXTURE;const g=((a=d.display)==null?void 0:a.accumulator.toWorld)??new Matrix4,_=n.matrixWorld.clone().invert();g.clone().premultiply(_).decompose(this.uniforms.renderToViewPos.value,this.uniforms.renderToViewQuat.value,new Vector3)}prepareViewpoint(e){var t,n,o,a;if(this.viewpoint=e??this.viewpoint,this.viewpoint.display){const{accumulator:r,geometry:l}=this.viewpoint.display;this.uniforms.numSplats.value=r.splats.numSplats,this.uniforms.packedSplats.value=r.splats.getTexture(),this.uniforms.rgbMinMaxLnScaleMinMax.value.set(((t=r.splats.splatEncoding)==null?void 0:t.rgbMin)??0,((n=r.splats.splatEncoding)==null?void 0:n.rgbMax)??1,((o=r.splats.splatEncoding)==null?void 0:o.lnScaleMin)??LN_SCALE_MIN,((a=r.splats.splatEncoding)==null?void 0:a.lnScaleMax)??LN_SCALE_MAX),this.geometry=l,this.material.transparent=!this.viewpoint.stochastic,this.material.depthWrite=this.viewpoint.stochastic,this.material.needsUpdate=!0}else this.uniforms.numSplats.value=0,this.uniforms.packedSplats.value=PackedSplats.getEmpty(),this.geometry=EMPTY_GEOMETRY}update({scene:e,viewToWorld:t}){const n=this.matrixWorld.clone();this.preUpdate?this.updateInternal({scene:e,originToWorld:n,viewToWorld:t}):(this.pendingUpdate={scene:e,originToWorld:n},setTimeout(()=>{if(this.pendingUpdate){const{scene:o,originToWorld:a}=this.pendingUpdate;this.pendingUpdate=null,this.updateInternal({scene:o,originToWorld:a,viewToWorld:t})}},1))}updateInternal({scene:e,originToWorld:t,viewToWorld:n}){var o;if(!this.canAllocAccumulator())return!1;t||(t=this.active.toWorld),n=n??t.clone();const a=this.time??this.clock.getElapsedTime(),r=a-(this.lastUpdateTime??a);this.lastUpdateTime=a;const l=this.active.mapping.reduce((B,I)=>(B.set(I.node,I),B),new Map),{generators:c,visibleGenerators:u,globalEdits:d}=this.compileScene(e);for(const B of c)(o=B.frameUpdate)==null||o.call(B,{object:B,time:a,deltaTime:r,viewToWorld:n,globalEdits:d});const f=new Set(u.map(B=>B.uuid));for(const B of c){const I=l.get(B),R=B.generator&&f.has(B.uuid)?B.numSplats:0;(this.needsUpdate||B.generator!==(I==null?void 0:I.generator)||R!==(I==null?void 0:I.count))&&B.updateVersion()}const g=!withinCoorientDist({matrix1:t,matrix2:this.active.toWorld,maxDistance:this.originDistance}),_=this.needsUpdate||g||c.length!==l.size||c.some(B=>{var I;return B.version!==((I=l.get(B))==null?void 0:I.version)});this.needsUpdate=!1;let b=null;if(_){if(b=this.maybeAllocAccumulator(),!b)throw new Error("Unreachable");const B=!withinCoorientDist({matrix1:t,matrix2:this.active.toWorld,maxDistance:1e-5,minCoorient:.99999}),C=u.map((Q,z)=>{const G=l.get(Q);return G?[Q.version-G.version,G.base,Q]:[Number.POSITIVE_INFINITY,Q.version,Q]}).sort((Q,z)=>Q[0]!==z[0]?Q[0]-z[0]:Q[1]-z[1]).map(([Q,z,G])=>G),R=C.map(Q=>Q.numSplats),{maxSplats:L,mapping:F}=b.splats.generateMapping(R),N=C.map((Q,z)=>{const{base:G,count:O}=F[z];return{node:Q,generator:Q.generator,version:Q.version,base:G,count:O}});t.clone().invert().decompose(this.translateToAccumulator.value,this.rotateToAccumulator.value,new Vector3),b.ensureGenerate(L),b.splats.splatEncoding={...this.splatEncoding},b.generateSplats({renderer:this.renderer,modifier:this.modifier,generators:N,forceUpdate:B,originToWorld:t}),b.splatsVersion=this.active.splatsVersion+1;const k=b.hasCorrespondence(this.active);b.mappingVersion=this.active.mappingVersion+(k?0:1),this.releaseAccumulator(this.active),this.active=b,this.prepareViewpoint()}return setTimeout(()=>{for(const B of this.autoViewpoints)B.autoPoll({accumulator:b??void 0})},1),!0}compileScene(e){const t=[];e.traverse(a=>{a instanceof SplatGenerator&&t.push(a)});const n=[];e.traverseVisible(a=>{a instanceof SplatGenerator&&n.push(a)});const o=new Set;return e.traverseVisible(a=>{if(a instanceof SplatEdit){let r=a.parent;for(;r!=null&&!(r instanceof SplatMesh);)r=r.parent;r==null&&o.add(a)}}),{generators:t,visibleGenerators:n,globalEdits:Array.from(o)}}async renderEnvMap({renderer:e,scene:t,worldCenter:n,size:o=256,near:a=.1,far:r=1e3,hideObjects:l=[],update:c=!1}){var u,d;if(this.envViewpoint||(this.envViewpoint=this.newViewpoint({sort360:!0})),!Qn.cubeRender||Qn.cubeRender.target.width!==o||Qn.cubeRender.near!==a||Qn.cubeRender.far!==r){Qn.cubeRender&&Qn.cubeRender.target.dispose();const B=new WebGLCubeRenderTarget(o,{format:RGBAFormat,generateMipmaps:!0,minFilter:LinearMipMapLinearFilter}),I=new CubeCamera(a,r,B);Qn.cubeRender={target:B,camera:I,near:a,far:r}}Qn.pmrem||(Qn.pmrem=new PMREMGenerator(e??this.renderer));const f=new Matrix4().setPosition(n);await((u=this.envViewpoint)==null?void 0:u.prepare({scene:t,viewToWorld:f,update:c}));const{target:g,camera:_}=Qn.cubeRender;_.position.copy(n);const b=new Map;for(const B of l)b.set(B,B.visible),B.visible=!1;this.prepareViewpoint(this.envViewpoint),_.update(e??this.renderer,t),this.prepareViewpoint(this.defaultView);for(const[B,I]of b.entries())B.visible=I;return(d=Qn.pmrem)==null?void 0:d.fromCubemap(g.texture).texture}recurseSetEnvMap(e,t){e.traverse(n=>{if(n instanceof Mesh)if(Array.isArray(n.material))for(const o of n.material)o instanceof MeshStandardMaterial&&(o.envMap=t);else n.material instanceof MeshStandardMaterial&&(n.material.envMap=t)})}getRgba({generator:e,rgba:t}){const n=this.active.mapping.find(({node:o})=>o===e);if(!n)throw new Error("Generator not found");return t=t??new RgbaArray,t.fromPackedSplats({packedSplats:this.active.splats,base:n.base,count:n.count,renderer:this.renderer}),t}async readRgba({generator:e,rgba:t}){return t=this.getRgba({generator:e,rgba:t}),t.read()}};_SparkRenderer.cubeRender=null;_SparkRenderer.pmrem=null;_SparkRenderer.EMPTY_SPLAT_TEXTURE=new Data3DTexture;let SparkRenderer=_SparkRenderer;const EMPTY_GEOMETRY=new SplatGeometry(new Uint32Array(1),0);dynoBlock({packedSplats:TPackedSplats,index:"int"},{gsplat:Gsplat},({packedSplats:s,index:e})=>{if(!s||!e)throw new Error("Invalid input");return{gsplat:readPackedSplat(s,e)}});function averageOriginToWorlds(s){if(s.length===0)return null;const e=new Vector3,t=new Quaternion,n=new Vector3,o=[],a=[];for(const r of s)r.decompose(e,t,n),o.push(e),a.push(t);return new Matrix4().compose(averagePositions(o),averageQuaternions(a),new Vector3(1,1,1))}unindent(`
  struct GsplatSkinning {
    int numSplats;
    int numBones;
    usampler2DArray skinTexture;
    sampler2D boneTexture;
  };
`);unindent(`
  void applyGsplatSkinning(
    int numSplats, int numBones,
    usampler2DArray skinTexture, sampler2D boneTexture,
    int splatIndex, inout vec3 center, inout vec4 quaternion
  ) {
    if ((splatIndex < 0) || (splatIndex >= numSplats)) {
      return;
    }

    uvec4 skinData = texelFetch(skinTexture, splatTexCoord(splatIndex), 0);

    float weights[4];
    weights[0] = float(skinData.x & 0xffu) / 255.0;
    weights[1] = float(skinData.y & 0xffu) / 255.0;
    weights[2] = float(skinData.z & 0xffu) / 255.0;
    weights[3] = float(skinData.w & 0xffu) / 255.0;

    uint boneIndices[4];
    boneIndices[0] = (skinData.x >> 8u) & 0xffu;
    boneIndices[1] = (skinData.y >> 8u) & 0xffu;
    boneIndices[2] = (skinData.z >> 8u) & 0xffu;
    boneIndices[3] = (skinData.w >> 8u) & 0xffu;

    vec4 quat = vec4(0.0);
    vec4 dual = vec4(0.0);
    for (int i = 0; i < 4; i++) {
      if (weights[i] > 0.0) {
        int boneIndex = int(boneIndices[i]);
        vec4 boneQuat = vec4(0.0, 0.0, 0.0, 1.0);
        vec4 boneDual = vec4(0.0);
        if (boneIndex < numBones) {
          boneQuat = texelFetch(boneTexture, ivec2(2, boneIndex), 0);
          boneDual = texelFetch(boneTexture, ivec2(3, boneIndex), 0);
        }

        if ((i > 0) && (dot(quat, boneQuat) < 0.0)) {
          // Flip sign if next blend is pointing in the opposite direction
          boneQuat = -boneQuat;
          boneDual = -boneDual;
        }
        quat += weights[i] * boneQuat;
        dual += weights[i] * boneDual;
      }
    }

    // Normalize dual quaternion
    float norm = length(quat);
    quat /= norm;
    dual /= norm;
    vec3 translate = vec3(
      2.0 * (-dual.w * quat.x + dual.x * quat.w - dual.y * quat.z + dual.z * quat.y),
      2.0 * (-dual.w * quat.y + dual.x * quat.z + dual.y * quat.w - dual.z * quat.x),
      2.0 * (-dual.w * quat.z - dual.x * quat.y + dual.y * quat.x + dual.z * quat.w)
    );

    center = quatVec(quat, center) + translate;
    quaternion = quatQuat(quat, quaternion);
  }
`);new Box3(new Vector3(-1,-1,-1),new Vector3(1,1,1)),new Vector3(-1,-3,1).normalize(),new Color(1,1,1),new Color(.5,.5,1),new Vector3(1,1,1);new Box3(new Vector3(-2,-1,-2),new Vector3(2,5,2)),new Vector3(0,-1,0),new Color(1,1,1),new Color(.25,.25,.5),new Vector3(.1,1,.1);const _VRButton=class Ir{static createButton(e,t={}){const n=navigator.xr;if(!n)return null;const o=n,a=document.createElement("button");e.xr.enabled=!0,e.xr.setReferenceSpaceType("local");function r(){let f=null;async function g(B){console.log("onSessionStarted"),B.addEventListener("end",_),await e.xr.setSession(B),a.textContent="EXIT VR",f=B}function _(){console.log("onSessionEnded"),f==null||f.removeEventListener("end",_),a.textContent="ENTER VR",f=null}a.style.display="",a.style.cursor="pointer",a.style.left="calc(50% - 100px)",a.style.width="200px",a.style.height="100px",a.textContent="ENTER VR";const b={...t,optionalFeatures:[...t.optionalFeatures||[]]};a.onmouseenter=()=>{a.style.opacity="1.0"},a.onmouseleave=()=>{a.style.opacity="0.5"},a.onclick=()=>{f===null?(console.log("requesting session"),o.requestSession("immersive-vr",b).then(g)):(console.log("ending session"),f.end())}}function l(){a.style.display="none",a.style.cursor="auto",a.style.left="calc(50% - 75px)",a.style.width="150px",a.onmouseenter=null,a.onmouseleave=null,a.onclick=null}function c(){l(),a.textContent="VR NOT SUPPORTED"}function u(f){l(),console.warn("Exception when trying to call xr.isSessionSupported",f),a.textContent="VR NOT ALLOWED"}function d(f){f.style.position="absolute",f.style.bottom="20px",f.style.padding="12px 6px",f.style.border="1px solid #fff",f.style.borderRadius="4px",f.style.background="rgba(0,0,0,0.1)",f.style.color="#fff",f.style.font="normal 13px sans-serif",f.style.textAlign="center",f.style.opacity="0.5",f.style.outline="none",f.style.zIndex="999"}return a.id="VRButton",a.style.display="none",d(a),o.isSessionSupported("immersive-vr").then(f=>{f?r():c(),f&&Ir.xrSessionIsGranted&&a.click()}).catch(u),a}static registerSessionGrantedListener(){const e=navigator.xr;if(!e)return null;const t=e;/WebXRViewer\//i.test(navigator.userAgent)||t.addEventListener("sessiongranted",()=>{Ir.xrSessionIsGranted=!0})}};_VRButton.xrSessionIsGranted=!1;let VRButton=_VRButton;VRButton.registerSessionGrantedListener();var JointEnum=(s=>(s.w="wrist",s.t0="thumb-metacarpal",s.t1="thumb-phalanx-proximal",s.t2="thumb-phalanx-distal",s.t3="thumb-tip",s.i0="index-finger-metacarpal",s.i1="index-finger-phalanx-proximal",s.i2="index-finger-phalanx-intermediate",s.i3="index-finger-phalanx-distal",s.i4="index-finger-tip",s.m0="middle-finger-metacarpal",s.m1="middle-finger-phalanx-proximal",s.m2="middle-finger-phalanx-intermediate",s.m3="middle-finger-phalanx-distal",s.m4="middle-finger-tip",s.r0="ring-finger-metacarpal",s.r1="ring-finger-phalanx-proximal",s.r2="ring-finger-phalanx-intermediate",s.r3="ring-finger-phalanx-distal",s.r4="ring-finger-tip",s.p0="pinky-finger-metacarpal",s.p1="pinky-finger-phalanx-proximal",s.p2="pinky-finger-phalanx-intermediate",s.p3="pinky-finger-phalanx-distal",s.p4="pinky-finger-tip",s))(JointEnum||{});const JOINT_IDS=Object.keys(JointEnum);JOINT_IDS.length;new Vector3(0,0,-1),new Vector3(0,0,1),new Vector3(-1,0,0),new Vector3(1,0,0),new Vector3(0,1,0),new Vector3(0,-1,0);new Vector3(0,0,-1),new Vector3(0,0,1),new Vector3(-1,0,0),new Vector3(1,0,0),new Vector3(0,1,0),new Vector3(0,-1,0);new Vector3(0,0,1),new Vector3(0,0,-1);new Vector3(0,-1,0),new Vector3(0,1,0),new Vector3(-1,0,0),new Vector3(1,0,0);class GsRenderController{constructor(e){this.viewer=null,this.splatConfigs=[],this.sceneController=e,this.renderer=this.sceneController.getRenderer(),this.camera=this.sceneController.getCamera(),this.scene=this.sceneController.getScene()}async render(e,t,n=void 0){}animate(){}onWindowResize(){}dispose(){}loadMesh(e){var t,n;console.log("loadMesh",e),e.meshName?this.loadSceneMesh(e.meshName,e.scale):this.createFloor({size:[1e3,1e3],position:[0,0,0],rotation:[-90,0,8],color:"#ffffff",opacity:1,isCollision:!0,visible:!1}),((t=e.customMesh)==null?void 0:t.length)!==0&&((n=e.customMesh)==null||n.forEach(o=>{this.createFloor(o)}))}loadSceneMesh(e,t){if(console.log("addMesh",e,"scale",t),!e){console.warn("meshName is not exist");return}const n=this,o=new GLTFLoader;e.startsWith("http")||o.setPath("./models/"),o.load(e,a=>{const r=a.scene;r.rotation.y=Math.PI,t&&Array.isArray(t)&&t.length===3&&(r.scale.set(t[0],t[1],t[2]),console.log("设置模型缩放:",t)),r.traverse(l=>{l.isMesh&&(l.castShadow=!0,l.receiveShadow=!0)}),n.sceneController.getScene().add(r),n.debugMesh=r,n.sceneController.getWorldOctree().fromGraphNode(n.debugMesh)})}createFloor(e){console.log("createFloor",e);const t=new PlaneGeometry(e.size[0],e.size[1]),n=new MeshLambertMaterial({color:new Color(e.color),transparent:!0,opacity:e.opacity}),o=new Mesh(t,n);o.rotation.x=e.rotation[0]*Math.PI/180,o.rotation.y=e.rotation[1]*Math.PI/180,o.rotation.z=e.rotation[2]*Math.PI/180,o.position.x=e.position[0],o.position.y=e.position[1],o.position.z=e.position[2],e.isCollision&&(this.sceneController.getWorldOctree().fromGraphNode(o),o.receiveShadow=!0),o.visible=e.visible?e.visible:!1,this.scene.add(o)}setInfoPanelVisible(e){}getConfig(e){var n,o,a,r,l;let t=[];return e.url instanceof Array?t=e.url.map(c=>{var u,d,f,g;return{url:c.path,show:!1,position:c.position||((u=e==null?void 0:e.splashInfo)==null?void 0:u.position)||[0,0,0],rotation:getRotationMatrix(c==null?void 0:c.rotation)||[0,0,-1,0],scale:c.scale||((d=e==null?void 0:e.splashInfo)==null?void 0:d.scale)||[1,1,1],meshName:(f=e==null?void 0:e.splashInfo)==null?void 0:f.meshName,rendererScale:(e==null?void 0:e.rendererScale)||1,customMesh:((g=e==null?void 0:e.splashInfo)==null?void 0:g.customMesh)||[]}}):t=[{url:e.url,show:!1,position:((n=e==null?void 0:e.splashInfo)==null?void 0:n.position)||[0,0,0],rotation:getRotationMatrix((o=e==null?void 0:e.splashInfo)==null?void 0:o.rotation)||[0,0,-1,0],scale:((a=e==null?void 0:e.splashInfo)==null?void 0:a.scale)||[1,1,1],meshName:(r=e==null?void 0:e.splashInfo)==null?void 0:r.meshName,rendererScale:(e==null?void 0:e.rendererScale)||1,customMesh:((l=e==null?void 0:e.splashInfo)==null?void 0:l.customMesh)||[]}],t}setRenderScale(e,t,n){e.style.transform=`scale(${1/t})`,e.style.transformOrigin="0 0";const o=getElementSize(n||document.body),a=o.width*t,r=o.height*t;this.renderer.setSize(a,r)}}let camera,renderer,resizeObserver;function resizeEventListener(s,e,t,n=1){camera=s,renderer=e,resizeObserver=new ResizeObserver(()=>{const o=getElementSize(document.body);console.log("resize",o,t),camera.aspect=o.width/o.height,camera.updateProjectionMatrix(),t.style.transform=`scale(${1/n})`;const a=o.width*n,r=o.height*n;renderer.setSize(a,r),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}),resizeObserver.observe(document.body)}class SparkRenderController extends GsRenderController{async render(e,t,n){console.log("init3DGS using spark render",e,t,n);const o=this.getConfig(e);for(const a of o)a.rendererScale!==1&&this.setRenderScale(t,a.rendererScale,n),resizeEventListener(this.camera,this.renderer,t,a.rendererScale),this.loadMesh(a),this.spark=new SparkRenderer({renderer:this.renderer,autoUpdate:!1}),await this.loadSplatFile(a)}async loadSplatFile(e){console.log("loadSplatFile ",e);const t=new PackedSplats({url:e.url}),n=new SplatMesh({packedSplats:t});n.rotateX(Math.PI),n.rotateY(Math.PI),e.position&&n.position.set(e.position[0],e.position[1],e.position[2]),e.scale&&n.scale.set(e.scale[0],e.scale[1],e.scale[2]),this.scene.add(n)}getUrls(){return this.splatConfigs}animate(){var e;(e=this.spark)==null||e.update({scene:this.scene})}onWindowResize(){super.onWindowResize(),window.location.reload()}dispose(){}}class GS3dRenderController extends GsRenderController{async render(e,t,n=void 0){console.log("init3DGS using GaussianSplats3D render ",e,t,n);const o=this.getConfig(e);console.log("splatConfigs",o),this.splatConfigs=o;for(const a of o){console.log("handle config",a),a.rendererScale!==1&&this.setRenderScale(t,a.rendererScale,n),resizeEventListener(this.camera,this.renderer,t,a.rendererScale),this.loadMesh(a);const r={sphericalHarmonicsDegree:(a==null?void 0:a.sphericalHarmonicsDegree)>=0?a.sphericalHarmonicsDegree:2,sharedMemoryForWorkers:!0,renderer:this.renderer,camera:this.camera,useBuiltInControls:!1,threeScene:this.scene,selfDrivenMode:!1,...a==null?void 0:a.gaussianSplats3DOption};r.rootElement=t,console.log("viewerOptions",r),this.viewer=new Viewer(r),console.log("addSplatScene",a.url,a),a.showLoadingUI=!1,a.progressiveLoad=!0,await this.viewer.addSplatScene(a.url,a),this.changeUrlState(a.url,!0)}}async add(e){return await this.viewer.addSplatScene(this.splatConfigs[e].url,{progressiveLoad:!0,position:this.splatConfigs[e].position,rotation:this.splatConfigs[e].rotation,scale:this.splatConfigs[e].scale,showLoadingUI:!1}),this.changeUrlState(this.splatConfigs[e].url,!0),this.viewer.update(),this.viewer.render(),this.splatConfigs}remove(e){let t=-1;for(let n=0;n<=e&&n<this.splatConfigs.length;n++)this.splatConfigs[n].show===!0&&(t+=1);this.viewer.removeSplatScene(t,!0),this.changeUrlState(this.splatConfigs[e].url,!1)}changeUrlState(e,t){const n=this.splatConfigs.find(o=>o.url===e);n.show=t}setInfoPanelVisible(e){console.log("model-controller",e),this.viewer.showInfo=e;const t=document.querySelector(".infoPanel"),n=document.getElementById("app");this.viewer.infoPanel.show(),e?(t.style.display="",n.appendChild(t),t.style.marginTop="100px"):t.style.display="none"}animate(){var e,t;(e=this.viewer)==null||e.update(),(t=this.viewer)==null||t.render()}onWindowResize(){}}function getGaussianSplattingRender(s){const e=localStorage.getItem("engine"),t=isMobile();switch(console.log("get model controller ",e,t),e){case EngineConfig.Spark:return new SparkRenderController(s);case EngineConfig.GaussianSplats3D:return new GS3dRenderController(s);case EngineConfig.Auto:default:return t?new SparkRenderController(s):new GS3dRenderController(s)}}class SceneController{constructor(e){this.container=e,this.scene=null,this.frameCount=0,this.camera=null,this.renderer=null,this.orbitControl=null,this.worldOctree=null,this.cameraTarget=new Vector3,this.cameraOffset=new Vector3,this.smoothFactor=.1,this.isFollowingPlayer=!0,this.isOrbiting=!1,this.orbitRadius=4,this.orbitAngle=0,this.orbitSpeed=.002,this.orbitCenter=new Vector3,this.orbitHeight=0,this.savedCameraPosition=null,this.savedCameraTarget=null,this.lastPlayerPosition=new Vector3,this.isMobile=isMobile(),this.offset=this.isMobileVerticalScreen()?1:0}async initScene(e){var n,o,a,r,l,c,u,d,f,g,_,b,B,I,C,R,L,F,N,k;this.config=e,this.scene=new Scene,this.scene.background=new Color(11067120),this.worldOctree=new Octree,this.camera=new PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.y=5,this.camera.position.z=5,this.camera.position.x=0,this.camera.position.set(0,2,10),this.renderer=new WebGLRenderer({antialias:!1,powerPreference:"high-performance"}),this.renderer.setSize(window.innerWidth,window.innerHeight);const t=this.isMobile?Math.min(1.5,window.devicePixelRatio):window.devicePixelRatio;this.renderer.setPixelRatio(t),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=PCFSoftShadowMap,this.container.appendChild(this.renderer.domElement),this.orbitControl=new OrbitControls(this.camera,this.renderer.domElement),this.orbitControl.enableDamping=!0,this.orbitControl.minDistance=4+this.offset,this.orbitControl.maxDistance=4+this.offset,this.orbitControl.enablePan=!1,this.orbitControl.maxPolarAngle=Math.PI/2+.8,this.orbitControl.update(),this.addLights(),this.gsRender=getGaussianSplattingRender(this),await this.gsRender.render(this.config,this.container),(o=(n=this.config)==null?void 0:n.avatarInfo)!=null&&o.camera&&(this.camera.position.set((l=(r=(a=this.config)==null?void 0:a.avatarInfo)==null?void 0:r.camera)==null?void 0:l.position.x,(d=(u=(c=this.config)==null?void 0:c.avatarInfo)==null?void 0:u.camera)==null?void 0:d.position.y,(_=(g=(f=this.config)==null?void 0:f.avatarInfo)==null?void 0:g.camera)==null?void 0:_.position.z),this.camera.lookAt((I=(B=(b=this.config)==null?void 0:b.avatarInfo)==null?void 0:B.camera)==null?void 0:I.target.x,(L=(R=(C=this.config)==null?void 0:C.avatarInfo)==null?void 0:R.camera)==null?void 0:L.target.y,(k=(N=(F=this.config)==null?void 0:F.avatarInfo)==null?void 0:N.camera)==null?void 0:k.target.z)),window.addEventListener("resize",this.onWindowResize.bind(this))}addLights(){const e=new AmbientLight(6719692,.6);this.scene.add(e);const t=new DirectionalLight(16777215,1.2);t.position.set(-5,25,-1),t.castShadow=!0,this.isMobile?(t.shadow.mapSize.width=512,t.shadow.mapSize.height=512,t.shadow.radius=2):(t.shadow.mapSize.width=2048,t.shadow.mapSize.height=2048,t.shadow.radius=3),t.shadow.camera.near=.1,t.shadow.camera.far=500,t.shadow.camera.right=30,t.shadow.camera.left=-30,t.shadow.camera.top=30,t.shadow.camera.bottom=-30,t.shadow.bias=-1e-4,this.scene.add(t)}onWindowResize(){this.gsRender.onWindowResize()}animate(){this.updateOrbiting(),this.adjustCameraDistance(),this.renderer.render(this.scene,this.camera),this.frameCount++,this.frameCount%2===0&&this.gsRender.animate()}adjustCameraDistance(){if(!this.orbitControl)return;const e=this.orbitControl.getPolarAngle(),t=Math.PI/2,n=Math.PI/2+.8;let o;if(e<=t)o=4;else{const r=e-t,l=n-t,c=Math.min(1,r/l),u=2,d=4+this.offset;o=d-(d-u)*c}if(this.orbitControl.maxDistance=MathUtils.lerp(this.orbitControl.maxDistance,o,.1),this.orbitControl.getDistance()>this.orbitControl.maxDistance){const r=this.camera.position.clone().sub(this.orbitControl.target).normalize();this.camera.position.copy(this.orbitControl.target).add(r.multiplyScalar(this.orbitControl.maxDistance))}}isMobileVerticalScreen(){return this.isMobile&&window.innerHeight>window.innerWidth}getScene(){return this.scene}getCamera(){return this.camera}getRenderer(){return this.renderer}getOrbitControl(){return this.orbitControl}getWorldOctree(){return this.worldOctree}initializeCameraTarget(e){this.cameraTarget.copy(e),this.cameraTarget.y+=1.7,this.lastPlayerPosition.copy(e),this.orbitControl.target=this.cameraTarget}updateCamera(e){if(!this.isFollowingPlayer)return;const t=e.clone().sub(this.lastPlayerPosition);this.camera.position.add(t),this.cameraTarget.copy(e),this.cameraTarget.y+=1.7,this.orbitControl.target=this.cameraTarget,this.lastPlayerPosition.copy(e)}setCameraAndOribitControl(e){this.getCamera().position.set(e.position.x,e.position.y,e.position.z);const n=this.getOrbitControl();n.target.set(e.target.x,e.target.y,e.target.z),n.azimuthalAngle=e.azimuthalAngle,n.polarAngle=e.distance,n.distance=e.polarAngle,n.update()}smoothUpdateCamera(e,t){if(!this.isFollowingPlayer)return;const n=e.clone();n.add(this.cameraOffset),this.camera.position.lerp(n,this.smoothFactor),this.cameraTarget.copy(e),this.cameraTarget.y+=1.7,this.orbitControl.target.lerp(this.cameraTarget,this.smoothFactor)}setCameraOffset(e){this.cameraOffset.copy(e)}setFollowPlayer(e){this.isFollowingPlayer=e}setSmoothFactor(e){this.smoothFactor=Math.max(0,Math.min(1,e))}enableOrbitControls(){this.orbitControl.enabled=!0}disableOrbitControls(){this.orbitControl.enabled=!1}startOrbiting(e){this.isOrbiting=!0,this.orbitCenter.copy(e),this.orbitCenter.y+=1.7,this.savedCameraPosition=this.camera.position.clone(),this.savedCameraTarget=this.orbitControl.target.clone();const t=this.camera.position.clone().sub(this.orbitCenter);this.orbitAngle=Math.atan2(t.x,t.z),this.orbitRadius=Math.sqrt(t.x*t.x+t.z*t.z),this.orbitHeight=this.camera.position.y,this.disableOrbitControls()}stopOrbiting(){this.isOrbiting=!1,this.savedCameraTarget&&this.orbitControl.target.copy(this.savedCameraTarget),this.enableOrbitControls(),this.orbitControl.update()}updateOrbiting(){if(!this.isOrbiting)return;this.orbitAngle+=this.orbitSpeed;const e=this.orbitCenter.x+Math.sin(this.orbitAngle)*this.orbitRadius,t=this.orbitCenter.z+Math.cos(this.orbitAngle)*this.orbitRadius;this.camera.position.set(e,this.orbitHeight,t),this.camera.lookAt(this.orbitCenter)}resetCamera(e){this.initializeCameraTarget(e)}showInfoPanel(e){this.modelController.showInfoPanel(e)}updateLighting(e){}updateEnvironment(e){}}/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.20.0
 * @author George Michael Brower
 * @license MIT
 */class Controller{constructor(e,t,n,o,a="div"){this.parent=e,this.object=t,this.property=n,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement(a),this.domElement.classList.add("controller"),this.domElement.classList.add(o),this.$name=document.createElement("div"),this.$name.classList.add("name"),Controller.nextNameID=Controller.nextNameID||0,this.$name.id=`lil-gui-name-${++Controller.nextNameID}`,this.$widget=document.createElement("div"),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.domElement.addEventListener("keydown",r=>r.stopPropagation()),this.domElement.addEventListener("keyup",r=>r.stopPropagation()),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(n)}name(e){return this._name=e,this.$name.textContent=e,this}onChange(e){return this._onChange=e,this}_callOnChange(){this.parent._callOnChange(this),this._onChange!==void 0&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),this._onFinishChange!==void 0&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(e=!0){return this.disable(!e)}disable(e=!0){return e===this._disabled?this:(this._disabled=e,this.domElement.classList.toggle("disabled",e),this.$disable.toggleAttribute("disabled",e),this)}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(e){const t=this.parent.add(this.object,this.property,e);return t.name(this._name),this.destroy(),t}min(e){return this}max(e){return this}step(e){return this}decimals(e){return this}listen(e=!0){return this._listening=e,this._listenCallbackID!==void 0&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const e=this.save();e!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=e}getValue(){return this.object[this.property]}setValue(e){return this.getValue()!==e&&(this.object[this.property]=e,this._callOnChange(),this.updateDisplay()),this}updateDisplay(){return this}load(e){return this.setValue(e),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class BooleanController extends Controller{constructor(e,t,n){super(e,t,n,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",()=>{this.setValue(this.$input.checked),this._callOnFinishChange()}),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function normalizeColorString(s){let e,t;return(e=s.match(/(#|0x)?([a-f0-9]{6})/i))?t=e[2]:(e=s.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?t=parseInt(e[1]).toString(16).padStart(2,0)+parseInt(e[2]).toString(16).padStart(2,0)+parseInt(e[3]).toString(16).padStart(2,0):(e=s.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(t=e[1]+e[1]+e[2]+e[2]+e[3]+e[3]),t?"#"+t:!1}const STRING={isPrimitive:!0,match:s=>typeof s=="string",fromHexString:normalizeColorString,toHexString:normalizeColorString},INT={isPrimitive:!0,match:s=>typeof s=="number",fromHexString:s=>parseInt(s.substring(1),16),toHexString:s=>"#"+s.toString(16).padStart(6,0)},ARRAY={isPrimitive:!1,match:s=>Array.isArray(s),fromHexString(s,e,t=1){const n=INT.fromHexString(s);e[0]=(n>>16&255)/255*t,e[1]=(n>>8&255)/255*t,e[2]=(n&255)/255*t},toHexString([s,e,t],n=1){n=255/n;const o=s*n<<16^e*n<<8^t*n<<0;return INT.toHexString(o)}},OBJECT={isPrimitive:!1,match:s=>Object(s)===s,fromHexString(s,e,t=1){const n=INT.fromHexString(s);e.r=(n>>16&255)/255*t,e.g=(n>>8&255)/255*t,e.b=(n&255)/255*t},toHexString({r:s,g:e,b:t},n=1){n=255/n;const o=s*n<<16^e*n<<8^t*n<<0;return INT.toHexString(o)}},FORMATS=[STRING,INT,ARRAY,OBJECT];function getColorFormat(s){return FORMATS.find(e=>e.match(s))}class ColorController extends Controller{constructor(e,t,n,o){super(e,t,n,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=getColorFormat(this.initialValue),this._rgbScale=o,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",()=>{this._setValueFromHexString(this.$input.value)}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$text.addEventListener("input",()=>{const a=normalizeColorString(this.$text.value);a&&this._setValueFromHexString(a)}),this.$text.addEventListener("focus",()=>{this._textFocused=!0,this.$text.select()}),this.$text.addEventListener("blur",()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()}),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(e){if(this._format.isPrimitive){const t=this._format.fromHexString(e);this.setValue(t)}else this._format.fromHexString(e,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(e){return this._setValueFromHexString(e),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class FunctionController extends Controller{constructor(e,t,n){super(e,t,n,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",o=>{o.preventDefault(),this.getValue().call(this.object),this._callOnChange()}),this.$button.addEventListener("touchstart",()=>{},{passive:!0}),this.$disable=this.$button}}class NumberController extends Controller{constructor(e,t,n,o,a,r){super(e,t,n,"number"),this._initInput(),this.min(o),this.max(a);const l=r!==void 0;this.step(l?r:this._getImplicitStep(),l),this.updateDisplay()}decimals(e){return this._decimals=e,this.updateDisplay(),this}min(e){return this._min=e,this._onUpdateMinMax(),this}max(e){return this._max=e,this._onUpdateMinMax(),this}step(e,t=!0){return this._step=e,this._stepExplicit=t,this}updateDisplay(){const e=this.getValue();if(this._hasSlider){let t=(e-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=t*100+"%"}return this._inputFocused||(this.$input.value=this._decimals===void 0?e:e.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),window.matchMedia("(pointer: coarse)").matches&&(this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any")),this.$widget.appendChild(this.$input),this.$disable=this.$input;const t=()=>{let R=parseFloat(this.$input.value);isNaN(R)||(this._stepExplicit&&(R=this._snap(R)),this.setValue(this._clamp(R)))},n=R=>{const L=parseFloat(this.$input.value);isNaN(L)||(this._snapClampSetValue(L+R),this.$input.value=this.getValue())},o=R=>{R.key==="Enter"&&this.$input.blur(),R.code==="ArrowUp"&&(R.preventDefault(),n(this._step*this._arrowKeyMultiplier(R))),R.code==="ArrowDown"&&(R.preventDefault(),n(this._step*this._arrowKeyMultiplier(R)*-1))},a=R=>{this._inputFocused&&(R.preventDefault(),n(this._step*this._normalizeMouseWheel(R)))};let r=!1,l,c,u,d,f;const g=5,_=R=>{l=R.clientX,c=u=R.clientY,r=!0,d=this.getValue(),f=0,window.addEventListener("mousemove",b),window.addEventListener("mouseup",B)},b=R=>{if(r){const L=R.clientX-l,F=R.clientY-c;Math.abs(F)>g?(R.preventDefault(),this.$input.blur(),r=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(L)>g&&B()}if(!r){const L=R.clientY-u;f-=L*this._step*this._arrowKeyMultiplier(R),d+f>this._max?f=this._max-d:d+f<this._min&&(f=this._min-d),this._snapClampSetValue(d+f)}u=R.clientY},B=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",b),window.removeEventListener("mouseup",B)},I=()=>{this._inputFocused=!0},C=()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()};this.$input.addEventListener("input",t),this.$input.addEventListener("keydown",o),this.$input.addEventListener("wheel",a,{passive:!1}),this.$input.addEventListener("mousedown",_),this.$input.addEventListener("focus",I),this.$input.addEventListener("blur",C)}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const e=(C,R,L,F,N)=>(C-R)/(L-R)*(N-F)+F,t=C=>{const R=this.$slider.getBoundingClientRect();let L=e(C,R.left,R.right,this._min,this._max);this._snapClampSetValue(L)},n=C=>{this._setDraggingStyle(!0),t(C.clientX),window.addEventListener("mousemove",o),window.addEventListener("mouseup",a)},o=C=>{t(C.clientX)},a=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",o),window.removeEventListener("mouseup",a)};let r=!1,l,c;const u=C=>{C.preventDefault(),this._setDraggingStyle(!0),t(C.touches[0].clientX),r=!1},d=C=>{C.touches.length>1||(this._hasScrollBar?(l=C.touches[0].clientX,c=C.touches[0].clientY,r=!0):u(C),window.addEventListener("touchmove",f,{passive:!1}),window.addEventListener("touchend",g))},f=C=>{if(r){const R=C.touches[0].clientX-l,L=C.touches[0].clientY-c;Math.abs(R)>Math.abs(L)?u(C):(window.removeEventListener("touchmove",f),window.removeEventListener("touchend",g))}else C.preventDefault(),t(C.touches[0].clientX)},g=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",f),window.removeEventListener("touchend",g)},_=this._callOnFinishChange.bind(this),b=400;let B;const I=C=>{if(Math.abs(C.deltaX)<Math.abs(C.deltaY)&&this._hasScrollBar)return;C.preventDefault();const L=this._normalizeMouseWheel(C)*this._step;this._snapClampSetValue(this.getValue()+L),this.$input.value=this.getValue(),clearTimeout(B),B=setTimeout(_,b)};this.$slider.addEventListener("mousedown",n),this.$slider.addEventListener("touchstart",d,{passive:!1}),this.$slider.addEventListener("wheel",I,{passive:!1})}_setDraggingStyle(e,t="horizontal"){this.$slider&&this.$slider.classList.toggle("active",e),document.body.classList.toggle("lil-gui-dragging",e),document.body.classList.toggle(`lil-gui-${t}`,e)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(e){let{deltaX:t,deltaY:n}=e;return Math.floor(e.deltaY)!==e.deltaY&&e.wheelDelta&&(t=0,n=-e.wheelDelta/120,n*=this._stepExplicit?1:10),t+-n}_arrowKeyMultiplier(e){let t=this._stepExplicit?1:10;return e.shiftKey?t*=10:e.altKey&&(t/=10),t}_snap(e){let t=0;return this._hasMin?t=this._min:this._hasMax&&(t=this._max),e-=t,e=Math.round(e/this._step)*this._step,e+=t,e=parseFloat(e.toPrecision(15)),e}_clamp(e){return e<this._min&&(e=this._min),e>this._max&&(e=this._max),e}_snapClampSetValue(e){this.setValue(this._clamp(this._snap(e)))}get _hasScrollBar(){const e=this.parent.root.$children;return e.scrollHeight>e.clientHeight}get _hasMin(){return this._min!==void 0}get _hasMax(){return this._max!==void 0}}class OptionController extends Controller{constructor(e,t,n,o){super(e,t,n,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$select.addEventListener("change",()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()}),this.$select.addEventListener("focus",()=>{this.$display.classList.add("focus")}),this.$select.addEventListener("blur",()=>{this.$display.classList.remove("focus")}),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.options(o)}options(e){return this._values=Array.isArray(e)?e:Object.values(e),this._names=Array.isArray(e)?e:Object.keys(e),this.$select.replaceChildren(),this._names.forEach(t=>{const n=document.createElement("option");n.textContent=t,this.$select.appendChild(n)}),this.updateDisplay(),this}updateDisplay(){const e=this.getValue(),t=this._values.indexOf(e);return this.$select.selectedIndex=t,this.$display.textContent=t===-1?e:this._names[t],this}}class StringController extends Controller{constructor(e,t,n){super(e,t,n,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("spellcheck","false"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",()=>{this.setValue(this.$input.value)}),this.$input.addEventListener("keydown",o=>{o.code==="Enter"&&this.$input.blur()}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}var stylesheet=`.lil-gui {
  font-family: var(--font-family);
  font-size: var(--font-size);
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  text-align: left;
  color: var(--text-color);
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  --background-color: #1f1f1f;
  --text-color: #ebebeb;
  --title-background-color: #111111;
  --title-text-color: #ebebeb;
  --widget-color: #424242;
  --hover-color: #4f4f4f;
  --focus-color: #595959;
  --number-color: #2cc9ff;
  --string-color: #a2db3c;
  --font-size: 11px;
  --input-font-size: 11px;
  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;
  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;
  --padding: 4px;
  --spacing: 4px;
  --widget-height: 20px;
  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);
  --name-width: 45%;
  --slider-knob-width: 2px;
  --slider-input-width: 27%;
  --color-input-width: 27%;
  --slider-input-min-width: 45px;
  --color-input-min-width: 45px;
  --folder-indent: 7px;
  --widget-padding: 0 0 0 3px;
  --widget-border-radius: 2px;
  --checkbox-size: calc(0.75 * var(--widget-height));
  --scrollbar-width: 5px;
}
.lil-gui, .lil-gui * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
.lil-gui.root {
  width: var(--width, 245px);
  display: flex;
  flex-direction: column;
  background: var(--background-color);
}
.lil-gui.root > .title {
  background: var(--title-background-color);
  color: var(--title-text-color);
}
.lil-gui.root > .children {
  overflow-x: hidden;
  overflow-y: auto;
}
.lil-gui.root > .children::-webkit-scrollbar {
  width: var(--scrollbar-width);
  height: var(--scrollbar-width);
  background: var(--background-color);
}
.lil-gui.root > .children::-webkit-scrollbar-thumb {
  border-radius: var(--scrollbar-width);
  background: var(--focus-color);
}
@media (pointer: coarse) {
  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {
    --widget-height: 28px;
    --padding: 6px;
    --spacing: 6px;
    --font-size: 13px;
    --input-font-size: 16px;
    --folder-indent: 10px;
    --scrollbar-width: 7px;
    --slider-input-min-width: 50px;
    --color-input-min-width: 65px;
  }
}
.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {
  --widget-height: 28px;
  --padding: 6px;
  --spacing: 6px;
  --font-size: 13px;
  --input-font-size: 16px;
  --folder-indent: 10px;
  --scrollbar-width: 7px;
  --slider-input-min-width: 50px;
  --color-input-min-width: 65px;
}
.lil-gui.autoPlace {
  max-height: 100%;
  position: fixed;
  top: 0;
  right: 15px;
  z-index: 1001;
}

.lil-gui .controller {
  display: flex;
  align-items: center;
  padding: 0 var(--padding);
  margin: var(--spacing) 0;
}
.lil-gui .controller.disabled {
  opacity: 0.5;
}
.lil-gui .controller.disabled, .lil-gui .controller.disabled * {
  pointer-events: none !important;
}
.lil-gui .controller > .name {
  min-width: var(--name-width);
  flex-shrink: 0;
  white-space: pre;
  padding-right: var(--spacing);
  line-height: var(--widget-height);
}
.lil-gui .controller .widget {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  min-height: var(--widget-height);
}
.lil-gui .controller.string input {
  color: var(--string-color);
}
.lil-gui .controller.boolean {
  cursor: pointer;
}
.lil-gui .controller.color .display {
  width: 100%;
  height: var(--widget-height);
  border-radius: var(--widget-border-radius);
  position: relative;
}
@media (hover: hover) {
  .lil-gui .controller.color .display:hover:before {
    content: " ";
    display: block;
    position: absolute;
    border-radius: var(--widget-border-radius);
    border: 1px solid #fff9;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
}
.lil-gui .controller.color input[type=color] {
  opacity: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}
.lil-gui .controller.color input[type=text] {
  margin-left: var(--spacing);
  font-family: var(--font-family-mono);
  min-width: var(--color-input-min-width);
  width: var(--color-input-width);
  flex-shrink: 0;
}
.lil-gui .controller.option select {
  opacity: 0;
  position: absolute;
  width: 100%;
  max-width: 100%;
}
.lil-gui .controller.option .display {
  position: relative;
  pointer-events: none;
  border-radius: var(--widget-border-radius);
  height: var(--widget-height);
  line-height: var(--widget-height);
  max-width: 100%;
  overflow: hidden;
  word-break: break-all;
  padding-left: 0.55em;
  padding-right: 1.75em;
  background: var(--widget-color);
}
@media (hover: hover) {
  .lil-gui .controller.option .display.focus {
    background: var(--focus-color);
  }
}
.lil-gui .controller.option .display.active {
  background: var(--focus-color);
}
.lil-gui .controller.option .display:after {
  font-family: "lil-gui";
  content: "↕";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  padding-right: 0.375em;
}
.lil-gui .controller.option .widget,
.lil-gui .controller.option select {
  cursor: pointer;
}
@media (hover: hover) {
  .lil-gui .controller.option .widget:hover .display {
    background: var(--hover-color);
  }
}
.lil-gui .controller.number input {
  color: var(--number-color);
}
.lil-gui .controller.number.hasSlider input {
  margin-left: var(--spacing);
  width: var(--slider-input-width);
  min-width: var(--slider-input-min-width);
  flex-shrink: 0;
}
.lil-gui .controller.number .slider {
  width: 100%;
  height: var(--widget-height);
  background: var(--widget-color);
  border-radius: var(--widget-border-radius);
  padding-right: var(--slider-knob-width);
  overflow: hidden;
  cursor: ew-resize;
  touch-action: pan-y;
}
@media (hover: hover) {
  .lil-gui .controller.number .slider:hover {
    background: var(--hover-color);
  }
}
.lil-gui .controller.number .slider.active {
  background: var(--focus-color);
}
.lil-gui .controller.number .slider.active .fill {
  opacity: 0.95;
}
.lil-gui .controller.number .fill {
  height: 100%;
  border-right: var(--slider-knob-width) solid var(--number-color);
  box-sizing: content-box;
}

.lil-gui-dragging .lil-gui {
  --hover-color: var(--widget-color);
}
.lil-gui-dragging * {
  cursor: ew-resize !important;
}

.lil-gui-dragging.lil-gui-vertical * {
  cursor: ns-resize !important;
}

.lil-gui .title {
  height: var(--title-height);
  font-weight: 600;
  padding: 0 var(--padding);
  width: 100%;
  text-align: left;
  background: none;
  text-decoration-skip: objects;
}
.lil-gui .title:before {
  font-family: "lil-gui";
  content: "▾";
  padding-right: 2px;
  display: inline-block;
}
.lil-gui .title:active {
  background: var(--title-background-color);
  opacity: 0.75;
}
@media (hover: hover) {
  body:not(.lil-gui-dragging) .lil-gui .title:hover {
    background: var(--title-background-color);
    opacity: 0.85;
  }
  .lil-gui .title:focus {
    text-decoration: underline var(--focus-color);
  }
}
.lil-gui.root > .title:focus {
  text-decoration: none !important;
}
.lil-gui.closed > .title:before {
  content: "▸";
}
.lil-gui.closed > .children {
  transform: translateY(-7px);
  opacity: 0;
}
.lil-gui.closed:not(.transition) > .children {
  display: none;
}
.lil-gui.transition > .children {
  transition-duration: 300ms;
  transition-property: height, opacity, transform;
  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);
  overflow: hidden;
  pointer-events: none;
}
.lil-gui .children:empty:before {
  content: "Empty";
  padding: 0 var(--padding);
  margin: var(--spacing) 0;
  display: block;
  height: var(--widget-height);
  font-style: italic;
  line-height: var(--widget-height);
  opacity: 0.5;
}
.lil-gui.root > .children > .lil-gui > .title {
  border: 0 solid var(--widget-color);
  border-width: 1px 0;
  transition: border-color 300ms;
}
.lil-gui.root > .children > .lil-gui.closed > .title {
  border-bottom-color: transparent;
}
.lil-gui + .controller {
  border-top: 1px solid var(--widget-color);
  margin-top: 0;
  padding-top: var(--spacing);
}
.lil-gui .lil-gui .lil-gui > .title {
  border: none;
}
.lil-gui .lil-gui .lil-gui > .children {
  border: none;
  margin-left: var(--folder-indent);
  border-left: 2px solid var(--widget-color);
}
.lil-gui .lil-gui .controller {
  border: none;
}

.lil-gui label, .lil-gui input, .lil-gui button {
  -webkit-tap-highlight-color: transparent;
}
.lil-gui input {
  border: 0;
  outline: none;
  font-family: var(--font-family);
  font-size: var(--input-font-size);
  border-radius: var(--widget-border-radius);
  height: var(--widget-height);
  background: var(--widget-color);
  color: var(--text-color);
  width: 100%;
}
@media (hover: hover) {
  .lil-gui input:hover {
    background: var(--hover-color);
  }
  .lil-gui input:active {
    background: var(--focus-color);
  }
}
.lil-gui input:disabled {
  opacity: 1;
}
.lil-gui input[type=text],
.lil-gui input[type=number] {
  padding: var(--widget-padding);
  -moz-appearance: textfield;
}
.lil-gui input[type=text]:focus,
.lil-gui input[type=number]:focus {
  background: var(--focus-color);
}
.lil-gui input[type=checkbox] {
  appearance: none;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border-radius: var(--widget-border-radius);
  text-align: center;
  cursor: pointer;
}
.lil-gui input[type=checkbox]:checked:before {
  font-family: "lil-gui";
  content: "✓";
  font-size: var(--checkbox-size);
  line-height: var(--checkbox-size);
}
@media (hover: hover) {
  .lil-gui input[type=checkbox]:focus {
    box-shadow: inset 0 0 0 1px var(--focus-color);
  }
}
.lil-gui button {
  outline: none;
  cursor: pointer;
  font-family: var(--font-family);
  font-size: var(--font-size);
  color: var(--text-color);
  width: 100%;
  border: none;
}
.lil-gui .controller button {
  height: var(--widget-height);
  text-transform: none;
  background: var(--widget-color);
  border-radius: var(--widget-border-radius);
}
@media (hover: hover) {
  .lil-gui .controller button:hover {
    background: var(--hover-color);
  }
  .lil-gui .controller button:focus {
    box-shadow: inset 0 0 0 1px var(--focus-color);
  }
}
.lil-gui .controller button:active {
  background: var(--focus-color);
}

@font-face {
  font-family: "lil-gui";
  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");
}`;function _injectStyles(s){const e=document.createElement("style");e.innerHTML=s;const t=document.querySelector("head link[rel=stylesheet], head style");t?document.head.insertBefore(e,t):document.head.appendChild(e)}let stylesInjected=!1;class GUI{constructor({parent:e,autoPlace:t=e===void 0,container:n,width:o,title:a="Controls",closeFolders:r=!1,injectStyles:l=!0,touchStyles:c=!0}={}){if(this.parent=e,this.root=e?e.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("button"),this.$title.classList.add("title"),this.$title.setAttribute("aria-expanded",!0),this.$title.addEventListener("click",()=>this.openAnimated(this._closed)),this.$title.addEventListener("touchstart",()=>{},{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(a),this.parent){this.parent.children.push(this),this.parent.folders.push(this),this.parent.$children.appendChild(this.domElement);return}this.domElement.classList.add("root"),c&&this.domElement.classList.add("allow-touch-styles"),!stylesInjected&&l&&(_injectStyles(stylesheet),stylesInjected=!0),n?n.appendChild(this.domElement):t&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),o&&this.domElement.style.setProperty("--width",o+"px"),this._closeFolders=r}add(e,t,n,o,a){if(Object(n)===n)return new OptionController(this,e,t,n);const r=e[t];switch(typeof r){case"number":return new NumberController(this,e,t,n,o,a);case"boolean":return new BooleanController(this,e,t);case"string":return new StringController(this,e,t);case"function":return new FunctionController(this,e,t)}console.error(`gui.add failed
	property:`,t,`
	object:`,e,`
	value:`,r)}addColor(e,t,n=1){return new ColorController(this,e,t,n)}addFolder(e){const t=new GUI({parent:this,title:e});return this.root._closeFolders&&t.close(),t}load(e,t=!0){return e.controllers&&this.controllers.forEach(n=>{n instanceof FunctionController||n._name in e.controllers&&n.load(e.controllers[n._name])}),t&&e.folders&&this.folders.forEach(n=>{n._title in e.folders&&n.load(e.folders[n._title])}),this}save(e=!0){const t={controllers:{},folders:{}};return this.controllers.forEach(n=>{if(!(n instanceof FunctionController)){if(n._name in t.controllers)throw new Error(`Cannot save GUI with duplicate property "${n._name}"`);t.controllers[n._name]=n.save()}}),e&&this.folders.forEach(n=>{if(n._title in t.folders)throw new Error(`Cannot save GUI with duplicate folder "${n._title}"`);t.folders[n._title]=n.save()}),t}open(e=!0){return this._setClosed(!e),this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}_setClosed(e){this._closed!==e&&(this._closed=e,this._callOnOpenClose(this))}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(e=!0){return this._setClosed(!e),this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame(()=>{const t=this.$children.clientHeight;this.$children.style.height=t+"px",this.domElement.classList.add("transition");const n=a=>{a.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",n))};this.$children.addEventListener("transitionend",n);const o=e?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!e),requestAnimationFrame(()=>{this.$children.style.height=o+"px"})}),this}title(e){return this._title=e,this.$title.textContent=e,this}reset(e=!0){return(e?this.controllersRecursive():this.controllers).forEach(n=>n.reset()),this}onChange(e){return this._onChange=e,this}_callOnChange(e){this.parent&&this.parent._callOnChange(e),this._onChange!==void 0&&this._onChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(e){this.parent&&this.parent._callOnFinishChange(e),this._onFinishChange!==void 0&&this._onFinishChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onOpenClose(e){return this._onOpenClose=e,this}_callOnOpenClose(e){this.parent&&this.parent._callOnOpenClose(e),this._onOpenClose!==void 0&&this._onOpenClose.call(this,e)}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach(e=>e.destroy())}controllersRecursive(){let e=Array.from(this.controllers);return this.folders.forEach(t=>{e=e.concat(t.controllersRecursive())}),e}foldersRecursive(){let e=Array.from(this.folders);return this.folders.forEach(t=>{e=e.concat(t.foldersRecursive())}),e}}var commonjsGlobal=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function getDefaultExportFromCjs(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var vconsole_min$1={exports:{}};/*!
 * vConsole v3.15.1 (https://github.com/Tencent/vConsole)
 *
 * Tencent is pleased to support the open source community by making vConsole available.
 * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
 * http://opensource.org/licenses/MIT
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */var vconsole_min=vconsole_min$1.exports,hasRequiredVconsole_min;function requireVconsole_min(){return hasRequiredVconsole_min||(hasRequiredVconsole_min=1,function(module,exports){(function(s,e){module.exports=e()})(vconsole_min||self,function(){return function(){var __webpack_modules__={4264:function(s,e,t){s.exports=t(7588)},5036:function(s,e,t){t(1719),t(5677),t(6394),t(5334),t(6969),t(2021),t(8328),t(2129);var n=t(1287);s.exports=n.Promise},2582:function(s,e,t){t(1646),t(6394),t(2004),t(462),t(8407),t(2429),t(1172),t(8288),t(1274),t(8201),t(6626),t(3211),t(9952),t(15),t(9831),t(7521),t(2972),t(6956),t(5222),t(2257);var n=t(1287);s.exports=n.Symbol},8257:function(s,e,t){var n=t(7583),o=t(9212),a=t(5637),r=n.TypeError;s.exports=function(l){if(o(l))return l;throw r(a(l)+" is not a function")}},1186:function(s,e,t){var n=t(7583),o=t(2097),a=t(5637),r=n.TypeError;s.exports=function(l){if(o(l))return l;throw r(a(l)+" is not a constructor")}},9882:function(s,e,t){var n=t(7583),o=t(9212),a=n.String,r=n.TypeError;s.exports=function(l){if(typeof l=="object"||o(l))return l;throw r("Can't set "+a(l)+" as a prototype")}},6288:function(s,e,t){var n=t(3649),o=t(3590),a=t(4615),r=n("unscopables"),l=Array.prototype;l[r]==null&&a.f(l,r,{configurable:!0,value:o(null)}),s.exports=function(c){l[r][c]=!0}},4761:function(s,e,t){var n=t(7583),o=t(2447),a=n.TypeError;s.exports=function(r,l){if(o(l,r))return r;throw a("Incorrect invocation")}},2569:function(s,e,t){var n=t(7583),o=t(794),a=n.String,r=n.TypeError;s.exports=function(l){if(o(l))return l;throw r(a(l)+" is not an object")}},5766:function(s,e,t){var n=t(2977),o=t(6782),a=t(1825),r=function(l){return function(c,u,d){var f,g=n(c),_=a(g),b=o(d,_);if(l&&u!=u){for(;_>b;)if((f=g[b++])!=f)return!0}else for(;_>b;b++)if((l||b in g)&&g[b]===u)return l||b||0;return!l&&-1}};s.exports={includes:r(!0),indexOf:r(!1)}},4805:function(s,e,t){var n=t(2938),o=t(7386),a=t(5044),r=t(1324),l=t(1825),c=t(4822),u=o([].push),d=function(f){var g=f==1,_=f==2,b=f==3,B=f==4,I=f==6,C=f==7,R=f==5||I;return function(L,F,N,k){for(var Q,z,G=r(L),O=a(G),q=n(F,N),ce=l(O),ne=0,ue=k||c,pe=g?ue(L,ce):_||C?ue(L,0):void 0;ce>ne;ne++)if((R||ne in O)&&(z=q(Q=O[ne],ne,G),f))if(g)pe[ne]=z;else if(z)switch(f){case 3:return!0;case 5:return Q;case 6:return ne;case 2:u(pe,Q)}else switch(f){case 4:return!1;case 7:u(pe,Q)}return I?-1:b||B?B:pe}};s.exports={forEach:d(0),map:d(1),filter:d(2),some:d(3),every:d(4),find:d(5),findIndex:d(6),filterReject:d(7)}},9269:function(s,e,t){var n=t(6544),o=t(3649),a=t(4061),r=o("species");s.exports=function(l){return a>=51||!n(function(){var c=[];return(c.constructor={})[r]=function(){return{foo:1}},c[l](Boolean).foo!==1})}},4546:function(s,e,t){var n=t(7583),o=t(6782),a=t(1825),r=t(5999),l=n.Array,c=Math.max;s.exports=function(u,d,f){for(var g=a(u),_=o(d,g),b=o(f===void 0?g:f,g),B=l(c(b-_,0)),I=0;_<b;_++,I++)r(B,I,u[_]);return B.length=I,B}},6917:function(s,e,t){var n=t(7386);s.exports=n([].slice)},5289:function(s,e,t){var n=t(7583),o=t(4521),a=t(2097),r=t(794),l=t(3649)("species"),c=n.Array;s.exports=function(u){var d;return o(u)&&(d=u.constructor,(a(d)&&(d===c||o(d.prototype))||r(d)&&(d=d[l])===null)&&(d=void 0)),d===void 0?c:d}},4822:function(s,e,t){var n=t(5289);s.exports=function(o,a){return new(n(o))(a===0?0:a)}},3616:function(s,e,t){var n=t(3649)("iterator"),o=!1;try{var a=0,r={next:function(){return{done:!!a++}},return:function(){o=!0}};r[n]=function(){return this},Array.from(r,function(){throw 2})}catch{}s.exports=function(l,c){if(!c&&!o)return!1;var u=!1;try{var d={};d[n]=function(){return{next:function(){return{done:u=!0}}}},l(d)}catch{}return u}},9624:function(s,e,t){var n=t(7386),o=n({}.toString),a=n("".slice);s.exports=function(r){return a(o(r),8,-1)}},3058:function(s,e,t){var n=t(7583),o=t(8191),a=t(9212),r=t(9624),l=t(3649)("toStringTag"),c=n.Object,u=r(function(){return arguments}())=="Arguments";s.exports=o?r:function(d){var f,g,_;return d===void 0?"Undefined":d===null?"Null":typeof(g=function(b,B){try{return b[B]}catch{}}(f=c(d),l))=="string"?g:u?r(f):(_=r(f))=="Object"&&a(f.callee)?"Arguments":_}},1509:function(s,e,t){var n=t(7386)("".replace),o=String(Error("zxcasd").stack),a=/\n\s*at [^:]*:[^\n]*/,r=a.test(o);s.exports=function(l,c){if(r&&typeof l=="string")for(;c--;)l=n(l,a,"");return l}},3478:function(s,e,t){var n=t(2870),o=t(929),a=t(6683),r=t(4615);s.exports=function(l,c,u){for(var d=o(c),f=r.f,g=a.f,_=0;_<d.length;_++){var b=d[_];n(l,b)||u&&n(u,b)||f(l,b,g(c,b))}}},926:function(s,e,t){var n=t(6544);s.exports=!n(function(){function o(){}return o.prototype.constructor=null,Object.getPrototypeOf(new o)!==o.prototype})},4683:function(s,e,t){var n=t(2365).IteratorPrototype,o=t(3590),a=t(4677),r=t(8821),l=t(339),c=function(){return this};s.exports=function(u,d,f,g){var _=d+" Iterator";return u.prototype=o(n,{next:a(+!g,f)}),r(u,_,!1,!0),l[_]=c,u}},57:function(s,e,t){var n=t(8494),o=t(4615),a=t(4677);s.exports=n?function(r,l,c){return o.f(r,l,a(1,c))}:function(r,l,c){return r[l]=c,r}},4677:function(s){s.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},5999:function(s,e,t){var n=t(8734),o=t(4615),a=t(4677);s.exports=function(r,l,c){var u=n(l);u in r?o.f(r,u,a(0,c)):r[u]=c}},9012:function(s,e,t){var n=t(7263),o=t(8262),a=t(6268),r=t(4340),l=t(9212),c=t(4683),u=t(729),d=t(7496),f=t(8821),g=t(57),_=t(1270),b=t(3649),B=t(339),I=t(2365),C=r.PROPER,R=r.CONFIGURABLE,L=I.IteratorPrototype,F=I.BUGGY_SAFARI_ITERATORS,N=b("iterator"),k="keys",Q="values",z="entries",G=function(){return this};s.exports=function(O,q,ce,ne,ue,pe,fe){c(ce,q,ne);var ee,J,ye,Te=function(de){if(de===ue&&_e)return _e;if(!F&&de in he)return he[de];switch(de){case k:case Q:case z:return function(){return new ce(this,de)}}return function(){return new ce(this)}},xe=q+" Iterator",ve=!1,he=O.prototype,le=he[N]||he["@@iterator"]||ue&&he[ue],_e=!F&&le||Te(ue),De=q=="Array"&&he.entries||le;if(De&&(ee=u(De.call(new O)))!==Object.prototype&&ee.next&&(a||u(ee)===L||(d?d(ee,L):l(ee[N])||_(ee,N,G)),f(ee,xe,!0,!0),a&&(B[xe]=G)),C&&ue==Q&&le&&le.name!==Q&&(!a&&R?g(he,"name",Q):(ve=!0,_e=function(){return o(le,this)})),ue)if(J={values:Te(Q),keys:pe?_e:Te(k),entries:Te(z)},fe)for(ye in J)(F||ve||!(ye in he))&&_(he,ye,J[ye]);else n({target:q,proto:!0,forced:F||ve},J);return a&&!fe||he[N]===_e||_(he,N,_e,{name:ue}),B[q]=_e,J}},2219:function(s,e,t){var n=t(1287),o=t(2870),a=t(491),r=t(4615).f;s.exports=function(l){var c=n.Symbol||(n.Symbol={});o(c,l)||r(c,l,{value:a.f(l)})}},8494:function(s,e,t){var n=t(6544);s.exports=!n(function(){return Object.defineProperty({},1,{get:function(){return 7}})[1]!=7})},6668:function(s,e,t){var n=t(7583),o=t(794),a=n.document,r=o(a)&&o(a.createElement);s.exports=function(l){return r?a.createElement(l):{}}},6778:function(s){s.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},9307:function(s,e,t){var n=t(6668)("span").classList,o=n&&n.constructor&&n.constructor.prototype;s.exports=o===Object.prototype?void 0:o},2274:function(s){s.exports=typeof window=="object"},3256:function(s,e,t){var n=t(6918),o=t(7583);s.exports=/ipad|iphone|ipod/i.test(n)&&o.Pebble!==void 0},7020:function(s,e,t){var n=t(6918);s.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(n)},5354:function(s,e,t){var n=t(9624),o=t(7583);s.exports=n(o.process)=="process"},6846:function(s,e,t){var n=t(6918);s.exports=/web0s(?!.*chrome)/i.test(n)},6918:function(s,e,t){var n=t(5897);s.exports=n("navigator","userAgent")||""},4061:function(s,e,t){var n,o,a=t(7583),r=t(6918),l=a.process,c=a.Deno,u=l&&l.versions||c&&c.version,d=u&&u.v8;d&&(o=(n=d.split("."))[0]>0&&n[0]<4?1:+(n[0]+n[1])),!o&&r&&(!(n=r.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=r.match(/Chrome\/(\d+)/))&&(o=+n[1]),s.exports=o},5690:function(s){s.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},1178:function(s,e,t){var n=t(6544),o=t(4677);s.exports=!n(function(){var a=Error("a");return!("stack"in a)||(Object.defineProperty(a,"stack",o(1,7)),a.stack!==7)})},7263:function(s,e,t){var n=t(7583),o=t(6683).f,a=t(57),r=t(1270),l=t(460),c=t(3478),u=t(4451);s.exports=function(d,f){var g,_,b,B,I,C=d.target,R=d.global,L=d.stat;if(g=R?n:L?n[C]||l(C,{}):(n[C]||{}).prototype)for(_ in f){if(B=f[_],b=d.noTargetGet?(I=o(g,_))&&I.value:g[_],!u(R?_:C+(L?".":"#")+_,d.forced)&&b!==void 0){if(typeof B==typeof b)continue;c(B,b)}(d.sham||b&&b.sham)&&a(B,"sham",!0),r(g,_,B,d)}}},6544:function(s){s.exports=function(e){try{return!!e()}catch{return!0}}},1611:function(s,e,t){var n=t(8987),o=Function.prototype,a=o.apply,r=o.call;s.exports=typeof Reflect=="object"&&Reflect.apply||(n?r.bind(a):function(){return r.apply(a,arguments)})},2938:function(s,e,t){var n=t(7386),o=t(8257),a=t(8987),r=n(n.bind);s.exports=function(l,c){return o(l),c===void 0?l:a?r(l,c):function(){return l.apply(c,arguments)}}},8987:function(s,e,t){var n=t(6544);s.exports=!n(function(){var o=(function(){}).bind();return typeof o!="function"||o.hasOwnProperty("prototype")})},8262:function(s,e,t){var n=t(8987),o=Function.prototype.call;s.exports=n?o.bind(o):function(){return o.apply(o,arguments)}},4340:function(s,e,t){var n=t(8494),o=t(2870),a=Function.prototype,r=n&&Object.getOwnPropertyDescriptor,l=o(a,"name"),c=l&&(function(){}).name==="something",u=l&&(!n||n&&r(a,"name").configurable);s.exports={EXISTS:l,PROPER:c,CONFIGURABLE:u}},7386:function(s,e,t){var n=t(8987),o=Function.prototype,a=o.bind,r=o.call,l=n&&a.bind(r,r);s.exports=n?function(c){return c&&l(c)}:function(c){return c&&function(){return r.apply(c,arguments)}}},5897:function(s,e,t){var n=t(7583),o=t(9212),a=function(r){return o(r)?r:void 0};s.exports=function(r,l){return arguments.length<2?a(n[r]):n[r]&&n[r][l]}},8272:function(s,e,t){var n=t(3058),o=t(911),a=t(339),r=t(3649)("iterator");s.exports=function(l){if(l!=null)return o(l,r)||o(l,"@@iterator")||a[n(l)]}},6307:function(s,e,t){var n=t(7583),o=t(8262),a=t(8257),r=t(2569),l=t(5637),c=t(8272),u=n.TypeError;s.exports=function(d,f){var g=arguments.length<2?c(d):f;if(a(g))return r(o(g,d));throw u(l(d)+" is not iterable")}},911:function(s,e,t){var n=t(8257);s.exports=function(o,a){var r=o[a];return r==null?void 0:n(r)}},7583:function(s,e,t){var n=function(o){return o&&o.Math==Math&&o};s.exports=n(typeof globalThis=="object"&&globalThis)||n(typeof window=="object"&&window)||n(typeof self=="object"&&self)||n(typeof t.g=="object"&&t.g)||function(){return this}()||Function("return this")()},2870:function(s,e,t){var n=t(7386),o=t(1324),a=n({}.hasOwnProperty);s.exports=Object.hasOwn||function(r,l){return a(o(r),l)}},4639:function(s){s.exports={}},2716:function(s,e,t){var n=t(7583);s.exports=function(o,a){var r=n.console;r&&r.error&&(arguments.length==1?r.error(o):r.error(o,a))}},482:function(s,e,t){var n=t(5897);s.exports=n("document","documentElement")},275:function(s,e,t){var n=t(8494),o=t(6544),a=t(6668);s.exports=!n&&!o(function(){return Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a!=7})},5044:function(s,e,t){var n=t(7583),o=t(7386),a=t(6544),r=t(9624),l=n.Object,c=o("".split);s.exports=a(function(){return!l("z").propertyIsEnumerable(0)})?function(u){return r(u)=="String"?c(u,""):l(u)}:l},9734:function(s,e,t){var n=t(7386),o=t(9212),a=t(1314),r=n(Function.toString);o(a.inspectSource)||(a.inspectSource=function(l){return r(l)}),s.exports=a.inspectSource},4402:function(s,e,t){var n=t(794),o=t(57);s.exports=function(a,r){n(r)&&"cause"in r&&o(a,"cause",r.cause)}},2743:function(s,e,t){var n,o,a,r=t(9491),l=t(7583),c=t(7386),u=t(794),d=t(57),f=t(2870),g=t(1314),_=t(9137),b=t(4639),B="Object already initialized",I=l.TypeError,C=l.WeakMap;if(r||g.state){var R=g.state||(g.state=new C),L=c(R.get),F=c(R.has),N=c(R.set);n=function(Q,z){if(F(R,Q))throw new I(B);return z.facade=Q,N(R,Q,z),z},o=function(Q){return L(R,Q)||{}},a=function(Q){return F(R,Q)}}else{var k=_("state");b[k]=!0,n=function(Q,z){if(f(Q,k))throw new I(B);return z.facade=Q,d(Q,k,z),z},o=function(Q){return f(Q,k)?Q[k]:{}},a=function(Q){return f(Q,k)}}s.exports={set:n,get:o,has:a,enforce:function(Q){return a(Q)?o(Q):n(Q,{})},getterFor:function(Q){return function(z){var G;if(!u(z)||(G=o(z)).type!==Q)throw I("Incompatible receiver, "+Q+" required");return G}}}},114:function(s,e,t){var n=t(3649),o=t(339),a=n("iterator"),r=Array.prototype;s.exports=function(l){return l!==void 0&&(o.Array===l||r[a]===l)}},4521:function(s,e,t){var n=t(9624);s.exports=Array.isArray||function(o){return n(o)=="Array"}},9212:function(s){s.exports=function(e){return typeof e=="function"}},2097:function(s,e,t){var n=t(7386),o=t(6544),a=t(9212),r=t(3058),l=t(5897),c=t(9734),u=function(){},d=[],f=l("Reflect","construct"),g=/^\s*(?:class|function)\b/,_=n(g.exec),b=!g.exec(u),B=function(C){if(!a(C))return!1;try{return f(u,d,C),!0}catch{return!1}},I=function(C){if(!a(C))return!1;switch(r(C)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return b||!!_(g,c(C))}catch{return!0}};I.sham=!0,s.exports=!f||o(function(){var C;return B(B.call)||!B(Object)||!B(function(){C=!0})||C})?I:B},4451:function(s,e,t){var n=t(6544),o=t(9212),a=/#|\.prototype\./,r=function(f,g){var _=c[l(f)];return _==d||_!=u&&(o(g)?n(g):!!g)},l=r.normalize=function(f){return String(f).replace(a,".").toLowerCase()},c=r.data={},u=r.NATIVE="N",d=r.POLYFILL="P";s.exports=r},794:function(s,e,t){var n=t(9212);s.exports=function(o){return typeof o=="object"?o!==null:n(o)}},6268:function(s){s.exports=!1},5871:function(s,e,t){var n=t(7583),o=t(5897),a=t(9212),r=t(2447),l=t(7786),c=n.Object;s.exports=l?function(u){return typeof u=="symbol"}:function(u){var d=o("Symbol");return a(d)&&r(d.prototype,c(u))}},4026:function(s,e,t){var n=t(7583),o=t(2938),a=t(8262),r=t(2569),l=t(5637),c=t(114),u=t(1825),d=t(2447),f=t(6307),g=t(8272),_=t(7093),b=n.TypeError,B=function(C,R){this.stopped=C,this.result=R},I=B.prototype;s.exports=function(C,R,L){var F,N,k,Q,z,G,O,q=L&&L.that,ce=!(!L||!L.AS_ENTRIES),ne=!(!L||!L.IS_ITERATOR),ue=!(!L||!L.INTERRUPTED),pe=o(R,q),fe=function(J){return F&&_(F,"normal",J),new B(!0,J)},ee=function(J){return ce?(r(J),ue?pe(J[0],J[1],fe):pe(J[0],J[1])):ue?pe(J,fe):pe(J)};if(ne)F=C;else{if(!(N=g(C)))throw b(l(C)+" is not iterable");if(c(N)){for(k=0,Q=u(C);Q>k;k++)if((z=ee(C[k]))&&d(I,z))return z;return new B(!1)}F=f(C,N)}for(G=F.next;!(O=a(G,F)).done;){try{z=ee(O.value)}catch(J){_(F,"throw",J)}if(typeof z=="object"&&z&&d(I,z))return z}return new B(!1)}},7093:function(s,e,t){var n=t(8262),o=t(2569),a=t(911);s.exports=function(r,l,c){var u,d;o(r);try{if(!(u=a(r,"return"))){if(l==="throw")throw c;return c}u=n(u,r)}catch(f){d=!0,u=f}if(l==="throw")throw c;if(d)throw u;return o(u),c}},2365:function(s,e,t){var n,o,a,r=t(6544),l=t(9212),c=t(3590),u=t(729),d=t(1270),f=t(3649),g=t(6268),_=f("iterator"),b=!1;[].keys&&("next"in(a=[].keys())?(o=u(u(a)))!==Object.prototype&&(n=o):b=!0),n==null||r(function(){var B={};return n[_].call(B)!==B})?n={}:g&&(n=c(n)),l(n[_])||d(n,_,function(){return this}),s.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:b}},339:function(s){s.exports={}},1825:function(s,e,t){var n=t(97);s.exports=function(o){return n(o.length)}},2095:function(s,e,t){var n,o,a,r,l,c,u,d,f=t(7583),g=t(2938),_=t(6683).f,b=t(8117).set,B=t(7020),I=t(3256),C=t(6846),R=t(5354),L=f.MutationObserver||f.WebKitMutationObserver,F=f.document,N=f.process,k=f.Promise,Q=_(f,"queueMicrotask"),z=Q&&Q.value;z||(n=function(){var G,O;for(R&&(G=N.domain)&&G.exit();o;){O=o.fn,o=o.next;try{O()}catch(q){throw o?r():a=void 0,q}}a=void 0,G&&G.enter()},B||R||C||!L||!F?!I&&k&&k.resolve?((u=k.resolve(void 0)).constructor=k,d=g(u.then,u),r=function(){d(n)}):R?r=function(){N.nextTick(n)}:(b=g(b,f),r=function(){b(n)}):(l=!0,c=F.createTextNode(""),new L(n).observe(c,{characterData:!0}),r=function(){c.data=l=!l})),s.exports=z||function(G){var O={fn:G,next:void 0};a&&(a.next=O),o||(o=O,r()),a=O}},783:function(s,e,t){var n=t(7583);s.exports=n.Promise},8640:function(s,e,t){var n=t(4061),o=t(6544);s.exports=!!Object.getOwnPropertySymbols&&!o(function(){var a=Symbol();return!String(a)||!(Object(a)instanceof Symbol)||!Symbol.sham&&n&&n<41})},9491:function(s,e,t){var n=t(7583),o=t(9212),a=t(9734),r=n.WeakMap;s.exports=o(r)&&/native code/.test(a(r))},5084:function(s,e,t){var n=t(8257),o=function(a){var r,l;this.promise=new a(function(c,u){if(r!==void 0||l!==void 0)throw TypeError("Bad Promise constructor");r=c,l=u}),this.resolve=n(r),this.reject=n(l)};s.exports.f=function(a){return new o(a)}},2764:function(s,e,t){var n=t(8320);s.exports=function(o,a){return o===void 0?arguments.length<2?"":a:n(o)}},3590:function(s,e,t){var n,o=t(2569),a=t(8728),r=t(5690),l=t(4639),c=t(482),u=t(6668),d=t(9137),f=d("IE_PROTO"),g=function(){},_=function(I){return"<script>"+I+"<\/script>"},b=function(I){I.write(_("")),I.close();var C=I.parentWindow.Object;return I=null,C},B=function(){try{n=new ActiveXObject("htmlfile")}catch{}var I,C;B=typeof document<"u"?document.domain&&n?b(n):((C=u("iframe")).style.display="none",c.appendChild(C),C.src="javascript:",(I=C.contentWindow.document).open(),I.write(_("document.F=Object")),I.close(),I.F):b(n);for(var R=r.length;R--;)delete B.prototype[r[R]];return B()};l[f]=!0,s.exports=Object.create||function(I,C){var R;return I!==null?(g.prototype=o(I),R=new g,g.prototype=null,R[f]=I):R=B(),C===void 0?R:a.f(R,C)}},8728:function(s,e,t){var n=t(8494),o=t(7670),a=t(4615),r=t(2569),l=t(2977),c=t(5432);e.f=n&&!o?Object.defineProperties:function(u,d){r(u);for(var f,g=l(d),_=c(d),b=_.length,B=0;b>B;)a.f(u,f=_[B++],g[f]);return u}},4615:function(s,e,t){var n=t(7583),o=t(8494),a=t(275),r=t(7670),l=t(2569),c=t(8734),u=n.TypeError,d=Object.defineProperty,f=Object.getOwnPropertyDescriptor,g="enumerable",_="configurable",b="writable";e.f=o?r?function(B,I,C){if(l(B),I=c(I),l(C),typeof B=="function"&&I==="prototype"&&"value"in C&&b in C&&!C.writable){var R=f(B,I);R&&R.writable&&(B[I]=C.value,C={configurable:_ in C?C.configurable:R.configurable,enumerable:g in C?C.enumerable:R.enumerable,writable:!1})}return d(B,I,C)}:d:function(B,I,C){if(l(B),I=c(I),l(C),a)try{return d(B,I,C)}catch{}if("get"in C||"set"in C)throw u("Accessors not supported");return"value"in C&&(B[I]=C.value),B}},6683:function(s,e,t){var n=t(8494),o=t(8262),a=t(112),r=t(4677),l=t(2977),c=t(8734),u=t(2870),d=t(275),f=Object.getOwnPropertyDescriptor;e.f=n?f:function(g,_){if(g=l(g),_=c(_),d)try{return f(g,_)}catch{}if(u(g,_))return r(!o(a.f,g,_),g[_])}},3130:function(s,e,t){var n=t(9624),o=t(2977),a=t(9275).f,r=t(4546),l=typeof window=="object"&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];s.exports.f=function(c){return l&&n(c)=="Window"?function(u){try{return a(u)}catch{return r(l)}}(c):a(o(c))}},9275:function(s,e,t){var n=t(8356),o=t(5690).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(a){return n(a,o)}},4012:function(s,e){e.f=Object.getOwnPropertySymbols},729:function(s,e,t){var n=t(7583),o=t(2870),a=t(9212),r=t(1324),l=t(9137),c=t(926),u=l("IE_PROTO"),d=n.Object,f=d.prototype;s.exports=c?d.getPrototypeOf:function(g){var _=r(g);if(o(_,u))return _[u];var b=_.constructor;return a(b)&&_ instanceof b?b.prototype:_ instanceof d?f:null}},2447:function(s,e,t){var n=t(7386);s.exports=n({}.isPrototypeOf)},8356:function(s,e,t){var n=t(7386),o=t(2870),a=t(2977),r=t(5766).indexOf,l=t(4639),c=n([].push);s.exports=function(u,d){var f,g=a(u),_=0,b=[];for(f in g)!o(l,f)&&o(g,f)&&c(b,f);for(;d.length>_;)o(g,f=d[_++])&&(~r(b,f)||c(b,f));return b}},5432:function(s,e,t){var n=t(8356),o=t(5690);s.exports=Object.keys||function(a){return n(a,o)}},112:function(s,e){var t={}.propertyIsEnumerable,n=Object.getOwnPropertyDescriptor,o=n&&!t.call({1:2},1);e.f=o?function(a){var r=n(this,a);return!!r&&r.enumerable}:t},7496:function(s,e,t){var n=t(7386),o=t(2569),a=t(9882);s.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var r,l=!1,c={};try{(r=n(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(c,[]),l=c instanceof Array}catch{}return function(u,d){return o(u),a(d),l?r(u,d):u.__proto__=d,u}}():void 0)},3060:function(s,e,t){var n=t(8191),o=t(3058);s.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},6252:function(s,e,t){var n=t(7583),o=t(8262),a=t(9212),r=t(794),l=n.TypeError;s.exports=function(c,u){var d,f;if(u==="string"&&a(d=c.toString)&&!r(f=o(d,c))||a(d=c.valueOf)&&!r(f=o(d,c))||u!=="string"&&a(d=c.toString)&&!r(f=o(d,c)))return f;throw l("Can't convert object to primitive value")}},929:function(s,e,t){var n=t(5897),o=t(7386),a=t(9275),r=t(4012),l=t(2569),c=o([].concat);s.exports=n("Reflect","ownKeys")||function(u){var d=a.f(l(u)),f=r.f;return f?c(d,f(u)):d}},1287:function(s,e,t){var n=t(7583);s.exports=n},544:function(s){s.exports=function(e){try{return{error:!1,value:e()}}catch(t){return{error:!0,value:t}}}},5732:function(s,e,t){var n=t(2569),o=t(794),a=t(5084);s.exports=function(r,l){if(n(r),o(l)&&l.constructor===r)return l;var c=a.f(r);return(0,c.resolve)(l),c.promise}},2723:function(s){var e=function(){this.head=null,this.tail=null};e.prototype={add:function(t){var n={item:t,next:null};this.head?this.tail.next=n:this.head=n,this.tail=n},get:function(){var t=this.head;if(t)return this.head=t.next,this.tail===t&&(this.tail=null),t.item}},s.exports=e},6893:function(s,e,t){var n=t(1270);s.exports=function(o,a,r){for(var l in a)n(o,l,a[l],r);return o}},1270:function(s,e,t){var n=t(7583),o=t(9212),a=t(2870),r=t(57),l=t(460),c=t(9734),u=t(2743),d=t(4340).CONFIGURABLE,f=u.get,g=u.enforce,_=String(String).split("String");(s.exports=function(b,B,I,C){var R,L=!!C&&!!C.unsafe,F=!!C&&!!C.enumerable,N=!!C&&!!C.noTargetGet,k=C&&C.name!==void 0?C.name:B;o(I)&&(String(k).slice(0,7)==="Symbol("&&(k="["+String(k).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!a(I,"name")||d&&I.name!==k)&&r(I,"name",k),(R=g(I)).source||(R.source=_.join(typeof k=="string"?k:""))),b!==n?(L?!N&&b[B]&&(F=!0):delete b[B],F?b[B]=I:r(b,B,I)):F?b[B]=I:l(B,I)})(Function.prototype,"toString",function(){return o(this)&&f(this).source||c(this)})},3955:function(s,e,t){var n=t(7583).TypeError;s.exports=function(o){if(o==null)throw n("Can't call method on "+o);return o}},460:function(s,e,t){var n=t(7583),o=Object.defineProperty;s.exports=function(a,r){try{o(n,a,{value:r,configurable:!0,writable:!0})}catch{n[a]=r}return r}},7730:function(s,e,t){var n=t(5897),o=t(4615),a=t(3649),r=t(8494),l=a("species");s.exports=function(c){var u=n(c),d=o.f;r&&u&&!u[l]&&d(u,l,{configurable:!0,get:function(){return this}})}},8821:function(s,e,t){var n=t(4615).f,o=t(2870),a=t(3649)("toStringTag");s.exports=function(r,l,c){r&&!c&&(r=r.prototype),r&&!o(r,a)&&n(r,a,{configurable:!0,value:l})}},9137:function(s,e,t){var n=t(7836),o=t(8284),a=n("keys");s.exports=function(r){return a[r]||(a[r]=o(r))}},1314:function(s,e,t){var n=t(7583),o=t(460),a="__core-js_shared__",r=n[a]||o(a,{});s.exports=r},7836:function(s,e,t){var n=t(6268),o=t(1314);(s.exports=function(a,r){return o[a]||(o[a]=r!==void 0?r:{})})("versions",[]).push({version:"3.21.1",mode:n?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE",source:"https://github.com/zloirock/core-js"})},564:function(s,e,t){var n=t(2569),o=t(1186),a=t(3649)("species");s.exports=function(r,l){var c,u=n(r).constructor;return u===void 0||(c=n(u)[a])==null?l:o(c)}},6389:function(s,e,t){var n=t(7386),o=t(7486),a=t(8320),r=t(3955),l=n("".charAt),c=n("".charCodeAt),u=n("".slice),d=function(f){return function(g,_){var b,B,I=a(r(g)),C=o(_),R=I.length;return C<0||C>=R?f?"":void 0:(b=c(I,C))<55296||b>56319||C+1===R||(B=c(I,C+1))<56320||B>57343?f?l(I,C):b:f?u(I,C,C+2):B-56320+(b-55296<<10)+65536}};s.exports={codeAt:d(!1),charAt:d(!0)}},8117:function(s,e,t){var n,o,a,r,l=t(7583),c=t(1611),u=t(2938),d=t(9212),f=t(2870),g=t(6544),_=t(482),b=t(6917),B=t(6668),I=t(7520),C=t(7020),R=t(5354),L=l.setImmediate,F=l.clearImmediate,N=l.process,k=l.Dispatch,Q=l.Function,z=l.MessageChannel,G=l.String,O=0,q={},ce="onreadystatechange";try{n=l.location}catch{}var ne=function(ee){if(f(q,ee)){var J=q[ee];delete q[ee],J()}},ue=function(ee){return function(){ne(ee)}},pe=function(ee){ne(ee.data)},fe=function(ee){l.postMessage(G(ee),n.protocol+"//"+n.host)};L&&F||(L=function(ee){I(arguments.length,1);var J=d(ee)?ee:Q(ee),ye=b(arguments,1);return q[++O]=function(){c(J,void 0,ye)},o(O),O},F=function(ee){delete q[ee]},R?o=function(ee){N.nextTick(ue(ee))}:k&&k.now?o=function(ee){k.now(ue(ee))}:z&&!C?(r=(a=new z).port2,a.port1.onmessage=pe,o=u(r.postMessage,r)):l.addEventListener&&d(l.postMessage)&&!l.importScripts&&n&&n.protocol!=="file:"&&!g(fe)?(o=fe,l.addEventListener("message",pe,!1)):o=ce in B("script")?function(ee){_.appendChild(B("script")).onreadystatechange=function(){_.removeChild(this),ne(ee)}}:function(ee){setTimeout(ue(ee),0)}),s.exports={set:L,clear:F}},6782:function(s,e,t){var n=t(7486),o=Math.max,a=Math.min;s.exports=function(r,l){var c=n(r);return c<0?o(c+l,0):a(c,l)}},2977:function(s,e,t){var n=t(5044),o=t(3955);s.exports=function(a){return n(o(a))}},7486:function(s){var e=Math.ceil,t=Math.floor;s.exports=function(n){var o=+n;return o!=o||o===0?0:(o>0?t:e)(o)}},97:function(s,e,t){var n=t(7486),o=Math.min;s.exports=function(a){return a>0?o(n(a),9007199254740991):0}},1324:function(s,e,t){var n=t(7583),o=t(3955),a=n.Object;s.exports=function(r){return a(o(r))}},2670:function(s,e,t){var n=t(7583),o=t(8262),a=t(794),r=t(5871),l=t(911),c=t(6252),u=t(3649),d=n.TypeError,f=u("toPrimitive");s.exports=function(g,_){if(!a(g)||r(g))return g;var b,B=l(g,f);if(B){if(_===void 0&&(_="default"),b=o(B,g,_),!a(b)||r(b))return b;throw d("Can't convert object to primitive value")}return _===void 0&&(_="number"),c(g,_)}},8734:function(s,e,t){var n=t(2670),o=t(5871);s.exports=function(a){var r=n(a,"string");return o(r)?r:r+""}},8191:function(s,e,t){var n={};n[t(3649)("toStringTag")]="z",s.exports=String(n)==="[object z]"},8320:function(s,e,t){var n=t(7583),o=t(3058),a=n.String;s.exports=function(r){if(o(r)==="Symbol")throw TypeError("Cannot convert a Symbol value to a string");return a(r)}},5637:function(s,e,t){var n=t(7583).String;s.exports=function(o){try{return n(o)}catch{return"Object"}}},8284:function(s,e,t){var n=t(7386),o=0,a=Math.random(),r=n(1 .toString);s.exports=function(l){return"Symbol("+(l===void 0?"":l)+")_"+r(++o+a,36)}},7786:function(s,e,t){var n=t(8640);s.exports=n&&!Symbol.sham&&typeof Symbol.iterator=="symbol"},7670:function(s,e,t){var n=t(8494),o=t(6544);s.exports=n&&o(function(){return Object.defineProperty(function(){},"prototype",{value:42,writable:!1}).prototype!=42})},7520:function(s,e,t){var n=t(7583).TypeError;s.exports=function(o,a){if(o<a)throw n("Not enough arguments");return o}},491:function(s,e,t){var n=t(3649);e.f=n},3649:function(s,e,t){var n=t(7583),o=t(7836),a=t(2870),r=t(8284),l=t(8640),c=t(7786),u=o("wks"),d=n.Symbol,f=d&&d.for,g=c?d:d&&d.withoutSetter||r;s.exports=function(_){if(!a(u,_)||!l&&typeof u[_]!="string"){var b="Symbol."+_;l&&a(d,_)?u[_]=d[_]:u[_]=c&&f?f(b):g(b)}return u[_]}},1719:function(s,e,t){var n=t(7263),o=t(7583),a=t(2447),r=t(729),l=t(7496),c=t(3478),u=t(3590),d=t(57),f=t(4677),g=t(1509),_=t(4402),b=t(4026),B=t(2764),I=t(3649),C=t(1178),R=I("toStringTag"),L=o.Error,F=[].push,N=function(Q,z){var G,O=arguments.length>2?arguments[2]:void 0,q=a(k,this);l?G=l(new L,q?r(this):k):(G=q?this:u(k),d(G,R,"Error")),z!==void 0&&d(G,"message",B(z)),C&&d(G,"stack",g(G.stack,1)),_(G,O);var ce=[];return b(Q,F,{that:ce}),d(G,"errors",ce),G};l?l(N,L):c(N,L,{name:!0});var k=N.prototype=u(L.prototype,{constructor:f(1,N),message:f(1,""),name:f(1,"AggregateError")});n({global:!0},{AggregateError:N})},1646:function(s,e,t){var n=t(7263),o=t(7583),a=t(6544),r=t(4521),l=t(794),c=t(1324),u=t(1825),d=t(5999),f=t(4822),g=t(9269),_=t(3649),b=t(4061),B=_("isConcatSpreadable"),I=9007199254740991,C="Maximum allowed index exceeded",R=o.TypeError,L=b>=51||!a(function(){var k=[];return k[B]=!1,k.concat()[0]!==k}),F=g("concat"),N=function(k){if(!l(k))return!1;var Q=k[B];return Q!==void 0?!!Q:r(k)};n({target:"Array",proto:!0,forced:!L||!F},{concat:function(k){var Q,z,G,O,q,ce=c(this),ne=f(ce,0),ue=0;for(Q=-1,G=arguments.length;Q<G;Q++)if(N(q=Q===-1?ce:arguments[Q])){if(ue+(O=u(q))>I)throw R(C);for(z=0;z<O;z++,ue++)z in q&&d(ne,ue,q[z])}else{if(ue>=I)throw R(C);d(ne,ue++,q)}return ne.length=ue,ne}})},5677:function(s,e,t){var n=t(2977),o=t(6288),a=t(339),r=t(2743),l=t(4615).f,c=t(9012),u=t(6268),d=t(8494),f="Array Iterator",g=r.set,_=r.getterFor(f);s.exports=c(Array,"Array",function(B,I){g(this,{type:f,target:n(B),index:0,kind:I})},function(){var B=_(this),I=B.target,C=B.kind,R=B.index++;return!I||R>=I.length?(B.target=void 0,{value:void 0,done:!0}):C=="keys"?{value:R,done:!1}:C=="values"?{value:I[R],done:!1}:{value:[R,I[R]],done:!1}},"values");var b=a.Arguments=a.Array;if(o("keys"),o("values"),o("entries"),!u&&d&&b.name!=="values")try{l(b,"name",{value:"values"})}catch{}},6956:function(s,e,t){var n=t(7583);t(8821)(n.JSON,"JSON",!0)},5222:function(s,e,t){t(8821)(Math,"Math",!0)},6394:function(s,e,t){var n=t(8191),o=t(1270),a=t(3060);n||o(Object.prototype,"toString",a,{unsafe:!0})},6969:function(s,e,t){var n=t(7263),o=t(8262),a=t(8257),r=t(5084),l=t(544),c=t(4026);n({target:"Promise",stat:!0},{allSettled:function(u){var d=this,f=r.f(d),g=f.resolve,_=f.reject,b=l(function(){var B=a(d.resolve),I=[],C=0,R=1;c(u,function(L){var F=C++,N=!1;R++,o(B,d,L).then(function(k){N||(N=!0,I[F]={status:"fulfilled",value:k},--R||g(I))},function(k){N||(N=!0,I[F]={status:"rejected",reason:k},--R||g(I))})}),--R||g(I)});return b.error&&_(b.value),f.promise}})},2021:function(s,e,t){var n=t(7263),o=t(8257),a=t(5897),r=t(8262),l=t(5084),c=t(544),u=t(4026),d="No one promise resolved";n({target:"Promise",stat:!0},{any:function(f){var g=this,_=a("AggregateError"),b=l.f(g),B=b.resolve,I=b.reject,C=c(function(){var R=o(g.resolve),L=[],F=0,N=1,k=!1;u(f,function(Q){var z=F++,G=!1;N++,r(R,g,Q).then(function(O){G||k||(k=!0,B(O))},function(O){G||k||(G=!0,L[z]=O,--N||I(new _(L,d)))})}),--N||I(new _(L,d))});return C.error&&I(C.value),b.promise}})},8328:function(s,e,t){var n=t(7263),o=t(6268),a=t(783),r=t(6544),l=t(5897),c=t(9212),u=t(564),d=t(5732),f=t(1270);if(n({target:"Promise",proto:!0,real:!0,forced:!!a&&r(function(){a.prototype.finally.call({then:function(){}},function(){})})},{finally:function(_){var b=u(this,l("Promise")),B=c(_);return this.then(B?function(I){return d(b,_()).then(function(){return I})}:_,B?function(I){return d(b,_()).then(function(){throw I})}:_)}}),!o&&c(a)){var g=l("Promise").prototype.finally;a.prototype.finally!==g&&f(a.prototype,"finally",g,{unsafe:!0})}},5334:function(s,e,t){var n,o,a,r,l=t(7263),c=t(6268),u=t(7583),d=t(5897),f=t(8262),g=t(783),_=t(1270),b=t(6893),B=t(7496),I=t(8821),C=t(7730),R=t(8257),L=t(9212),F=t(794),N=t(4761),k=t(9734),Q=t(4026),z=t(3616),G=t(564),O=t(8117).set,q=t(2095),ce=t(5732),ne=t(2716),ue=t(5084),pe=t(544),fe=t(2723),ee=t(2743),J=t(4451),ye=t(3649),Te=t(2274),xe=t(5354),ve=t(4061),he=ye("species"),le="Promise",_e=ee.getterFor(le),De=ee.set,de=ee.getterFor(le),Me=g&&g.prototype,Ne=g,Pe=Me,nt=u.TypeError,ie=u.document,oe=u.process,$=ue.f,Se=$,Be=!!(ie&&ie.createEvent&&u.dispatchEvent),we=L(u.PromiseRejectionEvent),Fe="unhandledrejection",$e=!1,ze=J(le,function(){var se=k(Ne),Ee=se!==String(Ne);if(!Ee&&ve===66||c&&!Pe.finally)return!0;if(ve>=51&&/native code/.test(se))return!1;var Ye=new Ne(function(at){at(1)}),Je=function(at){at(function(){},function(){})};return(Ye.constructor={})[he]=Je,!($e=Ye.then(function(){})instanceof Je)||!Ee&&Te&&!we}),qe=ze||!z(function(se){Ne.all(se).catch(function(){})}),ut=function(se){var Ee;return!(!F(se)||!L(Ee=se.then))&&Ee},te=function(se,Ee){var Ye,Je,at,ot=Ee.value,Ct=Ee.state==1,K=Ct?se.ok:se.fail,be=se.resolve,ge=se.reject,Re=se.domain;try{K?(Ct||(Ee.rejection===2&&Ve(Ee),Ee.rejection=1),K===!0?Ye=ot:(Re&&Re.enter(),Ye=K(ot),Re&&(Re.exit(),at=!0)),Ye===se.promise?ge(nt("Promise-chain cycle")):(Je=ut(Ye))?f(Je,Ye,be,ge):be(Ye)):ge(ot)}catch(Qe){Re&&!at&&Re.exit(),ge(Qe)}},H=function(se,Ee){se.notified||(se.notified=!0,q(function(){for(var Ye,Je=se.reactions;Ye=Je.get();)te(Ye,se);se.notified=!1,Ee&&!se.rejection&&Ge(se)}))},Ie=function(se,Ee,Ye){var Je,at;Be?((Je=ie.createEvent("Event")).promise=Ee,Je.reason=Ye,Je.initEvent(se,!1,!0),u.dispatchEvent(Je)):Je={promise:Ee,reason:Ye},!we&&(at=u["on"+se])?at(Je):se===Fe&&ne("Unhandled promise rejection",Ye)},Ge=function(se){f(O,u,function(){var Ee,Ye=se.facade,Je=se.value;if(We(se)&&(Ee=pe(function(){xe?oe.emit("unhandledRejection",Je,Ye):Ie(Fe,Ye,Je)}),se.rejection=xe||We(se)?2:1,Ee.error))throw Ee.value})},We=function(se){return se.rejection!==1&&!se.parent},Ve=function(se){f(O,u,function(){var Ee=se.facade;xe?oe.emit("rejectionHandled",Ee):Ie("rejectionhandled",Ee,se.value)})},dt=function(se,Ee,Ye){return function(Je){se(Ee,Je,Ye)}},it=function(se,Ee,Ye){se.done||(se.done=!0,Ye&&(se=Ye),se.value=Ee,se.state=2,H(se,!0))},ft=function se(Ee,Ye,Je){if(!Ee.done){Ee.done=!0,Je&&(Ee=Je);try{if(Ee.facade===Ye)throw nt("Promise can't be resolved itself");var at=ut(Ye);at?q(function(){var ot={done:!1};try{f(at,Ye,dt(se,ot,Ee),dt(it,ot,Ee))}catch(Ct){it(ot,Ct,Ee)}}):(Ee.value=Ye,Ee.state=1,H(Ee,!1))}catch(ot){it({done:!1},ot,Ee)}}};if(ze&&(Pe=(Ne=function(se){N(this,Pe),R(se),f(n,this);var Ee=_e(this);try{se(dt(ft,Ee),dt(it,Ee))}catch(Ye){it(Ee,Ye)}}).prototype,(n=function(se){De(this,{type:le,done:!1,notified:!1,parent:!1,reactions:new fe,rejection:!1,state:0,value:void 0})}).prototype=b(Pe,{then:function(se,Ee){var Ye=de(this),Je=$(G(this,Ne));return Ye.parent=!0,Je.ok=!L(se)||se,Je.fail=L(Ee)&&Ee,Je.domain=xe?oe.domain:void 0,Ye.state==0?Ye.reactions.add(Je):q(function(){te(Je,Ye)}),Je.promise},catch:function(se){return this.then(void 0,se)}}),o=function(){var se=new n,Ee=_e(se);this.promise=se,this.resolve=dt(ft,Ee),this.reject=dt(it,Ee)},ue.f=$=function(se){return se===Ne||se===a?new o(se):Se(se)},!c&&L(g)&&Me!==Object.prototype)){r=Me.then,$e||(_(Me,"then",function(se,Ee){var Ye=this;return new Ne(function(Je,at){f(r,Ye,Je,at)}).then(se,Ee)},{unsafe:!0}),_(Me,"catch",Pe.catch,{unsafe:!0}));try{delete Me.constructor}catch{}B&&B(Me,Pe)}l({global:!0,wrap:!0,forced:ze},{Promise:Ne}),I(Ne,le,!1,!0),C(le),a=d(le),l({target:le,stat:!0,forced:ze},{reject:function(se){var Ee=$(this);return f(Ee.reject,void 0,se),Ee.promise}}),l({target:le,stat:!0,forced:c||ze},{resolve:function(se){return ce(c&&this===a?Ne:this,se)}}),l({target:le,stat:!0,forced:qe},{all:function(se){var Ee=this,Ye=$(Ee),Je=Ye.resolve,at=Ye.reject,ot=pe(function(){var Ct=R(Ee.resolve),K=[],be=0,ge=1;Q(se,function(Re){var Qe=be++,Oe=!1;ge++,f(Ct,Ee,Re).then(function(st){Oe||(Oe=!0,K[Qe]=st,--ge||Je(K))},at)}),--ge||Je(K)});return ot.error&&at(ot.value),Ye.promise},race:function(se){var Ee=this,Ye=$(Ee),Je=Ye.reject,at=pe(function(){var ot=R(Ee.resolve);Q(se,function(Ct){f(ot,Ee,Ct).then(Ye.resolve,Je)})});return at.error&&Je(at.value),Ye.promise}})},2257:function(s,e,t){var n=t(7263),o=t(7583),a=t(8821);n({global:!0},{Reflect:{}}),a(o.Reflect,"Reflect",!0)},2129:function(s,e,t){var n=t(6389).charAt,o=t(8320),a=t(2743),r=t(9012),l="String Iterator",c=a.set,u=a.getterFor(l);r(String,"String",function(d){c(this,{type:l,string:o(d),index:0})},function(){var d,f=u(this),g=f.string,_=f.index;return _>=g.length?{value:void 0,done:!0}:(d=n(g,_),f.index+=d.length,{value:d,done:!1})})},462:function(s,e,t){t(2219)("asyncIterator")},8407:function(s,e,t){var n=t(7263),o=t(8494),a=t(7583),r=t(7386),l=t(2870),c=t(9212),u=t(2447),d=t(8320),f=t(4615).f,g=t(3478),_=a.Symbol,b=_&&_.prototype;if(o&&c(_)&&(!("description"in b)||_().description!==void 0)){var B={},I=function(){var Q=arguments.length<1||arguments[0]===void 0?void 0:d(arguments[0]),z=u(b,this)?new _(Q):Q===void 0?_():_(Q);return Q===""&&(B[z]=!0),z};g(I,_),I.prototype=b,b.constructor=I;var C=String(_("test"))=="Symbol(test)",R=r(b.toString),L=r(b.valueOf),F=/^Symbol\((.*)\)[^)]+$/,N=r("".replace),k=r("".slice);f(b,"description",{configurable:!0,get:function(){var Q=L(this),z=R(Q);if(l(B,Q))return"";var G=C?k(z,7,-1):N(z,F,"$1");return G===""?void 0:G}}),n({global:!0,forced:!0},{Symbol:I})}},2429:function(s,e,t){t(2219)("hasInstance")},1172:function(s,e,t){t(2219)("isConcatSpreadable")},8288:function(s,e,t){t(2219)("iterator")},2004:function(s,e,t){var n=t(7263),o=t(7583),a=t(5897),r=t(1611),l=t(8262),c=t(7386),u=t(6268),d=t(8494),f=t(8640),g=t(6544),_=t(2870),b=t(4521),B=t(9212),I=t(794),C=t(2447),R=t(5871),L=t(2569),F=t(1324),N=t(2977),k=t(8734),Q=t(8320),z=t(4677),G=t(3590),O=t(5432),q=t(9275),ce=t(3130),ne=t(4012),ue=t(6683),pe=t(4615),fe=t(8728),ee=t(112),J=t(6917),ye=t(1270),Te=t(7836),xe=t(9137),ve=t(4639),he=t(8284),le=t(3649),_e=t(491),De=t(2219),de=t(8821),Me=t(2743),Ne=t(4805).forEach,Pe=xe("hidden"),nt="Symbol",ie=le("toPrimitive"),oe=Me.set,$=Me.getterFor(nt),Se=Object.prototype,Be=o.Symbol,we=Be&&Be.prototype,Fe=o.TypeError,$e=o.QObject,ze=a("JSON","stringify"),qe=ue.f,ut=pe.f,te=ce.f,H=ee.f,Ie=c([].push),Ge=Te("symbols"),We=Te("op-symbols"),Ve=Te("string-to-symbol-registry"),dt=Te("symbol-to-string-registry"),it=Te("wks"),ft=!$e||!$e.prototype||!$e.prototype.findChild,se=d&&g(function(){return G(ut({},"a",{get:function(){return ut(this,"a",{value:7}).a}})).a!=7})?function(ge,Re,Qe){var Oe=qe(Se,Re);Oe&&delete Se[Re],ut(ge,Re,Qe),Oe&&ge!==Se&&ut(Se,Re,Oe)}:ut,Ee=function(ge,Re){var Qe=Ge[ge]=G(we);return oe(Qe,{type:nt,tag:ge,description:Re}),d||(Qe.description=Re),Qe},Ye=function(ge,Re,Qe){ge===Se&&Ye(We,Re,Qe),L(ge);var Oe=k(Re);return L(Qe),_(Ge,Oe)?(Qe.enumerable?(_(ge,Pe)&&ge[Pe][Oe]&&(ge[Pe][Oe]=!1),Qe=G(Qe,{enumerable:z(0,!1)})):(_(ge,Pe)||ut(ge,Pe,z(1,{})),ge[Pe][Oe]=!0),se(ge,Oe,Qe)):ut(ge,Oe,Qe)},Je=function(ge,Re){L(ge);var Qe=N(Re),Oe=O(Qe).concat(K(Qe));return Ne(Oe,function(st){d&&!l(at,Qe,st)||Ye(ge,st,Qe[st])}),ge},at=function(ge){var Re=k(ge),Qe=l(H,this,Re);return!(this===Se&&_(Ge,Re)&&!_(We,Re))&&(!(Qe||!_(this,Re)||!_(Ge,Re)||_(this,Pe)&&this[Pe][Re])||Qe)},ot=function(ge,Re){var Qe=N(ge),Oe=k(Re);if(Qe!==Se||!_(Ge,Oe)||_(We,Oe)){var st=qe(Qe,Oe);return!st||!_(Ge,Oe)||_(Qe,Pe)&&Qe[Pe][Oe]||(st.enumerable=!0),st}},Ct=function(ge){var Re=te(N(ge)),Qe=[];return Ne(Re,function(Oe){_(Ge,Oe)||_(ve,Oe)||Ie(Qe,Oe)}),Qe},K=function(ge){var Re=ge===Se,Qe=te(Re?We:N(ge)),Oe=[];return Ne(Qe,function(st){!_(Ge,st)||Re&&!_(Se,st)||Ie(Oe,Ge[st])}),Oe};if(f||(Be=function(){if(C(we,this))throw Fe("Symbol is not a constructor");var ge=arguments.length&&arguments[0]!==void 0?Q(arguments[0]):void 0,Re=he(ge),Qe=function Oe(st){this===Se&&l(Oe,We,st),_(this,Pe)&&_(this[Pe],Re)&&(this[Pe][Re]=!1),se(this,Re,z(1,st))};return d&&ft&&se(Se,Re,{configurable:!0,set:Qe}),Ee(Re,ge)},ye(we=Be.prototype,"toString",function(){return $(this).tag}),ye(Be,"withoutSetter",function(ge){return Ee(he(ge),ge)}),ee.f=at,pe.f=Ye,fe.f=Je,ue.f=ot,q.f=ce.f=Ct,ne.f=K,_e.f=function(ge){return Ee(le(ge),ge)},d&&(ut(we,"description",{configurable:!0,get:function(){return $(this).description}}),u||ye(Se,"propertyIsEnumerable",at,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!f,sham:!f},{Symbol:Be}),Ne(O(it),function(ge){De(ge)}),n({target:nt,stat:!0,forced:!f},{for:function(ge){var Re=Q(ge);if(_(Ve,Re))return Ve[Re];var Qe=Be(Re);return Ve[Re]=Qe,dt[Qe]=Re,Qe},keyFor:function(ge){if(!R(ge))throw Fe(ge+" is not a symbol");if(_(dt,ge))return dt[ge]},useSetter:function(){ft=!0},useSimple:function(){ft=!1}}),n({target:"Object",stat:!0,forced:!f,sham:!d},{create:function(ge,Re){return Re===void 0?G(ge):Je(G(ge),Re)},defineProperty:Ye,defineProperties:Je,getOwnPropertyDescriptor:ot}),n({target:"Object",stat:!0,forced:!f},{getOwnPropertyNames:Ct,getOwnPropertySymbols:K}),n({target:"Object",stat:!0,forced:g(function(){ne.f(1)})},{getOwnPropertySymbols:function(ge){return ne.f(F(ge))}}),ze&&n({target:"JSON",stat:!0,forced:!f||g(function(){var ge=Be();return ze([ge])!="[null]"||ze({a:ge})!="{}"||ze(Object(ge))!="{}"})},{stringify:function(ge,Re,Qe){var Oe=J(arguments),st=Re;if((I(Re)||ge!==void 0)&&!R(ge))return b(Re)||(Re=function(_t,Ft){if(B(st)&&(Ft=l(st,this,_t,Ft)),!R(Ft))return Ft}),Oe[1]=Re,r(ze,null,Oe)}}),!we[ie]){var be=we.valueOf;ye(we,ie,function(ge){return l(be,this)})}de(Be,nt),ve[Pe]=!0},8201:function(s,e,t){t(2219)("matchAll")},1274:function(s,e,t){t(2219)("match")},6626:function(s,e,t){t(2219)("replace")},3211:function(s,e,t){t(2219)("search")},9952:function(s,e,t){t(2219)("species")},15:function(s,e,t){t(2219)("split")},9831:function(s,e,t){t(2219)("toPrimitive")},7521:function(s,e,t){t(2219)("toStringTag")},2972:function(s,e,t){t(2219)("unscopables")},4655:function(s,e,t){var n=t(7583),o=t(6778),a=t(9307),r=t(5677),l=t(57),c=t(3649),u=c("iterator"),d=c("toStringTag"),f=r.values,g=function(b,B){if(b){if(b[u]!==f)try{l(b,u,f)}catch{b[u]=f}if(b[d]||l(b,d,B),o[B]){for(var I in r)if(b[I]!==r[I])try{l(b,I,r[I])}catch{b[I]=r[I]}}}};for(var _ in o)g(n[_]&&n[_].prototype,_);g(a,"DOMTokenList")},8765:function(s,e,t){var n=t(5036);t(4655),s.exports=n},5441:function(s,e,t){var n=t(2582);t(4655),s.exports=n},7705:function(s){s.exports=function(e){var t=[];return t.toString=function(){return this.map(function(n){var o="",a=n[5]!==void 0;return n[4]&&(o+="@supports (".concat(n[4],") {")),n[2]&&(o+="@media ".concat(n[2]," {")),a&&(o+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),o+=e(n),a&&(o+="}"),n[2]&&(o+="}"),n[4]&&(o+="}"),o}).join("")},t.i=function(n,o,a,r,l){typeof n=="string"&&(n=[[null,n,void 0]]);var c={};if(a)for(var u=0;u<this.length;u++){var d=this[u][0];d!=null&&(c[d]=!0)}for(var f=0;f<n.length;f++){var g=[].concat(n[f]);a&&c[g[0]]||(l!==void 0&&(g[5]===void 0||(g[1]="@layer".concat(g[5].length>0?" ".concat(g[5]):""," {").concat(g[1],"}")),g[5]=l),o&&(g[2]&&(g[1]="@media ".concat(g[2]," {").concat(g[1],"}")),g[2]=o),r&&(g[4]?(g[1]="@supports (".concat(g[4],") {").concat(g[1],"}"),g[4]=r):g[4]="".concat(r)),t.push(g))}},t}},6738:function(s){s.exports=function(e){return e[1]}},8679:function(s){var e=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver,t=window.WeakMap;if(t===void 0){var n=Object.defineProperty,o=Date.now()%1e9;(t=function(){this.name="__st"+(1e9*Math.random()>>>0)+o+++"__"}).prototype={set:function(k,Q){var z=k[this.name];return z&&z[0]===k?z[1]=Q:n(k,this.name,{value:[k,Q],writable:!0}),this},get:function(k){var Q;return(Q=k[this.name])&&Q[0]===k?Q[1]:void 0},delete:function(k){var Q=k[this.name];if(!Q)return!1;var z=Q[0]===k;return Q[0]=Q[1]=void 0,z},has:function(k){var Q=k[this.name];return!!Q&&Q[0]===k}}}var a=new t,r=window.msSetImmediate;if(!r){var l=[],c=String(Math.random());window.addEventListener("message",function(k){if(k.data===c){var Q=l;l=[],Q.forEach(function(z){z()})}}),r=function(k){l.push(k),window.postMessage(c,"*")}}var u=!1,d=[];function f(){u=!1;var k=d;d=[],k.sort(function(z,G){return z.uid_-G.uid_});var Q=!1;k.forEach(function(z){var G=z.takeRecords();(function(O){O.nodes_.forEach(function(q){var ce=a.get(q);ce&&ce.forEach(function(ne){ne.observer===O&&ne.removeTransientObservers()})})})(z),G.length&&(z.callback_(G,z),Q=!0)}),Q&&f()}function g(k,Q){for(var z=k;z;z=z.parentNode){var G=a.get(z);if(G)for(var O=0;O<G.length;O++){var q=G[O],ce=q.options;if(z===k||ce.subtree){var ne=Q(ce);ne&&q.enqueue(ne)}}}}var _,b,B=0;function I(k){this.callback_=k,this.nodes_=[],this.records_=[],this.uid_=++B}function C(k,Q){this.type=k,this.target=Q,this.addedNodes=[],this.removedNodes=[],this.previousSibling=null,this.nextSibling=null,this.attributeName=null,this.attributeNamespace=null,this.oldValue=null}function R(k,Q){return _=new C(k,Q)}function L(k){return b||((z=new C((Q=_).type,Q.target)).addedNodes=Q.addedNodes.slice(),z.removedNodes=Q.removedNodes.slice(),z.previousSibling=Q.previousSibling,z.nextSibling=Q.nextSibling,z.attributeName=Q.attributeName,z.attributeNamespace=Q.attributeNamespace,z.oldValue=Q.oldValue,(b=z).oldValue=k,b);var Q,z}function F(k,Q){return k===Q?k:b&&((z=k)===b||z===_)?b:null;var z}function N(k,Q,z){this.observer=k,this.target=Q,this.options=z,this.transientObservedNodes=[]}I.prototype={observe:function(k,Q){var z;if(z=k,k=window.ShadowDOMPolyfill&&window.ShadowDOMPolyfill.wrapIfNeeded(z)||z,!Q.childList&&!Q.attributes&&!Q.characterData||Q.attributeOldValue&&!Q.attributes||Q.attributeFilter&&Q.attributeFilter.length&&!Q.attributes||Q.characterDataOldValue&&!Q.characterData)throw new SyntaxError;var G,O=a.get(k);O||a.set(k,O=[]);for(var q=0;q<O.length;q++)if(O[q].observer===this){(G=O[q]).removeListeners(),G.options=Q;break}G||(G=new N(this,k,Q),O.push(G),this.nodes_.push(k)),G.addListeners()},disconnect:function(){this.nodes_.forEach(function(k){for(var Q=a.get(k),z=0;z<Q.length;z++){var G=Q[z];if(G.observer===this){G.removeListeners(),Q.splice(z,1);break}}},this),this.records_=[]},takeRecords:function(){var k=this.records_;return this.records_=[],k}},N.prototype={enqueue:function(k){var Q,z=this.observer.records_,G=z.length;if(z.length>0){var O=F(z[G-1],k);if(O)return void(z[G-1]=O)}else Q=this.observer,d.push(Q),u||(u=!0,r(f));z[G]=k},addListeners:function(){this.addListeners_(this.target)},addListeners_:function(k){var Q=this.options;Q.attributes&&k.addEventListener("DOMAttrModified",this,!0),Q.characterData&&k.addEventListener("DOMCharacterDataModified",this,!0),Q.childList&&k.addEventListener("DOMNodeInserted",this,!0),(Q.childList||Q.subtree)&&k.addEventListener("DOMNodeRemoved",this,!0)},removeListeners:function(){this.removeListeners_(this.target)},removeListeners_:function(k){var Q=this.options;Q.attributes&&k.removeEventListener("DOMAttrModified",this,!0),Q.characterData&&k.removeEventListener("DOMCharacterDataModified",this,!0),Q.childList&&k.removeEventListener("DOMNodeInserted",this,!0),(Q.childList||Q.subtree)&&k.removeEventListener("DOMNodeRemoved",this,!0)},addTransientObserver:function(k){if(k!==this.target){this.addListeners_(k),this.transientObservedNodes.push(k);var Q=a.get(k);Q||a.set(k,Q=[]),Q.push(this)}},removeTransientObservers:function(){var k=this.transientObservedNodes;this.transientObservedNodes=[],k.forEach(function(Q){this.removeListeners_(Q);for(var z=a.get(Q),G=0;G<z.length;G++)if(z[G]===this){z.splice(G,1);break}},this)},handleEvent:function(k){switch(k.stopImmediatePropagation(),k.type){case"DOMAttrModified":var Q=k.attrName,z=k.relatedNode.namespaceURI,G=k.target;(q=new R("attributes",G)).attributeName=Q,q.attributeNamespace=z;var O=null;typeof MutationEvent<"u"&&k.attrChange===MutationEvent.ADDITION||(O=k.prevValue),g(G,function(ee){if(ee.attributes&&(!ee.attributeFilter||!ee.attributeFilter.length||ee.attributeFilter.indexOf(Q)!==-1||ee.attributeFilter.indexOf(z)!==-1))return ee.attributeOldValue?L(O):q});break;case"DOMCharacterDataModified":var q=R("characterData",G=k.target);O=k.prevValue,g(G,function(ee){if(ee.characterData)return ee.characterDataOldValue?L(O):q});break;case"DOMNodeRemoved":this.addTransientObserver(k.target);case"DOMNodeInserted":G=k.relatedNode;var ce,ne,ue=k.target;k.type==="DOMNodeInserted"?(ce=[ue],ne=[]):(ce=[],ne=[ue]);var pe=ue.previousSibling,fe=ue.nextSibling;(q=R("childList",G)).addedNodes=ce,q.removedNodes=ne,q.previousSibling=pe,q.nextSibling=fe,g(G,function(ee){if(ee.childList)return q})}_=b=void 0}},e||(e=I),s.exports=e},7588:function(s){var e=function(t){var n,o=Object.prototype,a=o.hasOwnProperty,r=typeof Symbol=="function"?Symbol:{},l=r.iterator||"@@iterator",c=r.asyncIterator||"@@asyncIterator",u=r.toStringTag||"@@toStringTag";function d(ee,J,ye){return Object.defineProperty(ee,J,{value:ye,enumerable:!0,configurable:!0,writable:!0}),ee[J]}try{d({},"")}catch{d=function(J,ye,Te){return J[ye]=Te}}function f(ee,J,ye,Te){var xe=J&&J.prototype instanceof R?J:R,ve=Object.create(xe.prototype),he=new ue(Te||[]);return ve._invoke=function(le,_e,De){var de=_;return function(Me,Ne){if(de===B)throw new Error("Generator is already running");if(de===I){if(Me==="throw")throw Ne;return fe()}for(De.method=Me,De.arg=Ne;;){var Pe=De.delegate;if(Pe){var nt=q(Pe,De);if(nt){if(nt===C)continue;return nt}}if(De.method==="next")De.sent=De._sent=De.arg;else if(De.method==="throw"){if(de===_)throw de=I,De.arg;De.dispatchException(De.arg)}else De.method==="return"&&De.abrupt("return",De.arg);de=B;var ie=g(le,_e,De);if(ie.type==="normal"){if(de=De.done?I:b,ie.arg===C)continue;return{value:ie.arg,done:De.done}}ie.type==="throw"&&(de=I,De.method="throw",De.arg=ie.arg)}}}(ee,ye,he),ve}function g(ee,J,ye){try{return{type:"normal",arg:ee.call(J,ye)}}catch(Te){return{type:"throw",arg:Te}}}t.wrap=f;var _="suspendedStart",b="suspendedYield",B="executing",I="completed",C={};function R(){}function L(){}function F(){}var N={};d(N,l,function(){return this});var k=Object.getPrototypeOf,Q=k&&k(k(pe([])));Q&&Q!==o&&a.call(Q,l)&&(N=Q);var z=F.prototype=R.prototype=Object.create(N);function G(ee){["next","throw","return"].forEach(function(J){d(ee,J,function(ye){return this._invoke(J,ye)})})}function O(ee,J){function ye(xe,ve,he,le){var _e=g(ee[xe],ee,ve);if(_e.type!=="throw"){var De=_e.arg,de=De.value;return de&&typeof de=="object"&&a.call(de,"__await")?J.resolve(de.__await).then(function(Me){ye("next",Me,he,le)},function(Me){ye("throw",Me,he,le)}):J.resolve(de).then(function(Me){De.value=Me,he(De)},function(Me){return ye("throw",Me,he,le)})}le(_e.arg)}var Te;this._invoke=function(xe,ve){function he(){return new J(function(le,_e){ye(xe,ve,le,_e)})}return Te=Te?Te.then(he,he):he()}}function q(ee,J){var ye=ee.iterator[J.method];if(ye===n){if(J.delegate=null,J.method==="throw"){if(ee.iterator.return&&(J.method="return",J.arg=n,q(ee,J),J.method==="throw"))return C;J.method="throw",J.arg=new TypeError("The iterator does not provide a 'throw' method")}return C}var Te=g(ye,ee.iterator,J.arg);if(Te.type==="throw")return J.method="throw",J.arg=Te.arg,J.delegate=null,C;var xe=Te.arg;return xe?xe.done?(J[ee.resultName]=xe.value,J.next=ee.nextLoc,J.method!=="return"&&(J.method="next",J.arg=n),J.delegate=null,C):xe:(J.method="throw",J.arg=new TypeError("iterator result is not an object"),J.delegate=null,C)}function ce(ee){var J={tryLoc:ee[0]};1 in ee&&(J.catchLoc=ee[1]),2 in ee&&(J.finallyLoc=ee[2],J.afterLoc=ee[3]),this.tryEntries.push(J)}function ne(ee){var J=ee.completion||{};J.type="normal",delete J.arg,ee.completion=J}function ue(ee){this.tryEntries=[{tryLoc:"root"}],ee.forEach(ce,this),this.reset(!0)}function pe(ee){if(ee){var J=ee[l];if(J)return J.call(ee);if(typeof ee.next=="function")return ee;if(!isNaN(ee.length)){var ye=-1,Te=function xe(){for(;++ye<ee.length;)if(a.call(ee,ye))return xe.value=ee[ye],xe.done=!1,xe;return xe.value=n,xe.done=!0,xe};return Te.next=Te}}return{next:fe}}function fe(){return{value:n,done:!0}}return L.prototype=F,d(z,"constructor",F),d(F,"constructor",L),L.displayName=d(F,u,"GeneratorFunction"),t.isGeneratorFunction=function(ee){var J=typeof ee=="function"&&ee.constructor;return!!J&&(J===L||(J.displayName||J.name)==="GeneratorFunction")},t.mark=function(ee){return Object.setPrototypeOf?Object.setPrototypeOf(ee,F):(ee.__proto__=F,d(ee,u,"GeneratorFunction")),ee.prototype=Object.create(z),ee},t.awrap=function(ee){return{__await:ee}},G(O.prototype),d(O.prototype,c,function(){return this}),t.AsyncIterator=O,t.async=function(ee,J,ye,Te,xe){xe===void 0&&(xe=Promise);var ve=new O(f(ee,J,ye,Te),xe);return t.isGeneratorFunction(J)?ve:ve.next().then(function(he){return he.done?he.value:ve.next()})},G(z),d(z,u,"Generator"),d(z,l,function(){return this}),d(z,"toString",function(){return"[object Generator]"}),t.keys=function(ee){var J=[];for(var ye in ee)J.push(ye);return J.reverse(),function Te(){for(;J.length;){var xe=J.pop();if(xe in ee)return Te.value=xe,Te.done=!1,Te}return Te.done=!0,Te}},t.values=pe,ue.prototype={constructor:ue,reset:function(ee){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(ne),!ee)for(var J in this)J.charAt(0)==="t"&&a.call(this,J)&&!isNaN(+J.slice(1))&&(this[J]=n)},stop:function(){this.done=!0;var ee=this.tryEntries[0].completion;if(ee.type==="throw")throw ee.arg;return this.rval},dispatchException:function(ee){if(this.done)throw ee;var J=this;function ye(_e,De){return ve.type="throw",ve.arg=ee,J.next=_e,De&&(J.method="next",J.arg=n),!!De}for(var Te=this.tryEntries.length-1;Te>=0;--Te){var xe=this.tryEntries[Te],ve=xe.completion;if(xe.tryLoc==="root")return ye("end");if(xe.tryLoc<=this.prev){var he=a.call(xe,"catchLoc"),le=a.call(xe,"finallyLoc");if(he&&le){if(this.prev<xe.catchLoc)return ye(xe.catchLoc,!0);if(this.prev<xe.finallyLoc)return ye(xe.finallyLoc)}else if(he){if(this.prev<xe.catchLoc)return ye(xe.catchLoc,!0)}else{if(!le)throw new Error("try statement without catch or finally");if(this.prev<xe.finallyLoc)return ye(xe.finallyLoc)}}}},abrupt:function(ee,J){for(var ye=this.tryEntries.length-1;ye>=0;--ye){var Te=this.tryEntries[ye];if(Te.tryLoc<=this.prev&&a.call(Te,"finallyLoc")&&this.prev<Te.finallyLoc){var xe=Te;break}}xe&&(ee==="break"||ee==="continue")&&xe.tryLoc<=J&&J<=xe.finallyLoc&&(xe=null);var ve=xe?xe.completion:{};return ve.type=ee,ve.arg=J,xe?(this.method="next",this.next=xe.finallyLoc,C):this.complete(ve)},complete:function(ee,J){if(ee.type==="throw")throw ee.arg;return ee.type==="break"||ee.type==="continue"?this.next=ee.arg:ee.type==="return"?(this.rval=this.arg=ee.arg,this.method="return",this.next="end"):ee.type==="normal"&&J&&(this.next=J),C},finish:function(ee){for(var J=this.tryEntries.length-1;J>=0;--J){var ye=this.tryEntries[J];if(ye.finallyLoc===ee)return this.complete(ye.completion,ye.afterLoc),ne(ye),C}},catch:function(ee){for(var J=this.tryEntries.length-1;J>=0;--J){var ye=this.tryEntries[J];if(ye.tryLoc===ee){var Te=ye.completion;if(Te.type==="throw"){var xe=Te.arg;ne(ye)}return xe}}throw new Error("illegal catch attempt")},delegateYield:function(ee,J,ye){return this.delegate={iterator:pe(ee),resultName:J,nextLoc:ye},this.method==="next"&&(this.arg=n),C}},t}(s.exports);try{regeneratorRuntime=e}catch{typeof globalThis=="object"?globalThis.regeneratorRuntime=e:Function("r","regeneratorRuntime = r")(e)}},8702:function(s,e,t){t.d(e,{Z:function(){return Te}});var n=t(4296),o=t(6464),a=t(6881),r=t(2942),l=t(7003),c=t(3379),u=t.n(c),d=t(7795),f=t.n(d),g=t(569),_=t.n(g),b=t(3565),B=t.n(b),I=t(9216),C=t.n(I),R=t(4589),L=t.n(R),F=t(5313),N={};F.Z&&F.Z.locals&&(N.locals=F.Z.locals);var k,Q=0,z={};z.styleTagTransform=L(),z.setAttributes=B(),z.insert=_().bind(null,"head"),z.domAPI=f(),z.insertStyleElement=C(),N.use=function(xe){return z.options=xe||{},Q++||(k=u()(F.Z,z)),N},N.unuse=function(){Q>0&&!--Q&&(k(),k=null)};var G=N;function O(xe){var ve,he;return{c:function(){ve=(0,r.bi5)("svg"),he=(0,r.bi5)("path"),(0,r.Ljt)(he,"d","M599.99999 832.000004h47.999999a24 24 0 0 0 23.999999-24V376.000013a24 24 0 0 0-23.999999-24h-47.999999a24 24 0 0 0-24 24v431.999991a24 24 0 0 0 24 24zM927.999983 160.000017h-164.819997l-67.999998-113.399998A95.999998 95.999998 0 0 0 612.819989 0.00002H411.179993a95.999998 95.999998 0 0 0-82.319998 46.599999L260.819996 160.000017H95.999999A31.999999 31.999999 0 0 0 64 192.000016v32a31.999999 31.999999 0 0 0 31.999999 31.999999h32v671.999987a95.999998 95.999998 0 0 0 95.999998 95.999998h575.999989a95.999998 95.999998 0 0 0 95.999998-95.999998V256.000015h31.999999a31.999999 31.999999 0 0 0 32-31.999999V192.000016a31.999999 31.999999 0 0 0-32-31.999999zM407.679993 101.820018A12 12 0 0 1 417.999993 96.000018h187.999996a12 12 0 0 1 10.3 5.82L651.219989 160.000017H372.779994zM799.999986 928.000002H223.999997V256.000015h575.999989z m-423.999992-95.999998h47.999999a24 24 0 0 0 24-24V376.000013a24 24 0 0 0-24-24h-47.999999a24 24 0 0 0-24 24v431.999991a24 24 0 0 0 24 24z"),(0,r.Ljt)(ve,"class","vc-icon-delete"),(0,r.Ljt)(ve,"viewBox","0 0 1024 1024"),(0,r.Ljt)(ve,"width","200"),(0,r.Ljt)(ve,"height","200")},m:function(le,_e){(0,r.$Tr)(le,ve,_e),(0,r.R3I)(ve,he)},d:function(le){le&&(0,r.ogt)(ve)}}}function q(xe){var ve,he,le;return{c:function(){ve=(0,r.bi5)("svg"),he=(0,r.bi5)("path"),le=(0,r.bi5)("path"),(0,r.Ljt)(he,"d","M874.154197 150.116875A511.970373 511.970373 0 1 0 1023.993986 511.991687a511.927744 511.927744 0 0 0-149.839789-361.874812z m-75.324866 648.382129A405.398688 405.398688 0 1 1 917.422301 511.991687a405.313431 405.313431 0 0 1-118.59297 286.507317z"),(0,r.Ljt)(le,"d","M725.039096 299.274605a54.351559 54.351559 0 0 0-76.731613 0l-135.431297 135.431297L377.274375 299.274605a54.436817 54.436817 0 0 0-76.944756 76.987385l135.388668 135.431297-135.388668 135.473925a54.436817 54.436817 0 0 0 76.944756 76.987385l135.388668-135.431297 135.431297 135.473926a54.436817 54.436817 0 0 0 76.731613-76.987385l-135.388668-135.473926 135.388668-135.431296a54.479445 54.479445 0 0 0 0.213143-77.030014z"),(0,r.Ljt)(ve,"viewBox","0 0 1024 1024"),(0,r.Ljt)(ve,"width","200"),(0,r.Ljt)(ve,"height","200")},m:function(_e,De){(0,r.$Tr)(_e,ve,De),(0,r.R3I)(ve,he),(0,r.R3I)(ve,le)},d:function(_e){_e&&(0,r.ogt)(ve)}}}function ce(xe){var ve,he;return{c:function(){ve=(0,r.bi5)("svg"),he=(0,r.bi5)("path"),(0,r.Ljt)(he,"fill-rule","evenodd"),(0,r.Ljt)(he,"d","M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"),(0,r.Ljt)(ve,"class","vc-icon-copy"),(0,r.Ljt)(ve,"viewBox","0 0 16 16")},m:function(le,_e){(0,r.$Tr)(le,ve,_e),(0,r.R3I)(ve,he)},d:function(le){le&&(0,r.ogt)(ve)}}}function ne(xe){var ve,he;return{c:function(){ve=(0,r.bi5)("svg"),he=(0,r.bi5)("path"),(0,r.Ljt)(he,"fill-rule","evenodd"),(0,r.Ljt)(he,"d","M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"),(0,r.Ljt)(ve,"class","vc-icon-suc"),(0,r.Ljt)(ve,"viewBox","0 0 16 16")},m:function(le,_e){(0,r.$Tr)(le,ve,_e),(0,r.R3I)(ve,he)},d:function(le){le&&(0,r.ogt)(ve)}}}function ue(xe){var ve,he,le;return{c:function(){ve=(0,r.bi5)("svg"),he=(0,r.bi5)("path"),le=(0,r.bi5)("path"),(0,r.Ljt)(he,"d","M776.533333 1024 162.133333 1024C72.533333 1024 0 951.466667 0 861.866667L0 247.466667C0 157.866667 72.533333 85.333333 162.133333 85.333333L469.333333 85.333333c25.6 0 42.666667 17.066667 42.666667 42.666667s-17.066667 42.666667-42.666667 42.666667L162.133333 170.666667C119.466667 170.666667 85.333333 204.8 85.333333 247.466667l0 610.133333c0 42.666667 34.133333 76.8 76.8 76.8l610.133333 0c42.666667 0 76.8-34.133333 76.8-76.8L849.066667 554.666667c0-25.6 17.066667-42.666667 42.666667-42.666667s42.666667 17.066667 42.666667 42.666667l0 307.2C938.666667 951.466667 866.133333 1024 776.533333 1024z"),(0,r.Ljt)(le,"d","M256 810.666667c-12.8 0-21.333333-4.266667-29.866667-12.8C217.6 789.333333 213.333333 772.266667 213.333333 759.466667l42.666667-213.333333c0-8.533333 4.266667-17.066667 12.8-21.333333l512-512c17.066667-17.066667 42.666667-17.066667 59.733333 0l170.666667 170.666667c17.066667 17.066667 17.066667 42.666667 0 59.733333l-512 512c-4.266667 4.266667-12.8 8.533333-21.333333 12.8l-213.333333 42.666667C260.266667 810.666667 260.266667 810.666667 256 810.666667zM337.066667 576l-25.6 136.533333 136.533333-25.6L921.6 213.333333 810.666667 102.4 337.066667 576z"),(0,r.Ljt)(ve,"class","vc-icon-edit"),(0,r.Ljt)(ve,"viewBox","0 0 1024 1024"),(0,r.Ljt)(ve,"width","200"),(0,r.Ljt)(ve,"height","200")},m:function(_e,De){(0,r.$Tr)(_e,ve,De),(0,r.R3I)(ve,he),(0,r.R3I)(ve,le)},d:function(_e){_e&&(0,r.ogt)(ve)}}}function pe(xe){var ve,he;return{c:function(){ve=(0,r.bi5)("svg"),he=(0,r.bi5)("path"),(0,r.Ljt)(he,"d","M581.338005 987.646578c-2.867097 4.095853-4.573702 8.669555-8.191705 12.287558a83.214071 83.214071 0 0 1-60.959939 24.029001 83.214071 83.214071 0 0 1-61.028203-24.029001c-3.618003-3.618003-5.324608-8.191705-8.123441-12.15103L24.370323 569.050448a83.418864 83.418864 0 0 1 117.892289-117.89229l369.923749 369.92375L1308.829682 24.438587A83.418864 83.418864 0 0 1 1426.721971 142.194348L581.338005 987.646578z"),(0,r.Ljt)(ve,"class","vc-icon-don"),(0,r.Ljt)(ve,"viewBox","0 0 1501 1024"),(0,r.Ljt)(ve,"width","200"),(0,r.Ljt)(ve,"height","200")},m:function(le,_e){(0,r.$Tr)(le,ve,_e),(0,r.R3I)(ve,he)},d:function(le){le&&(0,r.ogt)(ve)}}}function fe(xe){var ve,he;return{c:function(){ve=(0,r.bi5)("svg"),he=(0,r.bi5)("path"),(0,r.Ljt)(he,"d","M894.976 574.464q0 78.848-29.696 148.48t-81.408 123.392-121.856 88.064-151.04 41.472q-5.12 1.024-9.216 1.536t-9.216 0.512l-177.152 0q-17.408 0-34.304-6.144t-30.208-16.896-22.016-25.088-8.704-29.696 8.192-29.696 21.504-24.576 29.696-16.384 33.792-6.144l158.72 1.024q54.272 0 102.4-19.968t83.968-53.76 56.32-79.36 20.48-97.792q0-49.152-18.432-92.16t-50.688-76.8-75.264-54.784-93.184-26.112q-2.048 0-2.56 0.512t-2.56 0.512l-162.816 0 0 80.896q0 17.408-13.824 25.6t-44.544-10.24q-8.192-5.12-26.112-17.92t-41.984-30.208-50.688-36.864l-51.2-38.912q-15.36-12.288-26.624-22.016t-11.264-24.064q0-12.288 12.8-25.6t29.184-26.624q18.432-15.36 44.032-35.84t50.688-39.936 45.056-35.328 28.16-22.016q24.576-17.408 39.936-7.168t16.384 30.72l0 81.92 162.816 0q5.12 0 10.752 1.024t10.752 2.048q79.872 8.192 149.504 41.984t121.344 87.552 80.896 123.392 29.184 147.456z"),(0,r.Ljt)(ve,"class","vc-icon-cancel"),(0,r.Ljt)(ve,"viewBox","0 0 1024 1024"),(0,r.Ljt)(ve,"width","200"),(0,r.Ljt)(ve,"height","200")},m:function(le,_e){(0,r.$Tr)(le,ve,_e),(0,r.R3I)(ve,he)},d:function(le){le&&(0,r.ogt)(ve)}}}function ee(xe){var ve,he,le,_e,De,de,Me,Ne,Pe,nt=xe[0]==="delete"&&O(),ie=xe[0]==="clear"&&q(),oe=xe[0]==="copy"&&ce(),$=xe[0]==="success"&&ne(),Se=xe[0]==="edit"&&ue(),Be=xe[0]==="done"&&pe(),we=xe[0]==="cancel"&&fe();return{c:function(){ve=(0,r.bGB)("i"),nt&&nt.c(),he=(0,r.DhX)(),ie&&ie.c(),le=(0,r.DhX)(),oe&&oe.c(),_e=(0,r.DhX)(),$&&$.c(),De=(0,r.DhX)(),Se&&Se.c(),de=(0,r.DhX)(),Be&&Be.c(),Me=(0,r.DhX)(),we&&we.c(),(0,r.Ljt)(ve,"class","vc-icon")},m:function(Fe,$e){(0,r.$Tr)(Fe,ve,$e),nt&&nt.m(ve,null),(0,r.R3I)(ve,he),ie&&ie.m(ve,null),(0,r.R3I)(ve,le),oe&&oe.m(ve,null),(0,r.R3I)(ve,_e),$&&$.m(ve,null),(0,r.R3I)(ve,De),Se&&Se.m(ve,null),(0,r.R3I)(ve,de),Be&&Be.m(ve,null),(0,r.R3I)(ve,Me),we&&we.m(ve,null),Ne||(Pe=(0,r.oLt)(ve,"click",xe[1]),Ne=!0)},p:function(Fe,$e){$e[0],Fe[0]==="delete"?nt||((nt=O()).c(),nt.m(ve,he)):nt&&(nt.d(1),nt=null),Fe[0]==="clear"?ie||((ie=q()).c(),ie.m(ve,le)):ie&&(ie.d(1),ie=null),Fe[0]==="copy"?oe||((oe=ce()).c(),oe.m(ve,_e)):oe&&(oe.d(1),oe=null),Fe[0]==="success"?$||(($=ne()).c(),$.m(ve,De)):$&&($.d(1),$=null),Fe[0]==="edit"?Se||((Se=ue()).c(),Se.m(ve,de)):Se&&(Se.d(1),Se=null),Fe[0]==="done"?Be||((Be=pe()).c(),Be.m(ve,Me)):Be&&(Be.d(1),Be=null),Fe[0]==="cancel"?we||((we=fe()).c(),we.m(ve,null)):we&&(we.d(1),we=null)},i:r.ZTd,o:r.ZTd,d:function(Fe){Fe&&(0,r.ogt)(ve),nt&&nt.d(),ie&&ie.d(),oe&&oe.d(),$&&$.d(),Se&&Se.d(),Be&&Be.d(),we&&we.d(),Ne=!1,Pe()}}}function J(xe,ve,he){var le=ve.name;return(0,l.H3)(function(){G.use()}),(0,l.ev)(function(){G.unuse()}),xe.$$set=function(_e){"name"in _e&&he(0,le=_e.name)},[le,function(_e){r.cKT.call(this,xe,_e)}]}var ye=function(xe){function ve(he){var le;return le=xe.call(this)||this,(0,r.S1n)((0,o.Z)(le),he,J,ee,r.N8,{name:0}),le}return(0,a.Z)(ve,xe),(0,n.Z)(ve,[{key:"name",get:function(){return this.$$.ctx[0]},set:function(he){this.$$set({name:he}),(0,r.yl1)()}}]),ve}(r.f_C),Te=ye},3903:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(6464),_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(6881),svelte_internal__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2942),svelte__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(7003),_component_icon_icon_svelte__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(8702),_logTool__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(8665),_log_model__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(5629),_logCommand_less__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(3411);function get_each_context(s,e,t){var n=s.slice();return n[28]=e[t],n}function create_if_block_2(s){var e,t,n;return{c:function(){(e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("li")).textContent="Close",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(e,"class","vc-cmd-prompted-hide")},m:function(o,a){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(o,e,a),t||(n=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(e,"click",s[5]),t=!0)},p:svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ZTd,d:function(o){o&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e),t=!1,n()}}}function create_else_block(s){var e;return{c:function(){(e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("li")).textContent="No Prompted"},m:function(t,n){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(t,e,n)},p:svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ZTd,d:function(t){t&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e)}}}function create_each_block(s){var e,t,n,o,a=s[28].text+"";function r(){return s[14](s[28])}return{c:function(){e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("li"),t=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.fLW)(a)},m:function(l,c){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(l,e,c),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,t),n||(o=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(e,"click",r),n=!0)},p:function(l,c){s=l,8&c&&a!==(a=s[28].text+"")&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.rTO)(t,a)},d:function(l){l&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e),n=!1,o()}}}function create_if_block_1(s){var e,t,n,o,a;return t=new _component_icon_icon_svelte__WEBPACK_IMPORTED_MODULE_2__.Z({props:{name:"clear"}}),{c:function(){e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("div"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.YCL)(t.$$.fragment),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(e,"class","vc-cmd-clear-btn")},m:function(r,l){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(r,e,l),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.yef)(t,e,null),n=!0,o||(a=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(e,"click",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.AT7)(s[17])),o=!0)},p:svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ZTd,i:function(r){n||((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(t.$$.fragment,r),n=!0)},o:function(r){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(t.$$.fragment,r),n=!1},d:function(r){r&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.vpE)(t),o=!1,a()}}}function create_if_block(s){var e,t,n,o,a;return t=new _component_icon_icon_svelte__WEBPACK_IMPORTED_MODULE_2__.Z({props:{name:"clear"}}),{c:function(){e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("div"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.YCL)(t.$$.fragment),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(e,"class","vc-cmd-clear-btn")},m:function(r,l){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(r,e,l),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.yef)(t,e,null),n=!0,o||(a=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(e,"click",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.AT7)(s[19])),o=!0)},p:svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ZTd,i:function(r){n||((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(t.$$.fragment,r),n=!0)},o:function(r){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(t.$$.fragment,r),n=!1},d:function(r){r&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.vpE)(t),o=!1,a()}}}function create_fragment(s){for(var e,t,n,o,a,r,l,c,u,d,f,g,_,b,B,I,C,R,L,F,N,k=s[3].length>0&&create_if_block_2(s),Q=s[3],z=[],G=0;G<Q.length;G+=1)z[G]=create_each_block(get_each_context(s,Q,G));var O=null;Q.length||(O=create_else_block());var q=s[1].length>0&&create_if_block_1(s),ce=s[4].length>0&&create_if_block(s);return{c:function(){e=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("form"),t=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("ul"),k&&k.c(),n=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)();for(var ne=0;ne<z.length;ne+=1)z[ne].c();O&&O.c(),o=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),a=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("div"),r=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("textarea"),l=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),q&&q.c(),c=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),(u=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("button")).textContent="OK",d=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),f=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("form"),g=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("ul"),_=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),b=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("div"),B=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("textarea"),I=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),ce&&ce.c(),C=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.DhX)(),(R=(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bGB)("button")).textContent="Filter",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(t,"class","vc-cmd-prompted"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(t,"style",s[2]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(r,"class","vc-cmd-input"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(r,"placeholder","command..."),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(a,"class","vc-cmd-input-wrap"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(u,"class","vc-cmd-btn"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(u,"type","submit"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(e,"class","vc-cmd"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(g,"class","vc-cmd-prompted"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(B,"class","vc-cmd-input"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(B,"placeholder","filter..."),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(b,"class","vc-cmd-input-wrap"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(R,"class","vc-cmd-btn"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(R,"type","submit"),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(f,"class","vc-cmd vc-filter")},m:function(ne,ue){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(ne,e,ue),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,t),k&&k.m(t,null),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(t,n);for(var pe=0;pe<z.length;pe+=1)z[pe].m(t,null);O&&O.m(t,null),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,o),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,a),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(a,r),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.BmG)(r,s[1]),s[16](r),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(a,l),q&&q.m(a,null),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,c),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(e,u),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(ne,d,ue),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.$Tr)(ne,f,ue),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(f,g),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(f,_),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(f,b),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(b,B),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.BmG)(B,s[4]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(b,I),ce&&ce.m(b,null),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(f,C),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.R3I)(f,R),L=!0,F||(N=[(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(r,"input",s[15]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(r,"keydown",s[10]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(r,"keyup",s[11]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(r,"focus",s[8]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(r,"blur",s[9]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(e,"submit",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.AT7)(s[12])),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(B,"input",s[18]),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.oLt)(f,"submit",(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.AT7)(s[13]))],F=!0)},p:function(ne,ue){var pe=ue[0];if(ne[3].length>0?k?k.p(ne,pe):((k=create_if_block_2(ne)).c(),k.m(t,n)):k&&(k.d(1),k=null),136&pe){var fe;for(Q=ne[3],fe=0;fe<Q.length;fe+=1){var ee=get_each_context(ne,Q,fe);z[fe]?z[fe].p(ee,pe):(z[fe]=create_each_block(ee),z[fe].c(),z[fe].m(t,null))}for(;fe<z.length;fe+=1)z[fe].d(1);z.length=Q.length,!Q.length&&O?O.p(ne,pe):Q.length?O&&(O.d(1),O=null):((O=create_else_block()).c(),O.m(t,null))}(!L||4&pe)&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ljt)(t,"style",ne[2]),2&pe&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.BmG)(r,ne[1]),ne[1].length>0?q?(q.p(ne,pe),2&pe&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(q,1)):((q=create_if_block_1(ne)).c(),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(q,1),q.m(a,null)):q&&((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dvw)(),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(q,1,1,function(){q=null}),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.gbL)()),16&pe&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.BmG)(B,ne[4]),ne[4].length>0?ce?(ce.p(ne,pe),16&pe&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(ce,1)):((ce=create_if_block(ne)).c(),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(ce,1),ce.m(b,null)):ce&&((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dvw)(),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(ce,1,1,function(){ce=null}),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.gbL)())},i:function(ne){L||((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(q),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.Ui)(ce),L=!0)},o:function(ne){(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(q),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.etI)(ce),L=!1},d:function(ne){ne&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(e),k&&k.d(),(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.RMB)(z,ne),O&&O.d(),s[16](null),q&&q.d(),ne&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(d),ne&&(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.ogt)(f),ce&&ce.d(),F=!1,(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.j7q)(N)}}}function instance($$self,$$props,$$invalidate){var module=_log_model__WEBPACK_IMPORTED_MODULE_3__.W.getSingleton(_log_model__WEBPACK_IMPORTED_MODULE_3__.W,"VConsoleLogModel"),cachedObjKeys={},dispatch=(0,svelte__WEBPACK_IMPORTED_MODULE_1__.x)(),cmdElement,cmdValue="",promptedStyle="",promptedList=[],filterValue="";(0,svelte__WEBPACK_IMPORTED_MODULE_1__.H3)(function(){_logCommand_less__WEBPACK_IMPORTED_MODULE_4__.Z.use()}),(0,svelte__WEBPACK_IMPORTED_MODULE_1__.ev)(function(){_logCommand_less__WEBPACK_IMPORTED_MODULE_4__.Z.unuse()});var evalCommand=function(s){module.evalCommand(s)},moveCursorToPos=function(s,e){s.setSelectionRange&&setTimeout(function(){s.setSelectionRange(e,e)},1)},clearPromptedList=function(){$$invalidate(2,promptedStyle="display: none;"),$$invalidate(3,promptedList=[])},updatePromptedList=function updatePromptedList(identifier){if(cmdValue!==""){identifier||(identifier=(0,_logTool__WEBPACK_IMPORTED_MODULE_5__.oj)(cmdValue));var objName="window",keyName=cmdValue;if(identifier.front.text!=="."&&identifier.front.text!=="["||(objName=identifier.front.before,keyName=identifier.back.text!==""?identifier.back.before:identifier.front.after),keyName=keyName.replace(/(^['"]+)|(['"']+$)/g,""),!cachedObjKeys[objName])try{cachedObjKeys[objName]=Object.getOwnPropertyNames(eval("("+objName+")")).sort()}catch(s){}try{if(cachedObjKeys[objName])for(var i=0;i<cachedObjKeys[objName].length&&!(promptedList.length>=100);i++){var key=String(cachedObjKeys[objName][i]),keyPattern=new RegExp("^"+keyName,"i");if(keyPattern.test(key)){var completeCmd=objName;identifier.front.text==="."||identifier.front.text===""?completeCmd+="."+key:identifier.front.text==="["&&(completeCmd+="['"+key+"']"),promptedList.push({text:key,value:completeCmd})}}}catch(s){}if(promptedList.length>0){var m=Math.min(200,31*(promptedList.length+1));$$invalidate(2,promptedStyle="display: block; height: "+m+"px; margin-top: "+(-m-2)+"px;"),$$invalidate(3,promptedList)}else clearPromptedList()}else clearPromptedList()},autoCompleteBrackets=function(s,e){if(!(e===8||e===46)&&s.front.after==="")switch(s.front.text){case"[":return $$invalidate(1,cmdValue+="]"),void moveCursorToPos(cmdElement,cmdValue.length-1);case"(":return $$invalidate(1,cmdValue+=")"),void moveCursorToPos(cmdElement,cmdValue.length-1);case"{":return $$invalidate(1,cmdValue+="}"),void moveCursorToPos(cmdElement,cmdValue.length-1)}},dispatchFilterEvent=function(){dispatch("filterText",{filterText:filterValue})},onTapClearText=function(s){s==="cmd"?($$invalidate(1,cmdValue=""),clearPromptedList()):s==="filter"&&($$invalidate(4,filterValue=""),dispatchFilterEvent())},onTapPromptedItem=function onTapPromptedItem(item){var type="";try{type=eval("typeof "+item.value)}catch(s){}$$invalidate(1,cmdValue=item.value+(type==="function"?"()":"")),clearPromptedList()},onCmdFocus=function(){updatePromptedList()},onCmdBlur=function(){},onCmdKeyDown=function(s){s.keyCode===13&&(s.preventDefault(),onCmdSubmit())},onCmdKeyUp=function(s){$$invalidate(3,promptedList=[]);var e=(0,_logTool__WEBPACK_IMPORTED_MODULE_5__.oj)(s.target.value);autoCompleteBrackets(e,s.keyCode),updatePromptedList(e)},onCmdSubmit=function(){cmdValue!==""&&evalCommand(cmdValue),clearPromptedList()},onFilterSubmit=function(s){dispatchFilterEvent()},click_handler=function(s){return onTapPromptedItem(s)};function textarea0_input_handler(){cmdValue=this.value,$$invalidate(1,cmdValue)}function textarea0_binding(s){svelte_internal__WEBPACK_IMPORTED_MODULE_0__.VnY[s?"unshift":"push"](function(){$$invalidate(0,cmdElement=s)})}var click_handler_1=function(){return onTapClearText("cmd")};function textarea1_input_handler(){filterValue=this.value,$$invalidate(4,filterValue)}var click_handler_2=function(){return onTapClearText("filter")};return[cmdElement,cmdValue,promptedStyle,promptedList,filterValue,clearPromptedList,onTapClearText,onTapPromptedItem,onCmdFocus,onCmdBlur,onCmdKeyDown,onCmdKeyUp,onCmdSubmit,onFilterSubmit,click_handler,textarea0_input_handler,textarea0_binding,click_handler_1,textarea1_input_handler,click_handler_2]}var LogCommand=function(s){function e(t){var n;return n=s.call(this)||this,(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.S1n)((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__.Z)(n),t,instance,create_fragment,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.N8,{}),n}return(0,_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__.Z)(e,s),e}(svelte_internal__WEBPACK_IMPORTED_MODULE_0__.f_C);__webpack_exports__.Z=LogCommand},4687:function(s,e,t){t.d(e,{x:function(){return o}});var n=t(3313),o=function(){var a=(0,n.fZ)({updateTime:0}),r=a.subscribe,l=a.set,c=a.update;return{subscribe:r,set:l,update:c,updateTime:function(){c(function(u){return u.updateTime=Date.now(),u})}}}()},643:function(s,e,t){t.d(e,{N:function(){return n}});var n=function(){function o(){this._onDataUpdateCallbacks=[]}return o.getSingleton=function(a,r){return r||(r=a.toString()),o.singleton[r]||(o.singleton[r]=new a),o.singleton[r]},o}();n.singleton={}},5103:function(s,e,t){function n(he){var le=he>0?new Date(he):new Date,_e=le.getDate()<10?"0"+le.getDate():le.getDate(),De=le.getMonth()<9?"0"+(le.getMonth()+1):le.getMonth()+1,de=le.getFullYear(),Me=le.getHours()<10?"0"+le.getHours():le.getHours(),Ne=le.getMinutes()<10?"0"+le.getMinutes():le.getMinutes(),Pe=le.getSeconds()<10?"0"+le.getSeconds():le.getSeconds(),nt=le.getMilliseconds()<10?"0"+le.getMilliseconds():le.getMilliseconds();return nt<100&&(nt="0"+nt),{time:+le,year:de,month:De,day:_e,hour:Me,minute:Ne,second:Pe,millisecond:nt}}function o(he){return Object.prototype.toString.call(he)==="[object Number]"}function a(he){return typeof he=="bigint"}function r(he){return typeof he=="string"}function l(he){return Object.prototype.toString.call(he)==="[object Array]"}function c(he){return typeof he=="boolean"}function u(he){return he===void 0}function d(he){return he===null}function f(he){return typeof he=="symbol"}function g(he){return!(Object.prototype.toString.call(he)!=="[object Object]"&&(o(he)||a(he)||r(he)||c(he)||l(he)||d(he)||_(he)||u(he)||f(he)))}function _(he){return typeof he=="function"}function b(he){return typeof HTMLElement=="object"?he instanceof HTMLElement:he&&typeof he=="object"&&he!==null&&he.nodeType===1&&typeof he.nodeName=="string"}function B(he){var le=Object.prototype.toString.call(he);return le==="[object Window]"||le==="[object DOMWindow]"||le==="[object global]"}function I(he){return he!=null&&typeof he!="string"&&typeof he!="boolean"&&typeof he!="number"&&typeof he!="function"&&typeof he!="symbol"&&typeof he!="bigint"&&typeof Symbol<"u"&&typeof he[Symbol.iterator]=="function"}function C(he){return Object.prototype.toString.call(he).replace(/\[object (.*)\]/,"$1")}t.d(e,{C4:function(){return a},DV:function(){return L},FJ:function(){return B},Ft:function(){return d},HD:function(){return r},H_:function(){return xe},KL:function(){return q},Kn:function(){return g},MH:function(){return pe},PO:function(){return F},QI:function(){return Te},QK:function(){return fe},TW:function(){return I},_3:function(){return n},_D:function(){return ee},cF:function(){return ye},hZ:function(){return O},hj:function(){return o},id:function(){return ce},jn:function(){return c},kJ:function(){return l},kK:function(){return b},mf:function(){return _},o8:function(){return u},po:function(){return J},qr:function(){return ue},qt:function(){return ve},rE:function(){return Q},yk:function(){return f},zl:function(){return C}});var R=/(function|class) ([^ \{\()}]{1,})[\(| ]/;function L(he){var le;if(he==null)return"";var _e=R.exec((he==null||(le=he.constructor)==null?void 0:le.toString())||"");return _e&&_e.length>1?_e[2]:""}function F(he){var le,_e=Object.prototype.hasOwnProperty;if(!he||typeof he!="object"||he.nodeType||B(he))return!1;try{if(he.constructor&&!_e.call(he,"constructor")&&!_e.call(he.constructor.prototype,"isPrototypeOf"))return!1}catch{return!1}for(le in he);return le===void 0||_e.call(he,le)}var N=/[\n\t]/g,k=function(he){return{"\n":"\\n","	":"\\t"}[he]};function Q(he){return typeof he!="string"?he:String(he).replace(N,k)}var z=function(he,le){le===void 0&&(le=0);var _e="";return r(he)?(le>0&&(he=ce(he,le)),_e+='"'+Q(he)+'"'):f(he)?_e+=String(he).replace(/^Symbol\((.*)\)$/i,'Symbol("$1")'):_(he)?_e+=(he.name||"function")+"()":a(he)?_e+=String(he)+"n":_e+=String(he),_e},G=function he(le,_e,De){if(De===void 0&&(De=0),g(le)||l(le))if(_e.circularFinder(le)){var de="";if(l(le))de="(Circular Array)";else if(g(le)){var Me;de="(Circular "+(((Me=le.constructor)==null?void 0:Me.name)||"Object")+")"}_e.ret+=_e.standardJSON?'"'+de+'"':de}else{var Ne="",Pe="";if(_e.pretty){for(var nt=0;nt<=De;nt++)Ne+="  ";Pe=`
`}var ie="{",oe="}";l(le)&&(ie="[",oe="]"),_e.ret+=ie+Pe;for(var $=pe(le),Se=0;Se<$.length;Se++){var Be=$[Se];_e.ret+=Ne;try{l(le)||(g(Be)||l(Be)||f(Be)?_e.ret+=Object.prototype.toString.call(Be):r(Be)&&_e.standardJSON?_e.ret+='"'+Be+'"':_e.ret+=Be,_e.ret+=": ")}catch{continue}try{var we=le[Be];if(l(we))_e.maxDepth>-1&&De>=_e.maxDepth?_e.ret+="Array("+we.length+")":he(we,_e,De+1);else if(g(we)){var Fe;_e.maxDepth>-1&&De>=_e.maxDepth?_e.ret+=(((Fe=we.constructor)==null?void 0:Fe.name)||"Object")+" {}":he(we,_e,De+1)}else _e.ret+=z(we,_e.keyMaxLen)}catch{_e.ret+=_e.standardJSON?'"(PARSE_ERROR)"':"(PARSE_ERROR)"}if(_e.keyMaxLen>0&&_e.ret.length>=10*_e.keyMaxLen){_e.ret+=", (...)";break}Se<$.length-1&&(_e.ret+=", "),_e.ret+=Pe}_e.ret+=Ne.substring(0,Ne.length-2)+oe}else _e.ret+=z(le,_e.keyMaxLen)};function O(he,le){le===void 0&&(le={maxDepth:-1,keyMaxLen:-1,pretty:!1,standardJSON:!1});var _e,De=Object.assign({ret:"",maxDepth:-1,keyMaxLen:-1,pretty:!1,standardJSON:!1,circularFinder:(_e=new WeakSet,function(de){if(typeof de=="object"&&de!==null){if(_e.has(de))return!0;_e.add(de)}return!1})},le);return G(he,De),De.ret}function q(he){return he<=0?"":he>=1e6?(he/1e3/1e3).toFixed(1)+" MB":he>=1e3?(he/1e3).toFixed(1)+" KB":he+" B"}function ce(he,le){return he.length>le&&(he=he.substring(0,le)+"...("+q(function(_e){try{return encodeURI(_e).split(/%(?:u[0-9A-F]{2})?[0-9A-F]{2}|./).length-1}catch{return 0}}(he))+")"),he}var ne=function(he,le){return String(he).localeCompare(String(le),void 0,{numeric:!0,sensitivity:"base"})};function ue(he){return he.sort(ne)}function pe(he){return g(he)||l(he)?Object.keys(he):[]}function fe(he){var le=pe(he),_e=function(De){return g(De)||l(De)?Object.getOwnPropertyNames(De):[]}(he);return _e.filter(function(De){return le.indexOf(De)===-1})}function ee(he){return g(he)||l(he)?Object.getOwnPropertySymbols(he):[]}function J(he,le){window.localStorage&&(he="vConsole_"+he,localStorage.setItem(he,le))}function ye(he){if(window.localStorage)return he="vConsole_"+he,localStorage.getItem(he)}function Te(he){return he===void 0&&(he=""),"__vc_"+he+Math.random().toString(36).substring(2,8)}function xe(){return typeof window<"u"&&!!window.__wxConfig&&!!window.wx&&!!window.__virtualDOM__}function ve(he){if(xe()&&typeof window.wx[he]=="function")try{for(var le,_e=arguments.length,De=new Array(_e>1?_e-1:0),de=1;de<_e;de++)De[de-1]=arguments[de];var Me=(le=window.wx[he]).call.apply(le,[window.wx].concat(De));return Me}catch(Ne){return void console.debug("[vConsole] Fail to call wx."+he+"():",Ne)}}},5629:function(s,e,t){t.d(e,{W:function(){return b}});var n=t(8270),o=t(6881),a=t(5103),r=t(643),l=t(4687),c=t(8665),u=t(9923);function d(B,I){var C=Object.keys(B);if(Object.getOwnPropertySymbols){var R=Object.getOwnPropertySymbols(B);I&&(R=R.filter(function(L){return Object.getOwnPropertyDescriptor(B,L).enumerable})),C.push.apply(C,R)}return C}function f(B){for(var I=1;I<arguments.length;I++){var C=arguments[I]!=null?arguments[I]:{};I%2?d(Object(C),!0).forEach(function(R){(0,n.Z)(B,R,C[R])}):Object.getOwnPropertyDescriptors?Object.defineProperties(B,Object.getOwnPropertyDescriptors(C)):d(Object(C)).forEach(function(R){Object.defineProperty(B,R,Object.getOwnPropertyDescriptor(C,R))})}return B}function g(B,I){var C=typeof Symbol<"u"&&B[Symbol.iterator]||B["@@iterator"];if(C)return(C=C.call(B)).next.bind(C);if(Array.isArray(B)||(C=function(L,F){if(L){if(typeof L=="string")return _(L,F);var N=Object.prototype.toString.call(L).slice(8,-1);if(N==="Object"&&L.constructor&&(N=L.constructor.name),N==="Map"||N==="Set")return Array.from(L);if(N==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(N))return _(L,F)}}(B))||I){C&&(B=C);var R=0;return function(){return R>=B.length?{done:!0}:{done:!1,value:B[R++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _(B,I){(I==null||I>B.length)&&(I=B.length);for(var C=0,R=new Array(I);C<I;C++)R[C]=B[C];return R}var b=function(B){function I(){for(var R,L=arguments.length,F=new Array(L),N=0;N<L;N++)F[N]=arguments[N];return(R=B.call.apply(B,[this].concat(F))||this).LOG_METHODS=["log","info","warn","debug","error"],R.ADDED_LOG_PLUGIN_ID=[],R.maxLogNumber=1e3,R.logCounter=0,R.groupLevel=0,R.groupLabelCollapsedStack=[],R.pluginPattern=void 0,R.logQueue=[],R.flushLogScheduled=!1,R.origConsole={},R}(0,o.Z)(I,B);var C=I.prototype;return C.bindPlugin=function(R){return!(this.ADDED_LOG_PLUGIN_ID.indexOf(R)>-1)&&(this.ADDED_LOG_PLUGIN_ID.length===0&&this.mockConsole(),u.O.create(R),this.ADDED_LOG_PLUGIN_ID.push(R),this.pluginPattern=new RegExp("^\\[("+this.ADDED_LOG_PLUGIN_ID.join("|")+")\\]$","i"),!0)},C.unbindPlugin=function(R){var L=this.ADDED_LOG_PLUGIN_ID.indexOf(R);return L!==-1&&(this.ADDED_LOG_PLUGIN_ID.splice(L,1),u.O.delete(R),this.ADDED_LOG_PLUGIN_ID.length===0&&this.unmockConsole(),!0)},C.mockConsole=function(){var R=this;typeof this.origConsole.log!="function"&&(window.console?(this.LOG_METHODS.map(function(L){R.origConsole[L]=window.console[L]}),this.origConsole.time=window.console.time,this.origConsole.timeEnd=window.console.timeEnd,this.origConsole.clear=window.console.clear,this.origConsole.group=window.console.group,this.origConsole.groupCollapsed=window.console.groupCollapsed,this.origConsole.groupEnd=window.console.groupEnd):window.console={},this._mockConsoleLog(),this._mockConsoleTime(),this._mockConsoleGroup(),this._mockConsoleClear(),window._vcOrigConsole=this.origConsole)},C._mockConsoleLog=function(){var R=this;this.LOG_METHODS.map(function(L){window.console[L]=(function(){for(var F=arguments.length,N=new Array(F),k=0;k<F;k++)N[k]=arguments[k];R.addLog({type:L,origData:N||[]})}).bind(window.console)})},C._mockConsoleTime=function(){var R=this,L={};window.console.time=(function(F){F===void 0&&(F=""),L[F]=Date.now()}).bind(window.console),window.console.timeEnd=(function(F){F===void 0&&(F="");var N=L[F],k=0;N&&(k=Date.now()-N,delete L[F]),R.addLog({type:"log",origData:[F+": "+k+"ms"]})}).bind(window.console)},C._mockConsoleGroup=function(){var R=this,L=function(F){return(function(N){N===void 0&&(N="console.group");var k=Symbol(N);R.groupLabelCollapsedStack.push({label:k,collapsed:F}),R.addLog({type:"log",origData:[N],isGroupHeader:F?2:1,isGroupCollapsed:!1},{noOrig:!0}),R.groupLevel++,F?R.origConsole.groupCollapsed(N):R.origConsole.group(N)}).bind(window.console)};window.console.group=L(!1),window.console.groupCollapsed=L(!0),window.console.groupEnd=(function(){R.groupLabelCollapsedStack.pop(),R.groupLevel=Math.max(0,R.groupLevel-1),R.origConsole.groupEnd()}).bind(window.console)},C._mockConsoleClear=function(){var R=this;window.console.clear=(function(){R.resetGroup(),R.clearLog();for(var L=arguments.length,F=new Array(L),N=0;N<L;N++)F[N]=arguments[N];R.callOriginalConsole.apply(R,["clear"].concat(F))}).bind(window.console)},C.unmockConsole=function(){for(var R in this.origConsole)window.console[R]=this.origConsole[R],delete this.origConsole[R];window._vcOrigConsole&&delete window._vcOrigConsole},C.callOriginalConsole=function(R){if(typeof this.origConsole[R]=="function"){for(var L=arguments.length,F=new Array(L>1?L-1:0),N=1;N<L;N++)F[N-1]=arguments[N];this.origConsole[R].apply(window.console,F)}},C.resetGroup=function(){for(;this.groupLevel>0;)console.groupEnd()},C.clearLog=function(){var R=u.O.getAll();for(var L in R)this.clearPluginLog(L)},C.clearPluginLog=function(R){var L=this.logQueue;this.logQueue=[];for(var F,N=g(L);!(F=N()).done;){var k=F.value;this._extractPluginIdByLog(k)!==R&&this.logQueue.push(k)}u.O.get(R).update(function(Q){return Q.logList.length=0,Q}),l.x.updateTime()},C.addLog=function(R,L){R===void 0&&(R={type:"log",origData:[],isGroupHeader:0,isGroupCollapsed:!1});var F=this.groupLabelCollapsedStack[this.groupLabelCollapsedStack.length-2],N=this.groupLabelCollapsedStack[this.groupLabelCollapsedStack.length-1],k={_id:a.QI(),type:R.type,cmdType:L==null?void 0:L.cmdType,toggle:{},date:Date.now(),data:(0,c.b1)(R.origData||[]),repeated:0,groupLabel:N==null?void 0:N.label,groupLevel:this.groupLevel,groupHeader:R.isGroupHeader,groupCollapsed:R.isGroupHeader?!(F==null||!F.collapsed):!(N==null||!N.collapsed)};this._signalLog(k),L!=null&&L.noOrig||this.callOriginalConsole.apply(this,[R.type].concat(R.origData))},C.evalCommand=function(R){this.addLog({type:"log",origData:[R]},{cmdType:"input"});var L=void 0;try{L=eval.call(window,"("+R+")")}catch{try{L=eval.call(window,R)}catch{}}this.addLog({type:"log",origData:[L]},{cmdType:"output"})},C._signalLog=function(R){var L=this;this.flushLogScheduled||(this.flushLogScheduled=!0,window.requestAnimationFrame(function(){L.flushLogScheduled=!1,L._flushLogs()})),this.logQueue.push(R)},C._flushLogs=function(){var R=this,L=this.logQueue;this.logQueue=[];for(var F,N={},k=g(L);!(F=k()).done;){var Q=F.value,z=this._extractPluginIdByLog(Q);(N[z]=N[z]||[]).push(Q)}for(var G=function(ce){var ne=N[ce];u.O.get(ce).update(function(ue){for(var pe,fe=[].concat(ue.logList),ee=g(ne);!(pe=ee()).done;){var J=pe.value;R._isRepeatedLog(fe,J)?R._updateLastLogRepeated(fe):fe.push(J)}return{logList:fe=R._limitLogListLength(fe)}})},O=0,q=Object.keys(N);O<q.length;O++)G(q[O]);l.x.updateTime()},C._extractPluginIdByLog=function(R){var L,F="default",N=(L=R.data[0])==null?void 0:L.origData;if(a.HD(N)){var k=N.match(this.pluginPattern);if(k!==null&&k.length>1){var Q=k[1].toLowerCase();this.ADDED_LOG_PLUGIN_ID.indexOf(Q)>-1&&(F=Q,R.data.shift())}}return F},C._isRepeatedLog=function(R,L){var F=R[R.length-1];if(!F)return!1;var N=!1;if(L.type===F.type&&L.cmdType===F.cmdType&&L.data.length===F.data.length){N=!0;for(var k=0;k<L.data.length;k++)if(L.data[k].origData!==F.data[k].origData){N=!1;break}}return N},C._updateLastLogRepeated=function(R){var L=R[R.length-1],F=L.repeated?L.repeated+1:2;return R[R.length-1]=f(f({},L),{},{repeated:F}),R},C._limitLogListLength=function(R){var L=R.length,F=this.maxLogNumber;return L>F?R.slice(L-F,L):R},I}(r.N)},9923:function(s,e,t){t.d(e,{O:function(){return o}});var n=t(3313),o=function(){function a(){}return a.create=function(r){return this.storeMap[r]||(this.storeMap[r]=(0,n.fZ)({logList:[]})),this.storeMap[r]},a.delete=function(r){this.storeMap[r]&&delete this.storeMap[r]},a.get=function(r){return this.storeMap[r]},a.getRaw=function(r){return(0,n.U2)(this.storeMap[r])},a.getAll=function(){return this.storeMap},a}();o.storeMap={}},8665:function(s,e,t){t.d(e,{HX:function(){return d},LH:function(){return a},Tg:function(){return _},b1:function(){return g},oj:function(){return u}});var n=t(5103),o=function(b){var B=n.hZ(b,{maxDepth:0}),I=B.substring(0,36),C=n.DV(b);return B.length>36&&(I+="..."),C=n.rE(C+" "+I)},a=function(b,B){B===void 0&&(B=!0);var I="undefined",C=b;return b instanceof _?(I="uninvocatable",C="(...)"):n.kJ(b)?(I="array",C=o(b)):n.Kn(b)?(I="object",C=o(b)):n.HD(b)?(I="string",C=n.rE(b),B&&(C='"'+C+'"')):n.hj(b)?(I="number",C=String(b)):n.C4(b)?(I="bigint",C=String(b)+"n"):n.jn(b)?(I="boolean",C=String(b)):n.Ft(b)?(I="null",C="null"):n.o8(b)?(I="undefined",C="undefined"):n.mf(b)?(I="function",C=(b.name||"function")+"()"):n.yk(b)&&(I="symbol",C=String(b)),{text:C,valueType:I}},r=[".","[","(","{","}"],l=["]",")","}"],c=function(b,B,I){I===void 0&&(I=0);for(var C={text:"",pos:-1,before:"",after:""},R=b.length-1;R>=I;R--){var L=B.indexOf(b[R]);if(L>-1){C.text=B[L],C.pos=R,C.before=b.substring(I,R),C.after=b.substring(R+1,b.length);break}}return C},u=function(b){var B=c(b,r,0);return{front:B,back:c(b,l,B.pos+1)}},d=function(b,B){if(B==="")return!0;for(var I=0;I<b.data.length;I++)if(typeof b.data[I].origData=="string"&&b.data[I].origData.indexOf(B)>-1)return!0;return!1},f=/(\%[csdo] )|( \%[csdo])/g,g=function(b){if(f.lastIndex=0,n.HD(b[0])&&f.test(b[0])){for(var B,I=[].concat(b),C=I.shift().split(f).filter(function(q){return q!==void 0&&q!==""}),R=I,L=[],F=!1,N="";C.length>0;){var k=C.shift();if(/ ?\%c ?/.test(k)?R.length>0?typeof(N=R.shift())!="string"&&(N=""):(B=k,N="",F=!0):/ ?\%[sd] ?/.test(k)?(B=R.length>0?n.Kn(R[0])?n.DV(R.shift()):String(R.shift()):k,F=!0):/ ?\%o ?/.test(k)?(B=R.length>0?R.shift():k,F=!0):(B=k,F=!0),F){var Q={origData:B};N&&(Q.style=N),L.push(Q),F=!1,B=void 0,N=""}}for(var z=0;z<R.length;z++)L.push({origData:R[z]});return L}for(var G=[],O=0;O<b.length;O++)G.push({origData:b[O]});return G},_=function(){}},5313:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-icon {
  word-break: normal;
  white-space: normal;
  overflow: visible;
}
.vc-icon svg {
  fill: var(--VC-FG-2);
  height: 1em;
  width: 1em;
  vertical-align: -0.11em;
}
.vc-icon .vc-icon-delete {
  vertical-align: -0.11em;
}
.vc-icon .vc-icon-copy {
  height: 1.1em;
  width: 1.1em;
  vertical-align: -0.16em;
}
.vc-icon .vc-icon-suc {
  fill: var(--VC-TEXTGREEN);
  height: 1.1em;
  width: 1.1em;
  vertical-align: -0.16em;
}
`,""]),e.Z=r},1142:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-scroller-viewport {
  position: relative;
  overflow: hidden;
  height: 100%;
}
.vc-scroller-contents {
  min-height: 100%;
  will-change: transform;
}
.vc-scroller-items {
  will-change: height;
  position: relative;
}
.vc-scroller-item {
  display: none;
  position: absolute;
  left: 0;
  right: 0;
}
.vc-scroller-viewport.static .vc-scroller-item {
  display: block;
  position: static;
}
.vc-scroller-scrollbar-track {
  width: 4px;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  padding: 1px;
}
.vc-scroller-scrollbar-thumb {
  position: relative;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 999px;
}
`,""]),e.Z=r},3283:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`#__vconsole {
  --VC-BG-0: #ededed;
  --VC-BG-1: #f7f7f7;
  --VC-BG-2: #fff;
  --VC-BG-3: #f7f7f7;
  --VC-BG-4: #4c4c4c;
  --VC-BG-5: #fff;
  --VC-BG-6: rgba(0, 0, 0, 0.1);
  --VC-FG-0: rgba(0, 0, 0, 0.9);
  --VC-FG-HALF: rgba(0, 0, 0, 0.9);
  --VC-FG-1: rgba(0, 0, 0, 0.5);
  --VC-FG-2: rgba(0, 0, 0, 0.3);
  --VC-FG-3: rgba(0, 0, 0, 0.1);
  --VC-RED: #fa5151;
  --VC-ORANGE: #fa9d3b;
  --VC-YELLOW: #ffc300;
  --VC-GREEN: #91d300;
  --VC-LIGHTGREEN: #95ec69;
  --VC-BRAND: #07c160;
  --VC-BLUE: #10aeff;
  --VC-INDIGO: #1485ee;
  --VC-PURPLE: #6467f0;
  --VC-LINK: #576b95;
  --VC-TEXTGREEN: #06ae56;
  --VC-FG: black;
  --VC-BG: white;
  --VC-BG-COLOR-ACTIVE: #ececec;
  --VC-WARN-BG: #fff3cc;
  --VC-WARN-BORDER: #ffe799;
  --VC-ERROR-BG: #fedcdc;
  --VC-ERROR-BORDER: #fdb9b9;
  --VC-DOM-TAG-NAME-COLOR: #881280;
  --VC-DOM-ATTRIBUTE-NAME-COLOR: #994500;
  --VC-DOM-ATTRIBUTE-VALUE-COLOR: #1a1aa6;
  --VC-CODE-KEY-FG: #881391;
  --VC-CODE-PRIVATE-KEY-FG: #cfa1d3;
  --VC-CODE-FUNC-FG: #0d22aa;
  --VC-CODE-NUMBER-FG: #1c00cf;
  --VC-CODE-STR-FG: #c41a16;
  --VC-CODE-NULL-FG: #808080;
  color: var(--VC-FG-0);
  font-size: 13px;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
  -webkit-user-select: auto;
  /* global */
}
#__vconsole .vc-max-height {
  max-height: 19.23076923em;
}
#__vconsole .vc-max-height-line {
  max-height: 6.30769231em;
}
#__vconsole .vc-min-height {
  min-height: 3.07692308em;
}
#__vconsole dd,
#__vconsole dl,
#__vconsole pre {
  margin: 0;
}
#__vconsole pre {
  white-space: pre-wrap;
}
#__vconsole i {
  font-style: normal;
}
.vc-table {
  height: 100%;
}
.vc-table .vc-table-row {
  line-height: 1.5;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -moz-box-orient: horizontal;
  -moz-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  overflow: hidden;
  border-bottom: 1px solid var(--VC-FG-3);
}
.vc-table .vc-table-row.vc-left-border {
  border-left: 1px solid var(--VC-FG-3);
}
.vc-table .vc-table-row-icon {
  margin-left: 4px;
}
.vc-table .vc-table-col {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -moz-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding: 0.23076923em 0.30769231em;
  border-left: 1px solid var(--VC-FG-3);
  overflow: auto;
}
.vc-table .vc-table-col:first-child {
  border: none;
}
.vc-table .vc-table-col-value {
  white-space: pre-wrap;
  word-break: break-word;
  /*white-space: nowrap;
    text-overflow: ellipsis;*/
  -webkit-overflow-scrolling: touch;
}
.vc-table .vc-small .vc-table-col {
  padding: 0 0.30769231em;
  font-size: 0.92307692em;
}
.vc-table .vc-table-col-2 {
  -webkit-box-flex: 2;
  -webkit-flex: 2;
  -moz-box-flex: 2;
  -ms-flex: 2;
  flex: 2;
}
.vc-table .vc-table-col-3 {
  -webkit-box-flex: 3;
  -webkit-flex: 3;
  -moz-box-flex: 3;
  -ms-flex: 3;
  flex: 3;
}
.vc-table .vc-table-col-4 {
  -webkit-box-flex: 4;
  -webkit-flex: 4;
  -moz-box-flex: 4;
  -ms-flex: 4;
  flex: 4;
}
.vc-table .vc-table-col-5 {
  -webkit-box-flex: 5;
  -webkit-flex: 5;
  -moz-box-flex: 5;
  -ms-flex: 5;
  flex: 5;
}
.vc-table .vc-table-col-6 {
  -webkit-box-flex: 6;
  -webkit-flex: 6;
  -moz-box-flex: 6;
  -ms-flex: 6;
  flex: 6;
}
.vc-table .vc-table-row-error {
  border-color: var(--VC-ERROR-BORDER);
  background-color: var(--VC-ERROR-BG);
}
.vc-table .vc-table-row-error .vc-table-col {
  color: var(--VC-RED);
  border-color: var(--VC-ERROR-BORDER);
}
.vc-table .vc-table-col-title {
  font-weight: bold;
}
.vc-table .vc-table-action {
  display: flex;
  justify-content: space-evenly;
}
.vc-table .vc-table-action .vc-icon {
  flex: 1;
  text-align: center;
  display: block;
}
.vc-table .vc-table-action .vc-icon:hover {
  background: var(--VC-BG-3);
}
.vc-table .vc-table-action .vc-icon:active {
  background: var(--VC-BG-1);
}
.vc-table .vc-table-input {
  width: 100%;
  border: none;
  color: var(--VC-FG-0);
  background-color: var(--VC-BG-6);
  height: 3.53846154em;
}
.vc-table .vc-table-input:focus {
  background-color: var(--VC-FG-2);
}
@media (prefers-color-scheme: dark) {
  #__vconsole:not([data-theme="light"]) {
    --VC-BG-0: #191919;
    --VC-BG-1: #1f1f1f;
    --VC-BG-2: #232323;
    --VC-BG-3: #2f2f2f;
    --VC-BG-4: #606060;
    --VC-BG-5: #2c2c2c;
    --VC-BG-6: rgba(255, 255, 255, 0.2);
    --VC-FG-0: rgba(255, 255, 255, 0.8);
    --VC-FG-HALF: rgba(255, 255, 255, 0.6);
    --VC-FG-1: rgba(255, 255, 255, 0.5);
    --VC-FG-2: rgba(255, 255, 255, 0.3);
    --VC-FG-3: rgba(255, 255, 255, 0.05);
    --VC-RED: #fa5151;
    --VC-ORANGE: #c87d2f;
    --VC-YELLOW: #cc9c00;
    --VC-GREEN: #74a800;
    --VC-LIGHTGREEN: #28b561;
    --VC-BRAND: #07c160;
    --VC-BLUE: #10aeff;
    --VC-INDIGO: #1196ff;
    --VC-PURPLE: #8183ff;
    --VC-LINK: #7d90a9;
    --VC-TEXTGREEN: #259c5c;
    --VC-FG: white;
    --VC-BG: black;
    --VC-BG-COLOR-ACTIVE: #282828;
    --VC-WARN-BG: #332700;
    --VC-WARN-BORDER: #664e00;
    --VC-ERROR-BG: #321010;
    --VC-ERROR-BORDER: #642020;
    --VC-DOM-TAG-NAME-COLOR: #5DB0D7;
    --VC-DOM-ATTRIBUTE-NAME-COLOR: #9BBBDC;
    --VC-DOM-ATTRIBUTE-VALUE-COLOR: #f29766;
    --VC-CODE-KEY-FG: #e36eec;
    --VC-CODE-PRIVATE-KEY-FG: #f4c5f7;
    --VC-CODE-FUNC-FG: #556af2;
    --VC-CODE-NUMBER-FG: #9980ff;
    --VC-CODE-STR-FG: #e93f3b;
    --VC-CODE-NULL-FG: #808080;
  }
}
#__vconsole[data-theme="dark"] {
  --VC-BG-0: #191919;
  --VC-BG-1: #1f1f1f;
  --VC-BG-2: #232323;
  --VC-BG-3: #2f2f2f;
  --VC-BG-4: #606060;
  --VC-BG-5: #2c2c2c;
  --VC-BG-6: rgba(255, 255, 255, 0.2);
  --VC-FG-0: rgba(255, 255, 255, 0.8);
  --VC-FG-HALF: rgba(255, 255, 255, 0.6);
  --VC-FG-1: rgba(255, 255, 255, 0.5);
  --VC-FG-2: rgba(255, 255, 255, 0.3);
  --VC-FG-3: rgba(255, 255, 255, 0.05);
  --VC-RED: #fa5151;
  --VC-ORANGE: #c87d2f;
  --VC-YELLOW: #cc9c00;
  --VC-GREEN: #74a800;
  --VC-LIGHTGREEN: #28b561;
  --VC-BRAND: #07c160;
  --VC-BLUE: #10aeff;
  --VC-INDIGO: #1196ff;
  --VC-PURPLE: #8183ff;
  --VC-LINK: #7d90a9;
  --VC-TEXTGREEN: #259c5c;
  --VC-FG: white;
  --VC-BG: black;
  --VC-BG-COLOR-ACTIVE: #282828;
  --VC-WARN-BG: #332700;
  --VC-WARN-BORDER: #664e00;
  --VC-ERROR-BG: #321010;
  --VC-ERROR-BORDER: #642020;
  --VC-DOM-TAG-NAME-COLOR: #5DB0D7;
  --VC-DOM-ATTRIBUTE-NAME-COLOR: #9BBBDC;
  --VC-DOM-ATTRIBUTE-VALUE-COLOR: #f29766;
  --VC-CODE-KEY-FG: #e36eec;
  --VC-CODE-PRIVATE-KEY-FG: #f4c5f7;
  --VC-CODE-FUNC-FG: #556af2;
  --VC-CODE-NUMBER-FG: #9980ff;
  --VC-CODE-STR-FG: #e93f3b;
  --VC-CODE-NULL-FG: #808080;
}
.vc-tabbar {
  border-bottom: 1px solid var(--VC-FG-3);
  overflow-x: auto;
  height: 3em;
  width: auto;
  white-space: nowrap;
}
.vc-tabbar .vc-tab {
  display: inline-block;
  line-height: 3em;
  padding: 0 1.15384615em;
  border-right: 1px solid var(--VC-FG-3);
  text-decoration: none;
  color: var(--VC-FG-0);
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}
.vc-tabbar .vc-tab:active {
  background-color: rgba(0, 0, 0, 0.15);
}
.vc-tabbar .vc-tab.vc-actived {
  background-color: var(--VC-BG-1);
}
.vc-toolbar {
  border-top: 1px solid var(--VC-FG-3);
  line-height: 3em;
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -moz-box-orient: horizontal;
  -moz-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
}
.vc-toolbar .vc-tool {
  display: none;
  font-style: normal;
  text-decoration: none;
  color: var(--VC-FG-0);
  width: 50%;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -moz-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  text-align: center;
  position: relative;
  -webkit-touch-callout: none;
}
.vc-toolbar .vc-tool.vc-toggle,
.vc-toolbar .vc-tool.vc-global-tool {
  display: block;
}
.vc-toolbar .vc-tool:active {
  background-color: rgba(0, 0, 0, 0.15);
}
.vc-toolbar .vc-tool:after {
  content: " ";
  position: absolute;
  top: 0.53846154em;
  bottom: 0.53846154em;
  right: 0;
  border-left: 1px solid var(--VC-FG-3);
}
.vc-toolbar .vc-tool-last:after {
  border: none;
}
.vc-topbar {
  background-color: var(--VC-BG-1);
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -moz-box-orient: horizontal;
  -moz-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  width: 100%;
}
.vc-topbar .vc-toptab {
  display: none;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -moz-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  line-height: 2.30769231em;
  padding: 0 1.15384615em;
  border-bottom: 1px solid var(--VC-FG-3);
  text-decoration: none;
  text-align: center;
  color: var(--VC-FG-0);
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}
.vc-topbar .vc-toptab.vc-toggle {
  display: block;
}
.vc-topbar .vc-toptab:active {
  background-color: rgba(0, 0, 0, 0.15);
}
.vc-topbar .vc-toptab.vc-actived {
  border-bottom: 1px solid var(--VC-INDIGO);
}
.vc-mask {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0);
  z-index: 10001;
  -webkit-transition: background 0.3s;
  transition: background 0.3s;
  -webkit-tap-highlight-color: transparent;
  overflow-y: scroll;
}
.vc-panel {
  display: none;
  position: fixed;
  min-height: 85%;
  left: 0;
  right: 0;
  bottom: -100%;
  z-index: 10002;
  background-color: var(--VC-BG-0);
  transition: bottom 0.3s;
}
.vc-toggle .vc-switch {
  display: none;
}
.vc-toggle .vc-mask {
  background: rgba(0, 0, 0, 0.6);
  display: block;
}
.vc-toggle .vc-panel {
  bottom: 0;
}
.vc-content {
  background-color: var(--VC-BG-2);
  overflow-x: hidden;
  overflow-y: auto;
  position: absolute;
  top: 3.07692308em;
  left: 0;
  right: 0;
  bottom: 3.07692308em;
  -webkit-overflow-scrolling: touch;
  margin-bottom: constant(safe-area-inset-bottom);
  margin-bottom: env(safe-area-inset-bottom);
}
.vc-content.vc-has-topbar {
  top: 5.46153846em;
}
.vc-plugin-box {
  display: none;
  position: relative;
  min-height: 100%;
}
.vc-plugin-box.vc-fixed-height {
  height: 100%;
}
.vc-plugin-box.vc-actived {
  display: block;
}
.vc-plugin-content {
  display: flex;
  width: 100%;
  height: 100%;
  overflow-y: auto;
  flex-direction: column;
  -webkit-tap-highlight-color: transparent;
}
.vc-plugin-content:empty:before {
  content: "Empty";
  color: var(--VC-FG-1);
  position: absolute;
  top: 45%;
  left: 0;
  right: 0;
  bottom: 0;
  font-size: 1.15384615em;
  text-align: center;
}
.vc-plugin-empty {
  color: var(--VC-FG-1);
  font-size: 1.15384615em;
  height: 100%;
  width: 100%;
  padding: 1.15384615em 0;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
@supports (bottom: constant(safe-area-inset-bottom)) or (bottom: env(safe-area-inset-bottom)) {
  .vc-toolbar,
  .vc-switch {
    bottom: constant(safe-area-inset-bottom);
    bottom: env(safe-area-inset-bottom);
  }
}
`,""]),e.Z=r},7558:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-switch {
  display: block;
  position: fixed;
  right: 0.76923077em;
  bottom: 0.76923077em;
  color: #FFF;
  background-color: var(--VC-BRAND);
  line-height: 1;
  font-size: 1.07692308em;
  padding: 0.61538462em 1.23076923em;
  z-index: 10000;
  border-radius: 0.30769231em;
  box-shadow: 0 0 0.61538462em rgba(0, 0, 0, 0.4);
}
`,""]),e.Z=r},5670:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`/* color */
.vcelm-node {
  color: var(--VC-DOM-TAG-NAME-COLOR);
}
.vcelm-k {
  color: var(--VC-DOM-ATTRIBUTE-NAME-COLOR);
}
.vcelm-v {
  color: var(--VC-DOM-ATTRIBUTE-VALUE-COLOR);
}
.vcelm-l.vc-actived > .vcelm-node {
  background-color: var(--VC-FG-3);
}
/* layout */
.vcelm-l {
  padding-left: 8px;
  position: relative;
  word-wrap: break-word;
  line-height: 1.2;
}
/*.vcelm-l.vcelm-noc {
  padding-left: 0;
}*/
.vcelm-l .vcelm-node:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vcelm-l.vcelm-noc .vcelm-node:active {
  background-color: transparent;
}
.vcelm-t {
  white-space: pre-wrap;
  word-wrap: break-word;
}
/* level */
/* arrow */
.vcelm-l:before {
  content: "";
  display: block;
  position: absolute;
  top: 6px;
  left: 3px;
  width: 0;
  height: 0;
  border: transparent solid 3px;
  border-left-color: var(--VC-FG-1);
}
.vcelm-l.vc-toggle:before {
  display: block;
  top: 6px;
  left: 0;
  border-top-color: var(--VC-FG-1);
  border-left-color: transparent;
}
.vcelm-l.vcelm-noc:before {
  display: none;
}
`,""]),e.Z=r},3327:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,"",""]),e.Z=r},1130:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-cmd {
  height: 3.07692308em;
  border-top: 1px solid var(--VC-FG-3);
  display: flex;
  flex-direction: row;
}
.vc-cmd.vc-filter {
  bottom: 0;
}
.vc-cmd-input-wrap {
  display: flex;
  align-items: center;
  flex: 1;
  position: relative;
  height: 2.15384615em;
  padding: 0.46153846em 0.61538462em;
}
.vc-cmd-input {
  width: 100%;
  border: none;
  resize: none;
  outline: none;
  padding: 0;
  font-size: 0.92307692em;
  background-color: transparent;
  color: var(--VC-FG-0);
}
.vc-cmd-input::-webkit-input-placeholder {
  line-height: 2.15384615em;
}
.vc-cmd-btn {
  width: 3.07692308em;
  border: none;
  background-color: var(--VC-BG-0);
  color: var(--VC-FG-0);
  outline: none;
  -webkit-touch-callout: none;
  font-size: 1em;
}
.vc-cmd-clear-btn {
  flex: 1 3.07692308em;
  text-align: center;
  line-height: 3.07692308em;
}
.vc-cmd-btn:active,
.vc-cmd-clear-btn:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vc-cmd-prompted {
  position: absolute;
  left: 0.46153846em;
  right: 0.46153846em;
  background-color: var(--VC-BG-3);
  border: 1px solid var(--VC-FG-3);
  overflow-x: scroll;
  display: none;
}
.vc-cmd-prompted li {
  list-style: none;
  line-height: 30px;
  padding: 0 0.46153846em;
  border-bottom: 1px solid var(--VC-FG-3);
}
.vc-cmd-prompted li:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vc-cmd-prompted-hide {
  text-align: center;
}
`,""]),e.Z=r},7147:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-log-row {
  margin: 0;
  padding: 0.46153846em 0.61538462em;
  overflow: hidden;
  line-height: 1.3;
  border-bottom: 1px solid var(--VC-FG-3);
  word-break: break-word;
  position: relative;
  display: flex;
}
.vc-log-info {
  color: var(--VC-PURPLE);
}
.vc-log-debug {
  color: var(--VC-YELLOW);
}
.vc-log-warn {
  color: var(--VC-ORANGE);
  border-color: var(--VC-WARN-BORDER);
  background-color: var(--VC-WARN-BG);
}
.vc-log-error {
  color: var(--VC-RED);
  border-color: var(--VC-ERROR-BORDER);
  background-color: var(--VC-ERROR-BG);
}
.vc-logrow-icon {
  margin-left: auto;
}
.vc-log-padding {
  width: 1.53846154em;
  border-left: 1px solid var(--VC-FG-3);
}
.vc-log-group .vc-log-content {
  font-weight: bold;
}
.vc-log-group-toggle {
  padding-left: 0.76923077em;
}
.vc-log-group-toggle {
  display: block;
  font-style: italic;
  padding-left: 0.76923077em;
  position: relative;
}
.vc-log-group-toggle:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vc-log-group > .vc-log-group-toggle::before {
  content: "";
  position: absolute;
  top: 0.30769231em;
  left: 0.15384615em;
  width: 0;
  height: 0;
  border: transparent solid 0.30769231em;
  border-left-color: var(--VC-FG-1);
}
.vc-log-group.vc-toggle > .vc-log-group-toggle::before {
  top: 0.46153846em;
  left: 0;
  border-top-color: var(--VC-FG-1);
  border-left-color: transparent;
}
.vc-log-time {
  width: 6.15384615em;
  color: #777;
}
.vc-log-repeat i {
  margin-right: 0.30769231em;
  padding: 0 6.5px;
  color: #D7E0EF;
  background-color: #42597F;
  border-radius: 8.66666667px;
}
.vc-log-error .vc-log-repeat i {
  color: #901818;
  background-color: var(--VC-RED);
}
.vc-log-warn .vc-log-repeat i {
  color: #987D20;
  background-color: #F4BD02;
}
.vc-log-content {
  flex: 1;
}
.vc-log-input,
.vc-log-output {
  padding-left: 0.92307692em;
}
.vc-log-input:before,
.vc-log-output:before {
  content: "›";
  position: absolute;
  top: 0.15384615em;
  left: 0;
  font-size: 1.23076923em;
  color: #6A5ACD;
}
.vc-log-output:before {
  content: "‹";
}
`,""]),e.Z=r},1237:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-log-tree {
  display: block;
  overflow: auto;
  position: relative;
  -webkit-overflow-scrolling: touch;
}
.vc-log-tree-node {
  display: block;
  font-style: italic;
  padding-left: 0.76923077em;
  position: relative;
}
.vc-log-tree.vc-is-tree > .vc-log-tree-node:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vc-log-tree.vc-is-tree > .vc-log-tree-node::before {
  content: "";
  position: absolute;
  top: 0.30769231em;
  left: 0.15384615em;
  width: 0;
  height: 0;
  border: transparent solid 0.30769231em;
  border-left-color: var(--VC-FG-1);
}
.vc-log-tree.vc-is-tree.vc-toggle > .vc-log-tree-node::before {
  top: 0.46153846em;
  left: 0;
  border-top-color: var(--VC-FG-1);
  border-left-color: transparent;
}
.vc-log-tree-child {
  margin-left: 0.76923077em;
}
.vc-log-tree-loadmore {
  text-decoration: underline;
  padding-left: 1.84615385em;
  position: relative;
  color: var(--VC-CODE-FUNC-FG);
}
.vc-log-tree-loadmore::before {
  content: "››";
  position: absolute;
  top: -0.15384615em;
  left: 0.76923077em;
  font-size: 1.23076923em;
  color: var(--VC-CODE-FUNC-FG);
}
.vc-log-tree-loadmore:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
`,""]),e.Z=r},845:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-log-key {
  color: var(--VC-CODE-KEY-FG);
}
.vc-log-key-private {
  color: var(--VC-CODE-PRIVATE-KEY-FG);
}
.vc-log-val {
  white-space: pre-line;
}
.vc-log-val-function {
  color: var(--VC-CODE-FUNC-FG);
  font-style: italic !important;
}
.vc-log-val-bigint {
  color: var(--VC-CODE-FUNC-FG);
}
.vc-log-val-number,
.vc-log-val-boolean {
  color: var(--VC-CODE-NUMBER-FG);
}
.vc-log-val-string {
  white-space: pre-wrap;
}
.vc-log-val-string.vc-log-val-haskey {
  color: var(--VC-CODE-STR-FG);
  white-space: normal;
}
.vc-log-val-null,
.vc-log-val-undefined,
.vc-log-val-uninvocatable {
  color: var(--VC-CODE-NULL-FG);
}
.vc-log-val-symbol {
  color: var(--VC-CODE-STR-FG);
}
`,""]),e.Z=r},8747:function(s,e,t){var n=t(6738),o=t.n(n),a=t(7705),r=t.n(a)()(o());r.push([s.id,`.vc-group .vc-group-preview {
  -webkit-touch-callout: none;
}
.vc-group .vc-group-preview:active {
  background-color: var(--VC-BG-COLOR-ACTIVE);
}
.vc-group .vc-group-detail {
  display: none;
  padding: 0 0 0.76923077em 1.53846154em;
  border-bottom: 1px solid var(--VC-FG-3);
}
.vc-group.vc-actived .vc-group-detail {
  display: block;
  background-color: var(--VC-BG-1);
}
.vc-group.vc-actived .vc-table-row {
  background-color: var(--VC-BG-2);
}
.vc-group.vc-actived .vc-group-preview {
  background-color: var(--VC-BG-1);
}
`,""]),e.Z=r},3411:function(s,e,t){var n=t(3379),o=t.n(n),a=t(7795),r=t.n(a),l=t(569),c=t.n(l),u=t(3565),d=t.n(u),f=t(9216),g=t.n(f),_=t(4589),b=t.n(_),B=t(1130),I={};B.Z&&B.Z.locals&&(I.locals=B.Z.locals);var C,R=0,L={};L.styleTagTransform=b(),L.setAttributes=d(),L.insert=c().bind(null,"head"),L.domAPI=r(),L.insertStyleElement=g(),I.use=function(F){return L.options=F||{},R++||(C=o()(B.Z,L)),I},I.unuse=function(){R>0&&!--R&&(C(),C=null)},e.Z=I},3379:function(s){var e=[];function t(a){for(var r=-1,l=0;l<e.length;l++)if(e[l].identifier===a){r=l;break}return r}function n(a,r){for(var l={},c=[],u=0;u<a.length;u++){var d=a[u],f=r.base?d[0]+r.base:d[0],g=l[f]||0,_="".concat(f," ").concat(g);l[f]=g+1;var b=t(_),B={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(b!==-1)e[b].references++,e[b].updater(B);else{var I=o(B,r);r.byIndex=u,e.splice(u,0,{identifier:_,updater:I,references:1})}c.push(_)}return c}function o(a,r){var l=r.domAPI(r);return l.update(a),function(c){if(c){if(c.css===a.css&&c.media===a.media&&c.sourceMap===a.sourceMap&&c.supports===a.supports&&c.layer===a.layer)return;l.update(a=c)}else l.remove()}}s.exports=function(a,r){var l=n(a=a||[],r=r||{});return function(c){c=c||[];for(var u=0;u<l.length;u++){var d=t(l[u]);e[d].references--}for(var f=n(c,r),g=0;g<l.length;g++){var _=t(l[g]);e[_].references===0&&(e[_].updater(),e.splice(_,1))}l=f}}},569:function(s){var e={};s.exports=function(t,n){var o=function(a){if(e[a]===void 0){var r=document.querySelector(a);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch{r=null}e[a]=r}return e[a]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},9216:function(s){s.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},3565:function(s,e,t){s.exports=function(n){var o=t.nc;o&&n.setAttribute("nonce",o)}},7795:function(s){s.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){(function(o,a,r){var l="";r.supports&&(l+="@supports (".concat(r.supports,") {")),r.media&&(l+="@media ".concat(r.media," {"));var c=r.layer!==void 0;c&&(l+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),l+=r.css,c&&(l+="}"),r.media&&(l+="}"),r.supports&&(l+="}");var u=r.sourceMap;u&&typeof btoa<"u"&&(l+=`
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(u))))," */")),a.styleTagTransform(l,o,a.options)})(t,e,n)},remove:function(){(function(n){if(n.parentNode===null)return!1;n.parentNode.removeChild(n)})(t)}}}},4589:function(s){s.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},6464:function(s,e,t){function n(o){if(o===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return o}t.d(e,{Z:function(){return n}})},4296:function(s,e,t){function n(a,r){for(var l=0;l<r.length;l++){var c=r[l];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}}function o(a,r,l){return r&&n(a.prototype,r),l&&n(a,l),Object.defineProperty(a,"prototype",{writable:!1}),a}t.d(e,{Z:function(){return o}})},8270:function(s,e,t){function n(o,a,r){return a in o?Object.defineProperty(o,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):o[a]=r,o}t.d(e,{Z:function(){return n}})},6881:function(s,e,t){t.d(e,{Z:function(){return o}});var n=t(2717);function o(a,r){a.prototype=Object.create(r.prototype),a.prototype.constructor=a,(0,n.Z)(a,r)}},2717:function(s,e,t){function n(o,a){return n=Object.setPrototypeOf||function(r,l){return r.__proto__=l,r},n(o,a)}t.d(e,{Z:function(){return n}})},7003:function(s,e,t){t.d(e,{H3:function(){return n.H3E},ev:function(){return n.evW},x:function(){return n.xa3}});var n=t(2942)},2942:function(s,e,t){t.d(e,{f_C:function(){return Ct},hjT:function(){return Fe},R3I:function(){return N},Ljt:function(){return ee},akz:function(){return se},VnY:function(){return nt},cKT:function(){return Ne},gbL:function(){return Ge},FIv:function(){return _},XGm:function(){return L},xa3:function(){return Me},YCL:function(){return Ee},nuO:function(){return b},vpE:function(){return Je},RMB:function(){return z},ogt:function(){return Q},bGB:function(){return G},cSb:function(){return ne},yl1:function(){return qe},VOJ:function(){return R},u2N:function(){return I},$XI:function(){return g},lig:function(){return dt},dvw:function(){return Ie},S1n:function(){return ot},$Tr:function(){return k},sBU:function(){return l},oLt:function(){return ue},yef:function(){return Ye},ZTd:function(){return n},AqN:function(){return u},evW:function(){return de},H3E:function(){return De},cly:function(){return it},AT7:function(){return pe},j7q:function(){return r},N8:function(){return c},rTO:function(){return J},BmG:function(){return ye},fxP:function(){return F},czc:function(){return Te},DhX:function(){return ce},XET:function(){return fe},LdU:function(){return f},bi5:function(){return O},fLW:function(){return q},VHj:function(){return xe},Ui:function(){return We},etI:function(){return Ve},GQg:function(){return ft},kmG:function(){return C}}),t(2717),t(6881);function n(){}function o(K){return K()}function a(){return Object.create(null)}function r(K){K.forEach(o)}function l(K){return typeof K=="function"}function c(K,be){return K!=K?be==be:K!==be||K&&typeof K=="object"||typeof K=="function"}function u(K,be){return K!=K?be==be:K!==be}function d(K){return Object.keys(K).length===0}function f(K){if(K==null)return n;for(var be=arguments.length,ge=new Array(be>1?be-1:0),Re=1;Re<be;Re++)ge[Re-1]=arguments[Re];var Qe=K.subscribe.apply(K,ge);return Qe.unsubscribe?function(){return Qe.unsubscribe()}:Qe}function g(K){var be;return f(K,function(ge){return be=ge})(),be}function _(K,be,ge){K.$$.on_destroy.push(f(be,ge))}function b(K,be,ge,Re){if(K){var Qe=B(K,be,ge,Re);return K[0](Qe)}}function B(K,be,ge,Re){return K[1]&&Re?function(Qe,Oe){for(var st in Oe)Qe[st]=Oe[st];return Qe}(ge.ctx.slice(),K[1](Re(be))):ge.ctx}function I(K,be,ge,Re){if(K[2]&&Re){var Qe=K[2](Re(ge));if(be.dirty===void 0)return Qe;if(typeof Qe=="object"){for(var Oe=[],st=Math.max(be.dirty.length,Qe.length),_t=0;_t<st;_t+=1)Oe[_t]=be.dirty[_t]|Qe[_t];return Oe}return be.dirty|Qe}return be.dirty}function C(K,be,ge,Re,Qe,Oe){if(Qe){var st=B(be,ge,Re,Oe);K.p(st,Qe)}}function R(K){if(K.ctx.length>32){for(var be=[],ge=K.ctx.length/32,Re=0;Re<ge;Re++)be[Re]=-1;return be}return-1}function L(K){var be={};for(var ge in K)be[ge]=!0;return be}function F(K,be,ge){return K.set(ge),be}function N(K,be){K.appendChild(be)}function k(K,be,ge){K.insertBefore(be,ge||null)}function Q(K){K.parentNode.removeChild(K)}function z(K,be){for(var ge=0;ge<K.length;ge+=1)K[ge]&&K[ge].d(be)}function G(K){return document.createElement(K)}function O(K){return document.createElementNS("http://www.w3.org/2000/svg",K)}function q(K){return document.createTextNode(K)}function ce(){return q(" ")}function ne(){return q("")}function ue(K,be,ge,Re){return K.addEventListener(be,ge,Re),function(){return K.removeEventListener(be,ge,Re)}}function pe(K){return function(be){return be.preventDefault(),K.call(this,be)}}function fe(K){return function(be){return be.stopPropagation(),K.call(this,be)}}function ee(K,be,ge){ge==null?K.removeAttribute(be):K.getAttribute(be)!==ge&&K.setAttribute(be,ge)}function J(K,be){be=""+be,K.wholeText!==be&&(K.data=be)}function ye(K,be){K.value=be??""}function Te(K,be,ge,Re){ge===null?K.style.removeProperty(be):K.style.setProperty(be,ge,Re?"important":"")}function xe(K,be,ge){K.classList[ge?"add":"remove"](be)}function ve(K,be,ge){ge===void 0&&(ge=!1);var Re=document.createEvent("CustomEvent");return Re.initCustomEvent(K,ge,!1,be),Re}var he;function le(K){he=K}function _e(){if(!he)throw new Error("Function called outside component initialization");return he}function De(K){_e().$$.on_mount.push(K)}function de(K){_e().$$.on_destroy.push(K)}function Me(){var K=_e();return function(be,ge){var Re=K.$$.callbacks[be];if(Re){var Qe=ve(be,ge);Re.slice().forEach(function(Oe){Oe.call(K,Qe)})}}}function Ne(K,be){var ge=this,Re=K.$$.callbacks[be.type];Re&&Re.slice().forEach(function(Qe){return Qe.call(ge,be)})}var Pe=[],nt=[],ie=[],oe=[],$=Promise.resolve(),Se=!1;function Be(){Se||(Se=!0,$.then(qe))}function we(K){ie.push(K)}function Fe(K){oe.push(K)}var $e=new Set,ze=0;function qe(){var K=he;do{for(;ze<Pe.length;){var be=Pe[ze];ze++,le(be),ut(be.$$)}for(le(null),Pe.length=0,ze=0;nt.length;)nt.pop()();for(var ge=0;ge<ie.length;ge+=1){var Re=ie[ge];$e.has(Re)||($e.add(Re),Re())}ie.length=0}while(Pe.length);for(;oe.length;)oe.pop()();Se=!1,$e.clear(),le(K)}function ut(K){if(K.fragment!==null){K.update(),r(K.before_update);var be=K.dirty;K.dirty=[-1],K.fragment&&K.fragment.p(K.ctx,be),K.after_update.forEach(we)}}var te,H=new Set;function Ie(){te={r:0,c:[],p:te}}function Ge(){te.r||r(te.c),te=te.p}function We(K,be){K&&K.i&&(H.delete(K),K.i(be))}function Ve(K,be,ge,Re){if(K&&K.o){if(H.has(K))return;H.add(K),te.c.push(function(){H.delete(K),Re&&(ge&&K.d(1),Re())}),K.o(be)}}var dt=typeof window<"u"?window:typeof globalThis<"u"?globalThis:commonjsGlobal;function it(K,be){Ve(K,1,1,function(){be.delete(K.key)})}function ft(K,be,ge,Re,Qe,Oe,st,_t,Ft,Rt,An,bn){for(var Sn=K.length,En=Oe.length,fn=Sn,jn={};fn--;)jn[K[fn].key]=fn;var ri=[],ui=new Map,ti=new Map;for(fn=En;fn--;){var hi=bn(Qe,Oe,fn),Gn=ge(hi),di=st.get(Gn);di?Re&&di.p(hi,be):(di=Rt(Gn,hi)).c(),ui.set(Gn,ri[fn]=di),Gn in jn&&ti.set(Gn,Math.abs(fn-jn[Gn]))}var Ei=new Set,si=new Set;function Ci(Le){We(Le,1),Le.m(_t,An),st.set(Le.key,Le),An=Le.first,En--}for(;Sn&&En;){var Zn=ri[En-1],ni=K[Sn-1],oi=Zn.key,ai=ni.key;Zn===ni?(An=Zn.first,Sn--,En--):ui.has(ai)?!st.has(oi)||Ei.has(oi)?Ci(Zn):si.has(ai)?Sn--:ti.get(oi)>ti.get(ai)?(si.add(oi),Ci(Zn)):(Ei.add(ai),Sn--):(Ft(ni,st),Sn--)}for(;Sn--;){var re=K[Sn];ui.has(re.key)||Ft(re,st)}for(;En;)Ci(ri[En-1]);return ri}function se(K,be,ge){var Re=K.$$.props[be];Re!==void 0&&(K.$$.bound[Re]=ge,ge(K.$$.ctx[Re]))}function Ee(K){K&&K.c()}function Ye(K,be,ge,Re){var Qe=K.$$,Oe=Qe.fragment,st=Qe.on_mount,_t=Qe.on_destroy,Ft=Qe.after_update;Oe&&Oe.m(be,ge),Re||we(function(){var Rt=st.map(o).filter(l);_t?_t.push.apply(_t,Rt):r(Rt),K.$$.on_mount=[]}),Ft.forEach(we)}function Je(K,be){var ge=K.$$;ge.fragment!==null&&(r(ge.on_destroy),ge.fragment&&ge.fragment.d(be),ge.on_destroy=ge.fragment=null,ge.ctx=[])}function at(K,be){K.$$.dirty[0]===-1&&(Pe.push(K),Be(),K.$$.dirty.fill(0)),K.$$.dirty[be/31|0]|=1<<be%31}function ot(K,be,ge,Re,Qe,Oe,st,_t){_t===void 0&&(_t=[-1]);var Ft=he;le(K);var Rt=K.$$={fragment:null,ctx:null,props:Oe,update:n,not_equal:Qe,bound:a(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(be.context||(Ft?Ft.$$.context:[])),callbacks:a(),dirty:_t,skip_bound:!1,root:be.target||Ft.$$.root};st&&st(Rt.root);var An,bn=!1;if(Rt.ctx=ge?ge(K,be.props||{},function(En,fn){var jn=!(arguments.length<=2)&&arguments.length-2?arguments.length<=2?void 0:arguments[2]:fn;return Rt.ctx&&Qe(Rt.ctx[En],Rt.ctx[En]=jn)&&(!Rt.skip_bound&&Rt.bound[En]&&Rt.bound[En](jn),bn&&at(K,En)),fn}):[],Rt.update(),bn=!0,r(Rt.before_update),Rt.fragment=!!Re&&Re(Rt.ctx),be.target){if(be.hydrate){var Sn=(An=be.target,Array.from(An.childNodes));Rt.fragment&&Rt.fragment.l(Sn),Sn.forEach(Q)}else Rt.fragment&&Rt.fragment.c();be.intro&&We(K.$$.fragment),Ye(K,be.target,be.anchor,be.customElement),qe()}le(Ft)}var Ct=function(){function K(){}var be=K.prototype;return be.$destroy=function(){Je(this,1),this.$destroy=n},be.$on=function(ge,Re){var Qe=this.$$.callbacks[ge]||(this.$$.callbacks[ge]=[]);return Qe.push(Re),function(){var Oe=Qe.indexOf(Re);Oe!==-1&&Qe.splice(Oe,1)}},be.$set=function(ge){this.$$set&&!d(ge)&&(this.$$.skip_bound=!0,this.$$set(ge),this.$$.skip_bound=!1)},K}()},3313:function(s,e,t){t.d(e,{U2:function(){return n.$XI},fZ:function(){return l}});var n=t(2942);function o(c,u){var d=typeof Symbol<"u"&&c[Symbol.iterator]||c["@@iterator"];if(d)return(d=d.call(c)).next.bind(d);if(Array.isArray(c)||(d=function(g,_){if(g){if(typeof g=="string")return a(g,_);var b=Object.prototype.toString.call(g).slice(8,-1);if(b==="Object"&&g.constructor&&(b=g.constructor.name),b==="Map"||b==="Set")return Array.from(g);if(b==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(b))return a(g,_)}}(c))||u){d&&(c=d);var f=0;return function(){return f>=c.length?{done:!0}:{done:!1,value:c[f++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function a(c,u){(u==null||u>c.length)&&(u=c.length);for(var d=0,f=new Array(u);d<u;d++)f[d]=c[d];return f}var r=[];function l(c,u){var d;u===void 0&&(u=n.ZTd);var f=new Set;function g(_){if((0,n.N8)(c,_)&&(c=_,d)){for(var b,B=!r.length,I=o(f);!(b=I()).done;){var C=b.value;C[1](),r.push(C,c)}if(B){for(var R=0;R<r.length;R+=2)r[R][0](r[R+1]);r.length=0}}}return{set:g,update:function(_){g(_(c))},subscribe:function(_,b){b===void 0&&(b=n.ZTd);var B=[_,b];return f.add(B),f.size===1&&(d=u(g)||n.ZTd),_(c),function(){f.delete(B),f.size===0&&(d(),d=null)}}}}}},__webpack_module_cache__={};function __webpack_require__(s){var e=__webpack_module_cache__[s];if(e!==void 0)return e.exports;var t=__webpack_module_cache__[s]={id:s,exports:{}};return __webpack_modules__[s](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=function(s){var e=s&&s.__esModule?function(){return s.default}:function(){return s};return __webpack_require__.d(e,{a:e}),e},__webpack_require__.d=function(s,e){for(var t in e)__webpack_require__.o(e,t)&&!__webpack_require__.o(s,t)&&Object.defineProperty(s,t,{enumerable:!0,get:e[t]})},__webpack_require__.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),__webpack_require__.o=function(s,e){return Object.prototype.hasOwnProperty.call(s,e)};var __webpack_exports__={};return function(){__webpack_require__.d(__webpack_exports__,{default:function(){return na}}),__webpack_require__(5441),__webpack_require__(8765);var s=__webpack_require__(4296),e=__webpack_require__(5103),t={one:function(T,v){v===void 0&&(v=document);try{return v.querySelector(T)||void 0}catch{return}},all:function(T,v){v===void 0&&(v=document);try{var y=v.querySelectorAll(T);return[].slice.call(y)}catch{return[]}},addClass:function(T,v){if(T)for(var y=(0,e.kJ)(T)?T:[T],E=0;E<y.length;E++){var w=(y[E].className||"").split(" ");w.indexOf(v)>-1||(w.push(v),y[E].className=w.join(" "))}},removeClass:function(T,v){if(T)for(var y=(0,e.kJ)(T)?T:[T],E=0;E<y.length;E++){for(var w=y[E].className.split(" "),M=0;M<w.length;M++)w[M]==v&&(w[M]="");y[E].className=w.join(" ").trim()}},hasClass:function(T,v){return!(!T||!T.classList)&&T.classList.contains(v)},bind:function(T,v,y,E){E===void 0&&(E=!1),T&&((0,e.kJ)(T)?T:[T]).forEach(function(w){w.addEventListener(v,y,!!E)})},delegate:function(T,v,y,E){T&&T.addEventListener(v,function(w){var M=t.all(y,T);if(M)e:for(var P=0;P<M.length;P++)for(var U=w.target;U;){if(U==M[P]){E.call(U,w,U);break e}if((U=U.parentNode)==T)break}},!1)},removeChildren:function(T){for(;T.firstChild;)T.removeChild(T.lastChild);return T}},n=t,o=__webpack_require__(6464),a=__webpack_require__(6881),r=__webpack_require__(2942),l=__webpack_require__(7003),c=__webpack_require__(3379),u=__webpack_require__.n(c),d=__webpack_require__(7795),f=__webpack_require__.n(d),g=__webpack_require__(569),_=__webpack_require__.n(g),b=__webpack_require__(3565),B=__webpack_require__.n(b),I=__webpack_require__(9216),C=__webpack_require__.n(I),R=__webpack_require__(4589),L=__webpack_require__.n(R),F=__webpack_require__(7558),N={};F.Z&&F.Z.locals&&(N.locals=F.Z.locals);var k,Q=0,z={};z.styleTagTransform=L(),z.setAttributes=B(),z.insert=_().bind(null,"head"),z.domAPI=f(),z.insertStyleElement=C(),N.use=function(T){return z.options=T||{},Q++||(k=u()(F.Z,z)),N},N.unuse=function(){Q>0&&!--Q&&(k(),k=null)};var G=N;function O(T){var v,y,E,w;return{c:function(){v=(0,r.bGB)("div"),y=(0,r.fLW)("vConsole"),(0,r.Ljt)(v,"class","vc-switch"),(0,r.czc)(v,"right",T[2].x+"px"),(0,r.czc)(v,"bottom",T[2].y+"px"),(0,r.czc)(v,"display",T[0]?"block":"none")},m:function(M,P){(0,r.$Tr)(M,v,P),(0,r.R3I)(v,y),T[8](v),E||(w=[(0,r.oLt)(v,"touchstart",T[3],{passive:!1}),(0,r.oLt)(v,"touchend",T[4],{passive:!1}),(0,r.oLt)(v,"touchmove",T[5],{passive:!1}),(0,r.oLt)(v,"click",T[7])],E=!0)},p:function(M,P){var U=P[0];4&U&&(0,r.czc)(v,"right",M[2].x+"px"),4&U&&(0,r.czc)(v,"bottom",M[2].y+"px"),1&U&&(0,r.czc)(v,"display",M[0]?"block":"none")},i:r.ZTd,o:r.ZTd,d:function(M){M&&(0,r.ogt)(v),T[8](null),E=!1,(0,r.j7q)(w)}}}function q(T,v,y){var E,w=v.show,M=w===void 0||w,P=v.position,U=P===void 0?{x:0,y:0}:P,V={hasMoved:!1,x:0,y:0,startX:0,startY:0,endX:0,endY:0},j={x:0,y:0};(0,l.H3)(function(){G.use()}),(0,l.ev)(function(){G.unuse()});var ae=function(Ae,ke){var Ce=me(Ae,ke);Ae=Ce[0],ke=Ce[1],V.x=Ae,V.y=ke,y(2,j.x=Ae,j),y(2,j.y=ke,j),e.po("switch_x",Ae+""),e.po("switch_y",ke+"")},me=function(Ae,ke){var Ce=Math.max(document.documentElement.offsetWidth,window.innerWidth),He=Math.max(document.documentElement.offsetHeight,window.innerHeight);return Ae+E.offsetWidth>Ce&&(Ae=Ce-E.offsetWidth),ke+E.offsetHeight>He&&(ke=He-E.offsetHeight),Ae<0&&(Ae=0),ke<20&&(ke=20),[Ae,ke]};return T.$$set=function(Ae){"show"in Ae&&y(0,M=Ae.show),"position"in Ae&&y(6,U=Ae.position)},T.$$.update=function(){66&T.$$.dirty&&E&&ae(U.x,U.y)},[M,E,j,function(Ae){V.startX=Ae.touches[0].pageX,V.startY=Ae.touches[0].pageY,V.hasMoved=!1},function(Ae){V.hasMoved&&(V.startX=0,V.startY=0,V.hasMoved=!1,ae(V.endX,V.endY))},function(Ae){if(!(Ae.touches.length<=0)){var ke=Ae.touches[0].pageX-V.startX,Ce=Ae.touches[0].pageY-V.startY,He=Math.floor(V.x-ke),je=Math.floor(V.y-Ce),rt=me(He,je);He=rt[0],je=rt[1],y(2,j.x=He,j),y(2,j.y=je,j),V.endX=He,V.endY=je,V.hasMoved=!0,Ae.preventDefault()}},U,function(Ae){r.cKT.call(this,T,Ae)},function(Ae){r.VnY[Ae?"unshift":"push"](function(){y(1,E=Ae)})}]}var ce=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,q,O,r.N8,{show:0,position:6}),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"show",get:function(){return this.$$.ctx[0]},set:function(y){this.$$set({show:y}),(0,r.yl1)()}},{key:"position",get:function(){return this.$$.ctx[6]},set:function(y){this.$$set({position:y}),(0,r.yl1)()}}]),v}(r.f_C),ne=ce;function ue(T){var v,y;return{c:function(){v=(0,r.bGB)("div"),(0,r.Ljt)(v,"id",y="__vc_plug_"+T[0]),(0,r.Ljt)(v,"class","vc-plugin-box"),(0,r.VHj)(v,"vc-fixed-height",T[1]),(0,r.VHj)(v,"vc-actived",T[2])},m:function(E,w){(0,r.$Tr)(E,v,w),T[6](v)},p:function(E,w){var M=w[0];1&M&&y!==(y="__vc_plug_"+E[0])&&(0,r.Ljt)(v,"id",y),2&M&&(0,r.VHj)(v,"vc-fixed-height",E[1]),4&M&&(0,r.VHj)(v,"vc-actived",E[2])},i:r.ZTd,o:r.ZTd,d:function(E){E&&(0,r.ogt)(v),T[6](null)}}}function pe(T,v,y){var E=v.pluginId,w=E===void 0?"":E,M=v.fixedHeight,P=M!==void 0&&M,U=v.actived,V=U!==void 0&&U,j=v.content,ae=j===void 0?void 0:j,me=void 0,Ae=void 0;return T.$$set=function(ke){"pluginId"in ke&&y(0,w=ke.pluginId),"fixedHeight"in ke&&y(1,P=ke.fixedHeight),"actived"in ke&&y(2,V=ke.actived),"content"in ke&&y(4,ae=ke.content)},T.$$.update=function(){57&T.$$.dirty&&Ae!==w&&ae&&me&&(y(5,Ae=w),y(3,me.innerHTML="",me),(0,e.HD)(ae)?y(3,me.innerHTML=ae,me):(0,e.kK)(ae)&&me.appendChild(ae))},[w,P,V,me,ae,Ae,function(ke){r.VnY[ke?"unshift":"push"](function(){y(3,me=ke),y(5,Ae),y(0,w),y(4,ae)})}]}var fe=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,pe,ue,r.N8,{pluginId:0,fixedHeight:1,actived:2,content:4}),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"pluginId",get:function(){return this.$$.ctx[0]},set:function(y){this.$$set({pluginId:y}),(0,r.yl1)()}},{key:"fixedHeight",get:function(){return this.$$.ctx[1]},set:function(y){this.$$set({fixedHeight:y}),(0,r.yl1)()}},{key:"actived",get:function(){return this.$$.ctx[2]},set:function(y){this.$$set({actived:y}),(0,r.yl1)()}},{key:"content",get:function(){return this.$$.ctx[4]},set:function(y){this.$$set({content:y}),(0,r.yl1)()}}]),v}(r.f_C),ee=fe,J=__webpack_require__(4687),ye=__webpack_require__(3283),Te={};ye.Z&&ye.Z.locals&&(Te.locals=ye.Z.locals);var xe,ve=0,he={};he.styleTagTransform=L(),he.setAttributes=B(),he.insert=_().bind(null,"head"),he.domAPI=f(),he.insertStyleElement=C(),Te.use=function(T){return he.options=T||{},ve++||(xe=u()(ye.Z,he)),Te},Te.unuse=function(){ve>0&&!--ve&&(xe(),xe=null)};var le=Te;function _e(T,v,y){var E=T.slice();return E[39]=v[y][0],E[40]=v[y][1],E}function De(T,v,y){var E=T.slice();return E[43]=v[y],E[45]=y,E}function de(T,v,y){var E=T.slice();return E[39]=v[y][0],E[40]=v[y][1],E}function Me(T,v,y){var E=T.slice();return E[39]=v[y][0],E[40]=v[y][1],E}function Ne(T,v,y){var E=T.slice();return E[43]=v[y],E[45]=y,E}function Pe(T,v,y){var E=T.slice();return E[39]=v[y][0],E[40]=v[y][1],E}function nt(T){var v,y,E,w,M,P=T[40].name+"";function U(){return T[25](T[40])}return{c:function(){v=(0,r.bGB)("a"),y=(0,r.fLW)(P),(0,r.Ljt)(v,"class","vc-tab"),(0,r.Ljt)(v,"id",E="__vc_tab_"+T[40].id),(0,r.VHj)(v,"vc-actived",T[40].id===T[2])},m:function(V,j){(0,r.$Tr)(V,v,j),(0,r.R3I)(v,y),w||(M=(0,r.oLt)(v,"click",U),w=!0)},p:function(V,j){T=V,8&j[0]&&P!==(P=T[40].name+"")&&(0,r.rTO)(y,P),8&j[0]&&E!==(E="__vc_tab_"+T[40].id)&&(0,r.Ljt)(v,"id",E),12&j[0]&&(0,r.VHj)(v,"vc-actived",T[40].id===T[2])},d:function(V){V&&(0,r.ogt)(v),w=!1,M()}}}function ie(T){var v,y=T[40].hasTabPanel&&nt(T);return{c:function(){y&&y.c(),v=(0,r.cSb)()},m:function(E,w){y&&y.m(E,w),(0,r.$Tr)(E,v,w)},p:function(E,w){E[40].hasTabPanel?y?y.p(E,w):((y=nt(E)).c(),y.m(v.parentNode,v)):y&&(y.d(1),y=null)},d:function(E){y&&y.d(E),E&&(0,r.ogt)(v)}}}function oe(T){var v,y,E,w,M,P=T[43].name+"";function U(){for(var V,j=arguments.length,ae=new Array(j),me=0;me<j;me++)ae[me]=arguments[me];return(V=T)[26].apply(V,[T[40],T[45]].concat(ae))}return{c:function(){v=(0,r.bGB)("i"),y=(0,r.fLW)(P),(0,r.Ljt)(v,"class",E="vc-toptab vc-topbar-"+T[40].id+" "+T[43].className),(0,r.VHj)(v,"vc-toggle",T[40].id===T[2]),(0,r.VHj)(v,"vc-actived",T[43].actived)},m:function(V,j){(0,r.$Tr)(V,v,j),(0,r.R3I)(v,y),w||(M=(0,r.oLt)(v,"click",U),w=!0)},p:function(V,j){T=V,8&j[0]&&P!==(P=T[43].name+"")&&(0,r.rTO)(y,P),8&j[0]&&E!==(E="vc-toptab vc-topbar-"+T[40].id+" "+T[43].className)&&(0,r.Ljt)(v,"class",E),12&j[0]&&(0,r.VHj)(v,"vc-toggle",T[40].id===T[2]),8&j[0]&&(0,r.VHj)(v,"vc-actived",T[43].actived)},d:function(V){V&&(0,r.ogt)(v),w=!1,M()}}}function $(T){for(var v,y=T[40].topbarList,E=[],w=0;w<y.length;w+=1)E[w]=oe(Ne(T,y,w));return{c:function(){for(var M=0;M<E.length;M+=1)E[M].c();v=(0,r.cSb)()},m:function(M,P){for(var U=0;U<E.length;U+=1)E[U].m(M,P);(0,r.$Tr)(M,v,P)},p:function(M,P){if(8204&P[0]){var U;for(y=M[40].topbarList,U=0;U<y.length;U+=1){var V=Ne(M,y,U);E[U]?E[U].p(V,P):(E[U]=oe(V),E[U].c(),E[U].m(v.parentNode,v))}for(;U<E.length;U+=1)E[U].d(1);E.length=y.length}},d:function(M){(0,r.RMB)(E,M),M&&(0,r.ogt)(v)}}}function Se(T){var v,y,E,w=ee;function M(P){var U;return{props:{pluginId:P[40].id,fixedHeight:(U=P[40].tabOptions)==null?void 0:U.fixedHeight,actived:P[40].id===P[2],content:P[40].content}}}return w&&(v=new w(M(T))),{c:function(){v&&(0,r.YCL)(v.$$.fragment),y=(0,r.cSb)()},m:function(P,U){v&&(0,r.yef)(v,P,U),(0,r.$Tr)(P,y,U),E=!0},p:function(P,U){var V,j={};if(8&U[0]&&(j.pluginId=P[40].id),8&U[0]&&(j.fixedHeight=(V=P[40].tabOptions)==null?void 0:V.fixedHeight),12&U[0]&&(j.actived=P[40].id===P[2]),8&U[0]&&(j.content=P[40].content),w!==(w=ee)){if(v){(0,r.dvw)();var ae=v;(0,r.etI)(ae.$$.fragment,1,0,function(){(0,r.vpE)(ae,1)}),(0,r.gbL)()}w?(v=new w(M(P)),(0,r.YCL)(v.$$.fragment),(0,r.Ui)(v.$$.fragment,1),(0,r.yef)(v,y.parentNode,y)):v=null}else w&&v.$set(j)},i:function(P){E||(v&&(0,r.Ui)(v.$$.fragment,P),E=!0)},o:function(P){v&&(0,r.etI)(v.$$.fragment,P),E=!1},d:function(P){P&&(0,r.ogt)(y),v&&(0,r.vpE)(v,P)}}}function Be(T){var v,y,E,w,M,P=T[43].name+"";function U(){for(var V,j=arguments.length,ae=new Array(j),me=0;me<j;me++)ae[me]=arguments[me];return(V=T)[28].apply(V,[T[40],T[45]].concat(ae))}return{c:function(){v=(0,r.bGB)("i"),y=(0,r.fLW)(P),(0,r.Ljt)(v,"class",E="vc-tool vc-tool-"+T[40].id),(0,r.VHj)(v,"vc-global-tool",T[43].global),(0,r.VHj)(v,"vc-toggle",T[40].id===T[2])},m:function(V,j){(0,r.$Tr)(V,v,j),(0,r.R3I)(v,y),w||(M=(0,r.oLt)(v,"click",U),w=!0)},p:function(V,j){T=V,8&j[0]&&P!==(P=T[43].name+"")&&(0,r.rTO)(y,P),8&j[0]&&E!==(E="vc-tool vc-tool-"+T[40].id)&&(0,r.Ljt)(v,"class",E),8&j[0]&&(0,r.VHj)(v,"vc-global-tool",T[43].global),12&j[0]&&(0,r.VHj)(v,"vc-toggle",T[40].id===T[2])},d:function(V){V&&(0,r.ogt)(v),w=!1,M()}}}function we(T){for(var v,y=T[40].toolbarList,E=[],w=0;w<y.length;w+=1)E[w]=Be(De(T,y,w));return{c:function(){for(var M=0;M<E.length;M+=1)E[M].c();v=(0,r.cSb)()},m:function(M,P){for(var U=0;U<E.length;U+=1)E[U].m(M,P);(0,r.$Tr)(M,v,P)},p:function(M,P){if(16396&P[0]){var U;for(y=M[40].toolbarList,U=0;U<y.length;U+=1){var V=De(M,y,U);E[U]?E[U].p(V,P):(E[U]=Be(V),E[U].c(),E[U].m(v.parentNode,v))}for(;U<E.length;U+=1)E[U].d(1);E.length=y.length}},d:function(M){(0,r.RMB)(E,M),M&&(0,r.ogt)(v)}}}function Fe(T){var v,y,E,w,M,P,U,V,j,ae,me,Ae,ke,Ce,He,je,rt,lt,pt,Tt,St;function $t(It){T[23](It)}function Wt(It){T[24](It)}var qt={};T[0]!==void 0&&(qt.show=T[0]),T[1]!==void 0&&(qt.position=T[1]),y=new ne({props:qt}),r.VnY.push(function(){return(0,r.akz)(y,"show",$t)}),r.VnY.push(function(){return(0,r.akz)(y,"position",Wt)}),y.$on("click",T[10]);for(var bt=Object.entries(T[3]),wt=[],jt=0;jt<bt.length;jt+=1)wt[jt]=ie(Pe(T,bt,jt));for(var yn=Object.entries(T[3]),Xt=[],Yt=0;Yt<yn.length;Yt+=1)Xt[Yt]=$(Me(T,yn,Yt));for(var Qt=Object.entries(T[3]),gt=[],Et=0;Et<Qt.length;Et+=1)gt[Et]=Se(de(T,Qt,Et));for(var en=function(It){return(0,r.etI)(gt[It],1,1,function(){gt[It]=null})},ct=Object.entries(T[3]),xt=[],Ot=0;Ot<ct.length;Ot+=1)xt[Ot]=we(_e(T,ct,Ot));return{c:function(){var It,Gt;v=(0,r.bGB)("div"),(0,r.YCL)(y.$$.fragment),M=(0,r.DhX)(),P=(0,r.bGB)("div"),U=(0,r.DhX)(),V=(0,r.bGB)("div"),j=(0,r.bGB)("div");for(var un=0;un<wt.length;un+=1)wt[un].c();ae=(0,r.DhX)(),me=(0,r.bGB)("div");for(var gn=0;gn<Xt.length;gn+=1)Xt[gn].c();Ae=(0,r.DhX)(),ke=(0,r.bGB)("div");for(var vn=0;vn<gt.length;vn+=1)gt[vn].c();Ce=(0,r.DhX)(),He=(0,r.bGB)("div");for(var on=0;on<xt.length;on+=1)xt[on].c();je=(0,r.DhX)(),(rt=(0,r.bGB)("i")).textContent="Hide",(0,r.Ljt)(P,"class","vc-mask"),(0,r.czc)(P,"display",T[8]?"block":"none"),(0,r.Ljt)(j,"class","vc-tabbar"),(0,r.Ljt)(me,"class","vc-topbar"),(0,r.Ljt)(ke,"class","vc-content"),(0,r.VHj)(ke,"vc-has-topbar",((It=T[3][T[2]])==null||(Gt=It.topbarList)==null?void 0:Gt.length)>0),(0,r.Ljt)(rt,"class","vc-tool vc-global-tool vc-tool-last vc-hide"),(0,r.Ljt)(He,"class","vc-toolbar"),(0,r.Ljt)(V,"class","vc-panel"),(0,r.czc)(V,"display",T[7]?"block":"none"),(0,r.Ljt)(v,"id","__vconsole"),(0,r.Ljt)(v,"style",lt=T[5]?"font-size:"+T[5]+";":""),(0,r.Ljt)(v,"data-theme",T[4]),(0,r.VHj)(v,"vc-toggle",T[6])},m:function(It,Gt){(0,r.$Tr)(It,v,Gt),(0,r.yef)(y,v,null),(0,r.R3I)(v,M),(0,r.R3I)(v,P),(0,r.R3I)(v,U),(0,r.R3I)(v,V),(0,r.R3I)(V,j);for(var un=0;un<wt.length;un+=1)wt[un].m(j,null);(0,r.R3I)(V,ae),(0,r.R3I)(V,me);for(var gn=0;gn<Xt.length;gn+=1)Xt[gn].m(me,null);(0,r.R3I)(V,Ae),(0,r.R3I)(V,ke);for(var vn=0;vn<gt.length;vn+=1)gt[vn].m(ke,null);T[27](ke),(0,r.R3I)(V,Ce),(0,r.R3I)(V,He);for(var on=0;on<xt.length;on+=1)xt[on].m(He,null);(0,r.R3I)(He,je),(0,r.R3I)(He,rt),pt=!0,Tt||(St=[(0,r.oLt)(P,"click",T[11]),(0,r.oLt)(ke,"touchstart",T[15]),(0,r.oLt)(ke,"touchmove",T[16]),(0,r.oLt)(ke,"touchend",T[17]),(0,r.oLt)(ke,"scroll",T[18]),(0,r.oLt)(rt,"click",T[11]),(0,r.oLt)(v,"touchstart",T[19].touchStart,{passive:!1,capture:!0}),(0,r.oLt)(v,"touchmove",T[19].touchMove,{passive:!1,capture:!0}),(0,r.oLt)(v,"touchend",T[19].touchEnd,{passive:!1,capture:!0})],Tt=!0)},p:function(It,Gt){var un,gn,vn={};if(!E&&1&Gt[0]&&(E=!0,vn.show=It[0],(0,r.hjT)(function(){return E=!1})),!w&&2&Gt[0]&&(w=!0,vn.position=It[1],(0,r.hjT)(function(){return w=!1})),y.$set(vn),(!pt||256&Gt[0])&&(0,r.czc)(P,"display",It[8]?"block":"none"),4108&Gt[0]){var on;for(bt=Object.entries(It[3]),on=0;on<bt.length;on+=1){var Vn=Pe(It,bt,on);wt[on]?wt[on].p(Vn,Gt):(wt[on]=ie(Vn),wt[on].c(),wt[on].m(j,null))}for(;on<wt.length;on+=1)wt[on].d(1);wt.length=bt.length}if(8204&Gt[0]){var In;for(yn=Object.entries(It[3]),In=0;In<yn.length;In+=1){var Hn=Me(It,yn,In);Xt[In]?Xt[In].p(Hn,Gt):(Xt[In]=$(Hn),Xt[In].c(),Xt[In].m(me,null))}for(;In<Xt.length;In+=1)Xt[In].d(1);Xt.length=yn.length}if(12&Gt[0]){var dn;for(Qt=Object.entries(It[3]),dn=0;dn<Qt.length;dn+=1){var Xn=de(It,Qt,dn);gt[dn]?(gt[dn].p(Xn,Gt),(0,r.Ui)(gt[dn],1)):(gt[dn]=Se(Xn),gt[dn].c(),(0,r.Ui)(gt[dn],1),gt[dn].m(ke,null))}for((0,r.dvw)(),dn=Qt.length;dn<gt.length;dn+=1)en(dn);(0,r.gbL)()}if(12&Gt[0]&&(0,r.VHj)(ke,"vc-has-topbar",((un=It[3][It[2]])==null||(gn=un.topbarList)==null?void 0:gn.length)>0),16396&Gt[0]){var _n;for(ct=Object.entries(It[3]),_n=0;_n<ct.length;_n+=1){var ci=_e(It,ct,_n);xt[_n]?xt[_n].p(ci,Gt):(xt[_n]=we(ci),xt[_n].c(),xt[_n].m(He,je))}for(;_n<xt.length;_n+=1)xt[_n].d(1);xt.length=ct.length}(!pt||128&Gt[0])&&(0,r.czc)(V,"display",It[7]?"block":"none"),(!pt||32&Gt[0]&&lt!==(lt=It[5]?"font-size:"+It[5]+";":""))&&(0,r.Ljt)(v,"style",lt),(!pt||16&Gt[0])&&(0,r.Ljt)(v,"data-theme",It[4]),64&Gt[0]&&(0,r.VHj)(v,"vc-toggle",It[6])},i:function(It){if(!pt){(0,r.Ui)(y.$$.fragment,It);for(var Gt=0;Gt<Qt.length;Gt+=1)(0,r.Ui)(gt[Gt]);pt=!0}},o:function(It){(0,r.etI)(y.$$.fragment,It),gt=gt.filter(Boolean);for(var Gt=0;Gt<gt.length;Gt+=1)(0,r.etI)(gt[Gt]);pt=!1},d:function(It){It&&(0,r.ogt)(v),(0,r.vpE)(y),(0,r.RMB)(wt,It),(0,r.RMB)(Xt,It),(0,r.RMB)(gt,It),T[27](null),(0,r.RMB)(xt,It),Tt=!1,(0,r.j7q)(St)}}}function $e(T,v,y){var E,w,M=v.theme,P=M===void 0?"":M,U=v.disableScrolling,V=U!==void 0&&U,j=v.show,ae=j!==void 0&&j,me=v.showSwitchButton,Ae=me===void 0||me,ke=v.switchButtonPosition,Ce=ke===void 0?{x:0,y:0}:ke,He=v.activedPluginId,je=He===void 0?"":He,rt=v.pluginList,lt=rt===void 0?{}:rt,pt=(0,l.x)(),Tt=!1,St="",$t=!1,Wt=!1,qt=!1,bt=!0,wt=0,jt=null,yn={};(0,l.H3)(function(){var ct=document.querySelectorAll('[name="viewport"]');if(ct&&ct[0]){var xt=(ct[ct.length-1].getAttribute("content")||"").match(/initial\-scale\=\d+(\.\d+)?/),Ot=xt?parseFloat(xt[0].split("=")[1]):1;Ot!==1&&y(5,St=Math.floor(1/Ot*13)+"px")}le.use&&le.use(),E=J.x.subscribe(function(It){ae&&wt!==It.updateTime&&(wt=It.updateTime,Xt())})}),(0,l.ev)(function(){le.unuse&&le.unuse(),E&&E()});var Xt=function(){!V&&bt&&w&&y(9,w.scrollTop=w.scrollHeight-w.offsetHeight,w)},Yt=function(ct){ct!==je&&(y(2,je=ct),pt("changePanel",{pluginId:ct}),setTimeout(function(){w&&y(9,w.scrollTop=yn[je]||0,w)},0))},Qt=function(ct,xt,Ot){var It=lt[xt].topbarList[Ot],Gt=!0;if(e.mf(It.onClick)&&(Gt=It.onClick.call(ct.target,ct,It.data)),Gt!==!1){for(var un=0;un<lt[xt].topbarList.length;un++)y(3,lt[xt].topbarList[un].actived=Ot===un,lt);y(3,lt)}},gt=function(ct,xt,Ot){var It=lt[xt].toolbarList[Ot];e.mf(It.onClick)&&It.onClick.call(ct.target,ct,It.data)},Et={tapTime:700,tapBoundary:10,lastTouchStartTime:0,touchstartX:0,touchstartY:0,touchHasMoved:!1,targetElem:null},en={touchStart:function(ct){if(Et.lastTouchStartTime===0){var xt=ct.targetTouches[0];Et.touchstartX=xt.pageX,Et.touchstartY=xt.pageY,Et.lastTouchStartTime=ct.timeStamp,Et.targetElem=ct.target.nodeType===Node.TEXT_NODE?ct.target.parentNode:ct.target}},touchMove:function(ct){var xt=ct.changedTouches[0];(Math.abs(xt.pageX-Et.touchstartX)>Et.tapBoundary||Math.abs(xt.pageY-Et.touchstartY)>Et.tapBoundary)&&(Et.touchHasMoved=!0)},touchEnd:function(ct){if(Et.touchHasMoved===!1&&ct.timeStamp-Et.lastTouchStartTime<Et.tapTime&&Et.targetElem!=null){var xt=!1;switch(Et.targetElem.tagName.toLowerCase()){case"textarea":xt=!0;break;case"select":xt=!Et.targetElem.disabled&&!Et.targetElem.readOnly;break;case"input":switch(Et.targetElem.type){case"button":case"checkbox":case"file":case"image":case"radio":case"submit":xt=!1;break;default:xt=!Et.targetElem.disabled&&!Et.targetElem.readOnly}}xt?Et.targetElem.focus():ct.preventDefault();var Ot=ct.changedTouches[0],It=new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window,screenX:Ot.screenX,screenY:Ot.screenY,clientX:Ot.clientX,clientY:Ot.clientY});Et.targetElem.dispatchEvent(It)}Et.lastTouchStartTime=0,Et.touchHasMoved=!1,Et.targetElem=null}};return T.$$set=function(ct){"theme"in ct&&y(4,P=ct.theme),"disableScrolling"in ct&&y(20,V=ct.disableScrolling),"show"in ct&&y(21,ae=ct.show),"showSwitchButton"in ct&&y(0,Ae=ct.showSwitchButton),"switchButtonPosition"in ct&&y(1,Ce=ct.switchButtonPosition),"activedPluginId"in ct&&y(2,je=ct.activedPluginId),"pluginList"in ct&&y(3,lt=ct.pluginList)},T.$$.update=function(){6291456&T.$$.dirty[0]&&(ae===!0?(y(7,Wt=!0),y(8,qt=!0),jt&&clearTimeout(jt),y(22,jt=setTimeout(function(){y(6,$t=!0),Xt()},10))):(y(6,$t=!1),jt&&clearTimeout(jt),y(22,jt=setTimeout(function(){y(7,Wt=!1),y(8,qt=!1)},330))))},[Ae,Ce,je,lt,P,St,$t,Wt,qt,w,function(ct){pt("show",{show:!0})},function(ct){pt("show",{show:!1})},Yt,Qt,gt,function(ct){if(!(ct.target.tagName==="INPUT"||ct.target.tagName==="TEXTAREA")){var xt=!1;if(typeof window.getComputedStyle=="function"){var Ot=window.getComputedStyle(ct.target);Ot.overflow!=="auto"&&Ot.overflow!=="initial"&&Ot.overflow!=="scroll"||(xt=!0)}if(!xt){var It=w.scrollTop,Gt=w.scrollHeight,un=It+w.offsetHeight;It===0?(y(9,w.scrollTop=1,w),w.scrollTop===0&&(Tt=!0)):un===Gt&&(y(9,w.scrollTop=It-1,w),w.scrollTop===It&&(Tt=!0))}}},function(ct){Tt&&ct.preventDefault()},function(ct){Tt=!1},function(ct){ae&&(bt=w.scrollTop+w.offsetHeight>=w.scrollHeight-50,yn[je]=w.scrollTop)},en,V,ae,jt,function(ct){y(0,Ae=ct)},function(ct){y(1,Ce=ct)},function(ct){return Yt(ct.id)},function(ct,xt,Ot){return Qt(Ot,ct.id,xt)},function(ct){r.VnY[ct?"unshift":"push"](function(){y(9,w=ct)})},function(ct,xt,Ot){return gt(Ot,ct.id,xt)}]}var ze=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,$e,Fe,r.N8,{theme:4,disableScrolling:20,show:21,showSwitchButton:0,switchButtonPosition:1,activedPluginId:2,pluginList:3},null,[-1,-1]),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"theme",get:function(){return this.$$.ctx[4]},set:function(y){this.$$set({theme:y}),(0,r.yl1)()}},{key:"disableScrolling",get:function(){return this.$$.ctx[20]},set:function(y){this.$$set({disableScrolling:y}),(0,r.yl1)()}},{key:"show",get:function(){return this.$$.ctx[21]},set:function(y){this.$$set({show:y}),(0,r.yl1)()}},{key:"showSwitchButton",get:function(){return this.$$.ctx[0]},set:function(y){this.$$set({showSwitchButton:y}),(0,r.yl1)()}},{key:"switchButtonPosition",get:function(){return this.$$.ctx[1]},set:function(y){this.$$set({switchButtonPosition:y}),(0,r.yl1)()}},{key:"activedPluginId",get:function(){return this.$$.ctx[2]},set:function(y){this.$$set({activedPluginId:y}),(0,r.yl1)()}},{key:"pluginList",get:function(){return this.$$.ctx[3]},set:function(y){this.$$set({pluginList:y}),(0,r.yl1)()}}]),v}(r.f_C),qe=ze,ut=function(){function T(y,E){E===void 0&&(E="newPlugin"),this.isReady=!1,this.eventMap=new Map,this.exporter=void 0,this._id=void 0,this._name=void 0,this._vConsole=void 0,this.id=y,this.name=E,this.isReady=!1}var v=T.prototype;return v.on=function(y,E){return this.eventMap.set(y,E),this},v.onRemove=function(){this.unbindExporter()},v.trigger=function(y,E){var w=this.eventMap.get(y);if(typeof w=="function")w.call(this,E);else{var M="on"+y.charAt(0).toUpperCase()+y.slice(1);typeof this[M]=="function"&&this[M].call(this,E)}return this},v.bindExporter=function(){if(this._vConsole&&this.exporter){var y=this.id==="default"?"log":this.id;this._vConsole[y]=this.exporter}},v.unbindExporter=function(){var y=this.id==="default"?"log":this.id;this._vConsole&&this._vConsole[y]&&(this._vConsole[y]=void 0)},v.getUniqueID=function(y){return y===void 0&&(y=""),(0,e.QI)(y)},(0,s.Z)(T,[{key:"id",get:function(){return this._id},set:function(y){if(typeof y!="string")throw"[vConsole] Plugin ID must be a string.";if(!y)throw"[vConsole] Plugin ID cannot be empty.";this._id=y.toLowerCase()}},{key:"name",get:function(){return this._name},set:function(y){if(typeof y!="string")throw"[vConsole] Plugin name must be a string.";if(!y)throw"[vConsole] Plugin name cannot be empty.";this._name=y}},{key:"vConsole",get:function(){return this._vConsole||void 0},set:function(y){if(!y)throw"[vConsole] vConsole cannot be empty";this._vConsole=y,this.bindExporter()}}]),T}(),te=function(T){function v(E,w,M,P){var U;return(U=T.call(this,E,w)||this).CompClass=void 0,U.compInstance=void 0,U.initialProps=void 0,U.CompClass=M,U.initialProps=P,U}(0,a.Z)(v,T);var y=v.prototype;return y.onReady=function(){this.isReady=!0},y.onRenderTab=function(E){var w=document.createElement("div"),M=this.compInstance=new this.CompClass({target:w,props:this.initialProps});E(w.firstElementChild,M.options)},y.onRemove=function(){T.prototype.onRemove&&T.prototype.onRemove.call(this),this.compInstance&&this.compInstance.$destroy()},v}(ut),H=__webpack_require__(8665),Ie=__webpack_require__(9923),Ge=__webpack_require__(8702);function We(T){var v,y;return(v=new Ge.Z({props:{name:T[0]?"success":"copy"}})).$on("click",T[1]),{c:function(){(0,r.YCL)(v.$$.fragment)},m:function(E,w){(0,r.yef)(v,E,w),y=!0},p:function(E,w){var M={};1&w[0]&&(M.name=E[0]?"success":"copy"),v.$set(M)},i:function(E){y||((0,r.Ui)(v.$$.fragment,E),y=!0)},o:function(E){(0,r.etI)(v.$$.fragment,E),y=!1},d:function(E){(0,r.vpE)(v,E)}}}function Ve(T,v,y){var E=v.content,w=E===void 0?"":E,M=v.handler,P=M===void 0?void 0:M,U={target:document.documentElement},V=!1;return T.$$set=function(j){"content"in j&&y(2,w=j.content),"handler"in j&&y(3,P=j.handler)},[V,function(j){(function(ae,me){var Ae=(me===void 0?{}:me).target,ke=Ae===void 0?document.body:Ae,Ce=document.createElement("textarea"),He=document.activeElement;Ce.value=ae,Ce.setAttribute("readonly",""),Ce.style.contain="strict",Ce.style.position="absolute",Ce.style.left="-9999px",Ce.style.fontSize="12pt";var je=document.getSelection(),rt=!1;je.rangeCount>0&&(rt=je.getRangeAt(0)),ke.append(Ce),Ce.select(),Ce.selectionStart=0,Ce.selectionEnd=ae.length;var lt=!1;try{lt=document.execCommand("copy")}catch{}Ce.remove(),rt&&(je.removeAllRanges(),je.addRange(rt)),He&&He.focus()})(e.mf(P)?P(w)||"":e.Kn(w)||e.kJ(w)?e.hZ(w,{maxDepth:10,keyMaxLen:1e4,pretty:!1,standardJSON:!0}):w,U),y(0,V=!0),setTimeout(function(){y(0,V=!1)},600)},w,P]}var dt=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,Ve,We,r.N8,{content:2,handler:3}),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"content",get:function(){return this.$$.ctx[2]},set:function(y){this.$$set({content:y}),(0,r.yl1)()}},{key:"handler",get:function(){return this.$$.ctx[3]},set:function(y){this.$$set({handler:y}),(0,r.yl1)()}}]),v}(r.f_C),it=dt,ft=__webpack_require__(845),se={};ft.Z&&ft.Z.locals&&(se.locals=ft.Z.locals);var Ee,Ye=0,Je={};Je.styleTagTransform=L(),Je.setAttributes=B(),Je.insert=_().bind(null,"head"),Je.domAPI=f(),Je.insertStyleElement=C(),se.use=function(T){return Je.options=T||{},Ye++||(Ee=u()(ft.Z,Je)),se},se.unuse=function(){Ye>0&&!--Ye&&(Ee(),Ee=null)};var at=se;function ot(T){var v,y,E,w=e.rE(T[1])+"";return{c:function(){v=(0,r.bGB)("i"),y=(0,r.fLW)(w),E=(0,r.fLW)(":"),(0,r.Ljt)(v,"class","vc-log-key"),(0,r.VHj)(v,"vc-log-key-symbol",T[2]==="symbol"),(0,r.VHj)(v,"vc-log-key-private",T[2]==="private")},m:function(M,P){(0,r.$Tr)(M,v,P),(0,r.R3I)(v,y),(0,r.$Tr)(M,E,P)},p:function(M,P){2&P&&w!==(w=e.rE(M[1])+"")&&(0,r.rTO)(y,w),4&P&&(0,r.VHj)(v,"vc-log-key-symbol",M[2]==="symbol"),4&P&&(0,r.VHj)(v,"vc-log-key-private",M[2]==="private")},d:function(M){M&&(0,r.ogt)(v),M&&(0,r.ogt)(E)}}}function Ct(T){var v,y,E,w,M=T[1]!==void 0&&ot(T);return{c:function(){M&&M.c(),v=(0,r.DhX)(),y=(0,r.bGB)("i"),E=(0,r.fLW)(T[3]),(0,r.Ljt)(y,"class",w="vc-log-val vc-log-val-"+T[4]),(0,r.Ljt)(y,"style",T[0]),(0,r.VHj)(y,"vc-log-val-haskey",T[1]!==void 0)},m:function(P,U){M&&M.m(P,U),(0,r.$Tr)(P,v,U),(0,r.$Tr)(P,y,U),(0,r.R3I)(y,E)},p:function(P,U){var V=U[0];P[1]!==void 0?M?M.p(P,V):((M=ot(P)).c(),M.m(v.parentNode,v)):M&&(M.d(1),M=null),8&V&&(0,r.rTO)(E,P[3]),16&V&&w!==(w="vc-log-val vc-log-val-"+P[4])&&(0,r.Ljt)(y,"class",w),1&V&&(0,r.Ljt)(y,"style",P[0]),18&V&&(0,r.VHj)(y,"vc-log-val-haskey",P[1]!==void 0)},i:r.ZTd,o:r.ZTd,d:function(P){M&&M.d(P),P&&(0,r.ogt)(v),P&&(0,r.ogt)(y)}}}function K(T,v,y){var E=v.origData,w=v.style,M=w===void 0?"":w,P=v.dataKey,U=P===void 0?void 0:P,V=v.keyType,j=V===void 0?"":V,ae="",me="",Ae=!1;return(0,l.H3)(function(){at.use()}),(0,l.ev)(function(){at.unuse()}),T.$$set=function(ke){"origData"in ke&&y(5,E=ke.origData),"style"in ke&&y(0,M=ke.style),"dataKey"in ke&&y(1,U=ke.dataKey),"keyType"in ke&&y(2,j=ke.keyType)},T.$$.update=function(){if(122&T.$$.dirty){y(6,Ae=U!==void 0);var ke=(0,H.LH)(E,Ae);y(4,me=ke.valueType),y(3,ae=ke.text),Ae||me!=="string"||y(3,ae=ae.replace(/\\n/g,`
`).replace(/\\t/g,"    "))}},[M,U,j,ae,me,E,Ae]}var be=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,K,Ct,r.AqN,{origData:5,style:0,dataKey:1,keyType:2}),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"origData",get:function(){return this.$$.ctx[5]},set:function(y){this.$$set({origData:y}),(0,r.yl1)()}},{key:"style",get:function(){return this.$$.ctx[0]},set:function(y){this.$$set({style:y}),(0,r.yl1)()}},{key:"dataKey",get:function(){return this.$$.ctx[1]},set:function(y){this.$$set({dataKey:y}),(0,r.yl1)()}},{key:"keyType",get:function(){return this.$$.ctx[2]},set:function(y){this.$$set({keyType:y}),(0,r.yl1)()}}]),v}(r.f_C),ge=be,Re=__webpack_require__(1237),Qe={};Re.Z&&Re.Z.locals&&(Qe.locals=Re.Z.locals);var Oe,st=0,_t={};_t.styleTagTransform=L(),_t.setAttributes=B(),_t.insert=_().bind(null,"head"),_t.domAPI=f(),_t.insertStyleElement=C(),Qe.use=function(T){return _t.options=T||{},st++||(Oe=u()(Re.Z,_t)),Qe},Qe.unuse=function(){st>0&&!--st&&(Oe(),Oe=null)};var Ft=Qe;function Rt(T,v,y){var E=T.slice();return E[19]=v[y],E[21]=y,E}function An(T,v,y){var E=T.slice();return E[19]=v[y],E}function bn(T,v,y){var E=T.slice();return E[19]=v[y],E[21]=y,E}function Sn(T){for(var v,y,E,w,M,P,U,V=[],j=new Map,ae=[],me=new Map,Ae=[],ke=new Map,Ce=T[7],He=function(gt){return gt[19]},je=0;je<Ce.length;je+=1){var rt=bn(T,Ce,je),lt=He(rt);j.set(lt,V[je]=fn(lt,rt))}for(var pt=T[11]<T[7].length&&jn(T),Tt=T[9],St=function(gt){return gt[19]},$t=0;$t<Tt.length;$t+=1){var Wt=An(T,Tt,$t),qt=St(Wt);me.set(qt,ae[$t]=ri(qt,Wt))}for(var bt=T[8],wt=function(gt){return gt[19]},jt=0;jt<bt.length;jt+=1){var yn=Rt(T,bt,jt),Xt=wt(yn);ke.set(Xt,Ae[jt]=ti(Xt,yn))}var Yt=T[12]<T[8].length&&hi(T),Qt=T[10]&&Gn(T);return{c:function(){v=(0,r.bGB)("div");for(var gt=0;gt<V.length;gt+=1)V[gt].c();y=(0,r.DhX)(),pt&&pt.c(),E=(0,r.DhX)();for(var Et=0;Et<ae.length;Et+=1)ae[Et].c();w=(0,r.DhX)();for(var en=0;en<Ae.length;en+=1)Ae[en].c();M=(0,r.DhX)(),Yt&&Yt.c(),P=(0,r.DhX)(),Qt&&Qt.c(),(0,r.Ljt)(v,"class","vc-log-tree-child")},m:function(gt,Et){(0,r.$Tr)(gt,v,Et);for(var en=0;en<V.length;en+=1)V[en].m(v,null);(0,r.R3I)(v,y),pt&&pt.m(v,null),(0,r.R3I)(v,E);for(var ct=0;ct<ae.length;ct+=1)ae[ct].m(v,null);(0,r.R3I)(v,w);for(var xt=0;xt<Ae.length;xt+=1)Ae[xt].m(v,null);(0,r.R3I)(v,M),Yt&&Yt.m(v,null),(0,r.R3I)(v,P),Qt&&Qt.m(v,null),U=!0},p:function(gt,Et){67721&Et&&(Ce=gt[7],(0,r.dvw)(),V=(0,r.GQg)(V,Et,He,1,gt,Ce,j,v,r.cly,fn,y,bn),(0,r.gbL)()),gt[11]<gt[7].length?pt?pt.p(gt,Et):((pt=jn(gt)).c(),pt.m(v,E)):pt&&(pt.d(1),pt=null),66057&Et&&(Tt=gt[9],(0,r.dvw)(),ae=(0,r.GQg)(ae,Et,St,1,gt,Tt,me,v,r.cly,ri,w,An),(0,r.gbL)()),69897&Et&&(bt=gt[8],(0,r.dvw)(),Ae=(0,r.GQg)(Ae,Et,wt,1,gt,bt,ke,v,r.cly,ti,M,Rt),(0,r.gbL)()),gt[12]<gt[8].length?Yt?Yt.p(gt,Et):((Yt=hi(gt)).c(),Yt.m(v,P)):Yt&&(Yt.d(1),Yt=null),gt[10]?Qt?(Qt.p(gt,Et),1024&Et&&(0,r.Ui)(Qt,1)):((Qt=Gn(gt)).c(),(0,r.Ui)(Qt,1),Qt.m(v,null)):Qt&&((0,r.dvw)(),(0,r.etI)(Qt,1,1,function(){Qt=null}),(0,r.gbL)())},i:function(gt){if(!U){for(var Et=0;Et<Ce.length;Et+=1)(0,r.Ui)(V[Et]);for(var en=0;en<Tt.length;en+=1)(0,r.Ui)(ae[en]);for(var ct=0;ct<bt.length;ct+=1)(0,r.Ui)(Ae[ct]);(0,r.Ui)(Qt),U=!0}},o:function(gt){for(var Et=0;Et<V.length;Et+=1)(0,r.etI)(V[Et]);for(var en=0;en<ae.length;en+=1)(0,r.etI)(ae[en]);for(var ct=0;ct<Ae.length;ct+=1)(0,r.etI)(Ae[ct]);(0,r.etI)(Qt),U=!1},d:function(gt){gt&&(0,r.ogt)(v);for(var Et=0;Et<V.length;Et+=1)V[Et].d();pt&&pt.d();for(var en=0;en<ae.length;en+=1)ae[en].d();for(var ct=0;ct<Ae.length;ct+=1)Ae[ct].d();Yt&&Yt.d(),Qt&&Qt.d()}}}function En(T){var v,y;return v=new si({props:{origData:T[16](T[19]),dataKey:T[19],keyPath:T[3]+"."+T[19],toggle:T[0]}}),{c:function(){(0,r.YCL)(v.$$.fragment)},m:function(E,w){(0,r.yef)(v,E,w),y=!0},p:function(E,w){var M={};128&w&&(M.origData=E[16](E[19])),128&w&&(M.dataKey=E[19]),136&w&&(M.keyPath=E[3]+"."+E[19]),1&w&&(M.toggle=E[0]),v.$set(M)},i:function(E){y||((0,r.Ui)(v.$$.fragment,E),y=!0)},o:function(E){(0,r.etI)(v.$$.fragment,E),y=!1},d:function(E){(0,r.vpE)(v,E)}}}function fn(T,v){var y,E,w,M=v[21]<v[11]&&En(v);return{key:T,first:null,c:function(){y=(0,r.cSb)(),M&&M.c(),E=(0,r.cSb)(),this.first=y},m:function(P,U){(0,r.$Tr)(P,y,U),M&&M.m(P,U),(0,r.$Tr)(P,E,U),w=!0},p:function(P,U){(v=P)[21]<v[11]?M?(M.p(v,U),2176&U&&(0,r.Ui)(M,1)):((M=En(v)).c(),(0,r.Ui)(M,1),M.m(E.parentNode,E)):M&&((0,r.dvw)(),(0,r.etI)(M,1,1,function(){M=null}),(0,r.gbL)())},i:function(P){w||((0,r.Ui)(M),w=!0)},o:function(P){(0,r.etI)(M),w=!1},d:function(P){P&&(0,r.ogt)(y),M&&M.d(P),P&&(0,r.ogt)(E)}}}function jn(T){var v,y,E,w,M=T[14](T[7].length-T[11])+"";return{c:function(){v=(0,r.bGB)("div"),y=(0,r.fLW)(M),(0,r.Ljt)(v,"class","vc-log-tree-loadmore")},m:function(P,U){(0,r.$Tr)(P,v,U),(0,r.R3I)(v,y),E||(w=(0,r.oLt)(v,"click",T[17]),E=!0)},p:function(P,U){2176&U&&M!==(M=P[14](P[7].length-P[11])+"")&&(0,r.rTO)(y,M)},d:function(P){P&&(0,r.ogt)(v),E=!1,w()}}}function ri(T,v){var y,E,w;return E=new si({props:{origData:v[16](v[19]),dataKey:String(v[19]),keyType:"symbol",keyPath:v[3]+"["+String(v[19])+"]",toggle:v[0]}}),{key:T,first:null,c:function(){y=(0,r.cSb)(),(0,r.YCL)(E.$$.fragment),this.first=y},m:function(M,P){(0,r.$Tr)(M,y,P),(0,r.yef)(E,M,P),w=!0},p:function(M,P){v=M;var U={};512&P&&(U.origData=v[16](v[19])),512&P&&(U.dataKey=String(v[19])),520&P&&(U.keyPath=v[3]+"["+String(v[19])+"]"),1&P&&(U.toggle=v[0]),E.$set(U)},i:function(M){w||((0,r.Ui)(E.$$.fragment,M),w=!0)},o:function(M){(0,r.etI)(E.$$.fragment,M),w=!1},d:function(M){M&&(0,r.ogt)(y),(0,r.vpE)(E,M)}}}function ui(T){var v,y;return v=new si({props:{origData:T[16](T[19]),dataKey:T[19],keyType:"private",keyPath:T[3]+"."+T[19],toggle:T[0]}}),{c:function(){(0,r.YCL)(v.$$.fragment)},m:function(E,w){(0,r.yef)(v,E,w),y=!0},p:function(E,w){var M={};256&w&&(M.origData=E[16](E[19])),256&w&&(M.dataKey=E[19]),264&w&&(M.keyPath=E[3]+"."+E[19]),1&w&&(M.toggle=E[0]),v.$set(M)},i:function(E){y||((0,r.Ui)(v.$$.fragment,E),y=!0)},o:function(E){(0,r.etI)(v.$$.fragment,E),y=!1},d:function(E){(0,r.vpE)(v,E)}}}function ti(T,v){var y,E,w,M=v[21]<v[12]&&ui(v);return{key:T,first:null,c:function(){y=(0,r.cSb)(),M&&M.c(),E=(0,r.cSb)(),this.first=y},m:function(P,U){(0,r.$Tr)(P,y,U),M&&M.m(P,U),(0,r.$Tr)(P,E,U),w=!0},p:function(P,U){(v=P)[21]<v[12]?M?(M.p(v,U),4352&U&&(0,r.Ui)(M,1)):((M=ui(v)).c(),(0,r.Ui)(M,1),M.m(E.parentNode,E)):M&&((0,r.dvw)(),(0,r.etI)(M,1,1,function(){M=null}),(0,r.gbL)())},i:function(P){w||((0,r.Ui)(M),w=!0)},o:function(P){(0,r.etI)(M),w=!1},d:function(P){P&&(0,r.ogt)(y),M&&M.d(P),P&&(0,r.ogt)(E)}}}function hi(T){var v,y,E,w,M=T[14](T[8].length-T[12])+"";return{c:function(){v=(0,r.bGB)("div"),y=(0,r.fLW)(M),(0,r.Ljt)(v,"class","vc-log-tree-loadmore")},m:function(P,U){(0,r.$Tr)(P,v,U),(0,r.R3I)(v,y),E||(w=(0,r.oLt)(v,"click",T[18]),E=!0)},p:function(P,U){4352&U&&M!==(M=P[14](P[8].length-P[12])+"")&&(0,r.rTO)(y,M)},d:function(P){P&&(0,r.ogt)(v),E=!1,w()}}}function Gn(T){var v,y;return v=new si({props:{origData:T[16]("__proto__"),dataKey:"__proto__",keyType:"private",keyPath:T[3]+".__proto__",toggle:T[0]}}),{c:function(){(0,r.YCL)(v.$$.fragment)},m:function(E,w){(0,r.yef)(v,E,w),y=!0},p:function(E,w){var M={};8&w&&(M.keyPath=E[3]+".__proto__"),1&w&&(M.toggle=E[0]),v.$set(M)},i:function(E){y||((0,r.Ui)(v.$$.fragment,E),y=!0)},o:function(E){(0,r.etI)(v.$$.fragment,E),y=!1},d:function(E){(0,r.vpE)(v,E)}}}function di(T){var v,y,E,w,M,P,U;E=new ge({props:{origData:T[1],dataKey:T[2],keyType:T[4]}});var V=T[6]&&T[5]&&Sn(T);return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("div"),(0,r.YCL)(E.$$.fragment),w=(0,r.DhX)(),V&&V.c(),(0,r.Ljt)(y,"class","vc-log-tree-node"),(0,r.Ljt)(v,"class","vc-log-tree"),(0,r.Ljt)(v,"data-keypath",T[3]),(0,r.VHj)(v,"vc-toggle",T[5]),(0,r.VHj)(v,"vc-is-tree",T[6])},m:function(j,ae){(0,r.$Tr)(j,v,ae),(0,r.R3I)(v,y),(0,r.yef)(E,y,null),(0,r.R3I)(v,w),V&&V.m(v,null),M=!0,P||(U=(0,r.oLt)(y,"click",(0,r.XET)(T[15])),P=!0)},p:function(j,ae){var me=ae[0],Ae={};2&me&&(Ae.origData=j[1]),4&me&&(Ae.dataKey=j[2]),16&me&&(Ae.keyType=j[4]),E.$set(Ae),j[6]&&j[5]?V?(V.p(j,me),96&me&&(0,r.Ui)(V,1)):((V=Sn(j)).c(),(0,r.Ui)(V,1),V.m(v,null)):V&&((0,r.dvw)(),(0,r.etI)(V,1,1,function(){V=null}),(0,r.gbL)()),(!M||8&me)&&(0,r.Ljt)(v,"data-keypath",j[3]),32&me&&(0,r.VHj)(v,"vc-toggle",j[5]),64&me&&(0,r.VHj)(v,"vc-is-tree",j[6])},i:function(j){M||((0,r.Ui)(E.$$.fragment,j),(0,r.Ui)(V),M=!0)},o:function(j){(0,r.etI)(E.$$.fragment,j),(0,r.etI)(V),M=!1},d:function(j){j&&(0,r.ogt)(v),(0,r.vpE)(E),V&&V.d(),P=!1,U()}}}function Ei(T,v,y){var E,w,M,P=v.origData,U=v.dataKey,V=U===void 0?void 0:U,j=v.keyPath,ae=j===void 0?"":j,me=v.keyType,Ae=me===void 0?"":me,ke=v.toggle,Ce=ke===void 0?{}:ke,He=!1,je=!1,rt=!1,lt=50,pt=50;(0,l.H3)(function(){Ft.use()}),(0,l.ev)(function(){Ft.unuse()});var Tt=function(St){St==="enum"?y(11,lt+=50):St==="nonEnum"&&y(12,pt+=50)};return T.$$set=function(St){"origData"in St&&y(1,P=St.origData),"dataKey"in St&&y(2,V=St.dataKey),"keyPath"in St&&y(3,ae=St.keyPath),"keyType"in St&&y(4,Ae=St.keyType),"toggle"in St&&y(0,Ce=St.toggle)},T.$$.update=function(){1003&T.$$.dirty&&(y(5,He=Ce[ae]||!1),y(6,je=!(P instanceof H.Tg)&&(e.kJ(P)||e.Kn(P))),je&&He&&(y(7,E=E||e.qr(e.MH(P))),y(8,w=w||e.qr(e.QK(P))),y(9,M=M||e._D(P)),y(10,rt=e.Kn(P)&&w.indexOf("__proto__")===-1)))},[Ce,P,V,ae,Ae,He,je,E,w,M,rt,lt,pt,Tt,function(St){return"(..."+St+" Key"+(St>1?"s":"")+" Left)"},function(){y(5,He=!He),y(0,Ce[ae]=He,Ce)},function(St){try{return P[St]}catch{return new H.Tg}},function(){return Tt("enum")},function(){return Tt("nonEnum")}]}var si=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,Ei,di,r.AqN,{origData:1,dataKey:2,keyPath:3,keyType:4,toggle:0}),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"origData",get:function(){return this.$$.ctx[1]},set:function(y){this.$$set({origData:y}),(0,r.yl1)()}},{key:"dataKey",get:function(){return this.$$.ctx[2]},set:function(y){this.$$set({dataKey:y}),(0,r.yl1)()}},{key:"keyPath",get:function(){return this.$$.ctx[3]},set:function(y){this.$$set({keyPath:y}),(0,r.yl1)()}},{key:"keyType",get:function(){return this.$$.ctx[4]},set:function(y){this.$$set({keyType:y}),(0,r.yl1)()}},{key:"toggle",get:function(){return this.$$.ctx[0]},set:function(y){this.$$set({toggle:y}),(0,r.yl1)()}}]),v}(r.f_C),Ci=si,Zn=__webpack_require__(7147),ni={};Zn.Z&&Zn.Z.locals&&(ni.locals=Zn.Z.locals);var oi,ai=0,re={};re.styleTagTransform=L(),re.setAttributes=B(),re.insert=_().bind(null,"head"),re.domAPI=f(),re.insertStyleElement=C(),ni.use=function(T){return re.options=T||{},ai++||(oi=u()(Zn.Z,re)),ni},ni.unuse=function(){ai>0&&!--ai&&(oi(),oi=null)};var Le=ni;function Xe(T,v,y){var E=T.slice();return E[9]=v[y],E[11]=y,E}function Ke(T,v,y){var E=T.slice();return E[12]=v[y],E}function Ue(T){for(var v,y,E,w,M,P,U,V,j,ae,me,Ae,ke,Ce=[],He=new Map,je=T[0].groupLevel&&ht(T),rt=T[2]>0&&Bt(),lt=T[1]&&vt(T),pt=T[0].repeated&&Lt(T),Tt=T[0].data,St=function(bt){return bt[11]},$t=0;$t<Tt.length;$t+=1){var Wt=Xe(T,Tt,$t),qt=St(Wt);He.set(qt,Ce[$t]=zt(qt,Wt))}return j=new it({props:{handler:T[6]}}),{c:function(){v=(0,r.bGB)("div"),je&&je.c(),y=(0,r.DhX)(),rt&&rt.c(),E=(0,r.DhX)(),lt&&lt.c(),w=(0,r.DhX)(),pt&&pt.c(),M=(0,r.DhX)(),P=(0,r.bGB)("div");for(var bt=0;bt<Ce.length;bt+=1)Ce[bt].c();U=(0,r.DhX)(),V=(0,r.bGB)("div"),(0,r.YCL)(j.$$.fragment),(0,r.Ljt)(P,"class","vc-log-content"),(0,r.Ljt)(V,"class","vc-logrow-icon"),(0,r.Ljt)(v,"class",ae="vc-log-row vc-log-"+T[0].type),(0,r.VHj)(v,"vc-log-input",T[0].cmdType==="input"),(0,r.VHj)(v,"vc-log-output",T[0].cmdType==="output"),(0,r.VHj)(v,"vc-log-group",T[2]>0),(0,r.VHj)(v,"vc-toggle",T[2]===1)},m:function(bt,wt){(0,r.$Tr)(bt,v,wt),je&&je.m(v,null),(0,r.R3I)(v,y),rt&&rt.m(v,null),(0,r.R3I)(v,E),lt&&lt.m(v,null),(0,r.R3I)(v,w),pt&&pt.m(v,null),(0,r.R3I)(v,M),(0,r.R3I)(v,P);for(var jt=0;jt<Ce.length;jt+=1)Ce[jt].m(P,null);(0,r.R3I)(v,U),(0,r.R3I)(v,V),(0,r.yef)(j,V,null),me=!0,Ae||(ke=(0,r.oLt)(v,"click",T[5]),Ae=!0)},p:function(bt,wt){bt[0].groupLevel?je?je.p(bt,wt):((je=ht(bt)).c(),je.m(v,y)):je&&(je.d(1),je=null),bt[2]>0?rt||((rt=Bt()).c(),rt.m(v,E)):rt&&(rt.d(1),rt=null),bt[1]?lt?lt.p(bt,wt):((lt=vt(bt)).c(),lt.m(v,w)):lt&&(lt.d(1),lt=null),bt[0].repeated?pt?pt.p(bt,wt):((pt=Lt(bt)).c(),pt.m(v,M)):pt&&(pt.d(1),pt=null),17&wt&&(Tt=bt[0].data,(0,r.dvw)(),Ce=(0,r.GQg)(Ce,wt,St,1,bt,Tt,He,P,r.cly,zt,null,Xe),(0,r.gbL)()),(!me||1&wt&&ae!==(ae="vc-log-row vc-log-"+bt[0].type))&&(0,r.Ljt)(v,"class",ae),1&wt&&(0,r.VHj)(v,"vc-log-input",bt[0].cmdType==="input"),1&wt&&(0,r.VHj)(v,"vc-log-output",bt[0].cmdType==="output"),5&wt&&(0,r.VHj)(v,"vc-log-group",bt[2]>0),5&wt&&(0,r.VHj)(v,"vc-toggle",bt[2]===1)},i:function(bt){if(!me){for(var wt=0;wt<Tt.length;wt+=1)(0,r.Ui)(Ce[wt]);(0,r.Ui)(j.$$.fragment,bt),me=!0}},o:function(bt){for(var wt=0;wt<Ce.length;wt+=1)(0,r.etI)(Ce[wt]);(0,r.etI)(j.$$.fragment,bt),me=!1},d:function(bt){bt&&(0,r.ogt)(v),je&&je.d(),rt&&rt.d(),lt&&lt.d(),pt&&pt.d();for(var wt=0;wt<Ce.length;wt+=1)Ce[wt].d();(0,r.vpE)(j),Ae=!1,ke()}}}function ht(T){for(var v,y=new Array(T[0].groupLevel),E=[],w=0;w<y.length;w+=1)E[w]=yt(Ke(T,y,w));return{c:function(){for(var M=0;M<E.length;M+=1)E[M].c();v=(0,r.cSb)()},m:function(M,P){for(var U=0;U<E.length;U+=1)E[U].m(M,P);(0,r.$Tr)(M,v,P)},p:function(M,P){if(1&P){var U;for(y=new Array(M[0].groupLevel),U=0;U<y.length;U+=1){var V=Ke(M,y,U);E[U]?E[U].p(V,P):(E[U]=yt(),E[U].c(),E[U].m(v.parentNode,v))}for(;U<E.length;U+=1)E[U].d(1);E.length=y.length}},d:function(M){(0,r.RMB)(E,M),M&&(0,r.ogt)(v)}}}function yt(T){var v;return{c:function(){v=(0,r.bGB)("i"),(0,r.Ljt)(v,"class","vc-log-padding")},m:function(y,E){(0,r.$Tr)(y,v,E)},p:r.ZTd,d:function(y){y&&(0,r.ogt)(v)}}}function Bt(T){var v;return{c:function(){v=(0,r.bGB)("div"),(0,r.Ljt)(v,"class","vc-log-group-toggle")},m:function(y,E){(0,r.$Tr)(y,v,E)},d:function(y){y&&(0,r.ogt)(v)}}}function vt(T){var v,y;return{c:function(){v=(0,r.bGB)("div"),y=(0,r.fLW)(T[3]),(0,r.Ljt)(v,"class","vc-log-time")},m:function(E,w){(0,r.$Tr)(E,v,w),(0,r.R3I)(v,y)},p:function(E,w){8&w&&(0,r.rTO)(y,E[3])},d:function(E){E&&(0,r.ogt)(v)}}}function Lt(T){var v,y,E,w=T[0].repeated+"";return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("i"),E=(0,r.fLW)(w),(0,r.Ljt)(v,"class","vc-log-repeat")},m:function(M,P){(0,r.$Tr)(M,v,P),(0,r.R3I)(v,y),(0,r.R3I)(y,E)},p:function(M,P){1&P&&w!==(w=M[0].repeated+"")&&(0,r.rTO)(E,w)},d:function(M){M&&(0,r.ogt)(v)}}}function Pt(T){var v,y;return v=new ge({props:{origData:T[9].origData,style:T[9].style}}),{c:function(){(0,r.YCL)(v.$$.fragment)},m:function(E,w){(0,r.yef)(v,E,w),y=!0},p:function(E,w){var M={};1&w&&(M.origData=E[9].origData),1&w&&(M.style=E[9].style),v.$set(M)},i:function(E){y||((0,r.Ui)(v.$$.fragment,E),y=!0)},o:function(E){(0,r.etI)(v.$$.fragment,E),y=!1},d:function(E){(0,r.vpE)(v,E)}}}function Mt(T){var v,y;return v=new Ci({props:{origData:T[9].origData,keyPath:String(T[11]),toggle:T[0].toggle}}),{c:function(){(0,r.YCL)(v.$$.fragment)},m:function(E,w){(0,r.yef)(v,E,w),y=!0},p:function(E,w){var M={};1&w&&(M.origData=E[9].origData),1&w&&(M.keyPath=String(E[11])),1&w&&(M.toggle=E[0].toggle),v.$set(M)},i:function(E){y||((0,r.Ui)(v.$$.fragment,E),y=!0)},o:function(E){(0,r.etI)(v.$$.fragment,E),y=!1},d:function(E){(0,r.vpE)(v,E)}}}function zt(T,v){var y,E,w,M,P,U,V=[Mt,Pt],j=[];function ae(me,Ae){return 1&Ae&&(E=null),E==null&&(E=!!me[4](me[9].origData)),E?0:1}return w=ae(v,-1),M=j[w]=V[w](v),{key:T,first:null,c:function(){y=(0,r.cSb)(),M.c(),P=(0,r.cSb)(),this.first=y},m:function(me,Ae){(0,r.$Tr)(me,y,Ae),j[w].m(me,Ae),(0,r.$Tr)(me,P,Ae),U=!0},p:function(me,Ae){var ke=w;(w=ae(v=me,Ae))===ke?j[w].p(v,Ae):((0,r.dvw)(),(0,r.etI)(j[ke],1,1,function(){j[ke]=null}),(0,r.gbL)(),(M=j[w])?M.p(v,Ae):(M=j[w]=V[w](v)).c(),(0,r.Ui)(M,1),M.m(P.parentNode,P))},i:function(me){U||((0,r.Ui)(M),U=!0)},o:function(me){(0,r.etI)(M),U=!1},d:function(me){me&&(0,r.ogt)(y),j[w].d(me),me&&(0,r.ogt)(P)}}}function Jt(T){var v,y,E=T[0]&&Ue(T);return{c:function(){E&&E.c(),v=(0,r.cSb)()},m:function(w,M){E&&E.m(w,M),(0,r.$Tr)(w,v,M),y=!0},p:function(w,M){var P=M[0];w[0]?E?(E.p(w,P),1&P&&(0,r.Ui)(E,1)):((E=Ue(w)).c(),(0,r.Ui)(E,1),E.m(v.parentNode,v)):E&&((0,r.dvw)(),(0,r.etI)(E,1,1,function(){E=null}),(0,r.gbL)())},i:function(w){y||((0,r.Ui)(E),y=!0)},o:function(w){(0,r.etI)(E),y=!1},d:function(w){E&&E.d(w),w&&(0,r.ogt)(v)}}}function hn(T,v,y){var E=v.log,w=v.showTimestamps,M=w!==void 0&&w,P=v.groupHeader,U=P===void 0?0:P,V=(0,l.x)(),j="",ae=function(me,Ae){var ke="000"+me;return ke.substring(ke.length-Ae)};return(0,l.H3)(function(){Le.use()}),(0,l.ev)(function(){Le.unuse()}),T.$$set=function(me){"log"in me&&y(0,E=me.log),"showTimestamps"in me&&y(1,M=me.showTimestamps),"groupHeader"in me&&y(2,U=me.groupHeader)},T.$$.update=function(){if(3&T.$$.dirty&&M){var me=new Date(E.date);y(3,j=ae(me.getHours(),2)+":"+ae(me.getMinutes(),2)+":"+ae(me.getSeconds(),2)+":"+ae(me.getMilliseconds(),3))}},[E,M,U,j,function(me){return!(me instanceof H.Tg)&&(e.kJ(me)||e.Kn(me))},function(){U>0&&V("groupCollapsed",{groupLabel:E.groupLabel,groupHeader:U===1?2:1,isGroupCollapsed:U===1})},function(){var me=[];try{for(var Ae=0;Ae<E.data.length;Ae++)e.HD(E.data[Ae].origData)||e.hj(E.data[Ae].origData)?me.push(E.data[Ae].origData):me.push(e.hZ(E.data[Ae].origData,{maxDepth:10,keyMaxLen:1e4,pretty:!1,standardJSON:!0}))}catch{}return me.join(" ")}]}var sn=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,hn,Jt,r.AqN,{log:0,showTimestamps:1,groupHeader:2}),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"log",get:function(){return this.$$.ctx[0]},set:function(y){this.$$set({log:y}),(0,r.yl1)()}},{key:"showTimestamps",get:function(){return this.$$.ctx[1]},set:function(y){this.$$set({showTimestamps:y}),(0,r.yl1)()}},{key:"groupHeader",get:function(){return this.$$.ctx[2]},set:function(y){this.$$set({groupHeader:y}),(0,r.yl1)()}}]),v}(r.f_C),Zt=sn,Dt=__webpack_require__(3903),nn=__webpack_require__(3327),Ht={};nn.Z&&nn.Z.locals&&(Ht.locals=nn.Z.locals);var Bn,li=0,pn={};pn.styleTagTransform=L(),pn.setAttributes=B(),pn.insert=_().bind(null,"head"),pn.domAPI=f(),pn.insertStyleElement=C(),Ht.use=function(T){return pn.options=T||{},li++||(Bn=u()(nn.Z,pn)),Ht},Ht.unuse=function(){li>0&&!--li&&(Bn(),Bn=null)};var gi=Ht,an=__webpack_require__(4264),Vt=__webpack_require__.n(an),zn=function(){function T(y){console.debug("[vConsole] `ResizeObserver` is not supported in the browser, vConsole cannot render correctly."),y([{contentRect:{height:30}}],this)}var v=T.prototype;return v.disconnect=function(){},v.observe=function(y,E){},v.unobserve=function(y){},T}(),Cn=function(){return typeof window.ResizeObserver=="function"},wn=function(){return window.ResizeObserver||zn};function Mi(T){var v,y,E=T[6].default,w=(0,r.nuO)(E,T,T[5],null);return{c:function(){v=(0,r.bGB)("div"),w&&w.c(),(0,r.Ljt)(v,"class","vc-scroller-item"),(0,r.czc)(v,"display",T[0]?"block":"none",!1),(0,r.czc)(v,"top",T[3]?T[1]+"px":"auto",!1)},m:function(M,P){(0,r.$Tr)(M,v,P),w&&w.m(v,null),T[7](v),y=!0},p:function(M,P){var U=P[0];w&&w.p&&(!y||32&U)&&(0,r.kmG)(w,E,M,M[5],y?(0,r.u2N)(E,M[5],U,null):(0,r.VOJ)(M[5]),null),1&U&&(0,r.czc)(v,"display",M[0]?"block":"none",!1),2&U&&(0,r.czc)(v,"top",M[3]?M[1]+"px":"auto",!1)},i:function(M){y||((0,r.Ui)(w,M),y=!0)},o:function(M){(0,r.etI)(w,M),y=!1},d:function(M){M&&(0,r.ogt)(v),w&&w.d(M),T[7](null)}}}function fi(T,v,y){var E,w=v.$$slots,M=w===void 0?{}:w,P=v.$$scope,U=v.show,V=U===void 0?!Cn():U,j=v.top,ae=v.onResize,me=ae===void 0?function(){}:ae,Ae=null,ke=Cn();return(0,l.H3)(function(){if(V&&me(E.getBoundingClientRect().height),ke){var Ce=wn();(Ae=new Ce(function(He){var je=He[0];V&&me(je.contentRect.height)})).observe(E)}}),(0,l.ev)(function(){ke&&Ae.disconnect()}),T.$$set=function(Ce){"show"in Ce&&y(0,V=Ce.show),"top"in Ce&&y(1,j=Ce.top),"onResize"in Ce&&y(4,me=Ce.onResize),"$$scope"in Ce&&y(5,P=Ce.$$scope)},[V,j,E,ke,me,P,M,function(Ce){r.VnY[Ce?"unshift":"push"](function(){y(2,E=Ce)})}]}var Us=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,fi,Mi,r.N8,{show:0,top:1,onResize:4}),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"show",get:function(){return this.$$.ctx[0]},set:function(y){this.$$set({show:y}),(0,r.yl1)()}},{key:"top",get:function(){return this.$$.ctx[1]},set:function(y){this.$$set({top:y}),(0,r.yl1)()}},{key:"onResize",get:function(){return this.$$.ctx[4]},set:function(y){this.$$set({onResize:y}),(0,r.yl1)()}}]),v}(r.f_C),Os=Us,Gs=function(){function T(){this._x=0,this._endX=0,this._v=0,this._startTime=0,this._endTime=0}var v=T.prototype;return v.set=function(y,E,w,M){this._x=y,this._endX=E,this._v=(E-y)/w,this._startTime=M||Date.now(),this._endTime=this._startTime+w},v.x=function(y){if(this.done(y))return this._endX;var E=y-this._startTime;return this._x+this._v*E},v.dx=function(y){return this.done(y)?0:this._v},v.done=function(y){return y>=this._endTime},T}(),zs=function(){function T(y){this._drag=void 0,this._dragLog=void 0,this._x=0,this._v=0,this._startTime=0,this._drag=y,this._dragLog=Math.log(y)}var v=T.prototype;return v.set=function(y,E,w){this._x=y,this._v=E,this._startTime=w||Date.now()},v.x=function(y){var E=(y-this._startTime)/1e3;return this._x+this._v*Math.pow(this._drag,E)/this._dragLog-this._v/this._dragLog},v.dx=function(y){var E=(y-this._startTime)/1e3;return this._v*Math.pow(this._drag,E)},v.done=function(y){return Math.abs(this.dx(y))<3},T}(),Sr=function(T,v){return T>v-.1&&T<v+.1},xr=function(T){return Sr(T,0)},Vs=function(){function T(y,E,w){this._solver=void 0,this._solution=void 0,this._endPosition=void 0,this._startTime=void 0,this._solver=function(M,P,U){var V=U,j=M,ae=P,me=V*V-4*j*ae;if(me==0){var Ae=-V/(2*j);return function(rt,lt){var pt=rt,Tt=lt/(Ae*rt);return{x:function(St){return(pt+Tt*St)*Math.pow(Math.E,Ae*St)},dx:function(St){return(Ae*(pt+Tt*St)+Tt)*Math.pow(Math.E,Ae*St)}}}}if(me>0){var ke=(-V-Math.sqrt(me))/(2*j),Ce=(-V+Math.sqrt(me))/(2*j);return function(rt,lt){var pt=(lt-ke*rt)/(Ce-ke),Tt=rt-pt;return{x:function(St){return Tt*Math.pow(Math.E,ke*St)+pt*Math.pow(Math.E,Ce*St)},dx:function(St){return Tt*ke*Math.pow(Math.E,ke*St)+pt*Ce*Math.pow(Math.E,Ce*St)}}}}var He=Math.sqrt(4*j*ae-V*V)/(2*j),je=-V/2*j;return function(rt,lt){var pt=rt,Tt=(lt-je*rt)/He;return{x:function(St){return Math.pow(Math.E,je*St)*(pt*Math.cos(He*St)+Tt*Math.sin(He*St))},dx:function(St){var $t=Math.pow(Math.E,je*St),Wt=Math.cos(He*St),qt=Math.sin(He*St);return $t*(Tt*He*Wt-pt*He*qt)+je*$t*(Tt*qt+pt*Wt)}}}}(y,E,w),this._solution=null,this._endPosition=0,this._startTime=0}var v=T.prototype;return v.x=function(y){if(!this._solution)return 0;var E=(y-this._startTime)/1e3;return this._endPosition+this._solution.x(E)},v.dx=function(y){if(!this._solution)return 0;var E=(y-this._startTime)/1e3;return this._solution.dx(E)},v.set=function(y,E,w,M){M||(M=Date.now()),this._endPosition=y,E==y&&xr(w)||(this._solution=this._solver(E-y,w),this._startTime=M)},v.done=function(y){return y||(y=Date.now()),Sr(this.x(y),this._endPosition)&&xr(this.dx(y))},T}(),Hs=function(){function T(y,E){this._enableSpring=E,this._getExtend=void 0,this._friction=new zs(.05),this._spring=new Vs(1,90,20),this._toEdge=!1,this._getExtend=y}var v=T.prototype;return v.set=function(y,E,w){if(w===void 0&&(w=Date.now()),this._friction.set(y,E,w),y>0&&E>=0)this._toEdge=!0,this._enableSpring&&this._spring.set(0,y,E,w);else{var M=this._getExtend();y<-M&&E<=0?(this._toEdge=!0,this._enableSpring&&this._spring.set(-M,y,E,w)):this._toEdge=!1}},v.x=function(y){if(this._enableSpring&&this._toEdge)return this._spring.x(y);var E=this._friction.x(y),w=this._friction.dx(y);if(E>0&&w>=0){if(this._toEdge=!0,!this._enableSpring)return 0;this._spring.set(0,E,w,y)}else{var M=this._getExtend();if(E<-M&&w<=0){if(this._toEdge=!0,!this._enableSpring)return-M;this._spring.set(-M,E,w,y)}}return E},v.dx=function(y){return this._toEdge?this._enableSpring?this._spring.dx(y):0:this._friction.dx(y)},v.done=function(y){return this._toEdge?!this._enableSpring||this._spring.done(y):this._friction.done(y)},T}();function sr(T,v){var y,E;return function w(){if(!E){var M=Date.now();v(M),T.done(M)||(y=requestAnimationFrame(w))}}(),{cancel:function(){cancelAnimationFrame(y),E=!0}}}var $s=function(){function T(y,E){this._updatePosition=E,this._scrollModel=void 0,this._linearModel=void 0,this._startPosition=0,this._position=0,this._animate=null,this._getExtent=void 0,this._getExtent=y,this._scrollModel=new Hs(y,!1),this._linearModel=new Gs}var v=T.prototype;return v.onTouchStart=function(){var y=this._position;if(y>0)y*=0;else{var E=this._getExtent();y<-E&&(y=0*(y+E)-E)}this._startPosition=this._position=y,this._animate&&(this._animate.cancel(),this._animate=null),this._updatePosition(-y)},v.onTouchMove=function(y,E){var w=E+this._startPosition;if(w>0)w*=0;else{var M=this._getExtent();w<-M&&(w=0*(w+M)-M)}this._position=w,this._updatePosition(-w)},v.onTouchEnd=function(y,E,w,M){var P=this,U=E+this._startPosition;if(U>0)U*=0;else{var V=this._getExtent();U<-V&&(U=0*(U+V)-V)}if(this._position=U,this._updatePosition(-U),!(Math.abs(E)<=.1&&Math.abs(M)<=.1)){var j=this._scrollModel;j.set(U,M),this._animate=sr(j,function(ae){var me=P._position=j.x(ae);P._updatePosition(-me)})}},v.onTouchCancel=function(){var y=this,E=this._position;if(E>0)E*=0;else{var w=this._getExtent();E<-w&&(E=0*(E+w)-w)}this._position=E;var M=this._scrollModel;M.set(E,0),this._animate=sr(M,function(P){var U=y._position=M.x(P);y._updatePosition(-U)})},v.onWheel=function(y,E){var w=this._position-E;if(this._animate&&(this._animate.cancel(),this._animate=null),w>0)w=0;else{var M=this._getExtent();w<-M&&(w=-M)}this._position=w,this._updatePosition(-w)},v.getPosition=function(){return-this._position},v.updatePosition=function(y){var E=-y-this._position;this._startPosition+=E,this._position+=E;var w=this._position;this._updatePosition(-w);var M=this._scrollModel,P=Date.now();if(!M.done(P)){var U=M.dx(P);M.set(w,U,P)}},v.scrollTo=function(y,E){var w=this;if(this._animate&&(this._animate.cancel(),this._animate=null),E>0){var M=this._linearModel;M.set(this._position,-y,E),this._animate=sr(this._linearModel,function(P){var U=w._position=M.x(P);w._updatePosition(-U)})}else this._updatePosition(y)},T}();function Ws(T,v){var y=typeof Symbol<"u"&&T[Symbol.iterator]||T["@@iterator"];if(y)return(y=y.call(T)).next.bind(y);if(Array.isArray(T)||(y=function(w,M){if(w){if(typeof w=="string")return br(w,M);var P=Object.prototype.toString.call(w).slice(8,-1);if(P==="Object"&&w.constructor&&(P=w.constructor.name),P==="Map"||P==="Set")return Array.from(w);if(P==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(P))return br(w,M)}}(T))||v){y&&(T=y);var E=0;return function(){return E>=T.length?{done:!0}:{done:!1,value:T[E++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function br(T,v){(v==null||v>T.length)&&(v=T.length);for(var y=0,E=new Array(v);y<v;y++)E[y]=T[y];return E}var Ys=function(T){var v=null,y=!1,E=function w(){y=!1,T(),v=requestAnimationFrame(function(){v=null,y&&w()})};return{trigger:function(){v===null?E():y=!0},cancel:function(){v&&(cancelAnimationFrame(v),y=!1,v=null)}}},qs=function(){function T(v){var y=this;this._handler=v,this._touchId=null,this._startX=0,this._startY=0,this._historyX=[],this._historyY=[],this._historyTime=[],this._wheelDeltaX=0,this._wheelDeltaY=0,this._onTouchMove=function(){var E=y._historyX[y._historyX.length-1],w=y._historyY[y._historyY.length-1];y._handler.onTouchMove(E,w)},this._onWheel=Ys(function(){var E=y._wheelDeltaX,w=y._wheelDeltaY;y._wheelDeltaX=0,y._wheelDeltaY=0,y._handler.onWheel(E,w)}),this.handleTouchStart=function(E){var w;if(((w=E.target.dataset)==null?void 0:w.scrollable)!=="1"){E.preventDefault();var M=E.touches[0];y._touchId=M.identifier,y._startX=M.pageX,y._startY=M.pageY,y._historyX=[0],y._historyY=[0],y._historyTime=[Date.now()],y._handler.onTouchStart()}},this.handleTouchMove=function(E){var w;if(((w=E.target.dataset)==null?void 0:w.scrollable)!=="1"){E.preventDefault();var M=y._getTouchDelta(E);M!==null&&(y._historyX.push(M.x),y._historyY.push(M.y),y._historyTime.push(Date.now()),y._onTouchMove())}},this.handleTouchEnd=function(E){var w;if(((w=E.target.dataset)==null?void 0:w.scrollable)!=="1"){E.preventDefault();var M=y._getTouchDelta(E);if(M!==null){for(var P=0,U=0,V=Date.now(),j=M.y,ae=M.x,me=y._historyTime,Ae=me.length-1;Ae>0;Ae-=1){var ke=V-me[Ae];if(ke>30){P=1e3*(ae-y._historyX[Ae])/ke,U=1e3*(j-y._historyY[Ae])/ke;break}}y._touchId=null,y._handler.onTouchEnd(M.x,M.y,P,U)}}},this.handleTouchCancel=function(E){var w;((w=E.target.dataset)==null?void 0:w.scrollable)!=="1"&&(E.preventDefault(),y._getTouchDelta(E)!==null&&(y._touchId=null,y._handler.onTouchCancel()))},this.handleWheel=function(E){var w;((w=E.target.dataset)==null?void 0:w.scrollable)!=="1"&&(E.preventDefault(),y._wheelDeltaX+=E.deltaX,y._wheelDeltaY+=E.deltaY,y._onWheel.trigger())}}return T.prototype._getTouchDelta=function(v){if(this._touchId===null)return null;for(var y,E=Ws(v.changedTouches);!(y=E()).done;){var w=y.value;if(w.identifier===this._touchId)return{x:w.pageX-this._startX,y:w.pageY-this._startY}}return null},T}(),Ui=__webpack_require__(1142),Ri={};Ui.Z&&Ui.Z.locals&&(Ri.locals=Ui.Z.locals);var or,ar=0,vi={};vi.styleTagTransform=L(),vi.setAttributes=B(),vi.insert=_().bind(null,"head"),vi.domAPI=f(),vi.insertStyleElement=C(),Ri.use=function(T){return vi.options=T||{},ar++||(or=u()(Ui.Z,vi)),Ri},Ri.unuse=function(){ar>0&&!--ar&&(or(),or=null)};var Br=Ri,js=function(){var T=[],v=[],y=0,E=0,w=0,M=0,P=0;return function(U,V,j){if(w===U&&M===V&&P===j)return T;var ae=v.length,me=V<=E?Math.max(0,Math.min(V,Math.max(y,Math.min(E-1,j-ae)))):V,Ae=y<=j?Math.max(j,Math.min(U,Math.max(y+1,Math.min(E,me+ae)))):j;if(ae===0||Ae-me<ae){for(var ke=T.length=v.length=j-V,Ce=0;Ce<ke;Ce+=1)v[Ce]=Ce,T[Ce]={key:Ce,index:Ce+V,show:!0};return y=V,E=j,w=U,M=V,P=j,T}var He=0,je=0,rt=0,lt=0;E<me||Ae<y?(rt=me,lt=me+ae):y<me?(je=me-y,rt=me,lt=me+ae):Ae<E?(je=ae-(E-Ae),rt=Ae-ae,lt=Ae):me<=y&&E<=Ae&&(rt=y,lt=E);for(var pt=me;pt<V;pt+=1,He+=1){var Tt=v[(je+He)%ae],St=T[pt-me];St.key=Tt,St.index=pt,St.show=!1}for(var $t=V,Wt=0;$t<j;$t+=1){var qt=void 0;rt<=$t&&$t<lt?(qt=v[(je+He)%ae],He+=1):(qt=ae+Wt,Wt+=1);var bt=$t-me;if(bt<T.length){var wt=T[bt];wt.key=qt,wt.index=$t,wt.show=!0}else T.push({key:qt,index:$t,show:!0})}for(var jt=j;jt<Ae;jt+=1,He+=1){var yn=v[(je+He)%ae],Xt=T[jt-me];Xt.key=yn,Xt.index=jt,Xt.show=!1}for(var Yt=0;Yt<T.length;Yt+=1)v[Yt]=T[Yt].key;return T.sort(function(Qt,gt){return Qt.key-gt.key}),y=me,E=Ae,w=U,M=V,P=j,T}},Xs=r.lig.Map,Ks=function(T){return{}},wr=function(T){return{}},Js=function(T){return{}},Tr=function(T){return{}};function Mr(T,v,y){var E=T.slice();return E[53]=v[y],E[55]=y,E}var Zs=function(T){return{item:1025&T[0]}},Rr=function(T){return{item:T[0][T[53].index]}},eo=function(T){return{}},Dr=function(T){return{}};function Lr(T){var v,y,E=T[24].header,w=(0,r.nuO)(E,T,T[31],Dr);return{c:function(){v=(0,r.bGB)("div"),w&&w.c(),(0,r.Ljt)(v,"class","vc-scroller-header")},m:function(M,P){(0,r.$Tr)(M,v,P),w&&w.m(v,null),T[25](v),y=!0},p:function(M,P){w&&w.p&&(!y||1&P[1])&&(0,r.kmG)(w,E,M,M[31],y?(0,r.u2N)(E,M[31],P,eo):(0,r.VOJ)(M[31]),Dr)},i:function(M){y||((0,r.Ui)(w,M),y=!0)},o:function(M){(0,r.etI)(w,M),y=!1},d:function(M){M&&(0,r.ogt)(v),w&&w.d(M),T[25](null)}}}function to(T){var v,y=T[24].empty,E=(0,r.nuO)(y,T,T[31],Tr);return{c:function(){E&&E.c()},m:function(w,M){E&&E.m(w,M),v=!0},p:function(w,M){E&&E.p&&(!v||1&M[1])&&(0,r.kmG)(E,y,w,w[31],v?(0,r.u2N)(y,w[31],M,Js):(0,r.VOJ)(w[31]),Tr)},i:function(w){v||((0,r.Ui)(E,w),v=!0)},o:function(w){(0,r.etI)(E,w),v=!1},d:function(w){E&&E.d(w)}}}function no(T){for(var v,y,E=[],w=new Xs,M=T[10],P=function(ae){return ae[53].key},U=0;U<M.length;U+=1){var V=Mr(T,M,U),j=P(V);w.set(j,E[U]=Pr(j,V))}return{c:function(){for(var ae=0;ae<E.length;ae+=1)E[ae].c();v=(0,r.cSb)()},m:function(ae,me){for(var Ae=0;Ae<E.length;Ae+=1)E[Ae].m(ae,me);(0,r.$Tr)(ae,v,me),y=!0},p:function(ae,me){17921&me[0]|1&me[1]&&(M=ae[10],(0,r.dvw)(),E=(0,r.GQg)(E,me,P,1,ae,M,w,v.parentNode,r.cly,Pr,v,Mr),(0,r.gbL)())},i:function(ae){if(!y){for(var me=0;me<M.length;me+=1)(0,r.Ui)(E[me]);y=!0}},o:function(ae){for(var me=0;me<E.length;me+=1)(0,r.etI)(E[me]);y=!1},d:function(ae){for(var me=0;me<E.length;me+=1)E[me].d(ae);ae&&(0,r.ogt)(v)}}}function io(T){var v,y,E=T[24].item,w=(0,r.nuO)(E,T,T[31],Rr),M=w||function(P){var U;return{c:function(){U=(0,r.fLW)("Missing template")},m:function(V,j){(0,r.$Tr)(V,U,j)},d:function(V){V&&(0,r.ogt)(U)}}}();return{c:function(){M&&M.c(),v=(0,r.DhX)()},m:function(P,U){M&&M.m(P,U),(0,r.$Tr)(P,v,U),y=!0},p:function(P,U){w&&w.p&&(!y||1025&U[0]|1&U[1])&&(0,r.kmG)(w,E,P,P[31],y?(0,r.u2N)(E,P[31],U,Zs):(0,r.VOJ)(P[31]),Rr)},i:function(P){y||((0,r.Ui)(M,P),y=!0)},o:function(P){(0,r.etI)(M,P),y=!1},d:function(P){M&&M.d(P),P&&(0,r.ogt)(v)}}}function Pr(T,v){var y,E,w;function M(){for(var P,U=arguments.length,V=new Array(U),j=0;j<U;j++)V[j]=arguments[j];return(P=v)[26].apply(P,[v[53]].concat(V))}return E=new Os({props:{show:v[53].show,top:v[9][v[53].index],onResize:M,$$slots:{default:[io]},$$scope:{ctx:v}}}),{key:T,first:null,c:function(){y=(0,r.cSb)(),(0,r.YCL)(E.$$.fragment),this.first=y},m:function(P,U){(0,r.$Tr)(P,y,U),(0,r.yef)(E,P,U),w=!0},p:function(P,U){v=P;var V={};1024&U[0]&&(V.show=v[53].show),1536&U[0]&&(V.top=v[9][v[53].index]),1024&U[0]&&(V.onResize=M),1025&U[0]|1&U[1]&&(V.$$scope={dirty:U,ctx:v}),E.$set(V)},i:function(P){w||((0,r.Ui)(E.$$.fragment,P),w=!0)},o:function(P){(0,r.etI)(E.$$.fragment,P),w=!1},d:function(P){P&&(0,r.ogt)(y),(0,r.vpE)(E,P)}}}function Fr(T){var v,y,E=T[24].footer,w=(0,r.nuO)(E,T,T[31],wr);return{c:function(){v=(0,r.bGB)("div"),w&&w.c(),(0,r.Ljt)(v,"class","vc-scroller-footer")},m:function(M,P){(0,r.$Tr)(M,v,P),w&&w.m(v,null),T[28](v),y=!0},p:function(M,P){w&&w.p&&(!y||1&P[1])&&(0,r.kmG)(w,E,M,M[31],y?(0,r.u2N)(E,M[31],P,Ks):(0,r.VOJ)(M[31]),wr)},i:function(M){y||((0,r.Ui)(w,M),y=!0)},o:function(M){(0,r.etI)(w,M),y=!1},d:function(M){M&&(0,r.ogt)(v),w&&w.d(M),T[28](null)}}}function Qr(T){var v,y,E=T[7]+"%",w=T[8]+"%";return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("div"),(0,r.Ljt)(y,"class","vc-scroller-scrollbar-thumb"),(0,r.czc)(y,"height",E,!1),(0,r.czc)(y,"top",w,!1),(0,r.Ljt)(v,"class","vc-scroller-scrollbar-track"),(0,r.czc)(v,"display",T[7]<100?"block":"none",!1)},m:function(M,P){(0,r.$Tr)(M,v,P),(0,r.R3I)(v,y)},p:function(M,P){128&P[0]&&E!==(E=M[7]+"%")&&(0,r.czc)(y,"height",E,!1),256&P[0]&&w!==(w=M[8]+"%")&&(0,r.czc)(y,"top",w,!1),128&P[0]&&(0,r.czc)(v,"display",M[7]<100?"block":"none",!1)},d:function(M){M&&(0,r.ogt)(v)}}}function ro(T){var v,y,E,w,M,P,U,V,j,ae,me,Ae=T[15].header&&Lr(T),ke=[no,to],Ce=[];function He(lt,pt){return lt[0].length?0:1}M=He(T),P=Ce[M]=ke[M](T);var je=T[15].footer&&Fr(T),rt=T[1]&&Qr(T);return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("div"),Ae&&Ae.c(),E=(0,r.DhX)(),w=(0,r.bGB)("div"),P.c(),U=(0,r.DhX)(),je&&je.c(),V=(0,r.DhX)(),rt&&rt.c(),(0,r.Ljt)(w,"class","vc-scroller-items"),(0,r.Ljt)(y,"class","vc-scroller-contents"),(0,r.Ljt)(v,"class","vc-scroller-viewport"),(0,r.VHj)(v,"static",!T[13])},m:function(lt,pt){(0,r.$Tr)(lt,v,pt),(0,r.R3I)(v,y),Ae&&Ae.m(y,null),(0,r.R3I)(y,E),(0,r.R3I)(y,w),Ce[M].m(w,null),T[27](w),(0,r.R3I)(y,U),je&&je.m(y,null),T[29](y),(0,r.R3I)(v,V),rt&&rt.m(v,null),T[30](v),j=!0,ae||(me=[(0,r.oLt)(v,"touchstart",function(){(0,r.sBU)(T[13]?T[11].handleTouchStart:T[12])&&(T[13]?T[11].handleTouchStart:T[12]).apply(this,arguments)}),(0,r.oLt)(v,"touchmove",function(){(0,r.sBU)(T[13]?T[11].handleTouchMove:T[12])&&(T[13]?T[11].handleTouchMove:T[12]).apply(this,arguments)}),(0,r.oLt)(v,"touchend",function(){(0,r.sBU)(T[13]?T[11].handleTouchEnd:T[12])&&(T[13]?T[11].handleTouchEnd:T[12]).apply(this,arguments)}),(0,r.oLt)(v,"touchcancel",function(){(0,r.sBU)(T[13]?T[11].handleTouchCancel:T[12])&&(T[13]?T[11].handleTouchCancel:T[12]).apply(this,arguments)}),(0,r.oLt)(v,"wheel",function(){(0,r.sBU)(T[13]?T[11].handleWheel:T[12])&&(T[13]?T[11].handleWheel:T[12]).apply(this,arguments)})],ae=!0)},p:function(lt,pt){(T=lt)[15].header?Ae?(Ae.p(T,pt),32768&pt[0]&&(0,r.Ui)(Ae,1)):((Ae=Lr(T)).c(),(0,r.Ui)(Ae,1),Ae.m(y,E)):Ae&&((0,r.dvw)(),(0,r.etI)(Ae,1,1,function(){Ae=null}),(0,r.gbL)());var Tt=M;(M=He(T))===Tt?Ce[M].p(T,pt):((0,r.dvw)(),(0,r.etI)(Ce[Tt],1,1,function(){Ce[Tt]=null}),(0,r.gbL)(),(P=Ce[M])?P.p(T,pt):(P=Ce[M]=ke[M](T)).c(),(0,r.Ui)(P,1),P.m(w,null)),T[15].footer?je?(je.p(T,pt),32768&pt[0]&&(0,r.Ui)(je,1)):((je=Fr(T)).c(),(0,r.Ui)(je,1),je.m(y,null)):je&&((0,r.dvw)(),(0,r.etI)(je,1,1,function(){je=null}),(0,r.gbL)()),T[1]?rt?rt.p(T,pt):((rt=Qr(T)).c(),rt.m(v,null)):rt&&(rt.d(1),rt=null)},i:function(lt){j||((0,r.Ui)(Ae),(0,r.Ui)(P),(0,r.Ui)(je),j=!0)},o:function(lt){(0,r.etI)(Ae),(0,r.etI)(P),(0,r.etI)(je),j=!1},d:function(lt){lt&&(0,r.ogt)(v),Ae&&Ae.d(),Ce[M].d(),T[27](null),je&&je.d(),T[29](null),rt&&rt.d(),T[30](null),ae=!1,(0,r.j7q)(me)}}}function so(T,v,y){var E,w,M,P,U,V,j,ae=v.$$slots,me=ae===void 0?{}:ae,Ae=v.$$scope,ke=(0,r.XGm)(me),Ce=this&&this.__awaiter||function(mt,Nt,kt,Ut){return new(kt||(kt=Promise))(function(Kt,ln){function Kn(mn){try{Wn(Ut.next(mn))}catch(Nn){ln(Nn)}}function $n(mn){try{Wn(Ut.throw(mn))}catch(Nn){ln(Nn)}}function Wn(mn){var Nn;mn.done?Kt(mn.value):(Nn=mn.value,Nn instanceof kt?Nn:new kt(function(pi){pi(Nn)})).then(Kn,$n)}Wn((Ut=Ut.apply(mt,Nt||[])).next())})},He=v.items,je=v.itemKey,rt=je===void 0?void 0:je,lt=v.itemHeight,pt=lt===void 0?void 0:lt,Tt=v.buffer,St=Tt===void 0?200:Tt,$t=v.stickToBottom,Wt=$t!==void 0&&$t,qt=v.scrollbar,bt=qt!==void 0&&qt,wt=v.start,jt=wt===void 0?0:wt,yn=v.end,Xt=yn===void 0?0:yn,Yt=0,Qt=0,gt=0,Et=0,en=100,ct=0,xt=[],Ot=[],It=[],Gt=js(),un=function(){return Math.max(0,Et+Yt+Qt-gt)},gn=!0,vn=!1,on=[],Vn=!1,In=!1,Hn=Cn(),dn=function(mt,Nt){var kt;(0,l.H3)(function(){var Ut=mt();if(Ut){Nt(Ut.getBoundingClientRect().height),kt&&kt.disconnect();var Kt=wn();(kt=new Kt(function(ln){var Kn=ln[0];Nt(Kn.contentRect.height)})).observe(Ut)}else Nt(0),kt&&(kt.disconnect(),kt=null)}),(0,l.ev)(function(){kt&&(kt.disconnect(),kt=null)})},Xn=function(){var mt=V.getPosition(),Nt=100/(Et+Yt+Qt);y(8,ct=mt*Nt),y(7,en=gt*Nt)},_n=function(mt){var Nt=un();(mt||V.getPosition()>Nt)&&V.updatePosition(Nt)},ci=function(mt){(function(Nt,kt,Ut){for(var Kt=new Map,ln=0;ln<on.length;ln+=1){var Kn=on[ln],$n=rt===void 0?Kn:Kn[rt];Kt.set($n,xt[ln])}y(9,Ot.length=xt.length=Nt.length,Ot);for(var Wn=0,mn=0;mn<Nt.length;mn+=1){var Nn=Nt[mn],pi=rt===void 0?Nn:Nn[rt];Kt.has(pi)?xt[mn]=Kt.get(pi):xt[mn]=Ut,y(9,Ot[mn]=Wn,Ot),Wn+=xt[mn]}Et=Math.max(Wn,kt-Yt-Qt),on=Nt,Hn?(Ai(Nt,V.getPosition(),kt),y(6,U.style.height=Et+"px",U),_n(gn&&Wt),Xn()):Ai(Nt,0,9e6)})(mt,gt,pt)};function Ai(mt,Nt,kt){for(var Ut=0,Kt=0;Ut<mt.length&&Kt+xt[Ut]<Nt-St;)Kt+=xt[Ut],Ut+=1;for(y(16,jt=Ut);Ut<mt.length&&kt&&Kt<Nt+kt+St;)Kt+=xt[Ut],Ut+=1;y(17,Xt=Ut),y(10,It=Gt(mt.length,jt,Xt))}var wi=function(mt,Nt){return Ce(void 0,void 0,void 0,Vt().mark(function kt(){var Ut,Kt,ln,Kn;return Vt().wrap(function($n){for(;;)switch($n.prev=$n.next){case 0:if(xt[mt]!==Nt&&gt!==0){$n.next=2;break}return $n.abrupt("return");case 2:for(Ut=xt[mt],xt[mt]=Nt,Kt=He.length,ln=mt;ln<Kt-1;ln+=1)y(9,Ot[ln+1]=Ot[ln]+xt[ln],Ot);return Et=Math.max(Ot[Kt-1]+xt[Kt-1],gt-Yt-Qt),Kn=V.getPosition(),vn=!0,Ot[mt]+Ut<Kn?V.updatePosition(Kn+Nt-Ut):_n(gn&&Wt),$n.next=12,new Promise(function(Wn){return setTimeout(Wn,0)});case 12:Ai(He,V.getPosition(),gt),y(6,U.style.height=Et+"px",U),Xn();case 15:case"end":return $n.stop()}},kt)}))};(0,l.H3)(function(){y(23,Vn=!0),Br.use()}),(0,l.ev)(function(){Br.unuse()}),Hn&&(Hn&&(V=V||new $s(un,function(mt){return Ce(void 0,void 0,void 0,Vt().mark(function Nt(){var kt;return Vt().wrap(function(Ut){for(;;)switch(Ut.prev=Ut.next){case 0:if(kt=un(),gn=Math.abs(mt-kt)<=1,y(5,P.style.transform="translateY("+-mt+"px) translateZ(0)",P),Xn(),!vn){Ut.next=8;break}vn=!1,Ut.next=11;break;case 8:return Ut.next=10,new Promise(function(Kt){return setTimeout(Kt,0)});case 10:Ai(He,mt,gt);case 11:case"end":return Ut.stop()}},Nt)}))}),y(11,j=j||new qs(V))),!In&&Hn&&(dn(function(){return M},function(mt){return Ce(void 0,void 0,void 0,Vt().mark(function Nt(){var kt,Ut;return Vt().wrap(function(Kt){for(;;)switch(Kt.prev=Kt.next){case 0:if(gt!==mt){Kt.next=2;break}return Kt.abrupt("return");case 2:for(gt=mt,kt=0,Ut=0;Ut<He.length;Ut+=1)kt+=xt[Ut];return Et=Math.max(kt,gt-Qt),y(6,U.style.height=Et+"px",U),Kt.next=9,new Promise(function(ln){return setTimeout(ln,0)});case 9:ci(He),Ai(He,V.getPosition(),gt),gt!==0&&_n(gn&&Wt),Xn();case 13:case"end":return Kt.stop()}},Nt)}))}),dn(function(){return w},function(mt){if(Qt!==mt){Qt=mt;for(var Nt=0,kt=0;kt<He.length;kt+=1)Nt+=xt[kt];Et=Math.max(Nt,gt-Yt-Qt),y(6,U.style.height=Et+"px",U),gt!==0&&_n(gn&&Wt),Xn()}}),dn(function(){return E},function(mt){Yt!==mt&&(Yt=mt,ci(He),Xn())})));var Qi={scrollTo:function(mt){if(Hn){var Nt=Ot[Math.max(0,Math.min(He.length-1,mt))],kt=Math.min(un(),Nt),Ut=Math.min(Math.floor(500*Math.abs(V.getPosition()-kt)/2e3),500);V.scrollTo(kt,Ut)}}};return T.$$set=function(mt){"items"in mt&&y(0,He=mt.items),"itemKey"in mt&&y(18,rt=mt.itemKey),"itemHeight"in mt&&y(19,pt=mt.itemHeight),"buffer"in mt&&y(20,St=mt.buffer),"stickToBottom"in mt&&y(21,Wt=mt.stickToBottom),"scrollbar"in mt&&y(1,bt=mt.scrollbar),"start"in mt&&y(16,jt=mt.start),"end"in mt&&y(17,Xt=mt.end),"$$scope"in mt&&y(31,Ae=mt.$$scope)},T.$$.update=function(){8388609&T.$$.dirty[0]&&Vn&&(Hn||y(4,M.parentElement.style.height="auto",M),ci(He),In=!0)},[He,bt,E,w,M,P,U,en,ct,Ot,It,j,function(){},Hn,wi,ke,jt,Xt,rt,pt,St,Wt,Qi,Vn,me,function(mt){r.VnY[mt?"unshift":"push"](function(){y(2,E=mt)})},function(mt,Nt){return wi(mt.index,Nt)},function(mt){r.VnY[mt?"unshift":"push"](function(){y(6,U=mt)})},function(mt){r.VnY[mt?"unshift":"push"](function(){y(3,w=mt)})},function(mt){r.VnY[mt?"unshift":"push"](function(){y(5,P=mt)})},function(mt){r.VnY[mt?"unshift":"push"](function(){y(4,M=mt),y(23,Vn),y(13,Hn),y(0,He)})},Ae]}var oo=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,so,ro,r.N8,{items:0,itemKey:18,itemHeight:19,buffer:20,stickToBottom:21,scrollbar:1,start:16,end:17,handler:22},null,[-1,-1]),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"items",get:function(){return this.$$.ctx[0]},set:function(y){this.$$set({items:y}),(0,r.yl1)()}},{key:"itemKey",get:function(){return this.$$.ctx[18]},set:function(y){this.$$set({itemKey:y}),(0,r.yl1)()}},{key:"itemHeight",get:function(){return this.$$.ctx[19]},set:function(y){this.$$set({itemHeight:y}),(0,r.yl1)()}},{key:"buffer",get:function(){return this.$$.ctx[20]},set:function(y){this.$$set({buffer:y}),(0,r.yl1)()}},{key:"stickToBottom",get:function(){return this.$$.ctx[21]},set:function(y){this.$$set({stickToBottom:y}),(0,r.yl1)()}},{key:"scrollbar",get:function(){return this.$$.ctx[1]},set:function(y){this.$$set({scrollbar:y}),(0,r.yl1)()}},{key:"start",get:function(){return this.$$.ctx[16]},set:function(y){this.$$set({start:y}),(0,r.yl1)()}},{key:"end",get:function(){return this.$$.ctx[17]},set:function(y){this.$$set({end:y}),(0,r.yl1)()}},{key:"handler",get:function(){return this.$$.ctx[22]}}]),v}(r.f_C),kr=oo;function ao(T){var v;return{c:function(){(v=(0,r.bGB)("div")).textContent="Empty",(0,r.Ljt)(v,"slot","empty"),(0,r.Ljt)(v,"class","vc-plugin-empty")},m:function(y,E){(0,r.$Tr)(y,v,E)},p:r.ZTd,d:function(y){y&&(0,r.ogt)(v)}}}function lo(T){var v,y;return(v=new Zt({props:{slot:"item",log:T[16],showTimestamps:T[1],groupHeader:T[16].groupHeader}})).$on("groupCollapsed",T[6]),{c:function(){(0,r.YCL)(v.$$.fragment)},m:function(E,w){(0,r.yef)(v,E,w),y=!0},p:function(E,w){var M={};65536&w&&(M.log=E[16]),2&w&&(M.showTimestamps=E[1]),65536&w&&(M.groupHeader=E[16].groupHeader),v.$set(M)},i:function(E){y||((0,r.Ui)(v.$$.fragment,E),y=!0)},o:function(E){(0,r.etI)(v.$$.fragment,E),y=!1},d:function(E){(0,r.vpE)(v,E)}}}function Nr(T){var v,y;return(v=new Dt.Z({})).$on("filterText",T[5]),{c:function(){(0,r.YCL)(v.$$.fragment)},m:function(E,w){(0,r.yef)(v,E,w),y=!0},p:r.ZTd,i:function(E){y||((0,r.Ui)(v.$$.fragment,E),y=!0)},o:function(E){(0,r.etI)(v.$$.fragment,E),y=!1},d:function(E){(0,r.vpE)(v,E)}}}function co(T){var v,y,E=T[0]&&Nr(T);return{c:function(){E&&E.c(),v=(0,r.cSb)()},m:function(w,M){E&&E.m(w,M),(0,r.$Tr)(w,v,M),y=!0},p:function(w,M){w[0]?E?(E.p(w,M),1&M&&(0,r.Ui)(E,1)):((E=Nr(w)).c(),(0,r.Ui)(E,1),E.m(v.parentNode,v)):E&&((0,r.dvw)(),(0,r.etI)(E,1,1,function(){E=null}),(0,r.gbL)())},i:function(w){y||((0,r.Ui)(E),y=!0)},o:function(w){(0,r.etI)(E),y=!1},d:function(w){E&&E.d(w),w&&(0,r.ogt)(v)}}}function uo(T){var v,y,E,w;function M(U){T[15](U)}var P={items:T[4],itemKey:"_id",itemHeight:30,buffer:100,stickToBottom:!0,scrollbar:!0,$$slots:{footer:[co],item:[lo,function(U){return{16:U.item}},function(U){return U.item?65536:0}],empty:[ao]},$$scope:{ctx:T}};return T[3]!==void 0&&(P.handler=T[3]),y=new kr({props:P}),r.VnY.push(function(){return(0,r.akz)(y,"handler",M)}),{c:function(){v=(0,r.bGB)("div"),(0,r.YCL)(y.$$.fragment),(0,r.Ljt)(v,"class","vc-plugin-content"),(0,r.VHj)(v,"vc-logs-has-cmd",T[0])},m:function(U,V){(0,r.$Tr)(U,v,V),(0,r.yef)(y,v,null),w=!0},p:function(U,V){var j=V[0],ae={};16&j&&(ae.items=U[4]),196611&j&&(ae.$$scope={dirty:j,ctx:U}),!E&&8&j&&(E=!0,ae.handler=U[3],(0,r.hjT)(function(){return E=!1})),y.$set(ae),1&j&&(0,r.VHj)(v,"vc-logs-has-cmd",U[0])},i:function(U){w||((0,r.Ui)(y.$$.fragment,U),w=!0)},o:function(U){(0,r.etI)(y.$$.fragment,U),w=!1},d:function(U){U&&(0,r.ogt)(v),(0,r.vpE)(y)}}}function ho(T,v,y){var E,w=r.ZTd;T.$$.on_destroy.push(function(){return w()});var M,P,U=v.pluginId,V=U===void 0?"default":U,j=v.showCmd,ae=j!==void 0&&j,me=v.filterType,Ae=me===void 0?"all":me,ke=v.showTimestamps,Ce=ke!==void 0&&ke,He=!1,je="",rt=[];return(0,l.H3)(function(){gi.use()}),(0,l.ev)(function(){gi.unuse()}),T.$$set=function(lt){"pluginId"in lt&&y(7,V=lt.pluginId),"showCmd"in lt&&y(0,ae=lt.showCmd),"filterType"in lt&&y(8,Ae=lt.filterType),"showTimestamps"in lt&&y(1,Ce=lt.showTimestamps)},T.$$.update=function(){29056&T.$$.dirty&&(He||(y(2,M=Ie.O.get(V)),w(),w=(0,r.LdU)(M,function(lt){return y(14,E=lt)}),y(12,He=!0)),y(4,rt=E.logList.filter(function(lt){return(Ae==="all"||Ae===lt.type)&&(je===""||(0,H.HX)(lt,je))&&!lt.groupCollapsed})))},[ae,Ce,M,P,rt,function(lt){y(13,je=lt.detail.filterText||"")},function(lt){var pt=lt.detail.groupLabel,Tt=lt.detail.groupHeader,St=lt.detail.isGroupCollapsed;M.update(function($t){return $t.logList.forEach(function(Wt){Wt.groupLabel===pt&&(Wt.groupHeader>0?Wt.groupHeader=Tt:Wt.groupCollapsed=St)}),$t})},V,Ae,function(){P.scrollTo(0)},function(){P.scrollTo(rt.length-1)},{fixedHeight:!0},He,je,E,function(lt){y(3,P=lt)}]}var fo=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,ho,uo,r.N8,{pluginId:7,showCmd:0,filterType:8,showTimestamps:1,scrollToTop:9,scrollToBottom:10,options:11}),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"pluginId",get:function(){return this.$$.ctx[7]},set:function(y){this.$$set({pluginId:y}),(0,r.yl1)()}},{key:"showCmd",get:function(){return this.$$.ctx[0]},set:function(y){this.$$set({showCmd:y}),(0,r.yl1)()}},{key:"filterType",get:function(){return this.$$.ctx[8]},set:function(y){this.$$set({filterType:y}),(0,r.yl1)()}},{key:"showTimestamps",get:function(){return this.$$.ctx[1]},set:function(y){this.$$set({showTimestamps:y}),(0,r.yl1)()}},{key:"scrollToTop",get:function(){return this.$$.ctx[9]}},{key:"scrollToBottom",get:function(){return this.$$.ctx[10]}},{key:"options",get:function(){return this.$$.ctx[11]}}]),v}(r.f_C),Ao=fo,Oi=__webpack_require__(5629),Ur=function(){function T(v){this.model=void 0,this.pluginId=void 0,this.pluginId=v}return T.prototype.destroy=function(){this.model=void 0},T}(),po=function(T){function v(){for(var E,w=arguments.length,M=new Array(w),P=0;P<w;P++)M[P]=arguments[P];return(E=T.call.apply(T,[this].concat(M))||this).model=Oi.W.getSingleton(Oi.W,"VConsoleLogModel"),E}(0,a.Z)(v,T);var y=v.prototype;return y.log=function(){for(var E=arguments.length,w=new Array(E),M=0;M<E;M++)w[M]=arguments[M];this.addLog.apply(this,["log"].concat(w))},y.info=function(){for(var E=arguments.length,w=new Array(E),M=0;M<E;M++)w[M]=arguments[M];this.addLog.apply(this,["info"].concat(w))},y.debug=function(){for(var E=arguments.length,w=new Array(E),M=0;M<E;M++)w[M]=arguments[M];this.addLog.apply(this,["debug"].concat(w))},y.warn=function(){for(var E=arguments.length,w=new Array(E),M=0;M<E;M++)w[M]=arguments[M];this.addLog.apply(this,["warn"].concat(w))},y.error=function(){for(var E=arguments.length,w=new Array(E),M=0;M<E;M++)w[M]=arguments[M];this.addLog.apply(this,["error"].concat(w))},y.clear=function(){this.model&&this.model.clearPluginLog(this.pluginId)},y.addLog=function(E){if(this.model){for(var w=arguments.length,M=new Array(w>1?w-1:0),P=1;P<w;P++)M[P-1]=arguments[P];M.unshift("["+this.pluginId+"]"),this.model.addLog({type:E,origData:M},{noOrig:!0})}},v}(Ur),lr=function(T){function v(E,w){var M;return(M=T.call(this,E,w,Ao,{pluginId:E,filterType:"all"})||this).model=Oi.W.getSingleton(Oi.W,"VConsoleLogModel"),M.isReady=!1,M.isShow=!1,M.isInBottom=!0,M.model.bindPlugin(E),M.exporter=new po(E),M}(0,a.Z)(v,T);var y=v.prototype;return y.onReady=function(){var E,w;T.prototype.onReady.call(this),this.model.maxLogNumber=Number((E=this.vConsole.option.log)==null?void 0:E.maxLogNumber)||1e3,this.compInstance.showTimestamps=!((w=this.vConsole.option.log)==null||!w.showTimestamps)},y.onRemove=function(){T.prototype.onRemove.call(this),this.model.unbindPlugin(this.id)},y.onAddTopBar=function(E){for(var w=this,M=["All","Log","Info","Warn","Error"],P=[],U=0;U<M.length;U++)P.push({name:M[U],data:{type:M[U].toLowerCase()},actived:U===0,className:"",onClick:function(V,j){if(j.type===w.compInstance.filterType)return!1;w.compInstance.filterType=j.type}});P[0].className="vc-actived",E(P)},y.onAddTool=function(E){var w=this;E([{name:"Clear",global:!1,onClick:function(M){w.model.clearPluginLog(w.id),w.vConsole.triggerEvent("clearLog")}},{name:"Top",global:!1,onClick:function(M){w.compInstance.scrollToTop()}},{name:"Bottom",global:!1,onClick:function(M){w.compInstance.scrollToBottom()}}])},y.onUpdateOption=function(){var E,w,M,P;((E=this.vConsole.option.log)==null?void 0:E.maxLogNumber)!==this.model.maxLogNumber&&(this.model.maxLogNumber=Number((M=this.vConsole.option.log)==null?void 0:M.maxLogNumber)||1e3),!((w=this.vConsole.option.log)==null||!w.showTimestamps)!==this.compInstance.showTimestamps&&(this.compInstance.showTimestamps=!((P=this.vConsole.option.log)==null||!P.showTimestamps))},v}(te),Or=function(T){function v(){for(var E,w=arguments.length,M=new Array(w),P=0;P<w;P++)M[P]=arguments[P];return(E=T.call.apply(T,[this].concat(M))||this).onErrorHandler=void 0,E.resourceErrorHandler=void 0,E.rejectionHandler=void 0,E}(0,a.Z)(v,T);var y=v.prototype;return y.onReady=function(){T.prototype.onReady.call(this),this.bindErrors(),this.compInstance.showCmd=!0},y.onRemove=function(){T.prototype.onRemove.call(this),this.unbindErrors()},y.bindErrors=function(){e.FJ(window)&&e.mf(window.addEventListener)&&(this.catchWindowOnError(),this.catchResourceError(),this.catchUnhandledRejection())},y.unbindErrors=function(){e.FJ(window)&&e.mf(window.addEventListener)&&(window.removeEventListener("error",this.onErrorHandler),window.removeEventListener("error",this.resourceErrorHandler),window.removeEventListener("unhandledrejection",this.rejectionHandler))},y.catchWindowOnError=function(){var E=this;this.onErrorHandler=this.onErrorHandler?this.onErrorHandler:function(w){var M=w.message;w.filename&&(M+="\\n\\t"+w.filename.replace(location.origin,""),(w.lineno||w.colno)&&(M+=":"+w.lineno+":"+w.colno)),M+="\\n"+(!!w.error&&!!w.error.stack&&w.error.stack.toString()||""),E.model.addLog({type:"error",origData:[M]},{noOrig:!0})},window.removeEventListener("error",this.onErrorHandler),window.addEventListener("error",this.onErrorHandler)},y.catchResourceError=function(){var E=this;this.resourceErrorHandler=this.resourceErrorHandler?this.resourceErrorHandler:function(w){var M=w.target;if(["link","video","script","img","audio"].indexOf(M.localName)>-1){var P=M.href||M.src||M.currentSrc;E.model.addLog({type:"error",origData:["GET <"+M.localName+"> error: "+P]},{noOrig:!0})}},window.removeEventListener("error",this.resourceErrorHandler),window.addEventListener("error",this.resourceErrorHandler,!0)},y.catchUnhandledRejection=function(){var E=this;this.rejectionHandler=this.rejectionHandler?this.rejectionHandler:function(w){var M=w&&w.reason,P="Uncaught (in promise) ",U=[P,M];M instanceof Error&&(U=[P,{name:M.name,message:M.message,stack:M.stack}]),E.model.addLog({type:"error",origData:U},{noOrig:!0})},window.removeEventListener("unhandledrejection",this.rejectionHandler),window.addEventListener("unhandledrejection",this.rejectionHandler)},v}(lr),Gr=function(T){function v(){return T.apply(this,arguments)||this}(0,a.Z)(v,T);var y=v.prototype;return y.onReady=function(){T.prototype.onReady.call(this),this.printSystemInfo()},y.printSystemInfo=function(){var E=navigator.userAgent,w=[],M=E.match(/MicroMessenger\/([\d\.]+)/i),P=M&&M[1]?M[1]:null;location.host==="servicewechat.com"||console.info("[system]","Location:",location.href);var U=E.match(/(ipod).*\s([\d_]+)/i),V=E.match(/(ipad).*\s([\d_]+)/i),j=E.match(/(iphone)\sos\s([\d_]+)/i),ae=E.match(/(android)\s([\d\.]+)/i),me=E.match(/(Mac OS X)\s([\d_]+)/i);w=[],ae?w.push("Android "+ae[2]):j?w.push("iPhone, iOS "+j[2].replace(/_/g,".")):V?w.push("iPad, iOS "+V[2].replace(/_/g,".")):U?w.push("iPod, iOS "+U[2].replace(/_/g,".")):me&&w.push("Mac, MacOS "+me[2].replace(/_/g,".")),P&&w.push("WeChat "+P),console.info("[system]","Client:",w.length?w.join(", "):"Unknown");var Ae=E.toLowerCase().match(/ nettype\/([^ ]+)/g);Ae&&Ae[0]&&(w=[(Ae=Ae[0].split("/"))[1]],console.info("[system]","Network:",w.length?w.join(", "):"Unknown")),console.info("[system]","UA:",E),setTimeout(function(){var ke=window.performance||window.msPerformance||window.webkitPerformance;if(ke&&ke.timing){var Ce=ke.timing;Ce.navigationStart&&console.info("[system]","navigationStart:",Ce.navigationStart),Ce.navigationStart&&Ce.domainLookupStart&&console.info("[system]","navigation:",Ce.domainLookupStart-Ce.navigationStart+"ms"),Ce.domainLookupEnd&&Ce.domainLookupStart&&console.info("[system]","dns:",Ce.domainLookupEnd-Ce.domainLookupStart+"ms"),Ce.connectEnd&&Ce.connectStart&&(Ce.connectEnd&&Ce.secureConnectionStart?console.info("[system]","tcp (ssl):",Ce.connectEnd-Ce.connectStart+"ms ("+(Ce.connectEnd-Ce.secureConnectionStart)+"ms)"):console.info("[system]","tcp:",Ce.connectEnd-Ce.connectStart+"ms")),Ce.responseStart&&Ce.requestStart&&console.info("[system]","request:",Ce.responseStart-Ce.requestStart+"ms"),Ce.responseEnd&&Ce.responseStart&&console.info("[system]","response:",Ce.responseEnd-Ce.responseStart+"ms"),Ce.domComplete&&Ce.domLoading&&(Ce.domContentLoadedEventStart&&Ce.domLoading?console.info("[system]","domComplete (domLoaded):",Ce.domComplete-Ce.domLoading+"ms ("+(Ce.domContentLoadedEventStart-Ce.domLoading)+"ms)"):console.info("[system]","domComplete:",Ce.domComplete-Ce.domLoading+"ms")),Ce.loadEventEnd&&Ce.loadEventStart&&console.info("[system]","loadEvent:",Ce.loadEventEnd-Ce.loadEventStart+"ms"),Ce.navigationStart&&Ce.loadEventEnd&&console.info("[system]","total (DOM):",Ce.loadEventEnd-Ce.navigationStart+"ms ("+(Ce.domComplete-Ce.navigationStart)+"ms)")}},0)},v}(lr),xn=__webpack_require__(3313),zr=__webpack_require__(643);function cr(T,v){var y=typeof Symbol<"u"&&T[Symbol.iterator]||T["@@iterator"];if(y)return(y=y.call(T)).next.bind(y);if(Array.isArray(T)||(y=function(w,M){if(w){if(typeof w=="string")return Vr(w,M);var P=Object.prototype.toString.call(w).slice(8,-1);if(P==="Object"&&w.constructor&&(P=w.constructor.name),P==="Map"||P==="Set")return Array.from(w);if(P==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(P))return Vr(w,M)}}(T))||v){y&&(T=y);var E=0;return function(){return E>=T.length?{done:!0}:{done:!1,value:T[E++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Vr(T,v){(v==null||v>T.length)&&(v=T.length);for(var y=0,E=new Array(v);y<v;y++)E[y]=T[y];return E}var Hr=function(T,v){v===void 0&&(v={}),e.Kn(v)||(v={});var y=T?T.split("?"):[];if(y.shift(),y.length>0)for(var E,w=cr(y=y.join("?").split("&"));!(E=w()).done;){var M=E.value.split("=");try{v[M[0]]=decodeURIComponent(M[1])}catch{v[M[0]]=M[1]}}return v},bi=function(T,v){var y="";switch(T){case"":case"text":case"json":if(e.HD(v))try{y=JSON.parse(v),y=e.hZ(y,{maxDepth:10,keyMaxLen:1e4,pretty:!0,standardJSON:!0})}catch{y=e.id(String(v),1e4)}else e.Kn(v)||e.kJ(v)?y=e.hZ(v,{maxDepth:10,keyMaxLen:1e4,pretty:!0,standardJSON:!0}):v!==void 0&&(y=Object.prototype.toString.call(v));break;default:v!==void 0&&(y=Object.prototype.toString.call(v))}return y},ur=function(T){if(!T)return null;var v=null;if(typeof T=="string")try{v=JSON.parse(T)}catch{var y=T.split("&");if(y.length===1)v=T;else{v={};for(var E,w=cr(y);!(E=w()).done;){var M=E.value.split("=");v[M[0]]=M[1]===void 0?"undefined":M[1]}}}else if(e.TW(T)){v={};for(var P,U=cr(T);!(P=U()).done;){var V=P.value,j=V[0],ae=V[1];v[j]=typeof ae=="string"?ae:"[object Object]"}}else e.PO(T)?v=T:v="[object "+e.zl(T)+"]";return v},hr=function(T){return T===void 0&&(T=""),T.startsWith("//")&&(T=""+new URL(window.location.href).protocol+T),T.startsWith("http")?new URL(T):new URL(T,window.location.href)},Di=function(){this.id="",this.name="",this.method="",this.url="",this.status=0,this.statusText="",this.cancelState=0,this.readyState=0,this.header=null,this.responseType="",this.requestType=void 0,this.requestHeader=null,this.response=void 0,this.responseSize=0,this.responseSizeText="",this.startTime=0,this.startTimeText="",this.endTime=0,this.costTime=0,this.getData=null,this.postData=null,this.actived=!1,this.noVConsole=!1,this.id=(0,e.QI)()},$r=function(T){function v(y){var E;return(E=T.call(this)||this)._response=void 0,new Proxy(y,v.Handler)||(0,o.Z)(E)}return(0,a.Z)(v,T),v}(Di);$r.Handler={get:function(T,v){return v==="response"?T._response:Reflect.get(T,v)},set:function(T,v,y){var E;switch(v){case"response":return T._response=bi(T.responseType,y),!0;case"url":var w=((E=y=String(y))==null?void 0:E.replace(new RegExp("[/]*$"),"").split("/").pop())||"Unknown";Reflect.set(T,"name",w);var M=Hr(y,T.getData);Reflect.set(T,"getData",M);break;case"status":var P=String(y)||"Unknown";Reflect.set(T,"statusText",P);break;case"startTime":if(y&&T.endTime){var U=T.endTime-y;Reflect.set(T,"costTime",U)}break;case"endTime":if(y&&T.startTime){var V=y-T.startTime;Reflect.set(T,"costTime",V)}}return Reflect.set(T,v,y)}};var go=function(){function T(y,E){var w=this;this.XMLReq=void 0,this.item=void 0,this.onUpdateCallback=void 0,this.XMLReq=y,this.XMLReq.onreadystatechange=function(){w.onReadyStateChange()},this.XMLReq.onabort=function(){w.onAbort()},this.XMLReq.ontimeout=function(){w.onTimeout()},this.item=new Di,this.item.requestType="xhr",this.onUpdateCallback=E}var v=T.prototype;return v.get=function(y,E){switch(E){case"_noVConsole":return this.item.noVConsole;case"open":return this.getOpen(y);case"send":return this.getSend(y);case"setRequestHeader":return this.getSetRequestHeader(y);default:var w=Reflect.get(y,E);return typeof w=="function"?w.bind(y):w}},v.set=function(y,E,w){switch(E){case"_noVConsole":return void(this.item.noVConsole=!!w);case"onreadystatechange":return this.setOnReadyStateChange(y,E,w);case"onabort":return this.setOnAbort(y,E,w);case"ontimeout":return this.setOnTimeout(y,E,w)}return Reflect.set(y,E,w)},v.onReadyStateChange=function(){this.item.readyState=this.XMLReq.readyState,this.item.responseType=this.XMLReq.responseType,this.item.endTime=Date.now(),this.item.costTime=this.item.endTime-this.item.startTime,this.updateItemByReadyState(),this.item.response=bi(this.item.responseType,this.item.response),this.triggerUpdate()},v.onAbort=function(){this.item.cancelState=1,this.item.statusText="Abort",this.triggerUpdate()},v.onTimeout=function(){this.item.cancelState=3,this.item.statusText="Timeout",this.triggerUpdate()},v.triggerUpdate=function(){this.item.noVConsole||this.onUpdateCallback(this.item)},v.getOpen=function(y){var E=this,w=Reflect.get(y,"open");return function(){for(var M=arguments.length,P=new Array(M),U=0;U<M;U++)P[U]=arguments[U];var V=P[0],j=P[1];return E.item.method=V?V.toUpperCase():"GET",E.item.url=j||"",E.item.name=E.item.url.replace(new RegExp("[/]*$"),"").split("/").pop()||"",E.item.getData=Hr(E.item.url,{}),E.triggerUpdate(),w.apply(y,P)}},v.getSend=function(y){var E=this,w=Reflect.get(y,"send");return function(){for(var M=arguments.length,P=new Array(M),U=0;U<M;U++)P[U]=arguments[U];var V=P[0];return E.item.postData=ur(V),E.triggerUpdate(),w.apply(y,P)}},v.getSetRequestHeader=function(y){var E=this,w=Reflect.get(y,"setRequestHeader");return function(){E.item.requestHeader||(E.item.requestHeader={});for(var M=arguments.length,P=new Array(M),U=0;U<M;U++)P[U]=arguments[U];return E.item.requestHeader[P[0]]=P[1],E.triggerUpdate(),w.apply(y,P)}},v.setOnReadyStateChange=function(y,E,w){var M=this;return Reflect.set(y,E,function(){M.onReadyStateChange();for(var P=arguments.length,U=new Array(P),V=0;V<P;V++)U[V]=arguments[V];w.apply(y,U)})},v.setOnAbort=function(y,E,w){var M=this;return Reflect.set(y,E,function(){M.onAbort();for(var P=arguments.length,U=new Array(P),V=0;V<P;V++)U[V]=arguments[V];w.apply(y,U)})},v.setOnTimeout=function(y,E,w){var M=this;return Reflect.set(y,E,function(){M.onTimeout();for(var P=arguments.length,U=new Array(P),V=0;V<P;V++)U[V]=arguments[V];w.apply(y,U)})},v.updateItemByReadyState=function(){switch(this.XMLReq.readyState){case 0:case 1:if(this.item.status=0,this.item.statusText="Pending",!this.item.startTime){this.item.startTime=Date.now();var y=(0,e._3)(this.item.startTime);this.item.startTimeText=y.year+"-"+y.month+"-"+y.day+" "+y.hour+":"+y.minute+":"+y.second+"."+y.millisecond}break;case 2:this.item.status=this.XMLReq.status,this.item.statusText="Loading",this.item.header={};for(var E=(this.XMLReq.getAllResponseHeaders()||"").split(`
`),w=0;w<E.length;w++){var M=E[w];if(M){var P=M.split(": "),U=P[0],V=P.slice(1).join(": ");this.item.header[U]=V}}break;case 3:this.item.status=this.XMLReq.status,this.item.statusText="Loading",this.XMLReq.response&&this.XMLReq.response.length&&(this.item.responseSize=this.XMLReq.response.length,this.item.responseSizeText=(0,e.KL)(this.item.responseSize));break;case 4:this.item.status=this.XMLReq.status||this.item.status||0,this.item.statusText=String(this.item.status),this.item.endTime=Date.now(),this.item.costTime=this.item.endTime-(this.item.startTime||this.item.endTime),this.item.response=this.XMLReq.response,this.XMLReq.response&&this.XMLReq.response.length&&(this.item.responseSize=this.XMLReq.response.length,this.item.responseSizeText=(0,e.KL)(this.item.responseSize));break;default:this.item.status=this.XMLReq.status,this.item.statusText="Unknown"}},T}(),dr=function(){function T(){}return T.create=function(v){return new Proxy(XMLHttpRequest,{construct:function(y){var E=new y;return new Proxy(E,new go(E,v))}})},T}();function fr(T,v){var y=typeof Symbol<"u"&&T[Symbol.iterator]||T["@@iterator"];if(y)return(y=y.call(T)).next.bind(y);if(Array.isArray(T)||(y=function(w,M){if(w){if(typeof w=="string")return Wr(w,M);var P=Object.prototype.toString.call(w).slice(8,-1);if(P==="Object"&&w.constructor&&(P=w.constructor.name),P==="Map"||P==="Set")return Array.from(w);if(P==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(P))return Wr(w,M)}}(T))||v){y&&(T=y);var E=0;return function(){return E>=T.length?{done:!0}:{done:!1,value:T[E++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Wr(T,v){(v==null||v>T.length)&&(v=T.length);for(var y=0,E=new Array(v);y<v;y++)E[y]=T[y];return E}dr.origXMLHttpRequest=XMLHttpRequest;var mo=function(){function T(y,E,w){this.resp=void 0,this.item=void 0,this.onUpdateCallback=void 0,this.resp=y,this.item=E,this.onUpdateCallback=w,this.mockReader()}var v=T.prototype;return v.set=function(y,E,w){return Reflect.set(y,E,w)},v.get=function(y,E){var w=this,M=Reflect.get(y,E);switch(E){case"arrayBuffer":case"blob":case"formData":case"json":case"text":return function(){return w.item.responseType=E.toLowerCase(),M.apply(y).then(function(P){return w.item.response=bi(w.item.responseType,P),w.onUpdateCallback(w.item),P})}}return typeof M=="function"?M.bind(y):M},v.mockReader=function(){var y,E=this;if(this.resp.body&&typeof this.resp.body.getReader=="function"){var w=this.resp.body.getReader;this.resp.body.getReader=function(){var M=w.apply(E.resp.body);if(E.item.readyState===4)return M;var P=M.read,U=M.cancel;return E.item.responseType="arraybuffer",M.read=function(){return P.apply(M).then(function(V){if(y){var j=new Uint8Array(y.length+V.value.length);j.set(y),j.set(V.value,y.length),y=j}else y=new Uint8Array(V.value);return E.item.endTime=Date.now(),E.item.costTime=E.item.endTime-(E.item.startTime||E.item.endTime),E.item.readyState=V.done?4:3,E.item.statusText=V.done?String(E.item.status):"Loading",E.item.responseSize=y.length,E.item.responseSizeText=e.KL(E.item.responseSize),V.done&&(E.item.response=bi(E.item.responseType,y)),E.onUpdateCallback(E.item),V})},M.cancel=function(){E.item.cancelState=2,E.item.statusText="Cancel",E.item.endTime=Date.now(),E.item.costTime=E.item.endTime-(E.item.startTime||E.item.endTime),E.item.response=bi(E.item.responseType,y),E.onUpdateCallback(E.item);for(var V=arguments.length,j=new Array(V),ae=0;ae<V;ae++)j[ae]=arguments[ae];return U.apply(M,j)},M}}},T}(),yo=function(){function T(y){this.onUpdateCallback=void 0,this.onUpdateCallback=y}var v=T.prototype;return v.apply=function(y,E,w){var M=this,P=w[0],U=w[1],V=new Di;return this.beforeFetch(V,P,U),y.apply(window,w).then(this.afterFetch(V)).catch(function(j){throw V.endTime=Date.now(),V.costTime=V.endTime-(V.startTime||V.endTime),M.onUpdateCallback(V),j})},v.beforeFetch=function(y,E,w){var M,P="GET",U=null;if(e.HD(E)?(P=(w==null?void 0:w.method)||"GET",M=hr(E),U=(w==null?void 0:w.headers)||null):(P=E.method||"GET",M=hr(E.url),U=E.headers),y.method=P,y.requestType="fetch",y.requestHeader=U,y.url=M.toString(),y.name=(M.pathname.split("/").pop()||"")+M.search,y.status=0,y.statusText="Pending",y.readyState=1,!y.startTime){y.startTime=Date.now();var V=e._3(y.startTime);y.startTimeText=V.year+"-"+V.month+"-"+V.day+" "+V.hour+":"+V.minute+":"+V.second+"."+V.millisecond}if(Object.prototype.toString.call(U)==="[object Headers]"){y.requestHeader={};for(var j,ae=fr(U);!(j=ae()).done;){var me=j.value,Ae=me[0],ke=me[1];y.requestHeader[Ae]=ke}}else y.requestHeader=U;if(M.search&&M.searchParams){y.getData={};for(var Ce,He=fr(M.searchParams);!(Ce=He()).done;){var je=Ce.value,rt=je[0],lt=je[1];y.getData[rt]=lt}}w!=null&&w.body&&(y.postData=ur(w.body)),this.onUpdateCallback(y)},v.afterFetch=function(y){var E=this;return function(w){y.endTime=Date.now(),y.costTime=y.endTime-(y.startTime||y.endTime),y.status=w.status,y.statusText=String(w.status);var M=!1;y.header={};for(var P,U=fr(w.headers);!(P=U()).done;){var V=P.value,j=V[0],ae=V[1];y.header[j]=ae,M=ae.toLowerCase().indexOf("chunked")>-1||M}return M?y.readyState=3:(y.readyState=4,E.handleResponseBody(w.clone(),y).then(function(me){y.responseSize=typeof me=="string"?me.length:me.byteLength,y.responseSizeText=e.KL(y.responseSize),y.response=bi(y.responseType,me),E.onUpdateCallback(y)})),E.onUpdateCallback(y),new Proxy(w,new mo(w,y,E.onUpdateCallback))}},v.handleResponseBody=function(y,E){var w=y.headers.get("content-type");return w&&w.includes("application/json")?(E.responseType="json",y.text()):w&&(w.includes("text/html")||w.includes("text/plain"))?(E.responseType="text",y.text()):(E.responseType="arraybuffer",y.arrayBuffer())},T}(),Ar=function(){function T(){}return T.create=function(v){return new Proxy(fetch,new yo(v))},T}();function _o(T,v){var y=typeof Symbol<"u"&&T[Symbol.iterator]||T["@@iterator"];if(y)return(y=y.call(T)).next.bind(y);if(Array.isArray(T)||(y=function(w,M){if(w){if(typeof w=="string")return Yr(w,M);var P=Object.prototype.toString.call(w).slice(8,-1);if(P==="Object"&&w.constructor&&(P=w.constructor.name),P==="Map"||P==="Set")return Array.from(w);if(P==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(P))return Yr(w,M)}}(T))||v){y&&(T=y);var E=0;return function(){return E>=T.length?{done:!0}:{done:!1,value:T[E++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Yr(T,v){(v==null||v>T.length)&&(v=T.length);for(var y=0,E=new Array(v);y<v;y++)E[y]=T[y];return E}Ar.origFetch=fetch;var Eo=function(T){return T instanceof Blob?T.type:T instanceof FormData?"multipart/form-data":T instanceof URLSearchParams?"application/x-www-form-urlencoded;charset=UTF-8":"text/plain;charset=UTF-8"},Co=function(){function T(v){this.onUpdateCallback=void 0,this.onUpdateCallback=v}return T.prototype.apply=function(v,y,E){var w=E[0],M=E[1],P=new Di,U=hr(w);if(P.method="POST",P.url=w,P.name=(U.pathname.split("/").pop()||"")+U.search,P.requestType="ping",P.requestHeader={"Content-Type":Eo(M)},P.status=0,P.statusText="Pending",U.search&&U.searchParams){P.getData={};for(var V,j=_o(U.searchParams);!(V=j()).done;){var ae=V.value,me=ae[0],Ae=ae[1];P.getData[me]=Ae}}P.postData=ur(M),P.startTime||(P.startTime=Date.now()),this.onUpdateCallback(P);var ke=v.apply(y,E);return ke?(P.endTime=Date.now(),P.costTime=P.endTime-(P.startTime||P.endTime),P.status=0,P.statusText="Sent",P.readyState=4):(P.status=500,P.statusText="Unknown"),this.onUpdateCallback(P),ke},T}(),pr=function(){function T(){}return T.create=function(v){return new Proxy(navigator.sendBeacon,new Co(v))},T}();pr.origSendBeacon=navigator.sendBeacon;var mi=(0,xn.fZ)({}),Gi=function(T){function v(){var E;return(E=T.call(this)||this).maxNetworkNumber=1e3,E.ignoreUrlRegExp=void 0,E.itemCounter=0,E.mockXHR(),E.mockFetch(),E.mockSendBeacon(),E}(0,a.Z)(v,T);var y=v.prototype;return y.unMock=function(){window.hasOwnProperty("XMLHttpRequest")&&(window.XMLHttpRequest=dr.origXMLHttpRequest),window.hasOwnProperty("fetch")&&(window.fetch=Ar.origFetch),window.navigator.sendBeacon&&(window.navigator.sendBeacon=pr.origSendBeacon)},y.clearLog=function(){mi.set({})},y.updateRequest=function(E,w){var M,P=w.url;if(!P||(M=this.ignoreUrlRegExp)==null||!M.test(P)){var U=(0,xn.U2)(mi),V=!!U[E];if(V){var j=U[E];for(var ae in w)j[ae]=w[ae];w=j}mi.update(function(me){return me[E]=w,me}),V||(J.x.updateTime(),this.limitListLength())}},y.mockXHR=function(){var E=this;window.hasOwnProperty("XMLHttpRequest")&&(window.XMLHttpRequest=dr.create(function(w){E.updateRequest(w.id,w)}))},y.mockFetch=function(){var E=this;window.hasOwnProperty("fetch")&&(window.fetch=Ar.create(function(w){E.updateRequest(w.id,w)}))},y.mockSendBeacon=function(){var E,w,M=this;(E=window)!=null&&(w=E.navigator)!=null&&w.sendBeacon&&(window.navigator.sendBeacon=pr.create(function(P){M.updateRequest(P.id,P)}))},y.limitListLength=function(){var E=this;if(this.itemCounter++,this.itemCounter%10==0){this.itemCounter=0;var w=(0,xn.U2)(mi),M=Object.keys(w);M.length>this.maxNetworkNumber-10&&mi.update(function(P){for(var U=M.splice(0,M.length-E.maxNetworkNumber+10),V=0;V<U.length;V++)P[U[V]]=void 0,delete P[U[V]];return P})}},v}(zr.N),zi=__webpack_require__(8747),Li={};zi.Z&&zi.Z.locals&&(Li.locals=zi.Z.locals);var gr,mr=0,Ii={};Ii.styleTagTransform=L(),Ii.setAttributes=B(),Ii.insert=_().bind(null,"head"),Ii.domAPI=f(),Ii.insertStyleElement=C(),Li.use=function(T){return Ii.options=T||{},mr++||(gr=u()(zi.Z,Ii)),Li},Li.unuse=function(){mr>0&&!--mr&&(gr(),gr=null)};var qr=Li;function jr(T,v,y){var E=T.slice();return E[11]=v[y][0],E[12]=v[y][1],E}function Xr(T,v,y){var E=T.slice();return E[11]=v[y][0],E[12]=v[y][1],E}function Kr(T,v,y){var E=T.slice();return E[11]=v[y][0],E[12]=v[y][1],E}function Jr(T,v,y){var E=T.slice();return E[11]=v[y][0],E[12]=v[y][1],E}function Zr(T){var v,y,E;return{c:function(){v=(0,r.fLW)("("),y=(0,r.fLW)(T[0]),E=(0,r.fLW)(")")},m:function(w,M){(0,r.$Tr)(w,v,M),(0,r.$Tr)(w,y,M),(0,r.$Tr)(w,E,M)},p:function(w,M){1&M&&(0,r.rTO)(y,w[0])},d:function(w){w&&(0,r.ogt)(v),w&&(0,r.ogt)(y),w&&(0,r.ogt)(E)}}}function vo(T){var v,y,E,w,M,P,U=T[0]>0&&Zr(T);return{c:function(){v=(0,r.bGB)("dl"),y=(0,r.bGB)("dd"),E=(0,r.fLW)("Name "),U&&U.c(),(w=(0,r.bGB)("dd")).textContent="Method",(M=(0,r.bGB)("dd")).textContent="Status",(P=(0,r.bGB)("dd")).textContent="Time",(0,r.Ljt)(y,"class","vc-table-col vc-table-col-4"),(0,r.Ljt)(w,"class","vc-table-col"),(0,r.Ljt)(M,"class","vc-table-col"),(0,r.Ljt)(P,"class","vc-table-col"),(0,r.Ljt)(v,"class","vc-table-row")},m:function(V,j){(0,r.$Tr)(V,v,j),(0,r.R3I)(v,y),(0,r.R3I)(y,E),U&&U.m(y,null),(0,r.R3I)(v,w),(0,r.R3I)(v,M),(0,r.R3I)(v,P)},p:function(V,j){V[0]>0?U?U.p(V,j):((U=Zr(V)).c(),U.m(y,null)):U&&(U.d(1),U=null)},d:function(V){V&&(0,r.ogt)(v),U&&U.d()}}}function Io(T){var v;return{c:function(){(v=(0,r.bGB)("div")).textContent="Empty",(0,r.Ljt)(v,"slot","empty"),(0,r.Ljt)(v,"class","vc-plugin-empty")},m:function(y,E){(0,r.$Tr)(y,v,E)},p:r.ZTd,d:function(y){y&&(0,r.ogt)(v)}}}function es(T){var v,y,E,w,M,P,U,V;P=new it({props:{content:T[10].requestHeader}});for(var j=Object.entries(T[10].requestHeader),ae=[],me=0;me<j.length;me+=1)ae[me]=ts(Jr(T,j,me));return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("dl"),E=(0,r.bGB)("dt"),w=(0,r.fLW)(`Request Headers
                `),M=(0,r.bGB)("i"),(0,r.YCL)(P.$$.fragment),U=(0,r.DhX)();for(var Ae=0;Ae<ae.length;Ae+=1)ae[Ae].c();(0,r.Ljt)(M,"class","vc-table-row-icon"),(0,r.Ljt)(E,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(y,"class","vc-table-row vc-left-border")},m:function(Ae,ke){(0,r.$Tr)(Ae,v,ke),(0,r.R3I)(v,y),(0,r.R3I)(y,E),(0,r.R3I)(E,w),(0,r.R3I)(E,M),(0,r.yef)(P,M,null),(0,r.R3I)(v,U);for(var Ce=0;Ce<ae.length;Ce+=1)ae[Ce].m(v,null);V=!0},p:function(Ae,ke){var Ce={};if(1024&ke&&(Ce.content=Ae[10].requestHeader),P.$set(Ce),1040&ke){var He;for(j=Object.entries(Ae[10].requestHeader),He=0;He<j.length;He+=1){var je=Jr(Ae,j,He);ae[He]?ae[He].p(je,ke):(ae[He]=ts(je),ae[He].c(),ae[He].m(v,null))}for(;He<ae.length;He+=1)ae[He].d(1);ae.length=j.length}},i:function(Ae){V||((0,r.Ui)(P.$$.fragment,Ae),V=!0)},o:function(Ae){(0,r.etI)(P.$$.fragment,Ae),V=!1},d:function(Ae){Ae&&(0,r.ogt)(v),(0,r.vpE)(P),(0,r.RMB)(ae,Ae)}}}function ts(T){var v,y,E,w,M,P,U,V=T[11]+"",j=T[4](T[12])+"";return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("div"),E=(0,r.fLW)(V),w=(0,r.DhX)(),M=(0,r.bGB)("div"),P=(0,r.fLW)(j),U=(0,r.DhX)(),(0,r.Ljt)(y,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(M,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(v,"class","vc-table-row vc-left-border vc-small")},m:function(ae,me){(0,r.$Tr)(ae,v,me),(0,r.R3I)(v,y),(0,r.R3I)(y,E),(0,r.R3I)(v,w),(0,r.R3I)(v,M),(0,r.R3I)(M,P),(0,r.R3I)(v,U)},p:function(ae,me){1024&me&&V!==(V=ae[11]+"")&&(0,r.rTO)(E,V),1024&me&&j!==(j=ae[4](ae[12])+"")&&(0,r.rTO)(P,j)},d:function(ae){ae&&(0,r.ogt)(v)}}}function ns(T){var v,y,E,w,M,P,U,V;P=new it({props:{content:T[10].getData}});for(var j=Object.entries(T[10].getData),ae=[],me=0;me<j.length;me+=1)ae[me]=is(Kr(T,j,me));return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("dl"),E=(0,r.bGB)("dt"),w=(0,r.fLW)(`Query String Parameters
                `),M=(0,r.bGB)("i"),(0,r.YCL)(P.$$.fragment),U=(0,r.DhX)();for(var Ae=0;Ae<ae.length;Ae+=1)ae[Ae].c();(0,r.Ljt)(M,"class","vc-table-row-icon"),(0,r.Ljt)(E,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(y,"class","vc-table-row vc-left-border")},m:function(Ae,ke){(0,r.$Tr)(Ae,v,ke),(0,r.R3I)(v,y),(0,r.R3I)(y,E),(0,r.R3I)(E,w),(0,r.R3I)(E,M),(0,r.yef)(P,M,null),(0,r.R3I)(v,U);for(var Ce=0;Ce<ae.length;Ce+=1)ae[Ce].m(v,null);V=!0},p:function(Ae,ke){var Ce={};if(1024&ke&&(Ce.content=Ae[10].getData),P.$set(Ce),1040&ke){var He;for(j=Object.entries(Ae[10].getData),He=0;He<j.length;He+=1){var je=Kr(Ae,j,He);ae[He]?ae[He].p(je,ke):(ae[He]=is(je),ae[He].c(),ae[He].m(v,null))}for(;He<ae.length;He+=1)ae[He].d(1);ae.length=j.length}},i:function(Ae){V||((0,r.Ui)(P.$$.fragment,Ae),V=!0)},o:function(Ae){(0,r.etI)(P.$$.fragment,Ae),V=!1},d:function(Ae){Ae&&(0,r.ogt)(v),(0,r.vpE)(P),(0,r.RMB)(ae,Ae)}}}function is(T){var v,y,E,w,M,P,U,V=T[11]+"",j=T[4](T[12])+"";return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("div"),E=(0,r.fLW)(V),w=(0,r.DhX)(),M=(0,r.bGB)("div"),P=(0,r.fLW)(j),U=(0,r.DhX)(),(0,r.Ljt)(y,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(M,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(v,"class","vc-table-row vc-left-border vc-small")},m:function(ae,me){(0,r.$Tr)(ae,v,me),(0,r.R3I)(v,y),(0,r.R3I)(y,E),(0,r.R3I)(v,w),(0,r.R3I)(v,M),(0,r.R3I)(M,P),(0,r.R3I)(v,U)},p:function(ae,me){1024&me&&V!==(V=ae[11]+"")&&(0,r.rTO)(E,V),1024&me&&j!==(j=ae[4](ae[12])+"")&&(0,r.rTO)(P,j)},d:function(ae){ae&&(0,r.ogt)(v)}}}function rs(T){var v,y,E,w,M,P,U,V;function j(Ae,ke){return typeof Ae[10].postData=="string"?xo:So}P=new it({props:{content:T[10].postData}});var ae=j(T),me=ae(T);return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("dl"),E=(0,r.bGB)("dt"),w=(0,r.fLW)(`Request Payload
                `),M=(0,r.bGB)("i"),(0,r.YCL)(P.$$.fragment),U=(0,r.DhX)(),me.c(),(0,r.Ljt)(M,"class","vc-table-row-icon"),(0,r.Ljt)(E,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(y,"class","vc-table-row vc-left-border")},m:function(Ae,ke){(0,r.$Tr)(Ae,v,ke),(0,r.R3I)(v,y),(0,r.R3I)(y,E),(0,r.R3I)(E,w),(0,r.R3I)(E,M),(0,r.yef)(P,M,null),(0,r.R3I)(v,U),me.m(v,null),V=!0},p:function(Ae,ke){var Ce={};1024&ke&&(Ce.content=Ae[10].postData),P.$set(Ce),ae===(ae=j(Ae))&&me?me.p(Ae,ke):(me.d(1),(me=ae(Ae))&&(me.c(),me.m(v,null)))},i:function(Ae){V||((0,r.Ui)(P.$$.fragment,Ae),V=!0)},o:function(Ae){(0,r.etI)(P.$$.fragment,Ae),V=!1},d:function(Ae){Ae&&(0,r.ogt)(v),(0,r.vpE)(P),me.d()}}}function So(T){for(var v,y=Object.entries(T[10].postData),E=[],w=0;w<y.length;w+=1)E[w]=ss(Xr(T,y,w));return{c:function(){for(var M=0;M<E.length;M+=1)E[M].c();v=(0,r.cSb)()},m:function(M,P){for(var U=0;U<E.length;U+=1)E[U].m(M,P);(0,r.$Tr)(M,v,P)},p:function(M,P){if(1040&P){var U;for(y=Object.entries(M[10].postData),U=0;U<y.length;U+=1){var V=Xr(M,y,U);E[U]?E[U].p(V,P):(E[U]=ss(V),E[U].c(),E[U].m(v.parentNode,v))}for(;U<E.length;U+=1)E[U].d(1);E.length=y.length}},d:function(M){(0,r.RMB)(E,M),M&&(0,r.ogt)(v)}}}function xo(T){var v,y,E,w=T[10].postData+"";return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("pre"),E=(0,r.fLW)(w),(0,r.Ljt)(y,"class","vc-table-col vc-table-col-value vc-max-height-line"),(0,r.Ljt)(y,"data-scrollable","1"),(0,r.Ljt)(v,"class","vc-table-row vc-left-border vc-small")},m:function(M,P){(0,r.$Tr)(M,v,P),(0,r.R3I)(v,y),(0,r.R3I)(y,E)},p:function(M,P){1024&P&&w!==(w=M[10].postData+"")&&(0,r.rTO)(E,w)},d:function(M){M&&(0,r.ogt)(v)}}}function ss(T){var v,y,E,w,M,P,U,V=T[11]+"",j=T[4](T[12])+"";return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("div"),E=(0,r.fLW)(V),w=(0,r.DhX)(),M=(0,r.bGB)("div"),P=(0,r.fLW)(j),U=(0,r.DhX)(),(0,r.Ljt)(y,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(M,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(M,"data-scrollable","1"),(0,r.Ljt)(v,"class","vc-table-row vc-left-border vc-small")},m:function(ae,me){(0,r.$Tr)(ae,v,me),(0,r.R3I)(v,y),(0,r.R3I)(y,E),(0,r.R3I)(v,w),(0,r.R3I)(v,M),(0,r.R3I)(M,P),(0,r.R3I)(v,U)},p:function(ae,me){1024&me&&V!==(V=ae[11]+"")&&(0,r.rTO)(E,V),1024&me&&j!==(j=ae[4](ae[12])+"")&&(0,r.rTO)(P,j)},d:function(ae){ae&&(0,r.ogt)(v)}}}function os(T){var v,y,E,w,M,P,U,V;P=new it({props:{content:T[10].header}});for(var j=Object.entries(T[10].header),ae=[],me=0;me<j.length;me+=1)ae[me]=as(jr(T,j,me));return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("dl"),E=(0,r.bGB)("dt"),w=(0,r.fLW)(`Response Headers
                `),M=(0,r.bGB)("i"),(0,r.YCL)(P.$$.fragment),U=(0,r.DhX)();for(var Ae=0;Ae<ae.length;Ae+=1)ae[Ae].c();(0,r.Ljt)(M,"class","vc-table-row-icon"),(0,r.Ljt)(E,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(y,"class","vc-table-row vc-left-border")},m:function(Ae,ke){(0,r.$Tr)(Ae,v,ke),(0,r.R3I)(v,y),(0,r.R3I)(y,E),(0,r.R3I)(E,w),(0,r.R3I)(E,M),(0,r.yef)(P,M,null),(0,r.R3I)(v,U);for(var Ce=0;Ce<ae.length;Ce+=1)ae[Ce].m(v,null);V=!0},p:function(Ae,ke){var Ce={};if(1024&ke&&(Ce.content=Ae[10].header),P.$set(Ce),1040&ke){var He;for(j=Object.entries(Ae[10].header),He=0;He<j.length;He+=1){var je=jr(Ae,j,He);ae[He]?ae[He].p(je,ke):(ae[He]=as(je),ae[He].c(),ae[He].m(v,null))}for(;He<ae.length;He+=1)ae[He].d(1);ae.length=j.length}},i:function(Ae){V||((0,r.Ui)(P.$$.fragment,Ae),V=!0)},o:function(Ae){(0,r.etI)(P.$$.fragment,Ae),V=!1},d:function(Ae){Ae&&(0,r.ogt)(v),(0,r.vpE)(P),(0,r.RMB)(ae,Ae)}}}function as(T){var v,y,E,w,M,P,U,V=T[11]+"",j=T[4](T[12])+"";return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("div"),E=(0,r.fLW)(V),w=(0,r.DhX)(),M=(0,r.bGB)("div"),P=(0,r.fLW)(j),U=(0,r.DhX)(),(0,r.Ljt)(y,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(M,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(v,"class","vc-table-row vc-left-border vc-small")},m:function(ae,me){(0,r.$Tr)(ae,v,me),(0,r.R3I)(v,y),(0,r.R3I)(y,E),(0,r.R3I)(v,w),(0,r.R3I)(v,M),(0,r.R3I)(M,P),(0,r.R3I)(v,U)},p:function(ae,me){1024&me&&V!==(V=ae[11]+"")&&(0,r.rTO)(E,V),1024&me&&j!==(j=ae[4](ae[12])+"")&&(0,r.rTO)(P,j)},d:function(ae){ae&&(0,r.ogt)(v)}}}function ls(T){var v,y,E,w,M,P=T[10].responseSizeText+"";return{c:function(){v=(0,r.bGB)("div"),(y=(0,r.bGB)("div")).textContent="Size",E=(0,r.DhX)(),w=(0,r.bGB)("div"),M=(0,r.fLW)(P),(0,r.Ljt)(y,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(w,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(v,"class","vc-table-row vc-left-border vc-small")},m:function(U,V){(0,r.$Tr)(U,v,V),(0,r.R3I)(v,y),(0,r.R3I)(v,E),(0,r.R3I)(v,w),(0,r.R3I)(w,M)},p:function(U,V){1024&V&&P!==(P=U[10].responseSizeText+"")&&(0,r.rTO)(M,P)},d:function(U){U&&(0,r.ogt)(v)}}}function bo(T){var v,y,E,w,M,P,U,V,j,ae,me,Ae,ke,Ce,He,je,rt,lt,pt,Tt,St,$t,Wt,qt,bt,wt,jt,yn,Xt,Yt,Qt,gt,Et,en,ct,xt,Ot,It,Gt,un,gn,vn,on,Vn,In,Hn,dn,Xn,_n,ci,Ai,wi,Qi,mt,Nt,kt,Ut,Kt,ln,Kn,$n,Wn,mn,Nn,pi,Un,Er,Ps,Wi=T[10].name+"",Yi=T[10].method+"",qi=T[10].statusText+"",ji=T[10].costTime+"",Xi=T[10].url+"",Ki=T[10].method+"",Ji=T[10].requestType+"",Zi=T[10].status+"",er=T[10].startTimeText+"",tr=(T[10].response||"")+"";function ia(){return T[7](T[10])}lt=new it({props:{handler:T[3],content:T[10]}});var Mn=T[10].requestHeader!==null&&es(T),Rn=T[10].getData!==null&&ns(T),Dn=T[10].postData!==null&&rs(T),Ln=T[10].header!==null&&os(T);ln=new it({props:{content:T[10].response}});var Jn=T[10].responseSize>0&&ls(T);return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("dl"),E=(0,r.bGB)("dd"),w=(0,r.fLW)(Wi),M=(0,r.bGB)("dd"),P=(0,r.fLW)(Yi),U=(0,r.bGB)("dd"),V=(0,r.fLW)(qi),j=(0,r.bGB)("dd"),ae=(0,r.fLW)(ji),me=(0,r.DhX)(),Ae=(0,r.bGB)("div"),ke=(0,r.bGB)("div"),Ce=(0,r.bGB)("dl"),He=(0,r.bGB)("dt"),je=(0,r.fLW)(`General
                `),rt=(0,r.bGB)("i"),(0,r.YCL)(lt.$$.fragment),pt=(0,r.DhX)(),Tt=(0,r.bGB)("div"),(St=(0,r.bGB)("div")).textContent="URL",$t=(0,r.DhX)(),Wt=(0,r.bGB)("div"),qt=(0,r.fLW)(Xi),bt=(0,r.DhX)(),wt=(0,r.bGB)("div"),(jt=(0,r.bGB)("div")).textContent="Method",yn=(0,r.DhX)(),Xt=(0,r.bGB)("div"),Yt=(0,r.fLW)(Ki),Qt=(0,r.DhX)(),gt=(0,r.bGB)("div"),(Et=(0,r.bGB)("div")).textContent="Request Type",en=(0,r.DhX)(),ct=(0,r.bGB)("div"),xt=(0,r.fLW)(Ji),Ot=(0,r.DhX)(),It=(0,r.bGB)("div"),(Gt=(0,r.bGB)("div")).textContent="HTTP Status",un=(0,r.DhX)(),gn=(0,r.bGB)("div"),vn=(0,r.fLW)(Zi),on=(0,r.DhX)(),Vn=(0,r.bGB)("div"),(In=(0,r.bGB)("div")).textContent="Start Time",Hn=(0,r.DhX)(),dn=(0,r.bGB)("div"),Xn=(0,r.fLW)(er),_n=(0,r.DhX)(),Mn&&Mn.c(),ci=(0,r.DhX)(),Rn&&Rn.c(),Ai=(0,r.DhX)(),Dn&&Dn.c(),wi=(0,r.DhX)(),Ln&&Ln.c(),Qi=(0,r.DhX)(),mt=(0,r.bGB)("div"),Nt=(0,r.bGB)("dl"),kt=(0,r.bGB)("dt"),Ut=(0,r.fLW)(`Response
                `),Kt=(0,r.bGB)("i"),(0,r.YCL)(ln.$$.fragment),Kn=(0,r.DhX)(),Jn&&Jn.c(),$n=(0,r.DhX)(),Wn=(0,r.bGB)("div"),mn=(0,r.bGB)("pre"),Nn=(0,r.fLW)(tr),(0,r.Ljt)(E,"class","vc-table-col vc-table-col-4"),(0,r.Ljt)(M,"class","vc-table-col"),(0,r.Ljt)(U,"class","vc-table-col"),(0,r.Ljt)(j,"class","vc-table-col"),(0,r.Ljt)(y,"class","vc-table-row vc-group-preview"),(0,r.VHj)(y,"vc-table-row-error",T[10].status>=400),(0,r.Ljt)(rt,"class","vc-table-row-icon"),(0,r.Ljt)(He,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(Ce,"class","vc-table-row vc-left-border"),(0,r.Ljt)(St,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(Wt,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(Tt,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(jt,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(Xt,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(wt,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(Et,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(ct,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(gt,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(Gt,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(gn,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(It,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(In,"class","vc-table-col vc-table-col-2"),(0,r.Ljt)(dn,"class","vc-table-col vc-table-col-4 vc-table-col-value vc-max-height-line"),(0,r.Ljt)(Vn,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(Kt,"class","vc-table-row-icon"),(0,r.Ljt)(kt,"class","vc-table-col vc-table-col-title"),(0,r.Ljt)(Nt,"class","vc-table-row vc-left-border"),(0,r.Ljt)(mn,"class","vc-table-col vc-max-height vc-min-height"),(0,r.Ljt)(mn,"data-scrollable","1"),(0,r.Ljt)(Wn,"class","vc-table-row vc-left-border vc-small"),(0,r.Ljt)(Ae,"class","vc-group-detail"),(0,r.Ljt)(v,"slot","item"),(0,r.Ljt)(v,"class","vc-group"),(0,r.Ljt)(v,"id",pi=T[10].id),(0,r.VHj)(v,"vc-actived",T[10].actived)},m:function(ii,cn){(0,r.$Tr)(ii,v,cn),(0,r.R3I)(v,y),(0,r.R3I)(y,E),(0,r.R3I)(E,w),(0,r.R3I)(y,M),(0,r.R3I)(M,P),(0,r.R3I)(y,U),(0,r.R3I)(U,V),(0,r.R3I)(y,j),(0,r.R3I)(j,ae),(0,r.R3I)(v,me),(0,r.R3I)(v,Ae),(0,r.R3I)(Ae,ke),(0,r.R3I)(ke,Ce),(0,r.R3I)(Ce,He),(0,r.R3I)(He,je),(0,r.R3I)(He,rt),(0,r.yef)(lt,rt,null),(0,r.R3I)(ke,pt),(0,r.R3I)(ke,Tt),(0,r.R3I)(Tt,St),(0,r.R3I)(Tt,$t),(0,r.R3I)(Tt,Wt),(0,r.R3I)(Wt,qt),(0,r.R3I)(ke,bt),(0,r.R3I)(ke,wt),(0,r.R3I)(wt,jt),(0,r.R3I)(wt,yn),(0,r.R3I)(wt,Xt),(0,r.R3I)(Xt,Yt),(0,r.R3I)(ke,Qt),(0,r.R3I)(ke,gt),(0,r.R3I)(gt,Et),(0,r.R3I)(gt,en),(0,r.R3I)(gt,ct),(0,r.R3I)(ct,xt),(0,r.R3I)(ke,Ot),(0,r.R3I)(ke,It),(0,r.R3I)(It,Gt),(0,r.R3I)(It,un),(0,r.R3I)(It,gn),(0,r.R3I)(gn,vn),(0,r.R3I)(ke,on),(0,r.R3I)(ke,Vn),(0,r.R3I)(Vn,In),(0,r.R3I)(Vn,Hn),(0,r.R3I)(Vn,dn),(0,r.R3I)(dn,Xn),(0,r.R3I)(Ae,_n),Mn&&Mn.m(Ae,null),(0,r.R3I)(Ae,ci),Rn&&Rn.m(Ae,null),(0,r.R3I)(Ae,Ai),Dn&&Dn.m(Ae,null),(0,r.R3I)(Ae,wi),Ln&&Ln.m(Ae,null),(0,r.R3I)(Ae,Qi),(0,r.R3I)(Ae,mt),(0,r.R3I)(mt,Nt),(0,r.R3I)(Nt,kt),(0,r.R3I)(kt,Ut),(0,r.R3I)(kt,Kt),(0,r.yef)(ln,Kt,null),(0,r.R3I)(mt,Kn),Jn&&Jn.m(mt,null),(0,r.R3I)(mt,$n),(0,r.R3I)(mt,Wn),(0,r.R3I)(Wn,mn),(0,r.R3I)(mn,Nn),Un=!0,Er||(Ps=(0,r.oLt)(y,"click",ia),Er=!0)},p:function(ii,cn){T=ii,(!Un||1024&cn)&&Wi!==(Wi=T[10].name+"")&&(0,r.rTO)(w,Wi),(!Un||1024&cn)&&Yi!==(Yi=T[10].method+"")&&(0,r.rTO)(P,Yi),(!Un||1024&cn)&&qi!==(qi=T[10].statusText+"")&&(0,r.rTO)(V,qi),(!Un||1024&cn)&&ji!==(ji=T[10].costTime+"")&&(0,r.rTO)(ae,ji),1024&cn&&(0,r.VHj)(y,"vc-table-row-error",T[10].status>=400);var Fs={};1024&cn&&(Fs.content=T[10]),lt.$set(Fs),(!Un||1024&cn)&&Xi!==(Xi=T[10].url+"")&&(0,r.rTO)(qt,Xi),(!Un||1024&cn)&&Ki!==(Ki=T[10].method+"")&&(0,r.rTO)(Yt,Ki),(!Un||1024&cn)&&Ji!==(Ji=T[10].requestType+"")&&(0,r.rTO)(xt,Ji),(!Un||1024&cn)&&Zi!==(Zi=T[10].status+"")&&(0,r.rTO)(vn,Zi),(!Un||1024&cn)&&er!==(er=T[10].startTimeText+"")&&(0,r.rTO)(Xn,er),T[10].requestHeader!==null?Mn?(Mn.p(T,cn),1024&cn&&(0,r.Ui)(Mn,1)):((Mn=es(T)).c(),(0,r.Ui)(Mn,1),Mn.m(Ae,ci)):Mn&&((0,r.dvw)(),(0,r.etI)(Mn,1,1,function(){Mn=null}),(0,r.gbL)()),T[10].getData!==null?Rn?(Rn.p(T,cn),1024&cn&&(0,r.Ui)(Rn,1)):((Rn=ns(T)).c(),(0,r.Ui)(Rn,1),Rn.m(Ae,Ai)):Rn&&((0,r.dvw)(),(0,r.etI)(Rn,1,1,function(){Rn=null}),(0,r.gbL)()),T[10].postData!==null?Dn?(Dn.p(T,cn),1024&cn&&(0,r.Ui)(Dn,1)):((Dn=rs(T)).c(),(0,r.Ui)(Dn,1),Dn.m(Ae,wi)):Dn&&((0,r.dvw)(),(0,r.etI)(Dn,1,1,function(){Dn=null}),(0,r.gbL)()),T[10].header!==null?Ln?(Ln.p(T,cn),1024&cn&&(0,r.Ui)(Ln,1)):((Ln=os(T)).c(),(0,r.Ui)(Ln,1),Ln.m(Ae,Qi)):Ln&&((0,r.dvw)(),(0,r.etI)(Ln,1,1,function(){Ln=null}),(0,r.gbL)());var Qs={};1024&cn&&(Qs.content=T[10].response),ln.$set(Qs),T[10].responseSize>0?Jn?Jn.p(T,cn):((Jn=ls(T)).c(),Jn.m(mt,$n)):Jn&&(Jn.d(1),Jn=null),(!Un||1024&cn)&&tr!==(tr=(T[10].response||"")+"")&&(0,r.rTO)(Nn,tr),(!Un||1024&cn&&pi!==(pi=T[10].id))&&(0,r.Ljt)(v,"id",pi),1024&cn&&(0,r.VHj)(v,"vc-actived",T[10].actived)},i:function(ii){Un||((0,r.Ui)(lt.$$.fragment,ii),(0,r.Ui)(Mn),(0,r.Ui)(Rn),(0,r.Ui)(Dn),(0,r.Ui)(Ln),(0,r.Ui)(ln.$$.fragment,ii),Un=!0)},o:function(ii){(0,r.etI)(lt.$$.fragment,ii),(0,r.etI)(Mn),(0,r.etI)(Rn),(0,r.etI)(Dn),(0,r.etI)(Ln),(0,r.etI)(ln.$$.fragment,ii),Un=!1},d:function(ii){ii&&(0,r.ogt)(v),(0,r.vpE)(lt),Mn&&Mn.d(),Rn&&Rn.d(),Dn&&Dn.d(),Ln&&Ln.d(),(0,r.vpE)(ln),Jn&&Jn.d(),Er=!1,Ps()}}}function Bo(T){var v,y,E,w;return E=new kr({props:{items:T[1],itemKey:"id",itemHeight:30,buffer:100,stickToBottom:!0,scrollbar:!0,$$slots:{item:[bo,function(M){return{10:M.item}},function(M){return M.item?1024:0}],empty:[Io],header:[vo]},$$scope:{ctx:T}}}),{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("div"),(0,r.YCL)(E.$$.fragment),(0,r.Ljt)(y,"class","vc-plugin-content"),(0,r.Ljt)(v,"class","vc-table")},m:function(M,P){(0,r.$Tr)(M,v,P),(0,r.R3I)(v,y),(0,r.yef)(E,y,null),w=!0},p:function(M,P){var U=P[0],V={};2&U&&(V.items=M[1]),2098177&U&&(V.$$scope={dirty:U,ctx:M}),E.$set(V)},i:function(M){w||((0,r.Ui)(E.$$.fragment,M),w=!0)},o:function(M){(0,r.etI)(E.$$.fragment,M),w=!1},d:function(M){M&&(0,r.ogt)(v),(0,r.vpE)(E)}}}function wo(T,v,y){var E;(0,r.FIv)(T,mi,function(j){return y(6,E=j)});var w=0,M=function(j){y(0,w=Object.keys(j).length)},P=mi.subscribe(M);M(E);var U=[],V=function(j){(0,r.fxP)(mi,E[j].actived=!E[j].actived,E)};return(0,l.H3)(function(){qr.use()}),(0,l.ev)(function(){P(),qr.unuse()}),T.$$.update=function(){64&T.$$.dirty&&y(1,U=Object.values(E))},[w,U,V,function(j){var ae="curl -X "+j.method;return typeof j.postData=="string"?ae+=" -d '"+j.postData+"'":typeof j.postData=="object"&&j.postData!==null&&(ae+=" -d '"+e.hZ(j.postData)+"'"),ae+" '"+j.url+"'"},function(j){return e.Kn(j)||e.kJ(j)?e.hZ(j,{maxDepth:10,keyMaxLen:1e4,pretty:!0}):j},{fixedHeight:!0},E,function(j){return V(j.id)}]}var To=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,wo,Bo,r.N8,{options:5}),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"options",get:function(){return this.$$.ctx[5]}}]),v}(r.f_C),Mo=To,Ro=function(T){function v(){for(var E,w=arguments.length,M=new Array(w),P=0;P<w;P++)M[P]=arguments[P];return(E=T.call.apply(T,[this].concat(M))||this).model=Gi.getSingleton(Gi,"VConsoleNetworkModel"),E}(0,a.Z)(v,T);var y=v.prototype;return y.add=function(E){var w=new $r(new Di);for(var M in E)w[M]=E[M];return w.startTime=w.startTime||Date.now(),w.requestType=w.requestType||"custom",this.model.updateRequest(w.id,w),w},y.update=function(E,w){this.model.updateRequest(E,w)},y.clear=function(){this.model.clearLog()},v}(Ur),cs=function(T){function v(E,w,M){var P;return M===void 0&&(M={}),(P=T.call(this,E,w,Mo,M)||this).model=Gi.getSingleton(Gi,"VConsoleNetworkModel"),P.exporter=void 0,P.exporter=new Ro(E),P}(0,a.Z)(v,T);var y=v.prototype;return y.onReady=function(){T.prototype.onReady.call(this),this.onUpdateOption()},y.onAddTool=function(E){var w=this;E([{name:"Clear",global:!1,onClick:function(M){w.model.clearLog()}}])},y.onRemove=function(){T.prototype.onRemove.call(this),this.model&&this.model.unMock()},y.onUpdateOption=function(){var E,w,M;((E=this.vConsole.option.network)==null?void 0:E.maxNetworkNumber)!==this.model.maxNetworkNumber&&(this.model.maxNetworkNumber=Number((M=this.vConsole.option.network)==null?void 0:M.maxNetworkNumber)||1e3),(w=this.vConsole.option.network)!=null&&w.ignoreUrlRegExp&&(this.model.ignoreUrlRegExp=this.vConsole.option.network.ignoreUrlRegExp)},v}(te),Do=__webpack_require__(8679),Lo=__webpack_require__.n(Do),Vi=(0,xn.fZ)(),Pi=(0,xn.fZ)(),Hi=__webpack_require__(5670),Fi={};Hi.Z&&Hi.Z.locals&&(Fi.locals=Hi.Z.locals);var yr,_r=0,Si={};Si.styleTagTransform=L(),Si.setAttributes=B(),Si.insert=_().bind(null,"head"),Si.domAPI=f(),Si.insertStyleElement=C(),Fi.use=function(T){return Si.options=T||{},_r++||(yr=u()(Hi.Z,Si)),Fi},Fi.unuse=function(){_r>0&&!--_r&&(yr(),yr=null)};var us=Fi;function hs(T,v,y){var E=T.slice();return E[8]=v[y],E}function ds(T,v,y){var E=T.slice();return E[11]=v[y],E}function fs(T){var v,y,E,w=T[0].nodeType===Node.ELEMENT_NODE&&As(T),M=T[0].nodeType===Node.TEXT_NODE&&Cs(T);return{c:function(){v=(0,r.bGB)("div"),w&&w.c(),y=(0,r.DhX)(),M&&M.c(),(0,r.Ljt)(v,"class","vcelm-l"),(0,r.VHj)(v,"vc-actived",T[0]._isActived),(0,r.VHj)(v,"vc-toggle",T[0]._isExpand),(0,r.VHj)(v,"vcelm-noc",T[0]._isSingleLine)},m:function(P,U){(0,r.$Tr)(P,v,U),w&&w.m(v,null),(0,r.R3I)(v,y),M&&M.m(v,null),E=!0},p:function(P,U){P[0].nodeType===Node.ELEMENT_NODE?w?(w.p(P,U),1&U&&(0,r.Ui)(w,1)):((w=As(P)).c(),(0,r.Ui)(w,1),w.m(v,y)):w&&((0,r.dvw)(),(0,r.etI)(w,1,1,function(){w=null}),(0,r.gbL)()),P[0].nodeType===Node.TEXT_NODE?M?M.p(P,U):((M=Cs(P)).c(),M.m(v,null)):M&&(M.d(1),M=null),1&U&&(0,r.VHj)(v,"vc-actived",P[0]._isActived),1&U&&(0,r.VHj)(v,"vc-toggle",P[0]._isExpand),1&U&&(0,r.VHj)(v,"vcelm-noc",P[0]._isSingleLine)},i:function(P){E||((0,r.Ui)(w),E=!0)},o:function(P){(0,r.etI)(w),E=!1},d:function(P){P&&(0,r.ogt)(v),w&&w.d(),M&&M.d()}}}function As(T){var v,y,E,w,M,P,U,V,j,ae,me=T[0].nodeName+"",Ae=(T[0].className||T[0].attributes.length)&&ps(T),ke=T[0]._isNullEndTag&&ms(),Ce=T[0].childNodes.length>0&&ys(T),He=!T[0]._isNullEndTag&&Es(T);return{c:function(){v=(0,r.bGB)("span"),y=(0,r.fLW)("<"),E=(0,r.fLW)(me),Ae&&Ae.c(),w=(0,r.cSb)(),ke&&ke.c(),M=(0,r.fLW)(">"),Ce&&Ce.c(),P=(0,r.cSb)(),He&&He.c(),U=(0,r.cSb)(),(0,r.Ljt)(v,"class","vcelm-node")},m:function(je,rt){(0,r.$Tr)(je,v,rt),(0,r.R3I)(v,y),(0,r.R3I)(v,E),Ae&&Ae.m(v,null),(0,r.R3I)(v,w),ke&&ke.m(v,null),(0,r.R3I)(v,M),Ce&&Ce.m(je,rt),(0,r.$Tr)(je,P,rt),He&&He.m(je,rt),(0,r.$Tr)(je,U,rt),V=!0,j||(ae=(0,r.oLt)(v,"click",T[2]),j=!0)},p:function(je,rt){(!V||1&rt)&&me!==(me=je[0].nodeName+"")&&(0,r.rTO)(E,me),je[0].className||je[0].attributes.length?Ae?Ae.p(je,rt):((Ae=ps(je)).c(),Ae.m(v,w)):Ae&&(Ae.d(1),Ae=null),je[0]._isNullEndTag?ke||((ke=ms()).c(),ke.m(v,M)):ke&&(ke.d(1),ke=null),je[0].childNodes.length>0?Ce?(Ce.p(je,rt),1&rt&&(0,r.Ui)(Ce,1)):((Ce=ys(je)).c(),(0,r.Ui)(Ce,1),Ce.m(P.parentNode,P)):Ce&&((0,r.dvw)(),(0,r.etI)(Ce,1,1,function(){Ce=null}),(0,r.gbL)()),je[0]._isNullEndTag?He&&(He.d(1),He=null):He?He.p(je,rt):((He=Es(je)).c(),He.m(U.parentNode,U))},i:function(je){V||((0,r.Ui)(Ce),V=!0)},o:function(je){(0,r.etI)(Ce),V=!1},d:function(je){je&&(0,r.ogt)(v),Ae&&Ae.d(),ke&&ke.d(),Ce&&Ce.d(je),je&&(0,r.ogt)(P),He&&He.d(je),je&&(0,r.ogt)(U),j=!1,ae()}}}function ps(T){for(var v,y=T[0].attributes,E=[],w=0;w<y.length;w+=1)E[w]=gs(ds(T,y,w));return{c:function(){v=(0,r.bGB)("i");for(var M=0;M<E.length;M+=1)E[M].c();(0,r.Ljt)(v,"class","vcelm-k")},m:function(M,P){(0,r.$Tr)(M,v,P);for(var U=0;U<E.length;U+=1)E[U].m(v,null)},p:function(M,P){if(1&P){var U;for(y=M[0].attributes,U=0;U<y.length;U+=1){var V=ds(M,y,U);E[U]?E[U].p(V,P):(E[U]=gs(V),E[U].c(),E[U].m(v,null))}for(;U<E.length;U+=1)E[U].d(1);E.length=y.length}},d:function(M){M&&(0,r.ogt)(v),(0,r.RMB)(E,M)}}}function Po(T){var v,y=T[11].name+"";return{c:function(){v=(0,r.fLW)(y)},m:function(E,w){(0,r.$Tr)(E,v,w)},p:function(E,w){1&w&&y!==(y=E[11].name+"")&&(0,r.rTO)(v,y)},d:function(E){E&&(0,r.ogt)(v)}}}function Fo(T){var v,y,E,w,M,P=T[11].name+"",U=T[11].value+"";return{c:function(){v=(0,r.fLW)(P),y=(0,r.fLW)('="'),E=(0,r.bGB)("i"),w=(0,r.fLW)(U),M=(0,r.fLW)('"'),(0,r.Ljt)(E,"class","vcelm-v")},m:function(V,j){(0,r.$Tr)(V,v,j),(0,r.$Tr)(V,y,j),(0,r.$Tr)(V,E,j),(0,r.R3I)(E,w),(0,r.$Tr)(V,M,j)},p:function(V,j){1&j&&P!==(P=V[11].name+"")&&(0,r.rTO)(v,P),1&j&&U!==(U=V[11].value+"")&&(0,r.rTO)(w,U)},d:function(V){V&&(0,r.ogt)(v),V&&(0,r.ogt)(y),V&&(0,r.ogt)(E),V&&(0,r.ogt)(M)}}}function gs(T){var v,y;function E(P,U){return P[11].value!==""?Fo:Po}var w=E(T),M=w(T);return{c:function(){v=(0,r.fLW)(` 
            `),M.c(),y=(0,r.cSb)()},m:function(P,U){(0,r.$Tr)(P,v,U),M.m(P,U),(0,r.$Tr)(P,y,U)},p:function(P,U){w===(w=E(P))&&M?M.p(P,U):(M.d(1),(M=w(P))&&(M.c(),M.m(y.parentNode,y)))},d:function(P){P&&(0,r.ogt)(v),M.d(P),P&&(0,r.ogt)(y)}}}function ms(T){var v;return{c:function(){v=(0,r.fLW)("/")},m:function(y,E){(0,r.$Tr)(y,v,E)},d:function(y){y&&(0,r.ogt)(v)}}}function ys(T){var v,y,E,w,M=[ko,Qo],P=[];function U(V,j){return V[0]._isExpand?1:0}return v=U(T),y=P[v]=M[v](T),{c:function(){y.c(),E=(0,r.cSb)()},m:function(V,j){P[v].m(V,j),(0,r.$Tr)(V,E,j),w=!0},p:function(V,j){var ae=v;(v=U(V))===ae?P[v].p(V,j):((0,r.dvw)(),(0,r.etI)(P[ae],1,1,function(){P[ae]=null}),(0,r.gbL)(),(y=P[v])?y.p(V,j):(y=P[v]=M[v](V)).c(),(0,r.Ui)(y,1),y.m(E.parentNode,E))},i:function(V){w||((0,r.Ui)(y),w=!0)},o:function(V){(0,r.etI)(y),w=!1},d:function(V){P[v].d(V),V&&(0,r.ogt)(E)}}}function Qo(T){for(var v,y,E=T[0].childNodes,w=[],M=0;M<E.length;M+=1)w[M]=_s(hs(T,E,M));var P=function(U){return(0,r.etI)(w[U],1,1,function(){w[U]=null})};return{c:function(){for(var U=0;U<w.length;U+=1)w[U].c();v=(0,r.cSb)()},m:function(U,V){for(var j=0;j<w.length;j+=1)w[j].m(U,V);(0,r.$Tr)(U,v,V),y=!0},p:function(U,V){if(1&V){var j;for(E=U[0].childNodes,j=0;j<E.length;j+=1){var ae=hs(U,E,j);w[j]?(w[j].p(ae,V),(0,r.Ui)(w[j],1)):(w[j]=_s(ae),w[j].c(),(0,r.Ui)(w[j],1),w[j].m(v.parentNode,v))}for((0,r.dvw)(),j=E.length;j<w.length;j+=1)P(j);(0,r.gbL)()}},i:function(U){if(!y){for(var V=0;V<E.length;V+=1)(0,r.Ui)(w[V]);y=!0}},o:function(U){w=w.filter(Boolean);for(var V=0;V<w.length;V+=1)(0,r.etI)(w[V]);y=!1},d:function(U){(0,r.RMB)(w,U),U&&(0,r.ogt)(v)}}}function ko(T){var v;return{c:function(){v=(0,r.fLW)("...")},m:function(y,E){(0,r.$Tr)(y,v,E)},p:r.ZTd,i:r.ZTd,o:r.ZTd,d:function(y){y&&(0,r.ogt)(v)}}}function _s(T){var v,y,E;return(v=new vs({props:{node:T[8]}})).$on("toggleNode",T[4]),{c:function(){(0,r.YCL)(v.$$.fragment),y=(0,r.DhX)()},m:function(w,M){(0,r.yef)(v,w,M),(0,r.$Tr)(w,y,M),E=!0},p:function(w,M){var P={};1&M&&(P.node=w[8]),v.$set(P)},i:function(w){E||((0,r.Ui)(v.$$.fragment,w),E=!0)},o:function(w){(0,r.etI)(v.$$.fragment,w),E=!1},d:function(w){(0,r.vpE)(v,w),w&&(0,r.ogt)(y)}}}function Es(T){var v,y,E,w,M=T[0].nodeName+"";return{c:function(){v=(0,r.bGB)("span"),y=(0,r.fLW)("</"),E=(0,r.fLW)(M),w=(0,r.fLW)(">"),(0,r.Ljt)(v,"class","vcelm-node")},m:function(P,U){(0,r.$Tr)(P,v,U),(0,r.R3I)(v,y),(0,r.R3I)(v,E),(0,r.R3I)(v,w)},p:function(P,U){1&U&&M!==(M=P[0].nodeName+"")&&(0,r.rTO)(E,M)},d:function(P){P&&(0,r.ogt)(v)}}}function Cs(T){var v,y,E=T[1](T[0].textContent)+"";return{c:function(){v=(0,r.bGB)("span"),y=(0,r.fLW)(E),(0,r.Ljt)(v,"class","vcelm-t vcelm-noc")},m:function(w,M){(0,r.$Tr)(w,v,M),(0,r.R3I)(v,y)},p:function(w,M){1&M&&E!==(E=w[1](w[0].textContent)+"")&&(0,r.rTO)(y,E)},d:function(w){w&&(0,r.ogt)(v)}}}function No(T){var v,y,E=T[0]&&fs(T);return{c:function(){E&&E.c(),v=(0,r.cSb)()},m:function(w,M){E&&E.m(w,M),(0,r.$Tr)(w,v,M),y=!0},p:function(w,M){var P=M[0];w[0]?E?(E.p(w,P),1&P&&(0,r.Ui)(E,1)):((E=fs(w)).c(),(0,r.Ui)(E,1),E.m(v.parentNode,v)):E&&((0,r.dvw)(),(0,r.etI)(E,1,1,function(){E=null}),(0,r.gbL)())},i:function(w){y||((0,r.Ui)(E),y=!0)},o:function(w){(0,r.etI)(E),y=!1},d:function(w){E&&E.d(w),w&&(0,r.ogt)(v)}}}function Uo(T,v,y){var E;(0,r.FIv)(T,Pi,function(U){return y(3,E=U)});var w=v.node,M=(0,l.x)(),P=["br","hr","img","input","link","meta"];return(0,l.H3)(function(){us.use()}),(0,l.ev)(function(){us.unuse()}),T.$$set=function(U){"node"in U&&y(0,w=U.node)},T.$$.update=function(){9&T.$$.dirty&&w&&(y(0,w._isActived=w===E,w),y(0,w._isNullEndTag=function(U){return P.indexOf(U.nodeName)>-1}(w),w),y(0,w._isSingleLine=w.childNodes.length===0||w._isNullEndTag,w))},[w,function(U){return U.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")},function(){w._isNullEndTag||(y(0,w._isExpand=!w._isExpand,w),M("toggleNode",{node:w}))},E,function(U){r.cKT.call(this,T,U)}]}var vs=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,Uo,No,r.N8,{node:0}),E}return(0,a.Z)(v,T),(0,s.Z)(v,[{key:"node",get:function(){return this.$$.ctx[0]},set:function(y){this.$$set({node:y}),(0,r.yl1)()}}]),v}(r.f_C),Oo=vs;function Go(T){var v,y,E;return(y=new Oo({props:{node:T[0]}})).$on("toggleNode",T[1]),{c:function(){v=(0,r.bGB)("div"),(0,r.YCL)(y.$$.fragment),(0,r.Ljt)(v,"class","vc-plugin-content")},m:function(w,M){(0,r.$Tr)(w,v,M),(0,r.yef)(y,v,null),E=!0},p:function(w,M){var P={};1&M[0]&&(P.node=w[0]),y.$set(P)},i:function(w){E||((0,r.Ui)(y.$$.fragment,w),E=!0)},o:function(w){(0,r.etI)(y.$$.fragment,w),E=!1},d:function(w){w&&(0,r.ogt)(v),(0,r.vpE)(y)}}}function zo(T,v,y){var E;return(0,r.FIv)(T,Vi,function(w){return y(0,E=w)}),[E,function(w){r.cKT.call(this,T,w)}]}var Vo=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,zo,Go,r.N8,{}),E}return(0,a.Z)(v,T),v}(r.f_C),Ho=Vo,Is=function(T){function v(E,w,M){var P;return M===void 0&&(M={}),(P=T.call(this,E,w,Ho,M)||this).isInited=!1,P.observer=void 0,P.nodeMap=void 0,P}(0,a.Z)(v,T);var y=v.prototype;return y.onShow=function(){this.isInited||this._init()},y.onRemove=function(){T.prototype.onRemove.call(this),this.isInited&&(this.observer.disconnect(),this.isInited=!1,this.nodeMap=void 0,Vi.set(void 0))},y.onAddTool=function(E){var w=this;E([{name:"Expand",global:!1,onClick:function(M){w._expandActivedNode()}},{name:"Collapse",global:!1,onClick:function(M){w._collapseActivedNode()}}])},y._init=function(){var E=this;this.isInited=!0,this.nodeMap=new WeakMap;var w=this._generateVNode(document.documentElement);w._isExpand=!0,Pi.set(w),Vi.set(w),this.compInstance.$on("toggleNode",function(M){Pi.set(M.detail.node)}),this.observer=new(Lo())(function(M){for(var P=0;P<M.length;P++){var U=M[P];E._isInVConsole(U.target)||E._handleMutation(U)}}),this.observer.observe(document.documentElement,{attributes:!0,childList:!0,characterData:!0,subtree:!0})},y._handleMutation=function(E){switch(E.type){case"childList":E.removedNodes.length>0&&this._onChildRemove(E),E.addedNodes.length>0&&this._onChildAdd(E);break;case"attributes":this._onAttributesChange(E);break;case"characterData":this._onCharacterDataChange(E)}},y._onChildRemove=function(E){var w=this.nodeMap.get(E.target);if(w){for(var M=0;M<E.removedNodes.length;M++){var P=this.nodeMap.get(E.removedNodes[M]);if(P){for(var U=0;U<w.childNodes.length;U++)if(w.childNodes[U]===P){w.childNodes.splice(U,1);break}this.nodeMap.delete(E.removedNodes[M])}}this._refreshStore()}},y._onChildAdd=function(E){var w=this.nodeMap.get(E.target);if(w){for(var M=0;M<E.addedNodes.length;M++){var P=E.addedNodes[M],U=this._generateVNode(P);if(U){var V=void 0,j=P;do{if(j.nextSibling===null)break;j.nodeType===Node.ELEMENT_NODE&&(V=this.nodeMap.get(j.nextSibling)||void 0),j=j.nextSibling}while(V===void 0);if(V===void 0)w.childNodes.push(U);else for(var ae=0;ae<w.childNodes.length;ae++)if(w.childNodes[ae]===V){w.childNodes.splice(ae,0,U);break}}}this._refreshStore()}},y._onAttributesChange=function(E){this._updateVNodeAttributes(E.target),this._refreshStore()},y._onCharacterDataChange=function(E){var w=this.nodeMap.get(E.target);w&&(w.textContent=E.target.textContent,this._refreshStore())},y._generateVNode=function(E){if(!this._isIgnoredNode(E)){var w={nodeType:E.nodeType,nodeName:E.nodeName.toLowerCase(),textContent:"",id:"",className:"",attributes:[],childNodes:[]};if(this.nodeMap.set(E,w),w.nodeType!=E.TEXT_NODE&&w.nodeType!=E.DOCUMENT_TYPE_NODE||(w.textContent=E.textContent),E.childNodes.length>0){w.childNodes=[];for(var M=0;M<E.childNodes.length;M++){var P=this._generateVNode(E.childNodes[M]);P&&w.childNodes.push(P)}}return this._updateVNodeAttributes(E),w}},y._updateVNodeAttributes=function(E){var w=this.nodeMap.get(E);if(w&&E instanceof Element&&(w.id=E.id||"",w.className=E.className||"",E.hasAttributes&&E.hasAttributes())){w.attributes=[];for(var M=0;M<E.attributes.length;M++)w.attributes.push({name:E.attributes[M].name,value:E.attributes[M].value||""})}},y._expandActivedNode=function(){var E=(0,xn.U2)(Pi);if(E._isExpand)for(var w=0;w<E.childNodes.length;w++)E.childNodes[w]._isExpand=!0;else E._isExpand=!0;this._refreshStore()},y._collapseActivedNode=function(){var E=(0,xn.U2)(Pi);if(E._isExpand){for(var w=!1,M=0;M<E.childNodes.length;M++)E.childNodes[M]._isExpand&&(w=!0,E.childNodes[M]._isExpand=!1);w||(E._isExpand=!1),this._refreshStore()}},y._isIgnoredNode=function(E){if(E.nodeType===E.TEXT_NODE){if(E.textContent.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$|\n+/g,"")==="")return!0}else if(E.nodeType===E.COMMENT_NODE)return!0;return!1},y._isInVConsole=function(E){for(var w=E;w!==void 0;){if(w.id=="__vconsole")return!0;w=w.parentElement||void 0}return!1},y._refreshStore=function(){Vi.update(function(E){return E})},v}(te);function Ss(T,v,y,E,w,M,P){try{var U=T[M](P),V=U.value}catch(j){return void y(j)}U.done?v(V):Promise.resolve(V).then(E,w)}function Bi(T){return function(){var v=this,y=arguments;return new Promise(function(E,w){var M=T.apply(v,y);function P(V){Ss(M,E,w,P,U,"next",V)}function U(V){Ss(M,E,w,P,U,"throw",V)}P(void 0)})}}var $o=__webpack_require__(8270);function xs(T,v){var y=Object.keys(T);if(Object.getOwnPropertySymbols){var E=Object.getOwnPropertySymbols(T);v&&(E=E.filter(function(w){return Object.getOwnPropertyDescriptor(T,w).enumerable})),y.push.apply(y,E)}return y}function bs(T){for(var v=1;v<arguments.length;v++){var y=arguments[v]!=null?arguments[v]:{};v%2?xs(Object(y),!0).forEach(function(E){(0,$o.Z)(T,E,y[E])}):Object.getOwnPropertyDescriptors?Object.defineProperties(T,Object.getOwnPropertyDescriptors(y)):xs(Object(y)).forEach(function(E){Object.defineProperty(T,E,Object.getOwnPropertyDescriptor(y,E))})}return T}var Bs=function(T){if(!T||T.length===0)return{};for(var v={},y=T.split(";"),E=0;E<y.length;E++){var w=y[E].indexOf("=");if(!(w<0)){var M=y[E].substring(0,w).replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),P=y[E].substring(w+1,y[E].length);try{M=decodeURIComponent(M)}catch{}try{P=decodeURIComponent(P)}catch{}v[M]=P}}return v},ws=function(T,v,y){typeof document<"u"&&document.cookie!==void 0&&(document.cookie=encodeURIComponent(T)+"="+encodeURIComponent(v)+function(E){E===void 0&&(E={});var w=E,M=w.path,P=w.domain,U=w.expires,V=w.secure,j=w.sameSite,ae=["none","lax","strict"].indexOf((j||"").toLowerCase())>-1?j:null;return[M==null?"":";path="+M,P==null?"":";domain="+P,U==null?"":";expires="+U.toUTCString(),V===void 0||V===!1?"":";secure",ae===null?"":";SameSite="+ae].join("")}(y))},Ts=function(){return typeof document>"u"||document.cookie===void 0?"":document.cookie},Wo=function(){function T(){}var v=T.prototype;return v.key=function(y){return y<this.keys.length?this.keys[y]:null},v.setItem=function(y,E,w){ws(y,E,w)},v.getItem=function(y){var E=Bs(Ts());return Object.prototype.hasOwnProperty.call(E,y)?E[y]:null},v.removeItem=function(y,E){for(var w,M,P=["","/"],U=((w=location)==null||(M=w.hostname)==null?void 0:M.split("."))||[];U.length>1;)P.push(U.join(".")),U.shift();for(var V=0;V<P.length;V++)for(var j,ae,me=((j=location)==null||(ae=j.pathname)==null?void 0:ae.split("/"))||[],Ae="";me.length>0;){Ae+=(Ae==="/"?"":"/")+me.shift();var ke=bs(bs({},E),{},{path:Ae,domain:P[V],expires:new Date(0)});ws(y,"",ke)}},v.clear=function(){for(var y=[].concat(this.keys),E=0;E<y.length;E++)this.removeItem(y[E])},(0,s.Z)(T,[{key:"length",get:function(){return this.keys.length}},{key:"keys",get:function(){var y=Bs(Ts());return Object.keys(y).sort()}}]),T}(),Yo=function(){function T(){this.keys=[],this.currentSize=0,this.limitSize=0}var v=T.prototype;return v.key=function(y){return y<this.keys.length?this.keys[y]:null},v.prepare=function(){var y=Bi(Vt().mark(function E(){var w=this;return Vt().wrap(function(M){for(;;)switch(M.prev=M.next){case 0:return M.abrupt("return",new Promise(function(P,U){(0,e.qt)("getStorageInfo",{success:function(V){w.keys=V?V.keys.sort():[],w.currentSize=V?V.currentSize:0,w.limitSize=V?V.limitSize:0,P(!0)},fail:function(){U(!1)}})}));case 1:case"end":return M.stop()}},E)}));return function(){return y.apply(this,arguments)}}(),v.getItem=function(y){return new Promise(function(E,w){(0,e.qt)("getStorage",{key:y,success:function(M){var P=M.data;if(typeof M.data=="object")try{P=JSON.stringify(M.data)}catch{}E(P)},fail:function(M){w(M)}})})},v.setItem=function(y,E){return new Promise(function(w,M){(0,e.qt)("setStorage",{key:y,data:E,success:function(P){w(P)},fail:function(P){M(P)}})})},v.removeItem=function(y){return new Promise(function(E,w){(0,e.qt)("removeStorage",{key:y,success:function(M){E(M)},fail:function(M){w(M)}})})},v.clear=function(){return new Promise(function(y,E){(0,e.qt)("clearStorage",{success:function(w){y(w)},fail:function(w){E(w)}})})},(0,s.Z)(T,[{key:"length",get:function(){return this.keys.length}}]),T}(),Tn={updateTime:(0,xn.fZ)(0),activedName:(0,xn.fZ)(null),defaultStorages:(0,xn.fZ)(["cookies","localStorage","sessionStorage"])},$i=function(T){function v(){var E;return(E=T.call(this)||this).storage=new Map,Tn.activedName.subscribe(function(w){var M=(0,xn.U2)(Tn.defaultStorages);M.length>0&&M.indexOf(w)===-1&&Tn.activedName.set(M[0])}),Tn.defaultStorages.subscribe(function(w){w.indexOf((0,xn.U2)(Tn.activedName))===-1&&Tn.activedName.set(w[0]),E.updateEnabledStorages()}),E}(0,a.Z)(v,T);var y=v.prototype;return y.getItem=function(){var E=Bi(Vt().mark(function w(M){return Vt().wrap(function(P){for(;;)switch(P.prev=P.next){case 0:if(this.activedStorage){P.next=2;break}return P.abrupt("return","");case 2:return P.next=4,this.promisify(this.activedStorage.getItem(M));case 4:return P.abrupt("return",P.sent);case 5:case"end":return P.stop()}},w,this)}));return function(w){return E.apply(this,arguments)}}(),y.setItem=function(){var E=Bi(Vt().mark(function w(M,P){var U;return Vt().wrap(function(V){for(;;)switch(V.prev=V.next){case 0:if(this.activedStorage){V.next=2;break}return V.abrupt("return");case 2:return V.next=4,this.promisify(this.activedStorage.setItem(M,P));case 4:return U=V.sent,this.refresh(),V.abrupt("return",U);case 7:case"end":return V.stop()}},w,this)}));return function(w,M){return E.apply(this,arguments)}}(),y.removeItem=function(){var E=Bi(Vt().mark(function w(M){var P;return Vt().wrap(function(U){for(;;)switch(U.prev=U.next){case 0:if(this.activedStorage){U.next=2;break}return U.abrupt("return");case 2:return U.next=4,this.promisify(this.activedStorage.removeItem(M));case 4:return P=U.sent,this.refresh(),U.abrupt("return",P);case 7:case"end":return U.stop()}},w,this)}));return function(w){return E.apply(this,arguments)}}(),y.clear=function(){var E=Bi(Vt().mark(function w(){var M;return Vt().wrap(function(P){for(;;)switch(P.prev=P.next){case 0:if(this.activedStorage){P.next=2;break}return P.abrupt("return");case 2:return P.next=4,this.promisify(this.activedStorage.clear());case 4:return M=P.sent,this.refresh(),P.abrupt("return",M);case 7:case"end":return P.stop()}},w,this)}));return function(){return E.apply(this,arguments)}}(),y.refresh=function(){Tn.updateTime.set(Date.now())},y.getEntries=function(){var E=Bi(Vt().mark(function w(){var M,P,U,V,j;return Vt().wrap(function(ae){for(;;)switch(ae.prev=ae.next){case 0:if(M=this.activedStorage){ae.next=3;break}return ae.abrupt("return",[]);case 3:if(typeof M.prepare!="function"){ae.next=6;break}return ae.next=6,M.prepare();case 6:P=[],U=0;case 8:if(!(U<M.length)){ae.next=17;break}return V=M.key(U),ae.next=12,this.getItem(V);case 12:j=ae.sent,P.push([V,j]);case 14:U++,ae.next=8;break;case 17:return ae.abrupt("return",P);case 18:case"end":return ae.stop()}},w,this)}));return function(){return E.apply(this,arguments)}}(),y.updateEnabledStorages=function(){var E=(0,xn.U2)(Tn.defaultStorages);E.indexOf("cookies")>-1?document.cookie!==void 0&&this.storage.set("cookies",new Wo):this.deleteStorage("cookies"),E.indexOf("localStorage")>-1?window.localStorage&&this.storage.set("localStorage",window.localStorage):this.deleteStorage("localStorage"),E.indexOf("sessionStorage")>-1?window.sessionStorage&&this.storage.set("sessionStorage",window.sessionStorage):this.deleteStorage("sessionStorage"),E.indexOf("wxStorage")>-1?(0,e.H_)()&&this.storage.set("wxStorage",new Yo):this.deleteStorage("wxStorage")},y.promisify=function(E){return typeof E=="string"||E==null?Promise.resolve(E):E},y.deleteStorage=function(E){this.storage.has(E)&&this.storage.delete(E)},(0,s.Z)(v,[{key:"activedStorage",get:function(){return this.storage.get((0,xn.U2)(Tn.activedName))}}]),v}(zr.N);function Ms(T,v,y){var E=T.slice();return E[20]=v[y][0],E[21]=v[y][1],E[23]=y,E}function Rs(T){var v;return{c:function(){(v=(0,r.bGB)("div")).textContent="Empty",(0,r.Ljt)(v,"class","vc-plugin-empty")},m:function(y,E){(0,r.$Tr)(y,v,E)},p:r.ZTd,d:function(y){y&&(0,r.ogt)(v)}}}function qo(T){var v,y,E,w,M,P=T[20]+"",U=T[5](T[21])+"";return{c:function(){v=(0,r.bGB)("div"),y=(0,r.fLW)(P),E=(0,r.DhX)(),w=(0,r.bGB)("div"),M=(0,r.fLW)(U),(0,r.Ljt)(v,"class","vc-table-col"),(0,r.Ljt)(w,"class","vc-table-col vc-table-col-2")},m:function(V,j){(0,r.$Tr)(V,v,j),(0,r.R3I)(v,y),(0,r.$Tr)(V,E,j),(0,r.$Tr)(V,w,j),(0,r.R3I)(w,M)},p:function(V,j){1&j&&P!==(P=V[20]+"")&&(0,r.rTO)(y,P),1&j&&U!==(U=V[5](V[21])+"")&&(0,r.rTO)(M,U)},d:function(V){V&&(0,r.ogt)(v),V&&(0,r.ogt)(E),V&&(0,r.ogt)(w)}}}function jo(T){var v,y,E,w,M,P,U;return{c:function(){v=(0,r.bGB)("div"),y=(0,r.bGB)("textarea"),E=(0,r.DhX)(),w=(0,r.bGB)("div"),M=(0,r.bGB)("textarea"),(0,r.Ljt)(y,"class","vc-table-input"),(0,r.Ljt)(v,"class","vc-table-col"),(0,r.Ljt)(M,"class","vc-table-input"),(0,r.Ljt)(w,"class","vc-table-col vc-table-col-2")},m:function(V,j){(0,r.$Tr)(V,v,j),(0,r.R3I)(v,y),(0,r.BmG)(y,T[2]),(0,r.$Tr)(V,E,j),(0,r.$Tr)(V,w,j),(0,r.R3I)(w,M),(0,r.BmG)(M,T[3]),P||(U=[(0,r.oLt)(y,"input",T[11]),(0,r.oLt)(M,"input",T[12])],P=!0)},p:function(V,j){4&j&&(0,r.BmG)(y,V[2]),8&j&&(0,r.BmG)(M,V[3])},d:function(V){V&&(0,r.ogt)(v),V&&(0,r.ogt)(E),V&&(0,r.ogt)(w),P=!1,(0,r.j7q)(U)}}}function Xo(T){var v,y,E,w,M,P;return(v=new Ge.Z({props:{name:"delete"}})).$on("click",function(){return T[14](T[20])}),E=new it({props:{content:[T[20],T[21]].join("=")}}),(M=new Ge.Z({props:{name:"edit"}})).$on("click",function(){return T[15](T[20],T[21],T[23])}),{c:function(){(0,r.YCL)(v.$$.fragment),y=(0,r.DhX)(),(0,r.YCL)(E.$$.fragment),w=(0,r.DhX)(),(0,r.YCL)(M.$$.fragment)},m:function(U,V){(0,r.yef)(v,U,V),(0,r.$Tr)(U,y,V),(0,r.yef)(E,U,V),(0,r.$Tr)(U,w,V),(0,r.yef)(M,U,V),P=!0},p:function(U,V){T=U;var j={};1&V&&(j.content=[T[20],T[21]].join("=")),E.$set(j)},i:function(U){P||((0,r.Ui)(v.$$.fragment,U),(0,r.Ui)(E.$$.fragment,U),(0,r.Ui)(M.$$.fragment,U),P=!0)},o:function(U){(0,r.etI)(v.$$.fragment,U),(0,r.etI)(E.$$.fragment,U),(0,r.etI)(M.$$.fragment,U),P=!1},d:function(U){(0,r.vpE)(v,U),U&&(0,r.ogt)(y),(0,r.vpE)(E,U),U&&(0,r.ogt)(w),(0,r.vpE)(M,U)}}}function Ko(T){var v,y,E,w;return(v=new Ge.Z({props:{name:"cancel"}})).$on("click",T[9]),(E=new Ge.Z({props:{name:"done"}})).$on("click",function(){return T[13](T[20])}),{c:function(){(0,r.YCL)(v.$$.fragment),y=(0,r.DhX)(),(0,r.YCL)(E.$$.fragment)},m:function(M,P){(0,r.yef)(v,M,P),(0,r.$Tr)(M,y,P),(0,r.yef)(E,M,P),w=!0},p:function(M,P){T=M},i:function(M){w||((0,r.Ui)(v.$$.fragment,M),(0,r.Ui)(E.$$.fragment,M),w=!0)},o:function(M){(0,r.etI)(v.$$.fragment,M),(0,r.etI)(E.$$.fragment,M),w=!1},d:function(M){(0,r.vpE)(v,M),M&&(0,r.ogt)(y),(0,r.vpE)(E,M)}}}function Ds(T){var v,y,E,w,M,P,U;function V(Ce,He){return Ce[1]===Ce[23]?jo:qo}var j=V(T),ae=j(T),me=[Ko,Xo],Ae=[];function ke(Ce,He){return Ce[1]===Ce[23]?0:1}return w=ke(T),M=Ae[w]=me[w](T),{c:function(){v=(0,r.bGB)("div"),ae.c(),y=(0,r.DhX)(),E=(0,r.bGB)("div"),M.c(),P=(0,r.DhX)(),(0,r.Ljt)(E,"class","vc-table-col vc-table-col-1 vc-table-action"),(0,r.Ljt)(v,"class","vc-table-row")},m:function(Ce,He){(0,r.$Tr)(Ce,v,He),ae.m(v,null),(0,r.R3I)(v,y),(0,r.R3I)(v,E),Ae[w].m(E,null),(0,r.R3I)(v,P),U=!0},p:function(Ce,He){j===(j=V(Ce))&&ae?ae.p(Ce,He):(ae.d(1),(ae=j(Ce))&&(ae.c(),ae.m(v,y)));var je=w;(w=ke(Ce))===je?Ae[w].p(Ce,He):((0,r.dvw)(),(0,r.etI)(Ae[je],1,1,function(){Ae[je]=null}),(0,r.gbL)(),(M=Ae[w])?M.p(Ce,He):(M=Ae[w]=me[w](Ce)).c(),(0,r.Ui)(M,1),M.m(E,null))},i:function(Ce){U||((0,r.Ui)(M),U=!0)},o:function(Ce){(0,r.etI)(M),U=!1},d:function(Ce){Ce&&(0,r.ogt)(v),ae.d(),Ae[w].d()}}}function Jo(T){for(var v,y,E,w,M=T[0],P=[],U=0;U<M.length;U+=1)P[U]=Ds(Ms(T,M,U));var V=function(ae){return(0,r.etI)(P[ae],1,1,function(){P[ae]=null})},j=null;return M.length||(j=Rs()),{c:function(){v=(0,r.bGB)("div"),(y=(0,r.bGB)("div")).innerHTML=`<div class="vc-table-col">Key</div> 
    <div class="vc-table-col vc-table-col-2">Value</div> 
    <div class="vc-table-col vc-table-col-1 vc-table-action"></div>`,E=(0,r.DhX)();for(var ae=0;ae<P.length;ae+=1)P[ae].c();j&&j.c(),(0,r.Ljt)(y,"class","vc-table-row"),(0,r.Ljt)(v,"class","vc-table")},m:function(ae,me){(0,r.$Tr)(ae,v,me),(0,r.R3I)(v,y),(0,r.R3I)(v,E);for(var Ae=0;Ae<P.length;Ae+=1)P[Ae].m(v,null);j&&j.m(v,null),w=!0},p:function(ae,me){var Ae=me[0];if(1007&Ae){var ke;for(M=ae[0],ke=0;ke<M.length;ke+=1){var Ce=Ms(ae,M,ke);P[ke]?(P[ke].p(Ce,Ae),(0,r.Ui)(P[ke],1)):(P[ke]=Ds(Ce),P[ke].c(),(0,r.Ui)(P[ke],1),P[ke].m(v,null))}for((0,r.dvw)(),ke=M.length;ke<P.length;ke+=1)V(ke);(0,r.gbL)(),!M.length&&j?j.p(ae,Ae):M.length?j&&(j.d(1),j=null):((j=Rs()).c(),j.m(v,null))}},i:function(ae){if(!w){for(var me=0;me<M.length;me+=1)(0,r.Ui)(P[me]);w=!0}},o:function(ae){P=P.filter(Boolean);for(var me=0;me<P.length;me+=1)(0,r.etI)(P[me]);w=!1},d:function(ae){ae&&(0,r.ogt)(v),(0,r.RMB)(P,ae),j&&j.d()}}}function Zo(T,v,y){var E,w=this&&this.__awaiter||function(He,je,rt,lt){return new(rt||(rt=Promise))(function(pt,Tt){function St(qt){try{Wt(lt.next(qt))}catch(bt){Tt(bt)}}function $t(qt){try{Wt(lt.throw(qt))}catch(bt){Tt(bt)}}function Wt(qt){var bt;qt.done?pt(qt.value):(bt=qt.value,bt instanceof rt?bt:new rt(function(wt){wt(bt)})).then(St,$t)}Wt((lt=lt.apply(He,je||[])).next())})},M=$i.getSingleton($i,"VConsoleStorageModel"),P=Tn.updateTime;(0,r.FIv)(T,P,function(He){return y(10,E=He)});var U=[],V=-1,j="",ae="",me=function(){y(1,V=-1),y(2,j=""),y(3,ae="")},Ae=function(He){return w(void 0,void 0,void 0,Vt().mark(function je(){return Vt().wrap(function(rt){for(;;)switch(rt.prev=rt.next){case 0:return rt.next=2,M.removeItem(He);case 2:case"end":return rt.stop()}},je)}))},ke=function(He){return w(void 0,void 0,void 0,Vt().mark(function je(){return Vt().wrap(function(rt){for(;;)switch(rt.prev=rt.next){case 0:if(j===He){rt.next=3;break}return rt.next=3,M.removeItem(He);case 3:M.setItem(j,ae),me();case 5:case"end":return rt.stop()}},je)}))},Ce=function(He,je,rt){return w(void 0,void 0,void 0,Vt().mark(function lt(){return Vt().wrap(function(pt){for(;;)switch(pt.prev=pt.next){case 0:y(2,j=He),y(3,ae=je),y(1,V=rt);case 3:case"end":return pt.stop()}},lt)}))};return T.$$.update=function(){1024&T.$$.dirty&&E&&w(void 0,void 0,void 0,Vt().mark(function He(){return Vt().wrap(function(je){for(;;)switch(je.prev=je.next){case 0:return me(),je.t0=y,je.next=4,M.getEntries();case 4:je.t1=U=je.sent,(0,je.t0)(0,je.t1);case 6:case"end":return je.stop()}},He)}))},[U,V,j,ae,P,function(He){return(0,e.id)(He,1024)},Ae,ke,Ce,function(){me()},E,function(){j=this.value,y(2,j)},function(){ae=this.value,y(3,ae)},function(He){return ke(He)},function(He){return Ae(He)},function(He,je,rt){return Ce(He,je,rt)}]}var ea=function(T){function v(y){var E;return E=T.call(this)||this,(0,r.S1n)((0,o.Z)(E),y,Zo,Jo,r.N8,{}),E}return(0,a.Z)(v,T),v}(r.f_C),ta=ea,Ls=function(T){function v(E,w,M){var P;return M===void 0&&(M={}),(P=T.call(this,E,w,ta,M)||this).model=$i.getSingleton($i,"VConsoleStorageModel"),P.onAddTopBarCallback=void 0,P}(0,a.Z)(v,T);var y=v.prototype;return y.onReady=function(){T.prototype.onReady.call(this),this.onUpdateOption()},y.onShow=function(){this.model.refresh()},y.onAddTopBar=function(E){this.onAddTopBarCallback=E,this.updateTopBar()},y.onAddTool=function(E){var w=this;E([{name:"Add",global:!1,onClick:function(){w.model.setItem("new_"+Date.now(),"new_value")}},{name:"Refresh",global:!1,onClick:function(){w.model.refresh()}},{name:"Clear",global:!1,onClick:function(){w.model.clear()}}])},y.onUpdateOption=function(){var E,w=(E=this.vConsole.option.storage)==null?void 0:E.defaultStorages;(0,e.kJ)(w)&&(w=w.length>0?w:["cookies"])!==(0,xn.U2)(Tn.defaultStorages)&&(Tn.defaultStorages.set(w),Tn.activedName.set(w[0]),this.updateTopBar())},y.updateTopBar=function(){var E=this;if(typeof this.onAddTopBarCallback=="function"){for(var w=(0,xn.U2)(Tn.defaultStorages),M=[],P=0;P<w.length;P++){var U=w[P];M.push({name:U[0].toUpperCase()+U.substring(1),data:{name:U},actived:U===(0,xn.U2)(Tn.activedName),onClick:function(V,j){var ae=(0,xn.U2)(Tn.activedName);if(j.name===ae)return!1;Tn.activedName.set(j.name),E.model.refresh()}})}this.onAddTopBarCallback(M)}},v}(te),kn=function(){function T(y){var E=this;if(this.version="3.15.1",this.isInited=!1,this.option={},this.compInstance=void 0,this.pluginList={},this.log=void 0,this.system=void 0,this.network=void 0,T.instance&&T.instance instanceof T)return console.debug("[vConsole] vConsole is already exists."),T.instance;if(T.instance=this,this.isInited=!1,this.option={defaultPlugins:["system","network","element","storage"],log:{},network:{},storage:{}},e.Kn(y))for(var w in y)this.option[w]=y[w];this.option.maxLogNumber!==void 0&&(this.option.log.maxLogNumber=this.option.maxLogNumber,console.debug("[vConsole] Deprecated option: `maxLogNumber`, use `log.maxLogNumber` instead.")),this.option.onClearLog!==void 0&&console.debug("[vConsole] Deprecated option: `onClearLog`."),this.option.maxNetworkNumber!==void 0&&(this.option.network.maxNetworkNumber=this.option.maxNetworkNumber,console.debug("[vConsole] Deprecated option: `maxNetworkNumber`, use `network.maxNetworkNumber` instead.")),this._addBuiltInPlugins();var M=function(){E.isInited||(E._initComponent(),E._autoRun())};if(document!==void 0)document.readyState==="loading"?n.bind(window,"DOMContentLoaded",M):M();else{var P;P=setTimeout(function U(){document&&document.readyState=="complete"?(P&&clearTimeout(P),M()):P=setTimeout(U,1)},1)}}var v=T.prototype;return v._addBuiltInPlugins=function(){this.addPlugin(new Or("default","Log"));var y=this.option.defaultPlugins,E={system:{proto:Gr,name:"System"}};if(E.network={proto:cs,name:"Network"},E.element={proto:Is,name:"Element"},E.storage={proto:Ls,name:"Storage"},y&&e.kJ(y))for(var w=0;w<y.length;w++){var M=E[y[w]];M?this.addPlugin(new M.proto(y[w],M.name)):console.debug("[vConsole] Unrecognized default plugin ID:",y[w])}},v._initComponent=function(){var y=this;if(!n.one("#__vconsole")){var E,w=1*e.cF("switch_x"),M=1*e.cF("switch_y");typeof this.option.target=="string"?E=document.querySelector(this.option.target):this.option.target instanceof HTMLElement&&(E=this.option.target),E instanceof HTMLElement||(E=document.documentElement),this.compInstance=new qe({target:E,props:{switchButtonPosition:{x:w,y:M}}}),this.compInstance.$on("show",function(P){P.detail.show?y.show():y.hide()}),this.compInstance.$on("changePanel",function(P){var U=P.detail.pluginId;y.showPlugin(U)})}this._updateComponentByOptions()},v._updateComponentByOptions=function(){if(this.compInstance){if(this.compInstance.theme!==this.option.theme){var y=this.option.theme;y=y!=="light"&&y!=="dark"?"":y,this.compInstance.theme=y}this.compInstance.disableScrolling!==this.option.disableLogScrolling&&(this.compInstance.disableScrolling=!!this.option.disableLogScrolling)}},v.setSwitchPosition=function(y,E){this.compInstance.switchButtonPosition={x:y,y:E}},v._autoRun=function(){for(var y in this.isInited=!0,this.pluginList)this._initPlugin(this.pluginList[y]);this._showFirstPluginWhenEmpty(),this.triggerEvent("ready")},v._showFirstPluginWhenEmpty=function(){var y=Object.keys(this.pluginList);this.compInstance.activedPluginId===""&&y.length>0&&this.showPlugin(y[0])},v.triggerEvent=function(y,E){var w=this;y="on"+y.charAt(0).toUpperCase()+y.slice(1),e.mf(this.option[y])&&setTimeout(function(){w.option[y].apply(w,E)},0)},v._initPlugin=function(y){var E=this;y.vConsole=this,this.compInstance.pluginList[y.id]={id:y.id,name:y.name,hasTabPanel:!1,tabOptions:void 0,topbarList:[],toolbarList:[],content:void 0,contentContainer:void 0},this.compInstance.pluginList=this._reorderPluginList(this.compInstance.pluginList),y.trigger("init"),y.trigger("renderTab",function(w,M){M===void 0&&(M={});var P=E.compInstance.pluginList[y.id];P.hasTabPanel=!0,P.tabOptions=M,w&&(E.compInstance.pluginList[y.id].content=w),E.compInstance.pluginList=E.compInstance.pluginList}),y.trigger("addTopBar",function(w){if(w){for(var M=[],P=0;P<w.length;P++){var U=w[P];M.push({name:U.name||"Undefined",className:U.className||"",actived:!!U.actived,data:U.data,onClick:U.onClick})}E.compInstance.pluginList[y.id].topbarList=M,E.compInstance.pluginList=E.compInstance.pluginList}}),y.trigger("addTool",function(w){if(w){for(var M=[],P=0;P<w.length;P++){var U=w[P];M.push({name:U.name||"Undefined",global:!!U.global,data:U.data,onClick:U.onClick})}E.compInstance.pluginList[y.id].toolbarList=M,E.compInstance.pluginList=E.compInstance.pluginList}}),y.isReady=!0,y.trigger("ready")},v._triggerPluginsEvent=function(y){for(var E in this.pluginList)this.pluginList[E].isReady&&this.pluginList[E].trigger(y)},v._triggerPluginEvent=function(y,E){var w=this.pluginList[y];w&&w.isReady&&w.trigger(E)},v._reorderPluginList=function(y){var E=this;if(!e.kJ(this.option.pluginOrder))return y;for(var w=Object.keys(y).sort(function(U,V){var j=E.option.pluginOrder.indexOf(U),ae=E.option.pluginOrder.indexOf(V);return j===ae?0:j===-1?1:ae===-1?-1:j-ae}),M={},P=0;P<w.length;P++)M[w[P]]=y[w[P]];return M},v.addPlugin=function(y){return this.pluginList[y.id]!==void 0?(console.debug("[vConsole] Plugin `"+y.id+"` has already been added."),!1):(this.pluginList[y.id]=y,this.isInited&&(this._initPlugin(y),this._showFirstPluginWhenEmpty()),!0)},v.removePlugin=function(y){y=(y+"").toLowerCase();var E=this.pluginList[y];if(E===void 0)return console.debug("[vConsole] Plugin `"+y+"` does not exist."),!1;E.trigger("remove");try{delete this.pluginList[y],delete this.compInstance.pluginList[y]}catch{this.pluginList[y]=void 0,this.compInstance.pluginList[y]=void 0}return this.compInstance.pluginList=this.compInstance.pluginList,this.compInstance.activedPluginId==y&&(this.compInstance.activedPluginId="",this._showFirstPluginWhenEmpty()),!0},v.show=function(){this.isInited&&(this.compInstance.show=!0,this._triggerPluginsEvent("showConsole"))},v.hide=function(){this.isInited&&(this.compInstance.show=!1,this._triggerPluginsEvent("hideConsole"))},v.showSwitch=function(){this.isInited&&(this.compInstance.showSwitchButton=!0)},v.hideSwitch=function(){this.isInited&&(this.compInstance.showSwitchButton=!1)},v.showPlugin=function(y){this.isInited&&(this.pluginList[y]||console.debug("[vConsole] Plugin `"+y+"` does not exist."),this.compInstance.activedPluginId&&this._triggerPluginEvent(this.compInstance.activedPluginId,"hide"),this.compInstance.activedPluginId=y,this._triggerPluginEvent(this.compInstance.activedPluginId,"show"))},v.setOption=function(y,E){if(typeof y=="string"){for(var w=y.split("."),M=this.option,P=0;P<w.length;P++){if(w[P]==="__proto__"||w[P]==="constructor"||w[P]==="prototype")return void console.debug("[vConsole] Cannot set `"+w[P]+"` in `vConsole.setOption()`.");M[w[P]]===void 0&&(M[w[P]]={}),P===w.length-1&&(M[w[P]]=E),M=M[w[P]]}this._triggerPluginsEvent("updateOption"),this._updateComponentByOptions()}else if(e.Kn(y)){for(var U in y)U!=="__proto__"&&U!=="constructor"&&U!=="prototype"?this.option[U]=y[U]:console.debug("[vConsole] Cannot set `"+U+"` in `vConsole.setOption()`.");this._triggerPluginsEvent("updateOption"),this._updateComponentByOptions()}else console.debug("[vConsole] The first parameter of `vConsole.setOption()` must be a string or an object.")},v.destroy=function(){if(this.isInited){this.isInited=!1,T.instance=void 0;for(var y=Object.keys(this.pluginList),E=y.length-1;E>=0;E--)this.removePlugin(y[E]);this.compInstance.$destroy()}},(0,s.Z)(T,null,[{key:"instance",get:function(){return window.__VCONSOLE_INSTANCE},set:function(y){y===void 0||y instanceof T?window.__VCONSOLE_INSTANCE=y:console.debug("[vConsole] Cannot set `VConsole.instance` because the value is not the instance of VConsole.")}}]),T}();kn.VConsolePlugin=void 0,kn.VConsoleLogPlugin=void 0,kn.VConsoleDefaultPlugin=void 0,kn.VConsoleSystemPlugin=void 0,kn.VConsoleNetworkPlugin=void 0,kn.VConsoleElementPlugin=void 0,kn.VConsoleStoragePlugin=void 0,kn.VConsolePlugin=ut,kn.VConsoleLogPlugin=lr,kn.VConsoleDefaultPlugin=Or,kn.VConsoleSystemPlugin=Gr,kn.VConsoleNetworkPlugin=cs,kn.VConsoleElementPlugin=Is,kn.VConsoleStoragePlugin=Ls;var na=kn}(),__webpack_exports__=__webpack_exports__.default,__webpack_exports__}()})}(vconsole_min$1)),vconsole_min$1.exports}var vconsole_minExports=requireVconsole_min();const VConsole=getDefaultExportFromCjs(vconsole_minExports);let gridSize=1,spaceSize=50;class DebugPanel{constructor(e){var t;this.metaView=e,this.gui=new GUI({container:document.getElementById("metaverse")}),this.gui.domElement.style.position="absolute",this.gui.domElement.style.top="10%",this.gui.domElement.style.right="0",this.state=new StatsModule({containerId:"app",type:0,style:{position:"absolute",top:"0"}}),(t=this.state)==null||t.show(),this.debugPanelConf={firstView:!1,cameraSpeed:.3,collisionTest:!1,showGSInfo:!1,gridSize:1,spaceSize:30,engine:this.getEngine(),onSaveLocation:this.onSaveLocation.bind(this),onRestoreLocation:this.onRestoreLocation.bind(this)},this.vConsole=new VConsole,this.init()}show(){console.log("show panel"),this.isHidden=!1,this.gui.show(),this.vConsole&&typeof this.vConsole.showSwitch=="function"&&this.vConsole.showSwitch()}hide(){this.isHidden=!0,console.log("hide panel"),this.gui.hide(),this.vConsole&&typeof this.vConsole.hideSwitch=="function"&&this.vConsole.hideSwitch()}animate(){var e;(e=this.state)==null||e.stats.update()}onSaveLocation(){this.metaView.playerController.saveCurrentPosition(this.metaView.sceneController,"default")}onRestoreLocation(){this.metaView.playerController.restoreSavedPosition(this.metaView.sceneController,"default")}init(){this.gui.add(this.debugPanelConf,"firstView").onChange(()=>{this.debugPanelConf.firstView?(console.log("切换到第一人称"),this.metaView.changeToFirstView()):(console.log("切换到第三人称"),this.metaView.changeToThirdView())}),this.gui.add(this.debugPanelConf,"showGSInfo").onChange(()=>{this.debugPanelConf.showGSInfo?(console.log("showGSInfo"),this.metaView.sceneController.showInfoPanel(!0)):this.metaView.sceneController.showInfoPanel(!1)}),this.gui.add(this.debugPanelConf,"collisionTest").onChange(e=>{this.metaView.handleDebugMesh(e)}),this.gui.add(this.debugPanelConf,"cameraSpeed").step(.1).min(0).max(1).onChange(e=>{this.metaView.playerController.setCameraMoveSensitivity(e)}),this.gui.add(this.debugPanelConf,"gridSize",1,30,1).onChange(()=>{gridSize=this.debugPanelConf.gridSize,createWalls(this.metaView.sceneController.getScene())}),this.gui.add(this.debugPanelConf,"spaceSize",30,150,10).onChange(()=>{spaceSize=this.debugPanelConf.空间大小,createWalls(this.metaView.sceneController.getScene())}),this.gui.add(this.debugPanelConf,"engine",Object.getOwnPropertyNames(EngineConfig)).name("渲染引擎").onChange(e=>{localStorage.setItem("engine",e),window.location.reload()}),this.gui.add(this.debugPanelConf,"onSaveLocation").name("保存位置"),this.gui.add(this.debugPanelConf,"onRestoreLocation").name("恢复位置")}getEngine(){const e=localStorage.getItem("engine");return EngineConfig[e]?e:EngineConfig[0]}}let walls=[];function createWalls(s){walls.forEach(l=>s.remove(l)),walls=[];const e=20,t=.2,n=spaceSize/gridSize,o=spaceSize/2-n/2,a=new MeshStandardMaterial({color:16711680,transparent:!0,side:DoubleSide}),r=new MeshStandardMaterial({color:255,transparent:!0,side:DoubleSide});for(let l=0;l<gridSize-1;l++)for(let c=0;c<gridSize;c++){const u=new Mesh(new BoxGeometry(spaceSize,e,t),a);u.position.set(-o+l*n,e/2,-o+c*n),walls.push(u),s.add(u)}for(let l=0;l<gridSize;l++)for(let c=0;c<gridSize-1;c++){const u=new Mesh(new BoxGeometry(t,e,spaceSize),r);u.position.set(-o+l*n,e/2,-o+c*n),walls.push(u),s.add(u)}console.log(`创建 ${gridSize}x${gridSize} 网格，共 ${walls.length} 堵墙`)}class WindowController{constructor(){this.isMobile=!1,this.currentOrientation=window.innerWidth>window.innerHeight?"landscape":"portrait",this.orientationChangeDialog=null,this.onOrientationChangeCallback=null,this.init()}init(){this.isMobile=isMobile()}onWindowResize(){console.log("window-controller","onWindowResize")}checkOrientationChange(){if(!this.isMobile)return;const e=window.innerWidth>window.innerHeight?"landscape":"portrait";e!==this.currentOrientation&&(this.currentOrientation=e,setTimeout(()=>{this.showOrientationDialog()},500))}createOrientationDialog(){const e=document.createElement("div");e.style.cssText=`
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 9999;
      display: flex;
      justify-content: center;
      align-items: center;
      opacity: 0;
      transition: opacity 0.3s ease;
    `;const t=document.createElement("div");t.style.cssText=`
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
      max-width: 320px;
      width: 90%;
      text-align: center;
      transform: scale(0.7) translateY(20px);
      transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
      border: 1px solid rgba(255, 255, 255, 0.2);
    `;const n=document.createElement("h3");n.textContent="屏幕方向已改变",n.style.cssText=`
      color: white;
      margin: 0 0 12px 0;
      font-size: 18px;
      font-weight: 600;
    `;const o=document.createElement("p");o.textContent="为了获得最佳体验，建议重新载入页面",o.style.cssText=`
      color: rgba(255, 255, 255, 0.9);
      margin: 0 0 24px 0;
      font-size: 14px;
      line-height: 1.5;
    `;const a=document.createElement("div");a.style.cssText=`
      display: flex;
      gap: 12px;
      justify-content: center;
    `;const r=document.createElement("button");r.textContent="取消",r.style.cssText=`
      padding: 10px 20px;
      border: 2px solid rgba(255, 255, 255, 0.3);
      background: transparent;
      color: white;
      border-radius: 8px;
      cursor: pointer;
      font-size: 14px;
      font-weight: 500;
      transition: all 0.2s ease;
      min-width: 80px;
    `;const l=document.createElement("button");return l.textContent="重新载入",l.style.cssText=`
      padding: 10px 20px;
      border: none;
      background: linear-gradient(45deg, #ff6b6b, #ee5a24);
      color: white;
      border-radius: 8px;
      cursor: pointer;
      font-size: 14px;
      font-weight: 500;
      transition: all 0.2s ease;
      min-width: 80px;
      box-shadow: 0 4px 12px rgba(238, 90, 36, 0.3);
    `,this.addButtonHoverEffects(r,l),r.addEventListener("click",()=>{this.hideOrientationDialog()}),l.addEventListener("click",()=>{window.location.reload()}),a.appendChild(r),a.appendChild(l),t.appendChild(n),t.appendChild(o),t.appendChild(a),e.appendChild(t),document.body.appendChild(e),requestAnimationFrame(()=>{e.style.opacity="1",t.style.transform="scale(1) translateY(0)"}),e}addButtonHoverEffects(e,t){e.addEventListener("mouseenter",()=>{e.style.background="rgba(255, 255, 255, 0.1)",e.style.transform="translateY(-1px)"}),e.addEventListener("mouseleave",()=>{e.style.background="transparent",e.style.transform="translateY(0)"}),t.addEventListener("mouseenter",()=>{t.style.transform="translateY(-1px) scale(1.02)",t.style.boxShadow="0 6px 16px rgba(238, 90, 36, 0.4)"}),t.addEventListener("mouseleave",()=>{t.style.transform="translateY(0) scale(1)",t.style.boxShadow="0 4px 12px rgba(238, 90, 36, 0.3)"})}showOrientationDialog(){this.orientationChangeDialog&&this.hideOrientationDialog(),this.orientationChangeDialog=this.createOrientationDialog()}hideOrientationDialog(){if(this.orientationChangeDialog){const e=this.orientationChangeDialog.querySelector("div");this.orientationChangeDialog.style.opacity="0",e.style.transform="scale(0.7) translateY(20px)",setTimeout(()=>{this.orientationChangeDialog&&this.orientationChangeDialog.parentNode&&this.orientationChangeDialog.parentNode.removeChild(this.orientationChangeDialog),this.orientationChangeDialog=null},300)}}setOrientationChangeCallback(e){this.onOrientationChangeCallback=e}getIsMobile(){return this.isMobile}getCurrentOrientation(){return this.currentOrientation}destroy(){window.removeEventListener("resize",this.handleResize.bind(this)),this.hideOrientationDialog()}}class MetaverseViewer{constructor(e,t,n){console.log("container",e,t,n),this.configUrl=t,this.options=n,this.container=e,this.clock=null,this.animationId=null,this.onInteractionCallback=null,this.landmark=null,this.landmarkRing=null,this.landmarkAnimTime=0,this.sceneController=new SceneController(e),this.inputController=new InputController(e),this.playerController=null,this.windowController=new WindowController,this.debugPanel=new DebugPanel(this)}async init(){var e,t;this.config=await this.getSceneMataFile(this.configUrl),this.clock=new Clock,await this.sceneController.initScene(this.config),this.playerController=new PlayerController(this.sceneController.getScene(),this.sceneController.getWorldOctree(),this.config.avatarInfo),await this.playerController.init(),setTimeout(()=>{var n,o;(n=this.config.avatarInfo)!=null&&n.camera&&this.sceneController.setCameraAndOribitControl((o=this.config.avatarInfo)==null?void 0:o.camera)},300),this.inputController.setCharacterControls(this.playerController),this.inputController.setOrbitCallbacks(()=>this.startOrbiting(),()=>this.stopOrbiting()),this.sceneController.initializeCameraTarget(this.playerController.getPosition()),(e=this.options)!=null&&e.showInteraction&&((t=this.options)!=null&&t.geometry)&&this.options.geometryPos&&this.addInteractionZone({geometry:this.options.geometry,geometryPos:this.options.geometryPos}),this.animate(),this.animate()}async getSceneMataFile(e){const t=await fetch(e,{mode:"cors",credentials:"omit",cache:"reload"});if(t.status!==200)return new Error(`load ${e} error ${t.statusText},${t.body}`);const n=await t.json();return console.log(`getSceneMataFile success file url ${e} content:`,n),n}addInteractionZone(e){const t=new BoxGeometry(...e.geometry),n=new MeshBasicMaterial({color:65280,transparent:!0,opacity:0,visible:!1});this.interactionZone=new Mesh(t,n),this.interactionZone.position.set(...e.geometryPos),this.sceneController.getScene().add(this.interactionZone),this.interactionBox=new Box3().setFromObject(this.interactionZone),console.log("options.geometryPos",e.geometryPos),this.addModel(new Vector3(Number(e.geometryPos[0])-1.5,e.geometryPos[1],e.geometryPos[2]))}addModel(e){const t=new GLTFLoader;t.setPath("./models/gltf-kara/"),t.load("Kana_Skin.gltf",n=>{const o=n.scene||n.scenes[0];o.position.copy(e),o.rotation.y=Math.PI,this.sceneController.getScene().add(o),this.modelScene=o,this.addPointLightsForLabubu(),t.load("AN_Kana_Idle.gltf",a=>{if(console.log("Idle animation loaded:",a.animations),a.animations&&a.animations.length>0){this.modelMixer=new AnimationMixer(o);const r=this.modelMixer.clipAction(a.animations[0]);r.setLoop(LoopRepeat),r.play()}},void 0,a=>{console.error("Error loading animation:",a)})},void 0,n=>{console.error("Error loading model:",n)})}addPointLightsForLabubu(){const e=new AmbientLight(16777164,.3);this.sceneController.getScene().add(e),this.modelAmbientLight=e}animate(){this.animationId=requestAnimationFrame(this.animate.bind(this));const e=this.clock.getDelta();if(this.playerController&&this.playerController.isLoaded()){this.playerController.update(e,this.inputController,this.sceneController.getCamera());const t=this.playerController.getPosition();this.sceneController.updateCamera(t),this.checkInteractionZone(t)}this.modelMixer&&this.modelMixer.update(e),this.sceneController.getOrbitControl().update(),this.sceneController.animate(),this.debugPanel.animate()}checkInteractionZone(e){if(!this.interactionZone||!this.interactionBox)return;const t=new Vector3(e.x,e.y,e.z),n=this.interactionBox.containsPoint(t);this.onInteractionCallback&&this.onInteractionCallback(n)}switchRunToggle(){this.playerController&&this.playerController.switchRunToggle()}update(e,t){if(t&&(this.inputController.keysPressed=t),this.playerController&&this.playerController.isLoaded()){this.playerController.update(e,this.inputController,this.sceneController.getCamera());const n=this.playerController.getPosition();this.sceneController.updateCamera(n)}}destroy(){this.animationId&&cancelAnimationFrame(this.animationId),this.inputController.destroy(),this.modelScene&&(this.sceneController.getScene().remove(this.modelScene),this.modelScene=null),this.modelMixer&&(this.modelMixer.stopAllAction(),this.modelMixer=null),this.modelAmbientLight&&(this.sceneController.getScene().remove(this.modelAmbientLight),this.modelAmbientLight.dispose(),this.modelAmbientLight=null),this.sceneController.getRenderer()&&this.sceneController.getRenderer().dispose(),this.windowController&&this.windowController.destroy()}setDebugPanelVisible(e){if(e){this.debugPanel.show();return}this.debugPanel.hide()}startOrbiting(){if(this.playerController&&this.playerController.isLoaded()){const e=this.playerController.getPosition();this.sceneController.startOrbiting(e)}}stopOrbiting(){this.sceneController.stopOrbiting()}setInteractionCallback(e){this.onInteractionCallback=e}getIsMobile(){return this.windowController.getIsMobile()}onWindowResize(){console.log("onWindowResize"),this.windowController.onWindowResize(),this.sceneController.onWindowResize()}}const _hoisted_1$1={class:"dialog-box"},_hoisted_2$1={class:"dialog-text"},_hoisted_3={key:1,class:"controls-guide"},fullText="先生~麦当劳大特惠，了解一下",_sfc_main$1={__name:"Metaverse",setup(s){const e=ref(null);let t=null;const n=useRoute();console.log("route.query",n.query);const o=ref(n.query.modelUrl),a=ref(n.query.debug==="true"),r=ref(n.query.interaction==="true");let l=null,c=null;n.query.geometry&&n.query.geometryPos&&(l=n.query.geometry.split("|"),c=n.query.geometryPos.split("|")),n.query.shareName&&(document.title=n.query.shareName);const u=ref(!1),d=ref(""),f=ref(!1),g=ref(null);let _=!1,b=!1,B=null,I=0;const C=ref(!1),R=()=>{I<fullText.length?(d.value=fullText.substring(0,I+1),I++):(clearInterval(B),setTimeout(()=>{f.value=!0},500))},L=()=>{I=0,d.value="",f.value=!1,B&&clearInterval(B),B=setInterval(R,100)},F=()=>{t.setInteractionCallback(O=>{_&&O&&b!==O||O!==b&&(O&&!u.value?(u.value=!0,L()):!O&&u.value&&(u.value=!1),b=O,_=!1)})},N=O=>(O.preventDefault(),O.stopPropagation(),!1),k=()=>{document.hidden?(console.log("页面切到后台，保存当前位置"),t&&t.playerController&&t.sceneController&&t.playerController.saveCurrentPosition(t.sceneController,"default")):(console.log("页面切回前台，恢复保存的位置"),setTimeout(()=>{t&&t.playerController&&t.sceneController&&t.playerController.restoreSavedPosition(t.sceneController,"default")},200))};onMounted(async()=>{document.addEventListener("visibilitychange",k);try{if(!o.value)return;if(t=new MetaverseViewer(e.value,decodeURIComponent(o.value),{showInteraction:r.value,geometry:l,geometryPos:c}),await t.init(),C.value=t.getIsMobile(),t.setDebugPanelVisible(a.value),r.value&&F(),window.addEventListener("resize",Q),e.value){e.value.addEventListener("contextmenu",N),e.value.addEventListener("selectstart",N),e.value.addEventListener("dragstart",N);let O=null;e.value.addEventListener("touchstart",q=>{O=setTimeout(()=>{q.preventDefault(),q.stopPropagation()},500)}),e.value.addEventListener("touchend",()=>{O&&(clearTimeout(O),O=null)}),e.value.addEventListener("touchmove",()=>{O&&(clearTimeout(O),O=null)})}}catch(O){console.error("MetaverseViewer 初始化失败:",O)}});const Q=()=>{t&&t.onWindowResize()};onBeforeUnmount(()=>{t&&t.destroy(),document.removeEventListener("visibilitychange",k)});const z=()=>{a.value=!a.value,t&&(t.setDebugPanelVisible(a.value),console.log("调试状态已切换为:",a.value?"开启":"关闭"))},G=()=>{console.log("交互按钮被点击",t.playerController.getPosition()),window.wx.miniProgram.postMessage({data:{action:"pay",orderId:"12345",position:t.playerController.getPosition()}}),console.log("wx.miniProgram.navigateTo"),u.value=!1,_=!0,wx.miniProgram.navigateTo({url:"/pages/authorize/index"})};return(O,q)=>(openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",{class:"three-container",ref_key:"threeContainer",ref:e},null,512),createBaseVNode("button",{class:"debug-button",onClick:z},toDisplayString(a.value?"关闭调试":"打开调试"),1),u.value?(openBlock(),createElementBlock("div",{key:0,class:"dialog-container",style:normalizeStyle(g.value)},[createBaseVNode("div",_hoisted_1$1,[createBaseVNode("p",_hoisted_2$1,toDisplayString(d.value),1),f.value?(openBlock(),createElementBlock("button",{key:0,class:"purchase-button",onClick:G}," 去看看 ")):createCommentVNode("",!0)])],4)):createCommentVNode("",!0),C.value?createCommentVNode("",!0):(openBlock(),createElementBlock("div",_hoisted_3,q[0]||(q[0]=[createStaticVNode('<div class="guide-title" data-v-89cdde2c>操作指引</div><div class="guide-item" data-v-89cdde2c><span class="key" data-v-89cdde2c>W A S D</span><span class="description" data-v-89cdde2c>控制方向</span></div><div class="guide-item" data-v-89cdde2c><span class="key" data-v-89cdde2c>SHIFT</span><span class="description" data-v-89cdde2c>切换跑步/走路</span></div>',3)])))],64))}},Metaverse=_export_sfc(_sfc_main$1,[["__scopeId","data-v-89cdde2c"]]),_hoisted_1={class:"model-detail"},_hoisted_2={id:"scene"},_sfc_main={__name:"Spark",setup(s){const e=useRouter(),t=ref(null);let n,o,a,r,l,c,u,d=!1;const f=()=>{e.push("/")},g=B=>{const I=B.checked;if(l)for(let C of l.children)C.material.metalness=I?0:1,C.material.roughness=I?.2:.02},_=async()=>{n=new Scene,o=new PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),o.position.y=.5,a=new WebGLRenderer,a.setClearColor(new Color(1777719),1),a.setSize(window.innerWidth,window.innerHeight),document.getElementById("scene").appendChild(a.domElement),r=new SparkRenderer({renderer:a,autoUpdate:!1});try{const I="/models/area3.ksplat",C=new PackedSplats({url:I});c=new SplatMesh({packedSplats:C}),c.quaternion.set(1,0,0,0),c.position.set(.5,0,-1),c.scale.setScalar(.5),n.add(c),u=new SplatMesh({packedSplats:C}),u.quaternion.set(1,0,0,0),u.rotation.y=Math.PI,u.position.set(-.5,0,0),u.scale.setScalar(.5),n.add(u),await c.initialized,await u.initialized,l=(await new GLTFLoader().loadAsync("/models/rubberduck.glb")).scene,l.position.set(0,.45,-.4),n.add(l);const N=new Clock,k=new StatsModule({containerId:"app",type:0,style:{position:"absolute",top:"0"}});k==null||k.show();const Q=()=>{a.render(n,o),r.update({scene:n}),k==null||k.stats.update();const z=N.getDelta();l&&(l.rotation.y+=z/2500),!d&&l&&c&&u&&(d=!0,r.renderEnvMap({scene:n,worldCenter:l.position,hideObjects:[l],update:!0}).then(G=>{for(let O of l.children)O.material.envMap=G,O.material.original_color=O.material.color.clone(),O.material.metalness=1,O.material.roughness=.02}).catch(G=>{console.error("渲染环境贴图失败:",G)})),requestAnimationFrame(Q)};Q(),Q()}catch(I){console.error("加载模型失败:",I)}},b=()=>{o&&a&&(o.aspect=window.innerWidth/window.innerHeight,o.updateProjectionMatrix(),a.setSize(window.innerWidth,window.innerHeight))};return onMounted(async()=>{await _(),window.addEventListener("resize",b)}),onUnmounted(()=>{window.removeEventListener("resize",b),a&&(a.setAnimationLoop(null),a.dispose()),n&&n.clear()}),(B,I)=>(openBlock(),createElementBlock("div",_hoisted_1,[createBaseVNode("header",{class:"detail-header"},[createBaseVNode("div",{class:"detail-header-container"},[createBaseVNode("button",{class:"back-button",onClick:f},"← 返回列表"),I[1]||(I[1]=createBaseVNode("h1",null,"环境映射示例",-1))])]),createBaseVNode("div",{class:"model-viewer",ref_key:"sceneContainer",ref:t},[createBaseVNode("div",_hoisted_2,[createBaseVNode("label",null,[createBaseVNode("input",{type:"checkbox",onChange:I[0]||(I[0]=C=>g(C.target)),autocomplete:"off"},null,32),I[2]||(I[2]=createTextVNode(" 塑料"))])])],512)]))}},Spark=_export_sfc(_sfc_main,[["__scopeId","data-v-ff1d9fa7"]]),routes=[{path:"/",name:"ModelList",component:ModelList},{path:"/model",name:"ModelDetail",component:ModelDetail,props:!0},{path:"/simple-viewer",name:"ChunkedLoading",component:ChunkedLoading,props:!0},{path:"/metaverse",name:"Metaverse",component:Metaverse,props:!0},{path:"/spark",name:"spark",component:Spark,props:!0},{path:"/metaverse-interaction",name:"MetaverseInteraction",component:Metaverse,props:!0}],router=createRouter({history:createWebHashHistory(),routes});createApp(App).use(router).mount("#app");
